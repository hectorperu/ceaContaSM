/****** Object:  StoredProcedure [dbo].[cont_ActualizaCorrelaGrupoContable]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[cont_ActualizaCorrelaGrupoContable]
@Valor int,
@Zona char(6),
@Unidad char(10),
@Group char(2),
@Year char(4),
@Mes char(2)
AS
	if @Mes='00' 
		Update MAESTROGRUPOCONTABLE set Apertura=@Valor  WHERE CODZONA=@Zona AND CODUNIDADECONOMICA=@Unidad and CODMGC=@Group and anio =@Year
	else if @Mes='01' 
		Update MAESTROGRUPOCONTABLE set Ene=@Valor  WHERE CODZONA=@Zona AND CODUNIDADECONOMICA=@Unidad and CODMGC=@Group and anio =@Year 
	else if  @Mes='02' 
		Update MAESTROGRUPOCONTABLE set Feb=@Valor  WHERE CODZONA=@Zona AND CODUNIDADECONOMICA=@Unidad and CODMGC=@Group and anio =@Year
	else if  @Mes='03' 	
		Update MAESTROGRUPOCONTABLE set Mar=@Valor  WHERE CODZONA=@Zona AND CODUNIDADECONOMICA=@Unidad and CODMGC=@Group and anio =@Year
	else if  @Mes='04' 
		Update MAESTROGRUPOCONTABLE set Abr=@Valor  WHERE CODZONA=@Zona AND CODUNIDADECONOMICA=@Unidad and CODMGC=@Group and anio =@Year
	else if  @Mes='05' 
		Update MAESTROGRUPOCONTABLE set May=@Valor  WHERE CODZONA=@Zona AND CODUNIDADECONOMICA=@Unidad and CODMGC=@Group and anio =@Year
	else if  @Mes='06' 
		Update MAESTROGRUPOCONTABLE set Jun=@Valor  WHERE CODZONA=@Zona AND CODUNIDADECONOMICA=@Unidad and CODMGC=@Group and anio =@Year
	else if  @Mes='07' 
		Update MAESTROGRUPOCONTABLE set Jul=@Valor  WHERE CODZONA=@Zona AND CODUNIDADECONOMICA=@Unidad and CODMGC=@Group and anio =@Year
	else if  @Mes='08' 
		Update MAESTROGRUPOCONTABLE set Ago=@Valor  WHERE CODZONA=@Zona AND CODUNIDADECONOMICA=@Unidad and CODMGC=@Group and anio =@Year
	else if  @Mes='09' 
		Update MAESTROGRUPOCONTABLE set Sep=@Valor  WHERE CODZONA=@Zona AND CODUNIDADECONOMICA=@Unidad and CODMGC=@Group and anio =@Year
	else if  @Mes='10' 
		Update MAESTROGRUPOCONTABLE set Oct=@Valor  WHERE CODZONA=@Zona AND CODUNIDADECONOMICA=@Unidad and CODMGC=@Group and anio =@Year
	else if  @Mes='11' 
		Update MAESTROGRUPOCONTABLE set Nov=@Valor  WHERE CODZONA=@Zona AND CODUNIDADECONOMICA=@Unidad and CODMGC=@Group and anio =@Year
	else if  @Mes='12' 
		Update MAESTROGRUPOCONTABLE set Dic=@Valor  WHERE CODZONA=@Zona AND CODUNIDADECONOMICA=@Unidad and CODMGC=@Group and anio =@Year
	else if  @Mes='AN' 
		If @Group ='30' or @Group ='31'
			Update MAESTROGRUPOCONTABLE set Anual=@Valor  WHERE CODZONA=@Zona AND CODUNIDADECONOMICA=@Unidad and CODMGC in ('30','31') and anio =@Year
		else if @Group ='32' or @Group ='33'
			Update MAESTROGRUPOCONTABLE set Anual=@Valor  WHERE CODZONA=@Zona AND CODUNIDADECONOMICA=@Unidad and CODMGC in ('32','33') and anio =@Year
		else if @Group in ('34')
			Update MAESTROGRUPOCONTABLE set Anual=@Valor  WHERE CODZONA=@Zona AND CODUNIDADECONOMICA=@Unidad and CODMGC in ('34') and anio =@Year
/****** Object:  StoredProcedure [dbo].[sp_Agrupa12y42]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[sp_Agrupa12y42]
@CodigoDocumentoReferencia char(2),@nrodocumento char(10),@nrodocreferencia char(20),@ncodpro char(11), @empresa int, @CodigoDocumento char(18)

--EXEC sp_Agrupa12y42 '0490100001', '0005-0000006', '20450152111',5, '000012'
AS
--agrupamos cptos creamos el cursos 
Declare @nveces int, @ncodcuenta char(12), @corre char(10), 
		@nimpdebe decimal(15,2), @nimphaber decimal(15,2), 
		@nimpdebedolar decimal(15,2), @nimphaberdolar decimal(15,2), @nMontoIgv decimal(15,2)
--declaramos el cursor
Declare nAgrupa cursor LOCAL STATIC READ_ONLY FORWARD_ONLY for
	select * from [vAgrupaCtas](@CodigoDocumento, @nrodocumento,@ncodpro, @CodigoDocumentoReferencia,@nrodocreferencia,'42')
	union all 
	select * from [vAgrupaCtas](@CodigoDocumento, @nrodocumento,@ncodpro, @CodigoDocumentoReferencia,@nrodocreferencia,'12')

open nAgrupa
Fetch Next From nAgrupa into @nveces,@ncodcuenta,@corre,@nimpdebe,@nimphaber,@nimpdebedolar,@nimphaberdolar,@nMontoIgv 
While @@Fetch_Status =0  
Begin
	If @nveces>1
	Begin 
	  if left(@ncodcuenta,3) in ('121','701','702','703','704','709') -- actualiza ventas
		Begin 
				update movcontables_d set estado='4' 
		where codigoDocumentoReferencia=@codigoDocumentoReferencia and nrodocreferencia=@nrodocreferencia and codpro=@ncodpro
			  and codcuenta = @ncodcuenta and correlativo <> @corre and nrodocumento=@nrodocumento and estado not in ('4') 

		update movcontables_d set impdebe =@nimpdebe, imphaber=@nimphaber, impdebedolar=@nimpdebedolar,imphaberdolar=@nimphaberdolar, MontoIgv=@nMontoIgv,
		estado= (Case When left(codcuenta,3) = '121' and codmgc in ('02','11') Then '-' Else estado End)
		where codigoDocumentoReferencia=@codigoDocumentoReferencia and nrodocreferencia=@nrodocreferencia and codpro=@ncodpro
			  and codcuenta = @ncodcuenta and correlativo = @corre and nrodocumento=@nrodocumento and estado not in ('4') 
			  and codunidadeconomica = @CodigoDocumento 
		End
	  if left(@ncodcuenta,3) not in ('121','701','702','703','704','709') --<>'121' --- actualiza compras la 42 y 40
		Begin 

		update movcontables_d set estado='4' 
		where codigoDocumentoReferencia=@codigoDocumentoReferencia and nrodocreferencia=@nrodocreferencia and codpro=@ncodpro
			  and codcuenta = @ncodcuenta and correlativo <> @corre and nrodocumento=@nrodocumento and estado ='D'

		update movcontables_d set impdebe =@nimpdebe, imphaber=@nimphaber, impdebedolar=@nimpdebedolar,imphaberdolar=@nimphaberdolar, MontoIgv=@nMontoIgv,
		estado= (Case When left(codcuenta,3) = '421' and codmgc in ('11','20') Then '-' Else estado End)
		where codigoDocumentoReferencia=@codigoDocumentoReferencia and nrodocreferencia=@nrodocreferencia and codpro=@ncodpro
			  and codcuenta = @ncodcuenta and correlativo = @corre and nrodocumento=@nrodocumento and estado ='D'
			  and codunidadeconomica = @CodigoDocumento 
		End
	End

	Fetch Next From nAgrupa into @nveces,@ncodcuenta,@corre,@nimpdebe,@nimphaber,@nimpdebedolar,@nimphaberdolar,@nMontoIgv 
End
Close nAgrupa
Deallocate nAgrupa
--fin cursor
/****** Object:  StoredProcedure [dbo].[sp_BackUp]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[sp_BackUp] 
	@Ruta char(250)
AS

Backup database Gestion
To disk = @Ruta
/****** Object:  StoredProcedure [dbo].[sp_borrar_empresa]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[sp_borrar_empresa]
	@idempresa int ,
	@oper varchar(4)
as
-- sp_borrar_empresa 8, 'SELE'
-- borrando tablas principales
-- de una empresa especifica

If @oper = 'SELE'
-- seleccion de tablas de la empresa
	begin
		select * from dbo.MovContables_D where codunidadeconomica in (select codunidadeconomica from dbo.Unidad_Economica where codzona in (select codzona from dbo.Zona where idempresa = @idempresa))
		select * from dbo.MovContables_C where zona in (select codzona from dbo.Zona where idempresa = @idempresa)
		select * from dbo.tbl_ParametrosAux where idempresa = @idempresa
		select * from dbo.Parametros where idempresa = @idempresa
		select * from dbo.PlanCuentasContables where idempresa = @idempresa
		select * from dbo.Banco where idempresa = @idempresa
		select * from dbo.CentroCosto where idempresa = @idempresa
		select * from dbo.Cierre where zona in (select codzona from dbo.Zona where idempresa = @idempresa)
		select * from dbo.MaestroGrupoContable where codzona in (select codzona from dbo.Zona where idempresa = @idempresa)
		select * from dbo.tbl_AsignEmpresa_Empleado where idempresa = @idempresa
		-- borrando tablas principales
		select * from dbo.Unidad_Economica where codzona in (select codzona from dbo.Zona where idempresa = @idempresa)
		select * from dbo.Zona where idempresa = @idempresa
		select * from dbo.Empresa where idempresa = @idempresa
	end
else 
	-- borrando tables de la empresa
	begin
		delete from dbo.MovContables_D where codunidadeconomica in (select codunidadeconomica from dbo.Unidad_Economica where codzona in (select codzona from dbo.Zona where idempresa = @idempresa))
		delete from dbo.MovContables_C where zona in (select codzona from dbo.Zona where idempresa = @idempresa)
		delete from dbo.Tbl_ParametrosAux where idempresa = @idempresa
		delete from dbo.Parametros where idempresa = @idempresa
		delete from dbo.PlanCuentasContables where idempresa = @idempresa
		delete from dbo.Banco where idempresa = @idempresa
		delete from dbo.CentroCosto where idempresa = @idempresa
		delete from dbo.Cierre where zona in (select codzona from dbo.Zona where idempresa = @idempresa)
		delete from dbo.MaestroGrupoContable where codzona in (select codzona from dbo.Zona where idempresa = @idempresa)
		delete from dbo.tbl_AsignEmpresa_Empleado where idempresa = @idempresa
		-- borrando tablas principales
		delete from dbo.Unidad_Economica where codzona in (select codzona from dbo.Zona where idempresa = @idempresa)
		delete from dbo.Zona where idempresa = @idempresa
		delete from dbo.Empresa where idempresa = @idempresa
	end
/****** Object:  StoredProcedure [dbo].[sp_GenCod_TablaGen]    Script Date: 18/08/2023 15:32:30 ******/
SET ANSI_NULLS OFF
-- Bloque
SET QUOTED_IDENTIFIER OFF
-- Bloque
CREATE PROCEDURE [dbo].[sp_GenCod_TablaGen]
@IdT int,
@codigo CHAR(10) OUTPUT
as
declare @CantSiglas int,@Cantcero int,@Sigla char(2),@max int,@CantN int
select @Sigla=sigla,@CantSiglas=len(Sigla),@Cantcero=(CantN-len(sigla)),@CantN=cantN from tablagen_cabeza where id=@IdT
-- Con los resultados obtenidos pasamos a generar el codigo, condicionandolo
		select @max=isnull(max(right(rtrim(ltrim(t_elem)),@Cantcero)),0)from tablagen where id=@IdT
		set @codigo=rtrim(ltrim(@Sigla))+replicate('0',@CantN-len(rtrim(ltrim(@max+1))))+rtrim(ltrim(convert(char(10),@max+1)))
/****** Object:  StoredProcedure [dbo].[sp_instup_accesos]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[sp_instup_accesos]
	@UserName varchar(50),@Password varchar(50),@Nombres varchar(50),@Apellidos varchar(50),
	@Imagen image, @idSistema bigint,@idNivel bigint,@Loggin bit
as
	declare @idUsuario bigint
	set @idUsuario=(select idUsuario from usuarios where Username=@Username)
	if @idUsuario is null
		begin
			insert into usuarios
			values(@Username,@Password,@Nombres,@Apellidos,@Imagen)
			set @idUsuario=(select idUsuario from usuarios where Username=@Username and Nombres=@Nombres and Apellidos=@Apellidos)
		end
	else
		begin
			update usuarios
			set Username=@Username,Password=@Password,Nombres=@Nombres,Apellidos=@Apellidos, Imagen=@Imagen where idUsuario=@idUsuario
		end
	if @Loggin=0 
		begin
			delete from accesos where idUsuario=@idUsuario and  idSistema=@idSistema
		end	
	if @Loggin=1
		begin
			declare @LoginID int
			set @LoginID=(select idAcceso from accesos where idUsuario=@idUsuario and idSistema=idSistema)
			if not @LoginID is null
				begin
					update accesos
					set idNivel=@idNivel, idSistema=@idSistema where idAcceso=@LoginID
				end
			else
			begin
				insert into accesos
				values(@idUsuario,@idSistema,@idNivel)
			end
		end
/****** Object:  StoredProcedure [dbo].[sp_instup_nivelacceso]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[sp_instup_nivelacceso]
	@id bigint,@NivelAcceso varchar(50),@estado bit,@oper varchar(5)
as
	if @oper='inst'
	begin
		insert into nivelaccesos
		values(@NivelAcceso,@Estado)
	end
	if @oper='up'
	begin
		update nivelaccesos
		set NivelAcceso=@NivelAcceso,Estado=@estado where idNivelAcceso=@id
	end
	if @oper='del'
	begin
		delete from nivelacceso where idNivelAcceso=@id
	end
/****** Object:  StoredProcedure [dbo].[sp_instup_parametros]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[sp_instup_parametros]
	@idEmpresa int,@clave varchar (100),@valor1 varchar(800),@valor2 varchar(800)
as
	begin
			declare @ParamId int
			set @ParamId=(select max(idParametro) from parametros where clave=@clave and idEmpresa=@idEmpresa)
			update parametros
			set valor=@valor1,subValor=@valor2 
			where idParametro=@ParamId
	end
/****** Object:  StoredProcedure [dbo].[sp_instup_tipoCambio]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
--select * from tipocambio
CREATE procedure [dbo].[sp_instup_tipoCambio]
	@idTipoCambio bigint,@IdMoneda bigint,@Fecha datetime,@tipoCambioCompra decimal(10,3),@TipoCambioVenta decimal(10,3),@estado bit,@oper varchar(10)
as
	begin
	if @oper='inst'
		begin
		insert into TipoCambio
		values(@idMoneda,@Fecha,@TipoCambioCompra,@TipoCambioVenta,@Estado)
		end
	if @oper='up'
		begin
		update tipoCambio
		set idMoneda=@idMoneda,Fecha=@fecha,TipocambioCompra=@tipoCambioCompra,TipoCambioVenta=@TipoCambioVenta,Estado=@estado
		where idTipoCambio=@idTipoCambio
		end
	if @oper='del'
		begin
		update tipoCambio
		set Estado=0
		where idTipoCambio=@idTipoCambio
		end
	end
/****** Object:  StoredProcedure [dbo].[sp_intup_detalleNivelAcceso]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[sp_intup_detalleNivelAcceso]
	@idNivelAcceso bigint,@GrupoMenu varchar(250),@Menu varchar(250),@Permitir bit,@MustDelete bit,@idSistema bigint
as
	if @MustDelete=1
	begin
		delete from DetalleNivelAcceso where idNivelAcceso=@idNivelAcceso
	end
	declare @idMenuSistema bigint
	set @idMenuSistema=(select idMenuSistema from MenuSistemas where GrupoMenus=@GrupoMenu and DescripcionMenu=@Menu)
	insert into DetalleNivelAcceso
	values(@idNivelAcceso,@idMenuSistema,@Permitir,@idSistema)
/****** Object:  StoredProcedure [dbo].[sp_lst_Cuentas]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[sp_lst_Cuentas]
	@word varchar(50)
as
	select codCuentaContable,Descripcion from PlanCuentasContables
	where codCuentaContable like @word+'%' or Descripcion like @word+'%'
	order by codCuentaContable asc
/****** Object:  StoredProcedure [dbo].[sp_lst_documento]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[sp_lst_documento]
as
	select * from tipodocumento
	order by codigodocumento
/****** Object:  StoredProcedure [dbo].[sp_lst_Label]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[sp_lst_Label]
	@codPro varchar(50) output,@codCosto varchar(50) output,@codCuenta varchar(50) output, @codzona varchar(6),@anio varchar(6)
as
	set @codPro=(select max(case when razonsocial='' or razonsocial='-' then nombre+' '+apellido else razonsocial end) from tbl_msto_ClienteProveedor where ruc=@codPro AND Estado=1)
	set @codCosto=(select max(Descripcion) from centroCosto where codCentroCosto=@codCosto and idempresa = (select idempresa from zona where codzona = @codzona))
	set @codCuenta=(select max(Descripcion) from plancuentascontables where codCuentaContable=@codCuenta and idempresa = (select idempresa from zona where codzona = @codzona) and left(anio,4)= (case When rtrim(@anio)<'2020' then '2009' else rtrim(@anio) end))
/****** Object:  StoredProcedure [dbo].[sp_lst_Tablagen]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[sp_lst_Tablagen]
@CADENA NVARCHAR(1000)
as
DECLARE @NAMETABLA SYSNAME,@CAMPOS NVARCHAR(1000),@CONDICION NVARCHAR(500)
SET @CAMPOS=(SELECT substring(@CADENA,charindex('$',@CADENA)+1,ABS(CHARINDEX('$',@CADENA)-CHARINDEX('&',@CADENA))-1))
SET @NAMETABLA=(SELECT substring(@CADENA,0,charindex('$',@CADENA)))
SET @CONDICION=(SELECT substring(@CADENA,charindex('&',@CADENA)+1,LEN(@CADENA)))

IF LEN(@CONDICION)<>0 AND charindex('&',@CADENA)<>0
	BEGIN
		EXEC('SELECT '+@CAMPOS+' FROM '+@NAMETABLA+' WHERE '+@CONDICION+'')
	END
ELSE
	BEGIN
		EXEC('SELECT '+@CAMPOS+' FROM '+@NAMETABLA+'')
	END
/****** Object:  StoredProcedure [dbo].[sp_lst_TablagenINNER]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[sp_lst_TablagenINNER]
@CADENA NVARCHAR(2000)
as                                                      
DECLARE @NAMETABLA NVARCHAR(1500),@CAMPOS NVARCHAR(1500),@CONDICION NVARCHAR(1500)
--SET @cad2=(select substring(@CADENA,charindex('$',@CADENA)+1,len(@CADENA)))

SET @CAMPOS=(SELECT substring(@CADENA,charindex('$',@CADENA)+1,ABS(CHARINDEX('$',@CADENA)-CHARINDEX('&',@CADENA))-1))
--SET @CAMPOS = (select substring(@cad2,1,charindex('$',@cad2)-1))
SET @NAMETABLA=(SELECT substring(@CADENA,0,charindex('$',@CADENA)))
SET @CONDICION=(SELECT substring(@CADENA,charindex('&',@CADENA)+1,LEN(@CADENA)))

IF LEN(@CONDICION)<>0 AND charindex('&',@CADENA)<>0
	BEGIN
		EXEC('SELECT '+@CAMPOS+' FROM '+@NAMETABLA+' WHERE '+@CONDICION+'')
	END
ELSE
	BEGIN
		EXEC('SELECT '+@CAMPOS+' FROM '+@NAMETABLA+'')
	END
/****** Object:  StoredProcedure [dbo].[sp_lst_TablagenSP]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[sp_lst_TablagenSP]
@CADENA NVARCHAR(2000)
as                                                      
DECLARE @NAMETABLA NVARCHAR(1500),@CAMPOS NVARCHAR(1500),@CONDICION NVARCHAR(1500)

SET @CAMPOS=(SELECT substring(@CADENA,charindex('$',@CADENA)+1,ABS(CHARINDEX('$',@CADENA)-CHARINDEX('&',@CADENA))-1))
SET @NAMETABLA=(SELECT substring(@CADENA,0,charindex('$',@CADENA)))
SET @CONDICION=(SELECT substring(@CADENA,charindex('&',@CADENA)+1,LEN(@CADENA)))

IF LEN(@CONDICION)<>0 AND charindex('&',@CADENA)<>0
	BEGIN
		EXEC(@NAMETABLA+' '+@CAMPOS+' '+@CONDICION+'')
	END
ELSE
	BEGIN
		EXEC(@NAMETABLA+' '+@CAMPOS+'')
	END
/****** Object:  StoredProcedure [dbo].[sp_lst_traeTabla]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[sp_lst_traeTabla]
	@Tabla VARCHAR(60),@Campos VarChar(400),@Where VarChar(400),@GroupBy VarChar(400),@OrderBy VarChar(400)
AS
	declare @cmd varchar(1630)
	set @cmd = 'SELECT ' + @Campos + ' FROM ' + @Tabla  
	If @Where  = '' 
		set @cmd = @cmd 
	Else
		set @cmd = @cmd + ' Where ' + @Where
	If @GroupBy  = '' 
		set @cmd = @cmd 
	Else
		set @cmd = @cmd + ' Group By  ' + @GroupBy
	If @OrderBy  = '' 
		set @cmd = @cmd 
	Else
		set @cmd = @cmd + ' Order By  ' + @OrderBy

	EXEC( @cmd )
/****** Object:  StoredProcedure [dbo].[sp_Mantenimiento_tbl_Activo]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[sp_Mantenimiento_tbl_Activo]
		   @IdActivo bigint,
		   @Caso1 Varchar(30),
           @Caso2 Varchar(30),
           @Caso3 Varchar(40),
           @Caso4 Varchar(25),
           @Caso5 Varchar(25),
           @Caso6 Varchar(25),
		   @pc Varchar(30),
		   @Actividad bigint,
		   @Estado bit,
		   @modo int
 AS
If @Modo = 1
	Insert into tbl_Activo
		  (Caso1,
           Caso2,
           Caso3,
           Caso4,
           Caso5,Caso6,
		   pc,
		   Actividad, 
		   Estado)
	Values
		  (@Caso1,
           @Caso2,
           @Caso3,
           @Caso4,
           @Caso5,@Caso6,
		   @pc,
		   @Actividad, 
		   @Estado)

If @Modo = 2 

	Update tbl_Activo
	Set
		   Caso1= @Caso1,
           Caso2= @Caso2,
           Caso3= @Caso3,
           Caso4= @Caso4,
           Caso5= @Caso5,Caso6=@Caso6,
           --pc = @pc,
           Actividad = Actividad+@Actividad,
           estado = @Estado
	Where
	--IdActivo = @IdActivo
	pc = @pc

If @Modo = 3
	Delete tbl_Activo
--	Update tbl_Caja set Estado = 0
	Where
	IdActivo = @IdActivo
/****** Object:  StoredProcedure [dbo].[sp_Mantenimiento_tbl_AFDocumento_compra]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
Create PROCEDURE [dbo].[sp_Mantenimiento_tbl_AFDocumento_compra]
		   @Codigo_Documento_Compra bigint,
		   @Descripcion nchar(20),
           @Abreviatura nchar(10), 
           @Serie nchar(10), 
           @Correlativo nchar(10), 
		   @estado int,
           @modo int
 AS
If @Modo = 1
	Insert into tbl_AFDocumento_compra
		   (descripcion,
            Abreviatura,
            Serie,
            Correlativo, estado)
	Values
		  (@descripcion,
            @Abreviatura,
            @Serie,
            @Correlativo,1)

If @Modo = 2 

	Update tbl_AFDocumento_compra
	Set
		   descripcion= @descripcion,
            Abreviatura= @Abreviatura,
            Serie= @Serie,
            Correlativo= @Correlativo
    where
	Codigo_documento_compra = @Codigo_documento_compra

If @Modo = 3
	Update tbl_AFDocumento_compra
	Set
		   estado=@estado
    where
	Codigo_documento_compra = @Codigo_documento_compra
/****** Object:  StoredProcedure [dbo].[sp_Mantenimiento_tbl_CapCptoComercial]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
Create PROCEDURE [dbo].[sp_Mantenimiento_tbl_CapCptoComercial]
			@Codigo_CapCpto int,
		    @codigo varchar(3),
			@Ruc_Cpto varchar(11),
            @Descripcion varchar(41),
            @Tipo nchar(10),
			@Estado bit,
		    @modo int
 AS
BEGIN
If @Modo = 1
	Insert into tbl_CapCptoComercial
		   (codigo,Ruc_Cpto,Descripcion,
            tipo, Estado )
	Values
		  (@codigo,@Ruc_Cpto,@Descripcion,
            @tipo, 1 )

If @Modo = 2 

	Update tbl_CapCptoComercial
	Set
			codigo=@Codigo,
			Ruc_Cpto=@Ruc_Cpto,
			Descripcion= @descripcion,
            tipo=@tipo
	Where
	Codigo_CapCpto = @Codigo_CapCpto

If @Modo = 3
	Update tbl_CapCptoComercial
	Set		estado = 0
	Where
	Codigo_CapCpto = @Codigo_CapCpto
END
/****** Object:  StoredProcedure [dbo].[sp_Mantenimiento_tbl_ClienteDireccion]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[sp_Mantenimiento_tbl_ClienteDireccion]
@Codigo_ClienteDireccion int,
@idClienteProveedor int,
@Direccion varchar(90),
@Estado int,
@Modo int
 AS
If @Modo = 1
	Insert into tbl_ClienteDireccion(idClienteProveedor,
	Direccion,
	Estado)

	Values
	(@idClienteProveedor,
	@Direccion,
	1)

If @Modo = 2 

	Update tbl_ClienteDireccion
	Set
	idClienteProveedor=@idClienteProveedor,
	Direccion=@Direccion
where 
	Codigo_ClienteDireccion = @Codigo_ClienteDireccion
	
If @Modo = 3
	Update tbl_ClienteDireccion
	Set Estado=0
	where Codigo_ClienteDireccion = @Codigo_ClienteDireccion
/****** Object:  StoredProcedure [dbo].[sp_Mantenimiento_tbl_DetalleParametrosAux]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[sp_Mantenimiento_tbl_DetalleParametrosAux]
		   @IdDetalleParametrosAux bigint,
		   @IdParametrosAux bigint,
           @anomes nvarchar(10),
           @monto nVarchar(10),
		   @Estado bit,
		   @modo int
 AS
If @Modo = 1
	Insert into tbl_DetalleParametrosAux
		  (IdParametrosAux,
           anomes,
           monto,
           Estado)
	Values
		  (@IdParametrosAux,
           @anomes,
           @monto,
           @Estado)

If @Modo = 2 

	Update tbl_DetalleParametrosAux
	Set
		   IdParametrosAux= @IdParametrosAux,
           anomes= @anomes,
           monto= @monto,
           estado = @Estado
	Where
	--IdActivo = @IdActivo
	IdDetalleParametrosAux = @IdDetalleParametrosAux

If @Modo = 3
--	Delete tbl_DetalleParametrosAux
	Update tbl_DetalleParametrosAux set Estado = 0
	Where
	IdDetalleParametrosAux = @IdDetalleParametrosAux
/****** Object:  StoredProcedure [dbo].[sp_Mantenimiento_tbl_Mst_Gasto]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[sp_Mantenimiento_tbl_Mst_Gasto]
		    @codigo_Documento_Gasto int,
            @Descripcion nchar(100),
            @Cuenta_contable nchar(10),
            @Cuenta_contableH nchar(10),
		    @ResumenAutomatico int,
			@Estado bit,
		    @modo int
 AS
BEGIN
If @Modo = 1
	Insert into tbl_Mst_Gasto
		   (Descripcion,
            Cuenta_contable,Cuenta_contableH,ResumenAutomatico, Estado )
	Values
		  (@Descripcion,
            @Cuenta_Contable,@Cuenta_ContableH,
            @ResumenAutomatico, 1 )

If @Modo = 2 

	Update tbl_Mst_Gasto
	Set
			Descripcion= @descripcion,
            Cuenta_contable= @cuenta_Contable,
            Cuenta_contableH= @cuenta_ContableH,
            ResumenAutomatico= @ResumenAutomatico
	Where
	codigo_Documento_Gasto = @codigo_Documento_Gasto

If @Modo = 3
	Update tbl_Mst_Gasto
	Set		estado = 0
	Where
	codigo_Documento_Gasto = @codigo_Documento_Gasto
END
/****** Object:  StoredProcedure [dbo].[sp_Mantenimiento_tbl_ParametrosAux]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[sp_Mantenimiento_tbl_ParametrosAux]
		   @IdParametrosAux bigint,
           @orden int,
           @descripcion nvarchar(50),
           @monto nVarchar(10),
           @ctadebe nVarchar(10),
           @ctahaber nVarchar(10),
           @idempresa bigint,
		   @Estado bit,
		   @modo int
 AS
If @Modo = 1
	Insert into tbl_ParametrosAux
		  (orden,
		   descripcion,
           monto,
           ctadebe,
           ctahaber,
           idempresa,
           Estado)
	Values
		  (@orden,
		   @descripcion,
           @monto,
           @ctadebe,
		   @ctahaber,
		   @idempresa,
		   @Estado)

If @Modo = 2 

	Update tbl_ParametrosAux
	Set
		   orden=@orden, 
           descripcion=@descripcion, 
           monto= @monto,
           ctadebe= @ctadebe,
		   ctahaber=@ctahaber,
		   idempresa=@idempresa, 
		   estado = @Estado
	Where
	IdParametrosAux = @IdParametrosAux

If @Modo = 3
	Delete tbl_ParametrosAux
--	Update tbl_Caja set Estado = 0
	Where
	IdParametrosAux = @IdParametrosAux
/****** Object:  StoredProcedure [dbo].[sp_misc_chekDoc]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[sp_misc_chekDoc]
	@CodPro varchar(14),@TipoDoc varchar(2),@NumeroDoc varchar(14),@CodMGC varchar(2),@idEmpresa bigint
as
	if @CodPro!='9999' and @CodPro!='8888'
	begin
		declare @Actual Table(CodMGC varchar(2),TipoDoc varchar(2),NumeroDoc varchar(14),Debe decimal(10,2),Haber decimal(10,2),Estado varchar(5))
		declare @Maximo Table(TipoDoc varchar(2),NumeroDoc varchar(14),Debe decimal(10,2),Haber decimal(10,2))
		declare @CtaGanancia varchar(10)
		declare @CtaPerdida varchar(10)
		declare @Ganancia decimal(10,3)
		declare @Perdida decimal(10,3)

		set @CtaGanancia=(select max(Valor) from parametros where clave='CtaGananciaDiferenciaCambio' and idEmpresa=@idEmpresa)	
		set @CtaPerdida=(select max(Valor) from parametros where clave='CtaPerdidaDiferenciaCambio' and idEmpresa=@idEmpresa)	

		set @Ganancia=(select max(impHaber) from movContables_D where codCuenta=@CtaGanancia and NroDocReferencia=@NumeroDoc and estado!='4')	
		set @Perdida=(select max(impDebe) from movContables_D where codCuenta=@CtaPerdida and NroDocReferencia=@NumeroDoc and estado!='4')	

		set @Ganancia=(select case when @Ganancia is null then 0 else @Ganancia end)
		set @Perdida=(select case when @Perdida is null then 0 else @Perdida end)	

		insert into @Actual
		select codMGC,CodigoDocumentoReferencia,NroDocReferencia,sum(impdebe),sum(imphaber),estado from movContables_D
		where codPro=@CodPro and CodigoDocumentoReferencia=@TipoDoc and NroDocReferencia=@NumeroDoc and codMGC=@CodMGC and estado!='D' and estado!='4'
				and codunidadeconomica in (select codunidadeconomica from unidad_economica where codzona in (select codzona from zona where idempresa=@idEmpresa))
		group by codMGC,CodigoDocumentoReferencia,NroDocReferencia,estado 

		insert into @Maximo
		select CodigoDocumentoReferencia,NroDocReferencia,max(impdebe)+@Perdida-@Ganancia,max(imphaber)+@Perdida-@Ganancia from movCOntables_D 
		where codPro=@CodPro and CodigoDocumentoReferencia=@TipoDoc and NroDocReferencia=@NumeroDoc and estado!='4'
				and codunidadeconomica in (select codunidadeconomica from unidad_economica where codzona in (select codzona from zona where idempresa=@idEmpresa))
		group by CodigoDocumentoReferencia,NroDocReferencia

		select a.CodMGC,a.TipoDoc,a.NumeroDoc,a.Debe,a.Haber,b.Debe as maxdebe,b.Haber as maxhaber 
		from @Actual a
		inner join @Maximo b
		on a.NumeroDoc=b.NumeroDoc
	end
/****** Object:  StoredProcedure [dbo].[sp_misc_chekDocTeso]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[sp_misc_chekDocTeso]
	@CodPro varchar(14),@TipoDoc varchar(2),@NumeroDoc varchar(14),@CodMGC varchar(2),@idEmpresa bigint
as
	if @CodPro!='9999' and @CodPro!='8888'
	begin
		declare @Actual Table(CodMGC varchar(2),TipoDoc varchar(2),NumeroDoc varchar(14),Debe decimal(10,2),Haber decimal(10,2),Estado varchar(5))
		declare @Maximo Table(TipoDoc varchar(2),NumeroDoc varchar(14),Debe decimal(10,2),Haber decimal(10,2))
		declare @CtaGanancia varchar(10)
		declare @CtaPerdida varchar(10)
		declare @Ganancia decimal(10,3)
		declare @Perdida decimal(10,3)

		set @CtaGanancia=(select max(Valor) from parametros where clave='CtaGananciaDiferenciaCambio' and idEmpresa=@idEmpresa)	
		set @CtaPerdida=(select max(Valor) from parametros where clave='CtaPerdidaDiferenciaCambio' and idEmpresa=@idEmpresa)	

		set @Ganancia=(select max(impHaber) from tbl_movimientocajaD where codCuenta=@CtaGanancia and NroDocumentoFuente=@NumeroDoc and estado!='1')	
		set @Perdida=(select max(impDebe) from tbl_movimientocajaD where codCuenta=@CtaPerdida and NroDocumentoFuente=@NumeroDoc and estado!='1')	

		set @Ganancia=(select case when @Ganancia is null then 0 else @Ganancia end)
		set @Perdida=(select case when @Perdida is null then 0 else @Perdida end)	

		insert into @Actual
		select left(NroDocumento,2),CodigoDocumentoFuente,NroDocumentoFuente,sum(impdebe),sum(imphaber),estado from tbl_movimientocajaD
		where codPro=@CodPro and CodigoDocumentoFuente=@TipoDoc and NroDocumentoFuente=@NumeroDoc and left(NroDocumento,2)=@CodMGC and estado!='1' --estado!='D' and estado!='4'
				and codunidadeconomica in (select codunidadeconomica from unidad_economica where codzona in (select codzona from zona where idempresa=@idEmpresa))
		group by left(NroDocumento,2),CodigoDocumentoFuente,NroDocumentoFuente,estado 

		insert into @Maximo
		select CodigoDocumentoFuente,NroDocumentoFuente,max(impdebe)+@Perdida-@Ganancia,max(imphaber)+@Perdida-@Ganancia from tbl_movimientocajaD 
		where codPro=@CodPro and CodigoDocumentoFuente=@TipoDoc and NroDocumentoFuente=@NumeroDoc and estado!='1'
				and codunidadeconomica in (select codunidadeconomica from unidad_economica where codzona in (select codzona from zona where idempresa=@idEmpresa))
		group by CodigoDocumentoFuente,NroDocumentoFuente

		select a.CodMGC,a.TipoDoc,a.NumeroDoc,a.Debe,a.Haber,b.Debe, b.Haber 
		from @Actual a
		inner join @Maximo b
		on a.NumeroDoc=b.NumeroDoc
	end
/****** Object:  StoredProcedure [dbo].[sp_reabrir_cierre]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
create procedure [dbo].[sp_reabrir_cierre]
	@Anio varchar(4),@Mes varchar(2),@Zona varchar(10),@Unidad varchar(10)
as
	update cierre
	set Cierre=1 where AnnioContable=@Anio and MesContable=@Mes and Zona=@Zona and Unidad=@Unidad
/****** Object:  StoredProcedure [dbo].[sp_reinicia_indice]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[sp_reinicia_indice]
	-- Add the parameters for the stored procedure here
	@tabla varchar(100)
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
dbcc CheckIdent(@tabla,RESEED,0)
END

/*
DBCC CHECKIDENT ("MovContables_D", RESEED, 0) 
go
DBCC CHECKIDENT ("MovContables_C", RESEED, 0)  
go
DBCC CHECKIDENT ("Parametros", RESEED, 0)  
go
DBCC CHECKIDENT ("PlanCuentasContables", RESEED, 0)  
go
DBCC CHECKIDENT ("Banco", RESEED, 0)  
go
DBCC CHECKIDENT ("CentroCosto", RESEED, 0)  
go
--DBCC CHECKIDENT ("Cierre", RESEED, 0)  
--go
--DBCC CHECKIDENT ("MaestroGrupoContable", RESEED, 0)  
--go
--DBCC CHECKIDENT ("tbl_AsignEmpresa_Empleado", RESEED, 0)  
--go

-- borrando tablas principales
DBCC CHECKIDENT ("Unidad_Economica", RESEED, 0)  
go
DBCC CHECKIDENT ("Zona", RESEED, 0)  
go
--DBCC CHECKIDENT ("Empresa", RESEED, 3) 
--go

-- iniciando empresa en blanco
insert into empresa
select idempresa=1, '' RazonSocial, '' ruc,'' rubro, '' telefono, '' direccion, '' ciudad, 
0 e_corr, 0 cantsucursal,0 cantunidad,'' regimen, '' anioinicontable,0 porrenta

*/
/****** Object:  StoredProcedure [dbo].[sp_Rep_DAOT]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[sp_Rep_DAOT]
@anio char(4),
@codMGC char(2),
@NrUIT int,
@IdEmpresa int
as
-- sp_rep_daot '2015', '04', 2,3
DECLARE @VALOR CHAR(2)
---------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpDaot]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpDaot
END
---------------------------------------
create Table tmpDaot(Correlativo int,TipoDoc varchar(1),NumeroDoc varchar(15),periodo varchar(4),
tipoPersona varchar(2),TipoDocumento varchar(1), NroDocumento varchar(15),Importe decimal(18,2),
Nombre1 varchar(30),Nombre2 varchar(30),ApePAterno varchar(20), ApeMaterno varchar(30),RazSocial varchar(100))
		
Declare @Ruc as varchar(15)
Set @Ruc = (Select ruc from empresa where IDEMPRESA=@IdEmpresa)
--Registor compras
IF @codMGC='04'
	BEGIN 
	insert into tmpDaot
	SELECT Row_number() over(partition by @Ruc order by codpro) as correlativo,(Case When len(@Ruc)=8 Then '1' Else '6' End) tipoDoc,
			@Ruc Empresa,@anio periodo,(Case When left(codpro,1)='1' Then '01' Else '02' End) tipoPersona,
			(Case When len(codpro)=8 Then '1' Else '6' End) tipoDocumento,codpro NroDocumento,
			importe = sum(impDebe),nombre1, nombre2, apellido1, apellido2,razonsocial
	FROM (
		SELECT D.CODPRO,
		Nombre1=(Case when len(D.CODPRO)<11 then (Case When charindex(' ',nombre)=0 Then nombre else left(nombre,charindex(' ',nombre)) End) 
			else (Case When left(D.CODPRO,2)='10' Then (Case When charindex(' ',nombre)=0 Then nombre else left(nombre,charindex(' ',nombre)) End) else '' End)
			end),
		Nombre2=(Case when len(D.CODPRO)<11 then (Case When charindex(' ',nombre)=0 Then '' else Right(nombre,len(nombre)-charindex(' ',nombre)) end)
			else (Case When left(D.CODPRO,2)='10' Then (Case When charindex(' ',nombre)=0 Then '' else Right(nombre,len(nombre)-charindex(' ',nombre)) end) else '' End)
			end),
		Apellido1=(Case when len(D.CODPRO)<11 then (Case When charindex(' ',apellido)=0 Then apellido Else left(apellido,charindex(' ',apellido)) End) 
			else (Case When left(D.CODPRO,2)='10' Then (Case When charindex(' ',apellido)=0 Then apellido Else left(apellido,charindex(' ',apellido)) End) else '' End)
			end),
		Apellido2=(Case when len(D.CODPRO)<11 then (Case When charindex(' ',apellido)=0 Then '' Else Right(apellido,len(apellido)-charindex(' ',apellido)) End)
			else (Case When left(D.CODPRO,2)='10' Then (Case When charindex(' ',apellido)=0 Then '' Else Right(apellido,len(apellido)-charindex(' ',apellido)) End) else '' End)
			end),
		RazonSocial= (Case When left(D.CODPRO,2)='20' Then RazonSocial else (Case When len(nombre)=0 Then RazonSocial Else '' End) End), 
		fechaDocReferencia=MAX(d.fechaDocReferencia),d.CodigoDocumentoReferencia,NroDocReferencia,
		IMPDEBE=case when D.CodigoDocumentoReferencia='07' then (case when left(d.codcuenta,2)between '30'  and '39'then sum(d.impdebe) - sum(d.imphaber) 
					 when left(d.codcuenta,2)between '40'  and '59'then sum(d.imphaber) - sum(d.impdebe) 
					 when left(d.codcuenta,2)between '60'  and '68'then sum(d.impdebe) - sum(d.imphaber) end)+ (case when D.CodigoDocumentoReferencia='07' then SUM(montoIGV) * (-1) else SUM(montoIGV) end)*-1  
				else case when left(d.codcuenta,2)between '30'  and '39'then sum(d.impdebe) - sum(d.imphaber) 
					 when left(d.codcuenta,2)between '40'  and '59'then sum(d.imphaber) - sum(d.impdebe) 
					 when left(d.codcuenta,2)between '60'  and '68'then sum(d.impdebe) - sum(d.imphaber) end 
		 end
		,montoIGV=case when D.CodigoDocumentoReferencia='07' then SUM(montoIGV) * (-1) else SUM(montoIGV) end,
		TotalImporte=case when D.CodigoDocumentoReferencia='07' then (SUM(IMPDEBE))*(-1) else (SUM(IMPDEBE)+SUM(montoIGV)) end

	FROM MOVCONTABLES_D D
	INNER JOIN MOVCONTABLES_C C ON D.IDMOVCONTABLES_C=C.IDMOVCONTABLES_C
	INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
	INNER JOIN TBL_MSTO_CLIENTEPROVEEDOR CLI ON CLI.RUC=D.CODPRO 
	WHERE  C.ANIO=@anio AND LEFT(D.CODCUENTA,2)not in ('40','41', '61','62','64','69') 
	and left(d.codcuenta,1) not in ('2','7','8','9') 
	AND Cli.Estado=1
	AND D.CODMGC IN (@codMGC,'11','  ') AND
		  D.CODPRO NOT IN('-','','000001') AND Z.IDEMPRESA=@IdEmpresa   
		  and d.estado!='4' and c.estado!='4' and d.cuentaAbono <> '' AND D.CODPRO IN(SELECT  DISTINCT DD.CODPRO
																	FROM MOVCONTABLES_D DD
																	INNER JOIN MOVCONTABLES_C CC ON DD.IDMOVCONTABLES_C=CC.IDMOVCONTABLES_C
																	INNER JOIN ZONA Z ON Z.CODZONA=CC.ZONA
																	WHERE  CC.ANIO=@anio AND LEFT(DD.CODCUENTA,2) not in ('40','41','61','62','64','69') AND DD.CODMGC IN (@codMGC,'11','  ') AND
																		  DD.CODPRO NOT IN('-','','000001') AND Z.IDEMPRESA=@IdEmpresa AND DD.ESTADO!='4' AND cc.estado!='4' 
																		  and left(codcuenta,1) not in ('2','7','8','9') 
																	GROUP BY DD.CODPRO
																	HAVING SUM(DD.IMPDEBE)>=(SELECT convert(numeric(18,3),VALOR)*@NrUIT FROM PARAMETROS WHERE CLAVE='UIT' AND IDEMPRESA=@IdEmpresa )
																	)  

			and impdebe>0 and c.glosa<>'COSTEO DEL IGV*'
	GROUP BY CODPRO,fechaDocReferencia,CodigoDocumentoReferencia,codcuenta,NroDocReferencia, Razonsocial, nombre, apellido
	) todos 
	GROUP BY  codpro, nombre1, nombre2, apellido1, apellido2, razonsocial 
	ORDER BY codpro, nombre1, nombre2, apellido1, apellido2, razonsocial

	END
--Registor Ventas
IF @codMGC='18'
	BEGIN
	insert into tmpDaot
	SELECT Row_number() over(partition by @Ruc order by codpro) as correlativo,(Case When len(@Ruc)=8 Then '1' Else '6' End) tipoDoc,
			@Ruc Empresa,@anio periodo,(Case When left(codpro,1)='1' Then '01' Else '02' End) tipoPersona,
			(Case When len(codpro)=8 Then '1' Else '6' End) tipoDocumento,codpro NroDocumento,
			importe = sum(impDebe),nombre1, nombre2, apellido1, apellido2,razonsocial
	FROM (
		SELECT D.CODPRO,
		Nombre1=(Case when len(D.CODPRO)<11 then (Case When charindex(' ',nombre)=0 Then nombre else left(nombre,charindex(' ',nombre)) End) 
			else (Case When left(D.CODPRO,2)='10' Then (Case When charindex(' ',nombre)=0 Then nombre else left(nombre,charindex(' ',nombre)) End) else '' End)
			end),
		Nombre2=(Case when len(D.CODPRO)<11 then (Case When charindex(' ',nombre)=0 Then '' else Right(nombre,len(nombre)-charindex(' ',nombre)) end)
			else (Case When left(D.CODPRO,2)='10' Then (Case When charindex(' ',nombre)=0 Then '' else Right(nombre,len(nombre)-charindex(' ',nombre)) end) else '' End)
			end),
		Apellido1=(Case when len(D.CODPRO)<11 then (Case When charindex(' ',apellido)=0 Then apellido Else left(apellido,charindex(' ',apellido)) End) 
			else (Case When left(D.CODPRO,2)='10' Then (Case When charindex(' ',apellido)=0 Then apellido Else left(apellido,charindex(' ',apellido)) End) else '' End)
			end),
		Apellido2=(Case when len(D.CODPRO)<11 then (Case When charindex(' ',apellido)=0 Then '' Else Right(apellido,len(apellido)-charindex(' ',apellido)) End)
			else (Case When left(D.CODPRO,2)='10' Then (Case When charindex(' ',apellido)=0 Then '' Else Right(apellido,len(apellido)-charindex(' ',apellido)) End) else '' End)
			end),
		RazonSocial= (Case When left(D.CODPRO,2)='20' Then RazonSocial else (Case When len(nombre)=0 Then RazonSocial Else '' End) End), 
		fechaDocReferencia=MAX(d.fechaDocReferencia),d.CodigoDocumentoReferencia,NroDocReferencia,
	IMPDEBE=(case when D.CodigoDocumentoReferencia='07' then 
			( sum(d.impdebe) - sum(d.imphaber))*-1 
			else sum(d.imphaber) - sum(d.impdebe) end)
	,montoIGV=case when D.CodigoDocumentoReferencia='07' then SUM(montoIGV) * (-1) else SUM(montoIGV) end,
	TotalImporte=case when D.CodigoDocumentoReferencia='07' then (SUM(IMPHABER)- sum(d.impdebe)+SUM(montoIGV))*(1) else (SUM(IMPHABER)- sum(d.impdebe)+SUM(montoIGV)) end
	FROM MOVCONTABLES_D D
	INNER JOIN MOVCONTABLES_C C ON D.IDMOVCONTABLES_C=C.IDMOVCONTABLES_C
	INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
	INNER JOIN TBL_MSTO_CLIENTEPROVEEDOR CLI ON CLI.RUC=D.CODPRO 
	WHERE  C.ANIO=@anio AND LEFT(D.CODCUENTA,2) in ('70','75','77','74') -- la 75 es para empresa que cobre comisiones
	AND Cli.Estado=1
	AND D.CODMGC IN (@codMGC,'  ') AND
		  D.CODPRO NOT IN('-','','000001') AND Z.IDEMPRESA=@IdEmpresa AND d.estado!='4' and c.estado!='4'AND D.CODPRO IN(SELECT  DISTINCT DD.CODPRO
																	FROM MOVCONTABLES_D DD
																	INNER JOIN MOVCONTABLES_C CC ON DD.IDMOVCONTABLES_C=CC.IDMOVCONTABLES_C
																	INNER JOIN ZONA Z ON Z.CODZONA=CC.ZONA
																	WHERE  CC.ANIO=@anio AND LEFT(DD.CODCUENTA,2) in ('70','75','77','74') AND DD.CODMGC IN (@codMGC,'  ') AND
																		  DD.CODPRO NOT IN('-','') AND Z.IDEMPRESA=@IdEmpresa AND DD.ESTADO!='4' AND cc.estado!='4' and codpro!='000001'
																	GROUP BY DD.CODPRO
																	HAVING SUM(DD.IMPhaber)>=(SELECT convert(numeric(18,3),VALOR)*@NrUIT FROM PARAMETROS WHERE CLAVE='UIT' AND IDEMPRESA=@IdEmpresa )
																	)  		
	GROUP BY CODPRO,fechaDocReferencia,CodigoDocumentoReferencia,codcuenta,NroDocReferencia, Razonsocial, nombre, apellido
	--ORDER BY CODPRO
	) todos 
	GROUP BY codpro, nombre1, nombre2, apellido1, apellido2, razonsocial 
	ORDER BY codpro, nombre1, nombre2, apellido1, apellido2, razonsocial 
	END

-------------
-- Buscamos la carpeta del cliente identificado por RUC si no existe lo creamos
--declare @reg int, @cadena varchar(1200), @direcCab Sysname 
--Declare @t table (dir varchar(200))
-- INSERT INTO @t
-- EXEC master.dbo.xp_subdirs 'D:\Gestion\' 
-- set @reg = (select count(dir) from @t where dir like (@ruc+'%'))

--if @reg=0
--Begin -- creando la carpeta del cliente
--	declare @MD varchar(100), @Dir varchar(100)

--	set @Dir = 'D:\Gestion\' + @ruc
--	SET @MD = ' mkdir ' + @Dir

--	EXEC xp_cmdshell @MD, no_output
--End
---- Fin Busca la carpeta del cliente identificado por RUC y creando el archivo texto 

----	set @reg = (select count(serie) from tmpLeCompras)
--	set @direcCab = 'd:\gestion\'+ @ruc+'\'+ (Case When @codMGC='04' Then 'Costos' else 'Ingresos' end)+'.txt'

--			set @cadena = 'select ltrim(str(Correlativo))+''|''+TipoDoc+''|''+NumeroDoc+''|''+periodo+''|''+tipoPersona+''|''+TipoDocumento+''|''+rtrim(NroDocumento)+''|''+ltrim(str(round(importe,0)))+''|''+nombre1+''|''+nombre2+''|''+ApePaterno+''|''+ApeMaterno+''|''+RazSocial+''|'' from gestion..tmpDaot'
--			--set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r '+(Case when @aMes='03' then '\r' else '' end)+'\n' --\r\n
--			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
--			EXEC master..xp_cmdshell @cadena , no_output

SELECT NroDocumento codpro, proveedor = (Rtrim(razSocial)+ Rtrim(RTrim(nombre1)+' '+ Rtrim(Nombre2))+ ' '+ Rtrim(RTrim(ApePaterno)+' '+ Rtrim(ApeMaterno))), importe FROM tmpDaot

--DROP TABLE tmpDaot
/****** Object:  StoredProcedure [dbo].[sp_Rep_DAOT_Datallado]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[sp_Rep_DAOT_Datallado]
@anio char(4),
@codMGC char(2),
@NrUIT int,
@IdEmpresa int
as

--REGISTRO DE COMPRAS

IF @codMGC='04'
	BEGIN 

	SELECT D.CODPRO,
PROVEEDOR=(SELECT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=2 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=2 and razonsocial!='' then razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),

fechaDocReferencia=MAX(d.fechaDocReferencia),d.CodigoDocumentoReferencia,NroDocReferencia,
IMPDEBE=case when D.CodigoDocumentoReferencia='07' then (case when left(d.codcuenta,2)between '30'  and '39'then sum(d.impdebe) - sum(d.imphaber) 
		     when left(d.codcuenta,2)between '40'  and '59'then sum(d.imphaber) - sum(d.impdebe) 
			 when left(d.codcuenta,2)between '60'  and '68'then sum(d.impdebe) - sum(d.imphaber) end)+ (case when D.CodigoDocumentoReferencia='07' then SUM(montoIGV) * (-1) else SUM(montoIGV) end)*-1  
	    else case when left(d.codcuenta,2)between '30'  and '39'then sum(d.impdebe) - sum(d.imphaber) 
		     when left(d.codcuenta,2)between '40'  and '59'then sum(d.imphaber) - sum(d.impdebe) 
			 when left(d.codcuenta,2)between '60'  and '68'then sum(d.impdebe) - sum(d.imphaber) end 
		end,
montoIGV=case when D.CodigoDocumentoReferencia='07' then SUM(montoIGV) * (-1) else SUM(montoIGV) end,
TotalImporte=case when D.CodigoDocumentoReferencia='07' then (SUM(IMPDEBE))*(-1) else 
((Case when left(d.codcuenta,2)between '40'  and '59' then sum(d.imphaber) - sum(d.impdebe) Else SUM(IMPDEBE) End) +SUM(montoIGV)) end

FROM MOVCONTABLES_D D
INNER JOIN MOVCONTABLES_C C ON D.IDMOVCONTABLES_C=C.IDMOVCONTABLES_C
INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
WHERE  C.ANIO=@anio AND LEFT(D.CODCUENTA,2)not in ('40','41', '61','62','64','69') 
and left(d.codcuenta,1) not in ('2','7','8','9') 
AND D.CODMGC IN (@codMGC,'11','  ') AND
	  D.CODPRO NOT IN('-','','000001') AND Z.IDEMPRESA=@IdEmpresa   
	  and d.estado!='4' and c.estado!='4' and d.cuentaAbono <> '' AND D.CODPRO IN(SELECT  DISTINCT DD.CODPRO
																FROM MOVCONTABLES_D DD
																INNER JOIN MOVCONTABLES_C CC ON DD.IDMOVCONTABLES_C=CC.IDMOVCONTABLES_C
																INNER JOIN ZONA Z ON Z.CODZONA=CC.ZONA
																WHERE  CC.ANIO=@anio AND LEFT(DD.CODCUENTA,2) not in ('40','41','61','62','64','69') AND DD.CODMGC IN (@codMGC,'11','  ') AND
																	  DD.CODPRO NOT IN('-','','000001') AND Z.IDEMPRESA=@IdEmpresa AND DD.ESTADO!='4' AND cc.estado!='4' 
																	  and left(codcuenta,1) not in ('2','7','8','9') 
																GROUP BY DD.CODPRO
																HAVING SUM(DD.IMPDEBE)>=(SELECT convert(numeric(18,3),VALOR)*@NrUIT FROM PARAMETROS WHERE CLAVE='UIT' AND IDEMPRESA=@IdEmpresa )
																)  

		and impdebe>0 and c.glosa<>'COSTEO DEL IGV*'
GROUP BY CODPRO,fechaDocReferencia,CodigoDocumentoReferencia,codcuenta,NroDocReferencia
order by proveedor
	END
--Registro de ventas
IF @codMGC='18'
	BEGIN
	SELECT D.CODPRO,
PROVEEDOR=(SELECT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=2 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=2 and razonsocial!='' then razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),
fechaDocReferencia=MAX(d.fechaDocReferencia),d.CodigoDocumentoReferencia,NroDocReferencia,
IMPDEBE=(case when D.CodigoDocumentoReferencia='07' then 
		( sum(d.impdebe) - sum(d.imphaber))*-1 
		else sum(d.imphaber) - sum(d.impdebe) end)
,montoIGV=case when D.CodigoDocumentoReferencia='07' then SUM(montoIGV) * (-1) else SUM(montoIGV) end,
TotalImporte=case when D.CodigoDocumentoReferencia='07' then (SUM(IMPHABER)- sum(d.impdebe)+SUM(montoIGV))*(1) else (SUM(IMPHABER)- sum(d.impdebe)+SUM(montoIGV)) end
FROM MOVCONTABLES_D D
INNER JOIN MOVCONTABLES_C C ON D.IDMOVCONTABLES_C=C.IDMOVCONTABLES_C
INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
WHERE  C.ANIO=@anio AND LEFT(D.CODCUENTA,2) in ('70','75','77','74') -- la 75 es para empresa que cobre comisiones

AND D.CODMGC IN (@codMGC,'  ') AND
	  D.CODPRO NOT IN('-','','000001') AND Z.IDEMPRESA=@IdEmpresa AND d.estado!='4' and c.estado!='4'AND D.CODPRO IN(SELECT  DISTINCT DD.CODPRO
																FROM MOVCONTABLES_D DD
																INNER JOIN MOVCONTABLES_C CC ON DD.IDMOVCONTABLES_C=CC.IDMOVCONTABLES_C
																INNER JOIN ZONA Z ON Z.CODZONA=CC.ZONA
																WHERE  CC.ANIO=@anio AND LEFT(DD.CODCUENTA,2) in ('70','75','77','74') AND DD.CODMGC IN (@codMGC,'  ') AND
																	  DD.CODPRO NOT IN('-','') AND Z.IDEMPRESA=@IdEmpresa AND DD.ESTADO!='4' AND cc.estado!='4' and codpro!='000001'
																GROUP BY DD.CODPRO
																HAVING SUM(DD.IMPhaber)>=(SELECT convert(numeric(18,3),VALOR)*@NrUIT FROM PARAMETROS WHERE CLAVE='UIT' AND IDEMPRESA=@IdEmpresa )
																)  		
GROUP BY CODPRO,fechaDocReferencia,CodigoDocumentoReferencia,codcuenta,NroDocReferencia
--HAVING (SUM(D.IMPhaber))>=(SELECT convert(numeric(18,3),VALOR)*@NrUIT FROM PARAMETROS WHERE CLAVE='UIT' AND IDEMPRESA=@IdEmpresa )
order by CODPRO
	END
/****** Object:  StoredProcedure [dbo].[SP_Rep_PagoProveedores]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[SP_Rep_PagoProveedores]
@anio varchar(10),
@anio2 varchar(10),
@codMGC char(2),
@codPro varchar(15),
@IdEmpresa int
as
-- SP_Rep_PagoProveedores '01/10/2010','31/12/2011','04','20450360571','14'

--REGISTRO DE COMPRAS
set language spanish
declare @Tabla Table(CODPRO VARCHAR(15),PROVEEDOR VARCHAR(250),fechaDocReferencia Datetime,CodigoDocumentoReferencia varchar(2),NroDocReferencia varchar(45),
IMPDEBE decimal (38,2),montoIGV decimal(38,3),TotalImporte decimal(38,2),Asterisco varchar(2))
declare @DifCambio1 varchar(10)
declare @DifCambio2 varchar(10)
set @DifCambio1 = (select max(valor) from parametros where Clave='CtaGananciaDiferenciaCambio' and idEmpresa=@idEmpresa)
set @DifCambio2 = (select max(valor) from parametros where Clave='CtaPerdidaDiferenciaCambio' and idEmpresa=@idEmpresa)

IF @codMGC='04'
	BEGIN 

insert into @Tabla

	SELECT D.CODPRO,
PROVEEDOR=(SELECT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=2 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=2 and razonsocial!='' then razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),
fechaDocReferencia=MAX(d.fechaDocReferencia),d.CodigoDocumentoReferencia,NroDocReferencia+
(case When d.tipo_refcomprobmodi='' then '' else ' ('+ 
d.tipo_refcomprobmodi +' '+(Case When d.tipo_refcomprobmodi='' Then '' Else rtrim(d.serie_refcomprobmodi)+'-'+ rtrim(d.nro_refcomprobmodi) End) +')'
end) NroDocReferencia,
IMPDEBE=(case when D.CodigoDocumentoReferencia='07' then (case when left(d.codcuenta,2) between '10'  and '39' then sum(d.impdebe) - sum(d.imphaber) 
		     when left(d.codcuenta,2)between '40'  and '59'then sum(d.impdebe) - sum(d.imphaber) --sum(d.imphaber) - sum(d.impdebe) 
			 when left(d.codcuenta,2)between '60'  and '99'then sum(d.impdebe) - sum(d.imphaber) end)*-1 
		else case when left(d.codcuenta,2)between '10'  and '39'then sum(d.impdebe) - sum(d.imphaber) 
		     when left(d.codcuenta,2)between '40'  and '59'then sum(d.impdebe) - sum(d.imphaber) --sum(d.imphaber) - sum(d.impdebe) 
			 when left(d.codcuenta,2)between '60'  and '99'then sum(d.impdebe) - sum(d.imphaber) end
 end)
,montoIGV=case when D.CodigoDocumentoReferencia='07' then SUM(montoIGV) * (-1) else SUM(montoIGV) end,
TotalImporte=case when D.CodigoDocumentoReferencia='07' then (SUM(IMPDEBE)+SUM(montoIGV))*(-1) else (SUM(IMPDEBE)+SUM(montoIGV)) end,
Asterisco=case when d.CodCuenta=@DifCambio1 or d.CodCuenta=@DifCambio2 then '*' else '' end

FROM MOVCONTABLES_D D
INNER JOIN MOVCONTABLES_C C ON D.IDMOVCONTABLES_C=C.IDMOVCONTABLES_C
INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
WHERE  (d.FechaDocReferencia between convert(datetime, @anio, 103) and convert(datetime, @anio2, 103)) AND LEFT(D.CODCUENTA,2)!='40' 
AND D.CODMGC IN (@codMGC,'20') AND
	  D.CODPRO NOT IN('-','') AND Z.IDEMPRESA=@IdEmpresa AND codpro!='000001'   and d.estado!='4' and c.estado!='4'AND D.CODPRO IN(SELECT  DISTINCT DD.CODPRO
																FROM MOVCONTABLES_D DD
																INNER JOIN MOVCONTABLES_C CC ON DD.IDMOVCONTABLES_C=CC.IDMOVCONTABLES_C
																INNER JOIN ZONA Z ON Z.CODZONA=CC.ZONA
																WHERE  (DD.FechaDocReferencia between convert(datetime, @anio, 103) and convert(datetime, @anio2, 103)) AND LEFT(DD.CODCUENTA,2)!='40' AND 
																	  DD.CODMGC IN (@codMGC,'20') AND
																	  DD.CODPRO NOT IN('-','') AND Z.IDEMPRESA=@IdEmpresa AND DD.ESTADO!='4' AND cc.estado!='4' and codpro!='000001'
																GROUP BY DD.CODPRO
																HAVING SUM(DD.IMPDEBE)>0
																)  
		and impdebe>0
GROUP BY CODPRO,fechaDocReferencia,CodigoDocumentoReferencia,codcuenta,NroDocReferencia
,d.tipo_refcomprobmodi ,rtrim(d.serie_refcomprobmodi), d.nro_refcomprobmodi
HAVING (case when D.CodigoDocumentoReferencia='07' then (case when left(d.codcuenta,2)between '10'  and '39'then sum(d.impdebe) - sum(d.imphaber) 
		     when left(d.codcuenta,2)between '40'  and '59'then sum(d.imphaber) - sum(d.impdebe) 
			 when left(d.codcuenta,2)between '60'  and '99'then sum(d.impdebe) - sum(d.imphaber) end)*-1 else case when left(d.codcuenta,2)between '10'  and '39'then sum(d.impdebe) - sum(d.imphaber) 
		     when left(d.codcuenta,2)between '40'  and '59'then sum(d.imphaber) - sum(d.impdebe) 
			 when left(d.codcuenta,2)between '60'  and '99'then sum(d.impdebe) - sum(d.imphaber) end
 end)>0
order by CODPRO

select * from @Tabla where codPro=@codPro 
group by codpro,proveedor,CodigoDocumentoReferencia,FechaDocReferencia,NroDocReferencia,
		impdebe, montoigv,TotalImporte, asterisco 
order by FechaDocReferencia,NroDocReferencia,TotalImporte desc

	END
--Registro de ventas
IF @codMGC='18'
	BEGIN

insert into @Tabla

	SELECT D.CODPRO,
PROVEEDOR=(SELECT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=2 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=2 and razonsocial!='' then razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),
fechaDocReferencia=MAX(d.fechaDocReferencia),d.CodigoDocumentoReferencia,NroDocReferencia +
(case When d.tipo_refcomprobmodi='' then '' else ' ('+ 
d.tipo_refcomprobmodi +' '+(Case When d.tipo_refcomprobmodi='' Then '' Else rtrim(d.serie_refcomprobmodi)+'-'+ rtrim(d.nro_refcomprobmodi) End) +')'
end) NroDocReferencia,
IMPDEBE=(case when D.CodigoDocumentoReferencia='07' then 
		( sum(d.impHaber) - sum(d.impDebe) ) --*-1 
		else sum(d.imphaber) - sum(d.impdebe) end)
,montoIGV=case when D.CodigoDocumentoReferencia='07' then SUM(montoIGV) --* (-1) 
else SUM(montoIGV) end,
TotalImporte=case when D.CodigoDocumentoReferencia='07' then (SUM(IMPHABER)-SUM(IMPDEBE)+SUM(montoIGV))--*(-1) 
else (SUM(IMPHABER)-SUM(IMPDEBE)+SUM(montoIGV)) end,
Asterisco=case when d.CodCuenta=@DifCambio1 or d.CodCuenta=@DifCambio2 then '*' else '' end

FROM MOVCONTABLES_D D
INNER JOIN MOVCONTABLES_C C ON D.IDMOVCONTABLES_C=C.IDMOVCONTABLES_C
INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
WHERE  (D.FechaDocReferencia between convert(datetime, @anio, 103) and convert(datetime, @anio2, 103)) AND LEFT(D.CODCUENTA,2)='70' 

AND D.CODMGC IN (@codMGC,'02') AND
	  D.CODPRO NOT IN('-','') AND Z.IDEMPRESA=@IdEmpresa AND codpro!='000001'   and d.estado!='4' and c.estado!='4'AND D.CODPRO IN(SELECT  DISTINCT DD.CODPRO
																FROM MOVCONTABLES_D DD
																INNER JOIN MOVCONTABLES_C CC ON DD.IDMOVCONTABLES_C=CC.IDMOVCONTABLES_C
																INNER JOIN ZONA Z ON Z.CODZONA=CC.ZONA
																WHERE  (DD.FechaDocReferencia between convert(datetime, @anio, 103) and convert(datetime, @anio2, 103)) AND LEFT(DD.CODCUENTA,2)='70' AND DD.CODMGC IN (@codMGC,'02') AND
																	  DD.CODPRO NOT IN('-','') AND Z.IDEMPRESA=@IdEmpresa AND DD.ESTADO!='4' AND cc.estado!='4' and codpro!='000001'
																GROUP BY DD.CODPRO
																HAVING SUM(DD.IMPhaber)>0
																)  

		
GROUP BY CODPRO,fechaDocReferencia,CodigoDocumentoReferencia,codcuenta,NroDocReferencia
,d.tipo_refcomprobmodi ,rtrim(d.serie_refcomprobmodi), d.nro_refcomprobmodi
HAVING --(SUM(D.IMPhaber))>0
(Case When SUM(D.IMPhaber) > 0 Then SUM(D.IMPhaber) else SUM(D.IMPDebe) end)>0
order by CODPRO

select * from @Tabla where codPro=@codPro 
group by codpro,proveedor,CodigoDocumentoReferencia,FechaDocReferencia,NroDocReferencia,
		impdebe, montoigv,TotalImporte, asterisco 
order by FechaDocReferencia,NroDocReferencia,TotalImporte desc

	END
/****** Object:  StoredProcedure [dbo].[sp_rpt_amortizacion]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[sp_rpt_amortizacion]
@lcZonaA varchar(6),
@lcZonaB varchar(6),
@lcUnidadA char(10),
@lcUnidadB char(10),
@lcANIO char(4),
@lcMesA char(2),
@lcMesB char(2),
@NroDoc nchar(20),
@Gastos nchar(10)
-- sp_rpt_amortizacion '000012','000012','000012','000012','2013','06','06','3330600001','INGRESOS'
--exec "sp_rpt_amortizacion";1 N'25', N'EGRESOS'
as
---- lista amortizacones de compras
--if @gastos = '' -- datos para COMPRA
--begin 
--Select * from vRptAmortizacionCompra
--where Codigo_Amortizacion_Compra = @NroAmortizacion
--end
---- lista amortizaciones de gastos
--if @gastos ='GASTOS' -- datos para gastos
--begin
--	Select * from vRptAmortizacionGastos
--	Where Codigo_Amortizacion_Compra = @NroAmortizacion
--
--End
--
---- lista amortizaciones de Ventas
--if @gastos ='VENTAS' -- datos para Ventas
--begin
--	Select * from vRptAmortizacionVenta
--	Where Codigo_Amortizacion_Compra = @NroAmortizacion
--End

if @gastos <>'' --='INGRESOS' -- datos para Ingresos
begin
	Select * from vRptAmortizacionIngresos(@lcZonaA,@lcZonaB,@lcUnidadA,@lcUnidadB,@lcANIO,@lcMesA,@lcMesB,left(@NroDoc,2)) 
	Where nrodoc = @NroDoc 
	order by idmovimientocajaD
End
--
--if @gastos ='EGRESOS' -- datos para Egresos
--begin
--	Select * from vRptAmortizacionEgresos
--	Where Codigo_Amortizacion_Compra = @NroAmortizacion --substring(@NroAmortizacion,5,11)
--End
/****** Object:  StoredProcedure [dbo].[sp_rpt_amortizacionResumen]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[sp_rpt_amortizacionResumen]
@lcZonaA varchar(6),
@lcZonaB varchar(6),
@lcUnidadA char(10),
@lcUnidadB char(10),
@lcANIO char(4),
@lcMesA char(2),
@lcMesB char(2),
@NroDoc nchar(20),
@Gastos nchar(10)
-- sp_rpt_amortizacionResumen '000012','000012','000012','000012','2013','10','10','3231000002','RESUMEN'
as
if @gastos <>'' --='Resumen' -- datos para Ingresos
begin
	Select codcuenta, sum(saldo) cargo, sum(monto_amortizacion) abono 
			 from vRptAmortizacionIngresos(@lcZonaA,@lcZonaB,@lcUnidadA,@lcUnidadB,@lcANIO,@lcMesA,@lcMesB,left(@NroDoc,2)) 
	Where nrodoc = @NroDoc 
	group by codcuenta
End
--
/****** Object:  StoredProcedure [dbo].[sp_temp_addMenuSistema]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[sp_temp_addMenuSistema]
	@Grupo varchar(250),@DescripcionMenu varchar(250),@idSistema bigint,@MustDelete bit
as
	if @MustDelete=1
	begin
		truncate table MenuSistemas
	end
	insert into MenuSistemas
	values(@idSistema,@Grupo,@DescripcionMenu,1)

/****** Object:  StoredProcedure [dbo].[spp_actualizaParametros]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[spp_actualizaParametros]
as
-- Falta verificar si parametros ya esxiste
-- si no existe agregarlos
select * from parametrosmaestro where clave in ('CuentaDetraccion','PorcentajeRetencion','TransAperturaConDoc')

-- insertando valores en parametros generales
insert into parametros values('4','CuentaDetraccion','10',' ','1')
insert into parametros values('7','CuentaDetraccion','10',' ','1')
insert into parametros values('4','PorcentajeRetencion','6',' ','1')
insert into parametros values('7','PorcentajeRetencion','6',' ','1')
insert into parametros values('4','TransAperturaConDoc','12,14,38,41,42,45,46,48',' ','1')
insert into parametros values('7','TransAperturaConDoc','12,14,38,41,42,45,46,48',' ','1')

--insertando valores a los parametros de cada empresa
insert into parametros 
select idempresa, clave,valor,subvalor,estado from 
(select '1' cod, clave,valor,subvalor,estado from parametrosMaestro where idempresa='4' and clave in ('CuentaDetraccion','PorcentajeRetencion','TransAperturaConDoc')) a
inner join 
(select '1' cod,idempresa from parametros group by idempresa) b
on a.cod=b.cod
order by idempresa, clave
/****** Object:  StoredProcedure [dbo].[spp_AFAnulaDepreciacion]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_AFAnulaDepreciacion]
@periodo as varchar(10),@idempresa as int

-- [spp_AFAnulaDepreciacion] '201712',2
as
		-- actualizando depreciacion acumulada ,
		declare @idActivo as int, @monto as numeric(18,2), @AcumuladoAnt as numeric(18,2), @registro as int
			
			declare nCab cursor for 
			select idActivoFijo,monto,AcumuladoAnt 
			from tbl_afHistoricoDepreciacion where idEmpresa=@idempresa and fechaproceso=@periodo order by idActivoFijo

			open nCab 
			Fetch nCab into @idActivo,@monto,@AcumuladoAnt 

			While @@Fetch_Status =0
			Begin
			-- actualizando cab depreciacion acumulada
			update tbl_AFMAestroActivoFijo set Depreciacion_Acumulada= @AcumuladoAnt
			where IdActivoFijo=@IdActivo and idEmpresa=@idempresa

			Fetch Next from nCab into @idActivo,@monto,@AcumuladoAnt 
			End
			Close nCab
			Deallocate nCab

    delete from dbo.Tbl_AFHistoricoDepreciacion where fechaproceso=@periodo
	set @registro= (select max(idAfHistoricoDepreciacion) from Tbl_AFHistoricoDepreciacion)

	dbcc CheckIdent('Tbl_AFHistoricoDepreciacion',RESEED,@registro)
/****** Object:  StoredProcedure [dbo].[spp_AFDepreciacion]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_AFDepreciacion]
@periodo as varchar(10),@idempresa as int,@tipo as char(10),@TipoDepreciacion as char(10),@MenorCuantia as char(2)
as
-- spp_AFDepreciacion '201701',2,'SELE','NORMAL','1'
declare @procesado as int
if @tipo ='CALC' -- Calcula los activos y guarda en el historico
begin
	set @procesado =(select count(FechaProceso)
	from tbl_afHistoricoDepreciacion
	where estado=1 and idempresa=@idempresa and fechaproceso=@periodo and TipoDepreciacion=@TipoDepreciacion group by FechaProceso,estado )

	if isnull(@procesado,0)<1
	begin
		if @MenorCuantia='0'
		  Begin 
			--calculando la depreciacion mensual con menor cuantia
			insert into tbl_afHistoricoDepreciacion
			select idActivoFijo,idEmpresa,@periodo FechaProceso,PorcentaDeprecia/12 PorcentaDeprecia,
			--((Valor_CompraTributaria+Valor_CompraFinanciera)*(PorcentaDeprecia/100)/12) monto 
			(case when depreciacion_Acumulada+((Valor_CompraTributaria+Valor_CompraFinanciera)*(PorcentaDeprecia/100)/12)> (Valor_CompraTributaria+Valor_CompraFinanciera)
			then (Valor_CompraTributaria+Valor_CompraFinanciera)- depreciacion_Acumulada else ((Valor_CompraTributaria+Valor_CompraFinanciera)*(PorcentaDeprecia/100)/12) end) monto
			,0 idTipoDocumento,@TipoDepreciacion TipoDepreciacion,1 Estado,depreciacion_Acumulada AcumuladoAnt, 0 cerrado
			from tbl_AFMAestroActivoFijo
			where idEmpresa=@idempresa and estado='1' -- and idestado='1'  (idestado = 1 activo, 2 Baja) (estado= 1 activo, 2 anulado)
				and (valor_compraTributaria>0 or porcentaDeprecia>0) and valor_compraTributaria>=Depreciacion_Acumulada 
				and left(convert(varchar(10),fecha_ingreso,112),6)<=@periodo 
				--and idbaja='0' and left(convert(varchar(10),fecha_baja,112),6)<=@periodo
				and idactivofijo not in  
							(select idactivofijo 
							from tbl_AFMAestroActivoFijo 
							where left(convert(varchar(10),fecha_baja,112),6)>'190001'
								and left(convert(varchar(10),fecha_baja,112),6)<=@periodo)
				and idtipoIngreso<>'6'  -- solos los que son diferentes de menor cuantia
			order by idUbicacion,idFamilia
		  End
		Else
		  Begin
			--calculando la depreciacion mensual todos
			insert into tbl_afHistoricoDepreciacion
			select idActivoFijo,idEmpresa,@periodo FechaProceso,PorcentaDeprecia/12 PorcentaDeprecia,
			--((Valor_CompraTributaria+Valor_CompraFinanciera)*(PorcentaDeprecia/100)/12) monto 
			(case when depreciacion_Acumulada+((Valor_CompraTributaria+Valor_CompraFinanciera)*(PorcentaDeprecia/100)/12)> (Valor_CompraTributaria+Valor_CompraFinanciera)
			then (Valor_CompraTributaria+Valor_CompraFinanciera)- depreciacion_Acumulada else ((Valor_CompraTributaria+Valor_CompraFinanciera)*(PorcentaDeprecia/100)/12) end) monto
			,0 idTipoDocumento,@TipoDepreciacion TipoDepreciacion,1 Estado,depreciacion_Acumulada AcumuladoAnt, 0 cerrado
			from tbl_AFMAestroActivoFijo
			where idEmpresa=@idempresa and estado='1' -- and idestado='1'  (idestado = 1 activo, 2 Baja) (estado= 1 activo, 2 anulado)
				and (valor_compraTributaria>0 or porcentaDeprecia>0) and valor_compraTributaria>=Depreciacion_Acumulada 
				and left(convert(varchar(10),fecha_ingreso,112),6)<=@periodo 
				--and idbaja='0' and left(convert(varchar(10),fecha_baja,112),6)<=@periodo
				and idactivofijo not in  
							(select idactivofijo 
							from tbl_AFMAestroActivoFijo 
							where left(convert(varchar(10),fecha_baja,112),6)>'190001'
								and left(convert(varchar(10),fecha_baja,112),6)<=@periodo)

			order by idUbicacion,idFamilia
		  End
		-- actualizando depreciacion acumulada ,
		declare @idActivo as int, @monto as numeric(18,2), @AcumuladoAnt as numeric(18,2)
			
			declare nCab cursor for 
			select idActivoFijo,monto,AcumuladoAnt 
			from tbl_afHistoricoDepreciacion where idEmpresa=@idempresa and fechaproceso=@periodo order by idActivoFijo

			open nCab 
			Fetch nCab into @idActivo,@monto,@AcumuladoAnt 

			While @@Fetch_Status =0
			Begin
			-- actualizando cab depreciacion acumulada
			update tbl_AFMAestroActivoFijo set Depreciacion_Acumulada= @AcumuladoAnt+@monto
			where IdActivoFijo=@IdActivo and idEmpresa=@idempresa

			Fetch Next from nCab into @idActivo,@monto,@AcumuladoAnt 
			End
			Close nCab
			Deallocate nCab
	end	
	update tbl_afHistoricoDepreciacion set cerrado='1' where idEmpresa=@idempresa and fechaproceso=@periodo

	select haf.idActivoFijo,haf.FechaProceso,maf.codigo_BarrasActivo,maf.nombre_corto,maf.PorcentaDeprecia,
	haf.monto,isnull(acumuladoAnt,0) Depreciacion_Acumulada, (maf.Valor_CompraTributaria+maf.Valor_CompraFinanciera) ValorOriginal,
	haf.Estado,haf.idTipoDocumento,haf.idEmpresa
	from tbl_AFMAestroActivoFijo maf inner join tbl_afHistoricoDepreciacion haf
	on maf.IdActivoFijo=haf.idActivoFijo
	left outer join (select idActivoFijo,sum(monto) Depreciacion_acumulada from tbl_afHistoricoDepreciacion where idempresa=@idempresa and fechaProceso<@periodo and TipoDepreciacion=@TipoDepreciacion group by idActivoFijo) acumul
	on maf.idActivoFijo=acumul.idActivoFijo
	where maf.idEmpresa=@idempresa and haf.idEmpresa=@idempresa and haf.estado='1' -- maf.idestado='1' and  (idestado = 1 activo, 2 Baja) (estado= 1 activo, 2 anulado)
	and haf.fechaproceso=@periodo and haf.TipoDepreciacion= @TipoDepreciacion
	and left(convert(varchar(10),maf.fecha_ingreso,112),6)<=@periodo and maf.idbaja='0' and left(convert(varchar(10),maf.fecha_baja,112),6)<=@periodo
	order by idUbicacion,idFamilia
end

if @tipo ='SELE' -- selecciona el historico valorizado
begin
	select haf.idActivoFijo,haf.FechaProceso,maf.codigo_BarrasActivo,maf.nombre_corto,maf.PorcentaDeprecia,
	haf.monto,isnull(acumuladoAnt,0) Depreciacion_Acumulada, (maf.Valor_CompraTributaria+maf.Valor_CompraFinanciera) ValorOriginal,
	haf.Estado,haf.idTipoDocumento,haf.idEmpresa
	from tbl_AFMAestroActivoFijo maf inner join tbl_afHistoricoDepreciacion haf
	on maf.IdActivoFijo=haf.idActivoFijo
	left outer join (select idActivoFijo,sum(monto) Depreciacion_acumulada from tbl_afHistoricoDepreciacion where idempresa=@idempresa and fechaProceso<@periodo and TipoDepreciacion=@TipoDepreciacion group by idActivoFijo) acumul
	on maf.idActivoFijo=acumul.idActivoFijo
	where maf.idEmpresa=@idempresa and haf.idEmpresa=@idempresa and haf.estado='1' -- maf.idestado='1' and (idestado = 1 activo, 2 Baja) (estado= 1 activo, 2 anulado)
	and haf.fechaproceso=@periodo and haf.TipoDepreciacion=@TipoDepreciacion
	and left(convert(varchar(10),maf.fecha_ingreso,112),6)<=@periodo and maf.idbaja='0' and left(convert(varchar(10),maf.fecha_baja,112),6)<=@periodo
	order by nombre_corto,idfamilia
end
/****** Object:  StoredProcedure [dbo].[Spp_AFFormatos]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
Create Procedure [dbo].[Spp_AFFormatos]

@fecha1 as char(10), @fecha2 as char(10),
@familia1 as int, @familia2 as int
AS
-- Spp_AFFormatos '01/01/2000','31/12/2017',1,999999

select af.codigo_barrasactivo,af.cuenta_compra,af.nombre_corto,ma.descripcion marca,af.modelo,af.serie,af.valor_compraTributaria,0 adiciones,0 mejoras,0 retiros,0 otros,
af.valor_compraTributaria historico,0 inflacion,0 ajustado, af.fecha_compraTributaria Fcompra, af.fecha_ingreso,isnull(dep.descripcion,'') metodo,af.nroAutorizacion autoriza,
af.PorcentaDeprecia,af.valor_compraTributaria/(case af.PorcentaDeprecia when 0 then 1 else af.PorcentaDeprecia End) AntDepreciacion
from tbl_afMaestroActivoFijo af
inner join tbl_afMarca ma on af.idMarca=ma.idMarca
left outer join tbl_afTipoDepreciacion dep on af.idTipoDepreciacion=dep.idTipoDepreciacion
where af.estado=1 and ma.estado=1 and dep.estado=1 
and af.fecha_ingreso between convert(datetime,@fecha1,103) and convert(datetime,@fecha2,103)
and af.idfamilia between @familia1 and @familia2

/****** Object:  StoredProcedure [dbo].[spp_AFGeneraCodigoArticulo]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_AFGeneraCodigoArticulo]
@cod_grupo as int,
@cod_familia as int
as
--spp_AFgeneraCodigoArticulo 90,169

select rtrim(dbo.padl(convert(char(3),@cod_grupo),3,'0')) + rtrim(dbo.padl(convert(char(4),@cod_familia),3,'0'))+
	 	rtrim(dbo.padl(isnull(MAX(idActivoFijo),0)+1,6,'0')) generado from Tbl_AFMaestroActivoFijo
/****** Object:  StoredProcedure [dbo].[spp_AFListadoAF]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[spp_AFListadoAF]
@fecha1 as char(10), @fecha2 as char(10),
@familia1 as int, @familia2 as int, @idempresa as int
AS
-- spp_afListadoaf '01/01/2000','31/12/2017',1,999999

select gr.descripcion grupo, fam.descripcion familia,ti.descripcion tipoIngreso,
isnull(cc.codcentrocosto,'') codcentrocosto, isnull(cc.descripcion,'') centrocosto,ub.descripcion ubiacion, ma.descripcion marca,
isnull(dep.descripcion,'') depreciacion,isnull(baj.descripcion,'') baja,
isnull(adq.descripcion,'') TipoAdquisicion, 
af.* 
from tbl_afMaestroActivoFijo af
inner join tbl_afFamilia fam on af.idFamilia=fam.idFamilia
inner join tbl_afgrupo gr on fam.idgrupo=gr.idGrupo
inner join tbl_afTipoIngreso ti on af.idTipoIngreso=ti.idTipoIngreso
left outer join centrocosto cc on af.idCentrocosto=cc.idCentrocosto
inner join tbl_afUbicacion ub on af.idUbicacion=ub.idUbicacion
inner join tbl_afMarca ma on af.idMarca=ma.idMarca
left outer join tbl_afTipoDepreciacion dep on af.idTipoDepreciacion=dep.idTipoDepreciacion
left outer join tbl_afbaja baj on af.idbaja=baj.idbaja
left outer join tbl_afTipoAdquisicion adq on af.idTipoAdquisicion=adq.idTipoAdquisicion

where af.estado=1 and fam.estado=1 and gr.estado=1 and ti.estado=1
and ub.estado=1 and ma.estado=1 and dep.estado=1 
--and baj.estado=1 and adq.estado=1
and af.fecha_ingreso between convert(datetime,@fecha1,103) and convert(datetime,@fecha2,103)
and af.idfamilia between @familia1 and @familia2
and af.idempresa= @idempresa
order by gr.descripcion, fam.descripcion,af.nombre_corto
/****** Object:  StoredProcedure [dbo].[spp_AFReportes]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[spp_AFReportes]
@periodo as varchar(10),@idempresa as int,@tipo as char(10), @SedeA as char(6), @SedeB as char(6)
as
-- spp_AFReportes '201012',5,'F71','000011','000011'
declare @procesado as int, @periodo1 as varchar(10)

set @periodo1 = left(@periodo,4)+'01'

if @tipo ='F71' -- reporte formato F7.1
begin
	select codigo_barrasActivo,maf.cuenta_compra,Nombre_largo,m.descripcion marca,modelo,serie,
	(CASE WHEN year(fecha_CompraTributaria)<left(@periodo,4) THEN valor_CompraTributaria ELSE 0 END) valor_CompraTributaria,
	(CASE WHEN year(fecha_CompraTributaria)=left(@periodo,4) THEN valor_CompraTributaria ELSE 0 END) adquisicion,
	isnull(mejora.agregado,0) agregado,isnull(retiros.retiro,0) retiro, 0 otros, 
	(case when isnull(retiros.retiro,0)<>0 then 0 else valor_CompraTributaria+isnull(mejora.agregado,0) end) ValHistorico,0 inflacion,
	valor_CompraTributaria-isnull(retiros.retiro,0)+isnull(mejora.agregado,0) AjusteInflacion,fecha_CompraTributaria,fecha_ingreso,td.descripcion, 
	'' docAutoriza,PorcentaDeprecia,
	isnull(AcumulAnt.depreciacion_acumulada,0) depreAcumAnt,
	AcumulAct.depreciacion_acumulada depreAcumAct,
	(case when isnull(retiros.retiro,0)<>0 then (-isnull(AcumulAnt.depreciacion_acumulada,0)-AcumulAct.depreciacion_acumulada) else 0 end) DepreRelaRetiro, 0 DepreRelaOtros,
	(case when isnull(retiros.retiro,0)<>0 then 0 else isnull(acumulAct.Depreciacion_Acumulada,0)+isnull(AcumulAnt.depreciacion_acumulada,0) end) AcumHistorico, 0 Inflacion,
	(case when isnull(retiros.retiro,0)<>0 then 0 else isnull(acumulAct.Depreciacion_Acumulada,0)+isnull(AcumulAnt.depreciacion_acumulada,0) end) DepreAcumulAjus, 
	(case when isnull(retiros.retiro,0)<>0 then 0 else (valor_CompraTributaria -(isnull(acumulAct.Depreciacion_Acumulada,0)+isnull(AcumulAnt.depreciacion_acumulada,0))) end) valorNeto,
	convert(char(3),aff.orden)+'- '+aff.descripcion familia,z.zona zona
	from tbl_AFMaestroActivoFijo maf inner join tbl_afMarca m on maf.idmarca=m.idmarca
	left outer join (select idActivoFijo,sum(monto_invertido) Invertido,sum(Monto_Agregado) agregado from tbl_AFModificacion 
					  where estado='1' and left(convert(varchar(10),fecha,103),6) between @periodo1 and @periodo group by idActivoFijo) mejora on maf.idactivofijo=mejora.idactivoFijo
	left outer join tbl_AfTipoDepreciacion td on maf.idTipoDepreciacion=td.idTipoDepreciacion
	left outer join (select idActivoFijo,sum(AcumuladoAnt) Depreciacion_acumulada from tbl_afHistoricoDepreciacion where idempresa=@idempresa and fechaProceso<=@periodo1 group by idActivoFijo) acumulAnt
		on maf.idActivoFijo=acumulAnt.idActivoFijo
--	left outer join (select idActivoFijo,sum(monto) Depreciacion_acumulada from tbl_afHistoricoDepreciacion where idempresa=@idempresa and left(fechaProceso,4)=left(@periodo,4) group by idActivoFijo) acumulAct
	left outer join (select idActivoFijo,sum(monto) Depreciacion_acumulada from tbl_afHistoricoDepreciacion where idempresa=@idempresa and left(fechaProceso,4)=left(@periodo,4) and fechaProceso<=@periodo group by idActivoFijo) acumulAct
		on maf.idActivoFijo=acumulAct.idActivoFijo
	left outer join tbl_AFfamilia aff on maf.idfamilia=aff.idfamilia
	left outer join zona z on maf.idzona=z.idzona
	Left outer join (select idActivoFijo,sum(valor_CompraTributaria) retiro 
					from tbl_AFMaestroActivoFijo
					where idempresa=@idempresa
					and fecha_baja between convert(datetime,@periodo1+'01',112) and convert(datetime,@periodo+'30',103)
					group by idActivoFijo) retiros on maf.idActivoFijo=retiros.idActivoFijo
	where  maf.estado='1' and maf.idEmpresa=@idempresa and m.estado='1' and z.idempresa= @idempresa --and fechaProceso='201708'
	and z.codZona between @sedeA and @SedeB and aff.estado='1'
	and left(convert(varchar(10),maf.fecha_CompraTributaria,112),6)<=@periodo 
--	and (maf.idbaja='0' 
--	or @periodo<=left(convert(varchar(10),maf.fecha_baja,112),6))
	order by z.codzona,aff.orden,nombre_corto

end

if @tipo ='F72' -- reporte formato F7.2
begin
	select codigo_barrasActivo,maf.cuenta_compra,Nombre_largo,m.descripcion marca,modelo,serie,
	(CASE WHEN year(fecha_CompraTributaria)<left(@periodo,4) THEN valor_CompraTributaria ELSE 0 END) valor_CompraTributaria,
	(CASE WHEN year(fecha_CompraTributaria)=left(@periodo,4) THEN valor_CompraTributaria ELSE 0 END) adquisicion,
	isnull(mejora.agregado,0) agregado,0 retiro, 0 otros, 
	(case when maf.idRevaluacion='1' then maf.montorevaluacion else 0 end) ValorVoluntario,
	(case when maf.idRevaluacion='2' then maf.montorevaluacion else 0 end) ValorReorganiza,
	(case when maf.idRevaluacion='3' then maf.montorevaluacion else 0 end) ValorOtros,
	valor_CompraTributaria+maf.montorevaluacion+isnull(mejora.agregado,0) ValHistorico,0 inflacion,
	valor_CompraTributaria+maf.montorevaluacion+isnull(mejora.agregado,0) AjusteInflacion,fecha_CompraTributaria,fecha_ingreso,td.descripcion, 
	'' docAutoriza,PorcentaDeprecia,
	isnull(AcumulAnt.depreciacion_acumulada,0) depreAcumAnt,
	AcumulAct.depreciacion_acumulada depreAcumAct,
	0 DepreRelaRetiro, 0 DepreRelaOtros,
	(case when maf.idRevaluacion='1' then isnull(AcumulRev.Depreciacion_revaluado,0) else 0 end) DepreVoluntario,
	(case when maf.idRevaluacion='2' then isnull(AcumulRev.Depreciacion_revaluado,0) else 0 end) DepreReorganiza,
	(case when maf.idRevaluacion='3' then isnull(AcumulRev.Depreciacion_revaluado,0) else 0 end) DepreOtros,
	isnull(acumulAct.Depreciacion_Acumulada,0)+isnull(AcumulAnt.depreciacion_acumulada,0)+isnull(AcumulRev.Depreciacion_revaluado,0) AcumHistorico, 0 Inflacion,
	isnull(acumulAct.Depreciacion_Acumulada,0)+isnull(AcumulAnt.depreciacion_acumulada,0)+isnull(AcumulRev.Depreciacion_revaluado,0) DepreAcumulAjus, 
	(valor_CompraTributaria -(isnull(AcumulAnt.depreciacion_acumulada,0)+isnull(acumulAct.Depreciacion_Acumulada,0)+isnull(AcumulRev.Depreciacion_revaluado,0))) valorNeto,
	convert(char(3),aff.orden)+'- '+aff.descripcion familia,z.zona zona
	from tbl_AFMaestroActivoFijo maf inner join tbl_afMarca m on maf.idmarca=m.idmarca
	left outer join (select idActivoFijo,sum(monto_invertido) Invertido,sum(Monto_Agregado) agregado from tbl_AFModificacion 
					  where estado='1' and left(convert(varchar(10),fecha,103),6) between @periodo1 and @periodo group by idActivoFijo) mejora on maf.idactivofijo=mejora.idactivoFijo
	left outer join tbl_AfTipoDepreciacion td on maf.idTipoDepreciacion=td.idTipoDepreciacion
	left outer join (select idActivoFijo,sum(monto) Depreciacion_acumulada from tbl_afHistoricoDepreciacion where idempresa=@idempresa and left(fechaProceso,4)<left(@periodo,4) group by idActivoFijo) acumulAnt
		on maf.idActivoFijo=acumulAnt.idActivoFijo
	left outer join (select idActivoFijo,sum(monto) Depreciacion_acumulada from tbl_afHistoricoDepreciacion where idempresa=@idempresa and left(fechaProceso,4)=left(@periodo,4) and fechaProceso<=@periodo group by idActivoFijo) acumulAct
		on maf.idActivoFijo=acumulAct.idActivoFijo
	left outer join (select idActivoFijo,sum(monto) Depreciacion_Revaluado from tbl_afHistoricoDepreciacion where idempresa=@idempresa and left(fechaProceso,4)=left(@periodo,4) and fechaProceso<=@periodo and tipodepreciacion='REVALU' group by idActivoFijo) acumulRev
		on maf.idActivoFijo=acumulRev.idActivoFijo
	left outer join tbl_AFfamilia aff on maf.idfamilia=aff.idfamilia
		left outer join zona z on maf.idzona=z.idzona
	where  maf.estado='1' and maf.idEmpresa=@idempresa and maf.idRevaluacion<>'0' and m.estado='1' and z.idempresa=@idempresa --and fechaProceso='201708'
	and z.codZona between @sedeA and @SedeB and aff.estado='1' 
	and left(convert(varchar(10),maf.fecha_CompraTributaria,112),6)<=@periodo and maf.idbaja='0' and left(convert(varchar(10),maf.fecha_baja,112),6)<=@periodo

	order by z.codzona,aff.orden,nombre_corto

end
/****** Object:  StoredProcedure [dbo].[spp_AFReportesOtrosVarios]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[spp_AFReportesOtrosVarios]
 @idempresa as int,@idActivoFijo1 as int,@idActivoFijo2 as int,@tipo as char(10),@periodo as varchar(10)=null
as
-- spp_AFReportesOtrosVarios 3,1,999999999,'DETDEPREC','201701' --'REUBICA' 'MODIFICA'


if @tipo ='DETDEPREC' -- reporte AF Historial de Depreciacion
begin
	select rtrim(maf.codigo_barrasActivo)+' '+MAF.nombre_corto nombre_corto,maf.nombre_largo,'DEPRE.ACUMU.ANT...' periodo,'' FechaProceso,
			0 porcentajeDeprecia,afh.AcumuladoAnt monto,0 idTipoDocumento, ' ' TipoDepreciacion 
	from (Select acumuladoAnt,idActivoFijo from tbl_afHistoricoDepreciacion where fechaproceso+convert(varchar(20),idActivoFijo) in (
			select min(fechaproceso) +convert(varchar(20),idactivofijo) from tbl_afHistoricoDepreciacion where estado=1 and idempresa=@idempresa 
			group by idactivofijo)
			) afh inner join tbl_AFMAestroActivoFijo maf on afh.idActivoFijo= maf.idActivoFijo
	where maf.idempresa=@idempresa and afh.IdActivoFijo between @idActivoFijo1 and @idActivoFijo2 
	union all 
	select rtrim(maf.codigo_barrasActivo)+' '+MAF.nombre_corto nombre_corto,maf.nombre_largo,rtrim(dbo.traeNombreMes(right(rtrim(fechaproceso),2)))+' DEL '+ left(fechaproceso,4) periodo,FechaProceso,
			afh.porcentajeDeprecia,afh.monto,afh.idTipoDocumento, afh.TipoDepreciacion 
	from tbl_afHistoricoDepreciacion afh inner join tbl_AFMAestroActivoFijo maf on afh.idActivoFijo= maf.idActivoFijo
	where afh.estado=1 and maf.idempresa=@idempresa and afh.IdActivoFijo between @idActivoFijo1 and @idActivoFijo2 and afh.idempresa=@idempresa 
	and afh.FechaProceso<=@periodo
	order by 1,4 

end

if @tipo ='REUBICA' -- reporte AF X ReUbicacion
begin
	select rtrim(maf.codigo_barrasActivo)+' '+MAF.nombre_corto nombre_corto,maf.nombre_largo,afr.fecha_Reubicacion,afr.descripcion,isnull(cc.Descripcion,'') CC, afu.descripcion ubicacion,
		afr.idubicacion idUbica,afr.idcentrocosto idcCosto
	from tbl_AFMAestroActivoFijo maf 
		inner join tbl_AFReUbicacion afr on maf.idActivoFijo= afr.idActivoFijo 
		inner join tbl_AFUbicacion afu on afr.idubicacion=afu.idubicacion 
		left outer join centrocosto cc on afr.idcentrocosto=cc.idcentrocosto
	where afr.estado=1 and afu.estado=1 and maf.idempresa=@idempresa and afr.idActivoFijo between @idActivoFijo1 and @idActivoFijo2
end

if @tipo ='MODIFICA' -- reporte AF X con Modificaciones
begin
	select rtrim(maf.codigo_barrasActivo)+' '+MAF.nombre_corto nombre_corto,maf.nombre_largo,afm.fecha,monto_Invertido, afm.Monto_agregado,afm.vida_UtilTributaria,afm.Vida_UtilFinanciera,afm.documento,afm.descripcion
	From tbl_AFMAestroActivoFijo maf 
		inner join tbl_afmodificacion afm on maf.idActivoFijo=afm.idActivoFijo
	Where afm.estado=1 and maf.idempresa=@idempresa and afm.idactivoFijo between @idActivoFijo1 and @idActivoFijo2

End
/****** Object:  StoredProcedure [dbo].[spp_AFReportesVarios]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[spp_AFReportesVarios]
 @SedeA as char(6), @SedeB as char(6),@periodo as varchar(10),@idempresa as int,@tipo as char(10),@periodo2 as varchar(10)=null
as
-- spp_AFReportesVarios '000009','000009','201701',3,'CONTABLE','201708'
--declare @procesado as int
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpAFReportes') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpAFReportes
END
-------------------------------------

	select res.nombres responsable,ubi.descripcion ubicacion,codigo_barrasActivo,aff.cuenta_compra,Nombre_largo NombreAF,nombre_corto,m.descripcion marca,modelo,serie,
	(CASE WHEN year(fecha_CompraTributaria)<left(@periodo,4) THEN valor_CompraTributaria ELSE 0 END) valor_CompraTributaria,
	(CASE WHEN year(fecha_CompraTributaria)=left(@periodo,4) THEN valor_CompraTributaria ELSE 0 END) adquisicion,
	isnull(mejora.agregado,0) agregado,0 retiro, 0 otros, valor_CompraTributaria+isnull(mejora.agregado,0) ValHistorico,0 inflacion,
	valor_CompraTributaria+isnull(mejora.agregado,0) AjusteInflacion,fecha_CompraTributaria,fecha_ingreso,td.descripcion, 
	'' docAutoriza,PorcentaDeprecia,isnull(AcumulAnt.depreciacion_acumulada,0) depreAcumAnt,AcumulAct.depreciacion_acumulada depreAcumAct,
	0 DepreRelaRetiro, 0 DepreRelaOtros, isnull(AcumulAnt.depreciacion_acumulada+AcumulAct.depreciacion_acumulada,0) AcumHistorico, 
	isnull(AcumulAnt.depreciacion_acumulada+AcumulAct.depreciacion_acumulada,0) DepreAcumulAjus, 
	isnull((valor_CompraTributaria -(AcumulAnt.depreciacion_acumulada+AcumulAct.depreciacion_acumulada)),0) valorNeto,convert(char(3),aff.orden)+'- '+aff.descripcion familia,z.zona zona,
	aff.cuenta_venta CtaDeprecia, aff.cuenta_contable ctaRevaloriza, aff.cuenta_mercaderia ctaReadecua,maf.MesAnio_Depreciacion,maf.Depreciacion_Acumulada
	into tmpAFReportes
	from tbl_AFMaestroActivoFijo maf inner join tbl_afMarca m on maf.idmarca=m.idmarca
	left outer join (select idActivoFijo,sum(monto_invertido) Invertido,sum(Monto_Agregado) agregado from tbl_AFModificacion 
					  where estado='1' group by idActivoFijo) mejora on maf.idactivofijo=mejora.idactivoFijo
	left outer join tbl_AfTipoDepreciacion td on maf.idTipoDepreciacion=td.idTipoDepreciacion
--	left outer join (select idActivoFijo,sum(monto) Depreciacion_acumulada from tbl_afHistoricoDepreciacion where idempresa=@idempresa and left(fechaProceso,4)<left(@periodo,4) group by idActivoFijo) acumulAnt
	left outer join (select idActivoFijo,sum(AcumuladoAnt) Depreciacion_acumulada from tbl_afHistoricoDepreciacion where idempresa=@idempresa and left(fechaProceso,4)=left(@periodo,4) group by idActivoFijo) acumulAnt
		on maf.idActivoFijo=acumulAnt.idActivoFijo
	left outer join (select idActivoFijo,sum(monto) Depreciacion_acumulada from tbl_afHistoricoDepreciacion where idempresa=@idempresa and left(fechaProceso,4)=left(@periodo,4) group by idActivoFijo) acumulAct
		on maf.idActivoFijo=acumulAct.idActivoFijo
	inner join tbl_afubicacion ubi on maf.idubicacion= ubi.idUbicacion
	inner join tbl_afresponsable res on ubi.idResponsable=res.idResponsable
	left outer join tbl_AFfamilia aff on maf.idfamilia=aff.idfamilia
	left outer join zona z on maf.idzona=z.idzona
	where  maf.estado='1' and maf.idEmpresa=@idempresa and m.estado='1' and z.idempresa= @idempresa --and fechaProceso='201708'
	and z.codZona between @sedeA and @SedeB and aff.estado='1'
--	order by z.codzona,aff.orden,nombre_corto

if @tipo ='XCLASIFICA' -- reporte AF X Clasificacion
begin
	select Zona, familia, codigo_barrasActivo,nombreAf,fecha_CompraTributaria,valor_CompraTributaria	from tmpAFReportes
	order by zona,familia,nombre_corto

end

if @tipo ='XNOMBRE' -- reporte AF X Descripción o nombre
begin
	select Zona, familia, responsable,ubicacion,codigo_barrasActivo,NombreAF from tmpAFReportes
	order by zona,familia,nombre_corto

end

if @tipo ='XRESPON' -- reporte AF X Responsable
begin
	select Zona, familia, responsable, ubicacion,codigo_barrasActivo,NombreAf from tmpAFReportes
	order by zona,responsable,familia,nombre_corto

end

if @tipo ='VENCIDOS' -- reporte AF Vencidos
begin
	select Zona, familia, codigo_barrasActivo,NombreAf,valor_compraTributaria,fecha_CompraTributaria,depreAcumAct,valorNeto from tmpAFReportes
	where valor_compraTributaria<= valorneto or valorneto=0
	order by zona,familia,nombre_corto

end

if @tipo ='LISTAAF' -- Listado de AF General
begin
	select *	from tmpAFReportes
	order by Ubicacion,zona,familia,responsable

end

if left(@tipo,8)='CONTABLE'
Begin 
	------------------------------------
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpAFReportes1') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpAFReportes1
	END
	-------------------------------------

	select codigo_barrasActivo,Nombre_largo NombreAF,z.zona zona,convert(char(3),aff.orden)+'- '+aff.descripcion familia,aff.cuenta_venta CtaDeprecia, aff.cuenta_contable ctaRevaloriza, aff.cuenta_mercaderia ctaReadecua, AcumulAct.depreciacion_acumulada depreAcumAct
	into tmpAFReportes1
	from tbl_AFMaestroActivoFijo maf 
		left outer join (select idActivoFijo,sum(monto) Depreciacion_acumulada from tbl_afHistoricoDepreciacion where idempresa=@idempresa and fechaProceso between @periodo and (case when @periodo2 is null then @periodo else @periodo2 end) group by idActivoFijo) acumulAct
			on maf.idActivoFijo=acumulAct.idActivoFijo
		left outer join tbl_AFfamilia aff on maf.idfamilia=aff.idfamilia
		left outer join zona z on maf.idzona=z.idzona
	where  maf.estado='1' and maf.idEmpresa=@idempresa and z.idempresa= @idempresa --and fechaProceso='201708'
		and z.codZona between @sedeA and @SedeB and aff.estado='1'

	if @tipo ='CONTABLE' -- reporte AF Asientos Contables
	begin
		select Zona, familia, ctaDeprecia concepto,isnull(max(p.descripcion),'') descripcion,0 debe, sum(depreAcumAct) haber 
		from tmpAFReportes1 tm left outer join (select codcuentacontable,descripcion from planCuentasContables where idempresa=@idempresa and left(anio,4)=(case When left(@periodo,4)<'2020' then '2009' else left(@periodo,4) end)) p on tm.ctaDeprecia=p.codcuentacontable
		group by Zona, familia, ctaDeprecia 
		union all
		select Zona, familia, ctareadecua concepto,isnull(max(p.descripcion),'') descripcion,sum(depreAcumAct) debe, 0 haber 
		from tmpAFReportes1 tm left outer join (select codcuentacontable,descripcion from planCuentasContables where idempresa=@idempresa and left(anio,4)=(case When left(@periodo,4)<'2020' then '2009' else left(@periodo,4) end)) p on tm.ctareadecua=p.codcuentacontable
		group by Zona, familia, ctaDeprecia,ctareadecua 
		order by zona, familia,concepto desc
	end

	if @tipo ='CONTABLEDE' -- reporte AF Asientos Contables Detallado por AF
	begin
		select Zona, familia, ctaDeprecia concepto,isnull(p.descripcion,'') descripcion, codigo_barrasActivo,NombreAf,0 debe, depreAcumAct haber 
		from tmpAFReportes1 tm left outer join (select codcuentacontable,descripcion from planCuentasContables where idempresa=@idempresa and left(anio,4)=(case When left(@periodo,4)<'2020' then '2009' else left(@periodo,4) end)) p on tm.ctaDeprecia=p.codcuentacontable
		union all
		select Zona, familia, ctareadecua concepto,isnull(p.descripcion,'') descripcion, codigo_barrasActivo,NombreAf,depreAcumAct debe, 0 haber 
		from tmpAFReportes1 tm left outer join (select codcuentacontable,descripcion from planCuentasContables where idempresa=@idempresa and left(anio,4)=(case When left(@periodo,4)<'2020' then '2009' else left(@periodo,4) end)) p on tm.ctareadecua=p.codcuentacontable
		order by zona, familia,codigo_barrasActivo,concepto desc
	end
end
/****** Object:  StoredProcedure [dbo].[spp_AjusteTCAsiento]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_AjusteTCAsiento]
@MesA char(2),
@Anio char(4),
@ZonaA char(6),
@ZonaB char(6),
@UnidadA char(10),
@UnidadB char(10),
@IdEmpresa int,
@Tipo char(10),
@Ruc varchar(40),
@fecDocRef as varchar(10), 
@codDocRef as char(2), 
@NroDocRef as char(14)

as 
 -- spp_AjusteTCAsiento '12','2014','000002','000002','000002','000002',2, 'DETALLE','20450285189','','',''
 -- spp_AjusteTCAsiento '12','2012','000002','000002','000002','000002',2, 'RESUMEN','','','',''
 -- spp_AjusteTCAsiento '12','2016','000032','000032','000032','000032',24, 'RESUMEN','','','','BALCOMPROBA'
 -- spp_AjusteTCAsiento '04','2012','000002','000002','000002','000002',2, 'ASIENTO','20494004209','15/01/2012','01','0002-0000003'
--select * from exportaventas
--select * from tmpTipDifCab

-------------------------------------
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'exportaventas') AND type in (N'U'))
BEGIN 
	DROP TABLE exportaventas
END
-------------------------------------
exec spp_UltimoDiaTC @MesA, @Anio, @ZonaA,@ZonaB,@UnidadA,@UnidadB,@Idempresa
			
If @Tipo='RESUMEN' and @NroDocRef='' -- visualiza solo los pendientes
Begin
	select codpro, CodDoc,NroDocReferencia, fechadocreferencia,impdebe, imphaber, impdebeDolar, imphaberdolar,codigoDocumentoReferencia 
	from tmpCliTC

End

If @Tipo='DETALLE' -- visualiza solo los pendientes
Begin
	select Codpro,codigoDocumentoReferencia,NroDocReferencia,fechadocreferencia,codcuenta,impdebe,imphaber,impdebeDolar,imphaberdolar,DifTcH 
	from tmpDifTC
	where codpro= @Ruc 
End

If @Tipo='ASIENTO' -- Crea los asientos por dif. TC
Begin
	-- creando cursor para cada documento por cliente
	DECLARE @codZona as char(10), @codUE as char(10),@codpro as char(11),@CodDoc as varchar(2),@NroDoc as Varchar(15),@fechaDoc as varchar(10),@CodCta as varchar(10),@Moneda as varchar(2)
	declare @ctaGanancia as varchar(10), @ctaPerdida as varchar(10), @ctaCompra as varchar(10), @ctaVenta as varchar(10)

	--- buscando en parametros las cuentas automaticas del TC
	set @ctaGanancia = (select valor from parametros where idempresa=@IdEmpresa and clave ='CtaGananciaDiferenciaCambio')
	set @ctaPerdida  = (select valor from parametros where idempresa=@IdEmpresa and clave ='CtaPerdidaDiferenciaCambio')
	set @ctaCompra   = (select valor from parametros where idempresa=@IdEmpresa and clave ='CtaCierreCompras')
	set @ctaVenta    = (select valor from parametros where idempresa=@IdEmpresa and clave ='CtaCierreVentas')

	--creamos estructura de migracion
	select  '11' grupo,@ZonaA zona, @UnidadA Unidad_Economica,
			convert(char(4),year(fecha)) as año,
			--(case when month(fecha)<10 then '0'+convert(char(1),month(fecha)) else convert(char(2),month(fecha)) end) as mes,
			@mesA as mes,
			fecha as fecha_registro,
			(case when left(codcuenta,2)='42' then 
			(case when diftcH<0 then codcuenta else @ctaGanancia end) else (Case when diftcH>0 then @ctaGanancia else codcuenta end) end) as cuenta_contable,
			(case when left(codcuenta,2)='42' then (case when diftcH>0 then codcuenta else 
								(case when @ctaGanancia like '%67%' then (case when left(@ctaPerdida,2)='77' then @ctaPerdida else codcuenta end) else @ctaGanancia end) end)
			 else (case when diftcH<0 then @ctaPerdida else codcuenta end) end) as cuenta_abono,'' Automatico,
			codpro proveedor, '' razon_social, '' direccion, CodigoDocumentoReferencia tipo_documento,
			NroDocReferencia nro_documento, NroDocReferencia nro_documento2,convert(datetime,fecha,103) fecha_documento, --@fechaDoc
			'AJUSTE POR DIFERENCIA DE TIPO DE CAMBIO*' detalle_venta, '1' tipo_moneda, tipocambioVenta tipo_cambio,
			'3' tipo_operacion, 
			(case when left(codcuenta,2)='42' then 
			(case when diftcH>0 then diftcH else (case when left(@ctaPerdida,2)='77' Then diftcH*-1 else 0 end) end) else (case when diftcH>0 then diftcH else (Case When diftcH<0 Then diftcH*-1 else 0 end) end) end) importe_Debe, 
			(case when left(codcuenta,2)='42' then 
			(case when diftcH>0 then 0 else (case when left(@ctaPerdida,2)='77' Then 0 else diftcH*-1 end) end) else (case when diftcH>0 then 0 else (Case When diftcH<0 Then 0 else diftcH*-1 end) end)  end) importe_Haber, 
			'0' afecto,0 monto_igv, '' isc, 0 monto_isc,
			'0' cancelado,0 percepcion,0 monto_percepcion, '01/01/1900' fechanc, '' tipo_docnc, '' nro_docnc,
			dense_rank() OVER(order by fecha ) voucher, 
			'CAB. AJUSTE POR DIFERENCIA DE TIPO DE CAMBIO*' GLOSA,'' ccosto,'' fefec,0 Adicional2,0 Adicional3		
	into exportaventas
	from tmpDifTC
	where diftcH<>0 --and month(Fecha)=@mesA --and sit='F'
		and codpro=@Ruc and fechaDocReferencia=convert(datetime,@FecDocRef,103) and codigoDocumentoReferencia=@CodDocRef and rtrim(NroDocReferencia)=rtrim(@NroDocRef)
	order by fecha,codpro,CodigoDocumentoReferencia,NroDocReferencia

	exec spp_MigrarComprasVentas1 '', @zonaA,@zonaA,@UnidadA,@UnidadA,@mesA,@mesA,@Anio,@IdEmpresa,'VENTAS','PORDIA'

End

-- creando resumen para el balance de comprobacion
If @NroDocRef='BALCOMPROBA' -- Solo para el balancede comprobacion
Begin
	--- buscando en parametros las cuentas automaticas del TC
	set @ctaGanancia = (select valor from parametros where idempresa=@IdEmpresa and clave ='CtaGananciaDiferenciaCambio')
	set @ctaPerdida  = (select valor from parametros where idempresa=@IdEmpresa and clave ='CtaPerdidaDiferenciaCambio')
	set @ctaCompra   = (select valor from parametros where idempresa=@IdEmpresa and clave ='CtaCierreCompras')
	set @ctaVenta    = (select valor from parametros where idempresa=@IdEmpresa and clave ='CtaCierreVentas')

	delete from tmpBCTC -- borramos todos los registros para agregar los nuevos

	insert into tmpBCTC

		select rtrim(min(codcuenta)) codcuenta,0 indebe,0 inhaber,(Case When sum(diftcD)<0 then sum(diftcD)*-1 Else 0 End) andebe, 
						(Case When sum(diftcD)<0 then 0 Else sum(diftcD)*-1 End) anHaber, 0 debe,0 haber
		from (
			select @UnidadA codunidadeconomica,codpro,codigoDocumentoReferencia,nrodocreferencia,codcuenta,sum(diftcH) diftcD 
			from tmpDifTC
			group by codpro,codigoDocumentoReferencia,nrodocreferencia,codcuenta
			union all 
			select codunidadeconomica,codpro,codigoDocumentoReferencia,nrodocreferencia,codcuenta , sum(impdebe-imphaber)*-1 diftcD
			from movcontables_d 
			where codigoDocumentoReferencia+nrodocreferencia in 
			(select codigoDocumentoReferencia+nrodocreferencia from tmpDifTC group by codigoDocumentoReferencia,nrodocreferencia) and --'010002-0000003' and 
				(left(Codcuenta,3) in ('776','676')) and -- or Codcuenta like ('%676%')) and 
				estado not in ('4','D') and substring(nrodocumento,4,2)<=@MesA
				and MovContables_D.CodUnidadEconomica = @UnidadA
			group by codunidadeconomica,codpro,codigoDocumentoReferencia,nrodocreferencia,codcuenta
		) a 
		group by codunidadeconomica,codpro,codigoDocumentoReferencia,nrodocreferencia

End
/****** Object:  StoredProcedure [dbo].[spp_AjusteTCMensual]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[spp_AjusteTCMensual]

@cMes as varchar(2), @cYear as Varchar(4), @Idempresa as integer,@fechadocreferencia as varchar(10), @Codpro as char(11), 
@codigoDocumentoReferencia as char(2), @NroDocReferencia as char(14)

As
-- calcula el la diferencia del TC mensual
-- spp_AjusteTCMensual '04','2012',2,'15/01/2012', '20494004209','01', '0002-0000003'

-------------------------------------
--IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'tmpMov') AND type in (N'U'))
--BEGIN 
--	drop table tmpMov
--END
--IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'tmpUltDia') AND type in (N'U'))
--BEGIN 
--	drop table tmpUltDia
--END
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'tmpTipDifCab') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpTipDifCab
--	DROP TABLE tmpTipDifCab1
END
-------------------------------------

	-- agregando los TC por cada movimiento (provision y pagos)
-- esta consulta se genera en spp_UltimoDiaTC

--	select ' ' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta, Convert(numeric(6,3),1) IncMov, codmgc, sum(impdebedolar) impdebedolar, sum(imphaberdolar) imphaberdolar   
--	into tmpMov from tipocambio inner join (select d.FechaDocReferencia, d.codmgc, impdebedolar, imphaberdolar   
--					from movcontables_d d inner join movcontables_c c on c.idmovcontables_c= d.idmovcontables_c 
--					where codcuenta in (select codcuentacontable from plancuentascontables where converMoneda = 'S' and idempresa= @idEmpresa and Estado =1)
--					and c.mes<=@cMes and c.anio=@cYear and d.estado<>'4' and moneda='2' and d.codmgc not in ('11')
--					and d.codpro=@Codpro and codigoDocumentoReferencia=@codigoDocumentoReferencia and NroDocReferencia=@NroDocReferencia
--					) doc on fecha=fechaDocreferencia
--	where Estado='1'
--    Group by idmoneda,fecha,TipoCambioCompra,TipoCambioVenta, codmgc

	-- seleccionando los TC del ultimo dia de c/mes
-- esta consulta se genera en spp_UltimoDiaTC

--	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta, 
--	(select Convert(numeric(6,3),(case when @cMes= '01' Then '3' else count(codcuenta) end)) from movcontables_d where estado<>'4' and codmgc='11' and lefT(codcuenta,2) in ('67','77') and codpro=@Codpro and codigoDocumentoReferencia=@codigoDocumentoReferencia and NroDocReferencia=@NroDocReferencia and month(fechaDocReferencia)= '01' and fechaDocReferencia = tipocambio.fecha ) IncMov 
--	into tmpUltDia 
--	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'01'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'01'+'/'+@cYear,103))) and Estado='1'
--	union all
--	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta, 
--	(select Convert(numeric(6,3),(case when @cMes= '02' Then '3' else count(codcuenta) end)) from movcontables_d where estado<>'4' and codmgc='11' and lefT(codcuenta,2) in ('67','77') and codpro=@Codpro and codigoDocumentoReferencia=@codigoDocumentoReferencia and NroDocReferencia=@NroDocReferencia and month(fechaDocReferencia)= '02' and fechaDocReferencia = tipocambio.fecha ) IncMov 
--	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'02'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'02'+'/'+@cYear,103))) and Estado='1'
--	union all
--	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta, 
--	(select Convert(numeric(6,3),(case when @cMes= '03' Then '3' else count(codcuenta) end)) from movcontables_d where estado<>'4' and codmgc='11' and lefT(codcuenta,2) in ('67','77') and codpro=@Codpro and codigoDocumentoReferencia=@codigoDocumentoReferencia and NroDocReferencia=@NroDocReferencia and month(fechaDocReferencia)= '03' and fechaDocReferencia = tipocambio.fecha ) IncMov 
--	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'03'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'03'+'/'+@cYear,103))) and Estado='1'
--	union all
--	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta, 
--	(select Convert(numeric(6,3),(case when @cMes= '04' Then '3' else count(codcuenta) end)) from movcontables_d where estado<>'4' and codmgc='11' and lefT(codcuenta,2) in ('67','77') and codpro=@Codpro and codigoDocumentoReferencia=@codigoDocumentoReferencia and NroDocReferencia=@NroDocReferencia and month(fechaDocReferencia)= '04' and fechaDocReferencia = tipocambio.fecha ) IncMov 
--	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'04'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'04'+'/'+@cYear,103))) and Estado='1'
--	union all
--	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta, 
--	(select Convert(numeric(6,3),(case when @cMes= '05' Then '3' else count(codcuenta) end)) from movcontables_d where estado<>'4' and codmgc='11' and lefT(codcuenta,2) in ('67','77') and codpro=@Codpro and codigoDocumentoReferencia=@codigoDocumentoReferencia and NroDocReferencia=@NroDocReferencia and month(fechaDocReferencia)= '05' and fechaDocReferencia = tipocambio.fecha ) IncMov 
--	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'05'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'05'+'/'+@cYear,103))) and Estado='1'
--	union all
--	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta, 
--	(select Convert(numeric(6,3),(case when @cMes= '06' Then '3' else count(codcuenta) end)) from movcontables_d where estado<>'4' and codmgc='11' and lefT(codcuenta,2) in ('67','77') and codpro=@Codpro and codigoDocumentoReferencia=@codigoDocumentoReferencia and NroDocReferencia=@NroDocReferencia and month(fechaDocReferencia)= '06' and fechaDocReferencia = tipocambio.fecha ) IncMov 
--	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'06'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'06'+'/'+@cYear,103))) and Estado='1'
--	union all
--	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta, 
--	(select Convert(numeric(6,3),(case when @cMes= '07' Then '3' else count(codcuenta) end)) from movcontables_d where estado<>'4' and codmgc='11' and lefT(codcuenta,2) in ('67','77') and codpro=@Codpro and codigoDocumentoReferencia=@codigoDocumentoReferencia and NroDocReferencia=@NroDocReferencia and month(fechaDocReferencia)= '07' and fechaDocReferencia = tipocambio.fecha ) IncMov 
--	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'07'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'07'+'/'+@cYear,103))) and Estado='1'
--	union all
--	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta, 
--	(select Convert(numeric(6,3),(case when @cMes= '08' Then '3' else count(codcuenta) end)) from movcontables_d where estado<>'4' and codmgc='11' and lefT(codcuenta,2) in ('67','77') and codpro=@Codpro and codigoDocumentoReferencia=@codigoDocumentoReferencia and NroDocReferencia=@NroDocReferencia and month(fechaDocReferencia)= '08' and fechaDocReferencia = tipocambio.fecha ) IncMov 
--	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'08'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'08'+'/'+@cYear,103))) and Estado='1'
--	union all
--	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta, 
--	(select Convert(numeric(6,3),(case when @cMes= '09' Then '3' else count(codcuenta) end)) from movcontables_d where estado<>'4' and codmgc='11' and lefT(codcuenta,2) in ('67','77') and codpro=@Codpro and codigoDocumentoReferencia=@codigoDocumentoReferencia and NroDocReferencia=@NroDocReferencia and month(fechaDocReferencia)= '09' and fechaDocReferencia = tipocambio.fecha ) IncMov 
--	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'09'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'09'+'/'+@cYear,103))) and Estado='1'
--	union all
--	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta, 
--	(select Convert(numeric(6,3),(case when @cMes= '10' Then '3' else count(codcuenta) end)) from movcontables_d where estado<>'4' and codmgc='11' and lefT(codcuenta,2) in ('67','77') and codpro=@Codpro and codigoDocumentoReferencia=@codigoDocumentoReferencia and NroDocReferencia=@NroDocReferencia and month(fechaDocReferencia)= '10' and fechaDocReferencia = tipocambio.fecha ) IncMov 
--	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'10'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'10'+'/'+@cYear,103))) and Estado='1'
--	union all
--	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta, 
--	(select Convert(numeric(6,3),(case when @cMes= '11' Then '3' else count(codcuenta) end)) from movcontables_d where estado<>'4' and codmgc='11' and lefT(codcuenta,2) in ('67','77') and codpro=@Codpro and codigoDocumentoReferencia=@codigoDocumentoReferencia and NroDocReferencia=@NroDocReferencia and month(fechaDocReferencia)= '11' and fechaDocReferencia = tipocambio.fecha ) IncMov 
--	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'11'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'11'+'/'+@cYear,103))) and Estado='1'
--	union all
--	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta, 
--	(select Convert(numeric(6,3),(case when @cMes= '12' Then '3' else count(codcuenta) end)) from movcontables_d where estado<>'4' and codmgc='11' and lefT(codcuenta,2) in ('67','77') and codpro=@Codpro and codigoDocumentoReferencia=@codigoDocumentoReferencia and NroDocReferencia=@NroDocReferencia and month(fechaDocReferencia)= '12' and fechaDocReferencia = tipocambio.fecha ) IncMov 
--	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'12'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'12'+'/'+@cYear,103))) and Estado='1'

-- creando solo las fechas seleccionadas

-- esta consulta se genera en spp_UltimoDiaTC

--Select distinct ROW_NUMBER() OVER(ORDER BY fecha) AS item,*, convert(numeric(6,3),0) dif,convert(numeric(18,2),0) Acta,convert(numeric(18,2),0) saldo, convert(numeric(18,2),0) difTc 
--into tmpTipDifCab1 
--from (
--	select sit, idmoneda,fecha,tipocambioCompra, TipoCambioVenta,IncMov, codmgc, impdebedolar, imphaberdolar, tipocambioVenta tcVtaAnt from tmpMov
--	union all
--	Select *,'' codmgc, 0 impdebedolar, 0 imphaberdolar,0 tcVtaAnt from tmpUltDia
--	union all
--	select tmpUltDia.*,'' codmgc, 0 impdebedolar, 0 imphaberdolar,tcVtaAnt from tmpUltDia inner join (select month(fecha) mes,impdebedolar,imphaberdolar, tipocambioVenta tcVtaAnt from tmpMov where codmgc in ('20','02')) pagos on month(fecha) = mes 
--) tcMes 
--where fecha between convert(datetime,@fechadocreferencia,103) and DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+@cMes+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+@cMes+'/'+@cYear,103)))
--	and incMov>0 
--order by 4

-------------------
declare @lcZona as char(6) 

set @lcZona= (select distinct codunidadeconomica from movcontables_d 
		 where fechaDocReferencia = convert(datetime,@fechadocreferencia,103) 
			and	codpro=@Codpro and codigoDocumentoReferencia=@codigoDocumentoReferencia and NroDocReferencia=@NroDocReferencia
		)

exec spp_UltimoDiaTC @cMes, @cYear, @lcZona,@lcZona,@lcZona,@lcZona,@Idempresa

-- agregando un registro al final si situacion de pagos = registro de meses y dif. de item = 1
DECLARE @adiciona as numeric(2,0),@adiciona2 as numeric(2,0)

set @adiciona = (select sum(sit)-sum(item) ingr 
				 from (select count(sit) sit, max(item) item from tmpTipDifCab1 where sit='' and codmgc in ('02','20') 
						union all 
					   select count(sit)*-1 sit, min(item)*-1 item from tmpTipDifCab1 where sit<>'' and codmgc in ('') 
					   ) a)
if @adiciona=1
begin 
	insert into tmpTipDifCab1 
	Select (select max(item)+1 from tmpTipDifCab1) item,*,'' codmgc, 0 impdebedolar, 0 imphaberdolar,
			convert(numeric(6,3),0) dif,convert(numeric(18,2),0) Acta,convert(numeric(18,2),0) saldo, convert(numeric(18,2),0) difTc,0 tcVtaAnt 
	from tmpUltDia where month(fecha) = @cMes and sit='F'
end
----------------------

-- fin seleccionando los TC del ultimo dia de c/mes

DECLARE @sit as varchar(2),@sitAnt as varchar(2),@item as integer,@fechatc as datetime, @tipocambio as numeric(6,3), @Dif AS numeric(6,3),@codmgc as varchar(2), @impdebe as numeric(18,2), @imphaber as numeric(18,2)
DECLARE @tcAnt as numeric(8,3),@tcAnt2 as numeric(8,3),@MontoAnt as decimal(15,2),@ActaAnt as decimal(15,2),@tcAnt3 as numeric(8,3),@fechatc2 as datetime

-------------------
-- verifica si situacion de pagos = registro de meses y dif. de item = 1
set @adiciona = (select sum(sit)-sum(item) ingr 
				 from (select count(sit) sit, max(item) item from tmpTipDifCab1 where sit='' and codmgc in ('02','20') 
						union all 
					   select count(sit)*-1 sit, min(item)*-1 item from tmpTipDifCab1 where sit<>'' and codmgc in ('') 
					   ) a)

if @adiciona=0
begin 
	declare TipoCambioAnterior Cursor For
	select item, sit,fecha,tipoCambioVenta,impdebeDolar,imphaberDolar from tmpTipDifCab1 order by 1

	Open TipoCambioAnterior
	FETCH NEXT FROM TipoCambioAnterior INTO @item,@sit,@fechatc,@tipocambio,@impdebe,@impHaber

	set @adiciona2 = (select min(item) from tmpTipDifCab1 where sit<>'' and codmgc in (''))

	WHILE @@fetch_status=0
	BEGIN
		Set @Dif=0
		if 	@item =1
		Begin 
			Set @tcAnt = @TipoCambio
			set @Montoant= @impHaber+@impdebe
			Set @ActaAnt = 0
		End

		if 	@item >1
		Begin 
			update tmpTipDifCab1 set incMov= @tcAnt, 
					dif= (tipoCambioVenta-@tcAnt), 
					saldo= @Montoant,
					Acta = @ActaAnt
			 where item=@item +@adiciona2-2

			update tmpTipDifCab1 set diftc= dif * (Case When @sitAnt='' Then acta*-1 Else saldo End) where item=@item +@adiciona2-2

			Set @ActaAnt= (Case when @sit='' Then @impHaber+@impdebe else @ActaAnt End)
			Set @tcAnt = @TipoCambio
			Set @sitAnt = @sit
		End

		FETCH NEXT FROM TipoCambioAnterior INTO @item,@sit,@fechatc,@tipocambio,@impdebe,@impHaber
	END

	CLOSE TipoCambioAnterior
	DEALLOCATE TipoCambioAnterior	
End

if @adiciona<>0 -- pagos a cuenta con cierre
begin 
	-------- Declarando cursor para actualizar la columna TCANT 
	declare TipoCambioAnterior Cursor For
	select item, sit,fecha,tipoCambioVenta,impdebeDolar,imphaberDolar from tmpTipDifCab1 order by 1

	Open TipoCambioAnterior
	FETCH NEXT FROM TipoCambioAnterior INTO @item,@sit,@fechatc,@tipocambio,@impdebe,@impHaber

	WHILE @@fetch_status=0
	BEGIN
		Set @Dif=0
		if 	@item =1
		Begin 
			Set @sitAnt = @sit
			Set @tcAnt = @TipoCambio
			Set @tcAnt2 = 0
		    set @Montoant= @impHaber+@impdebe
			Set @ActaAnt = 0
		End
		if 	@item >1
		Begin 
			Set @Dif=@TipoCambio-(Case When @fechatc = @fechatc2 Then @tcAnt2 Else @tcAnt end) 
			Set @MontoAnt= (Case when @sit='' Then (Case When @sitAnt='' Then @MontoAnt Else @MontoAnt-@ActaAnt end) else @MontoAnt- (@impHaber+@impdebe) End)
			Set @ActaAnt= (Case when @sit='' Then @impHaber+@impdebe else @ActaAnt End)

			update tmpTipDifCab1 set incMov= (Case When @fechatc = @fechatc2 Then @tcAnt2 Else @tcAnt end), 
					dif= (Case when sit='' then 0 else @Dif end), saldo= @Montoant,
					diftc= (Case when sit='' then 0 else @Dif end)*(case When @sitAnt='F' and @ActaAnt<>0 Then @ActaAnt*-1 Else @Montoant End), 
					Acta = @ActaAnt
			where item=@item 

			Set @tcAnt = (Case When @sit='' Then @tcAnt Else @TipoCambio end)
			Set @tcAnt2 = (Case When @sit='' Then @TipoCambio Else @tcAnt2 end)
			Set @fechatc2 = @fechatc
			Set @sitAnt = @sit
		End

		FETCH NEXT FROM TipoCambioAnterior INTO @item,@sit,@fechatc,@tipocambio, @impdebe, @impHaber
	END

	CLOSE TipoCambioAnterior
	DEALLOCATE TipoCambioAnterior	
End


 select max(item) item, sit,idmoneda,fecha,tipocambiocompra, tipocambioventa,incmov,codmgc,impdebedolar,imphaberdolar,
        sum(dif)dif, acta,saldo, sum(diftc) diftc 
into tmpTipDifCab
from tmpTipDifCab1 
group by sit,idmoneda,fecha,tipocambiocompra, tipocambioventa,incmov,codmgc,impdebedolar,imphaberdolar,acta,saldo
order by 1

-- select * from tmpTipDifCab
/****** Object:  StoredProcedure [dbo].[spp_AperturaMes]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_AperturaMes]
@anio char(4),
@mes char(2),
@zona char(6),
@unidad char(10)
AS
Declare @clActualiza BIT
SET @clActualiza =(CASE WHEN (SELECT AnnioContable  FROM CIERRE WHERE AnnioContable=@anio AND MesContable=@mes and zona=@Zona and unidad=@unidad ) IS NULL THEN 0 ELSE 1 END)
IF @clActualiza =0
	BEGIN
		INSERT INTO CIERRE (zona,unidad,AnnioContable,MesContable,DesMesContable,cierre) VALUES(@zona,@unidad,@anio,@mes, dbo.traeNombreMes(@mes),1)
	END
if @clActualiza =1
	BEGIN
		UPDATE CIERRE SET Cierre=0  WHERE AnnioContable=@anio AND MesContable=@mes and zona=@zona and unidad=@unidad
	END

--select * from cierre


------------------------------------------------------Actualizando FPEMPR99
--	Declare @lcAnoF99 CHAR(4)
--	SET @lcAnoF99=(SELECT e_mesA FROM Empresa)
--IF @mes > @lcAnoF99
--	UPDATE 	Empresa SET e_mesA=@mes
/****** Object:  StoredProcedure [dbo].[spp_AsientoApertura1]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_AsientoApertura1]
@lcYear	 CHAR( 4 ),
@aZona   CHAR( 6 ),
@bZona   CHAR( 6 ),
@aUnidad CHAR( 10 ),
@bUnidad CHAR( 10 ),
@idempresa int ,
@aviso varchar(max) output
AS

DECLARE @lcCorrel       INT,
        @lcNrodoc       CHAR(10),
        @lnItem         INT,
        @lnIdCabVoucher INT,
        @lcTipo         CHAR( 1 ),
		@lcAñoE	        CHAR( 4 ),
        @lcZona         CHAR( 6 ),
        @lcUnidad       CHAR( 10 ),
        @lcCodCta       CHAR( 12 ),
		@lnSaldo        NUMERIC( 15, 2 ),
		@lnDebe         NUMERIC( 15, 2 ),
		@lnHaber        NUMERIC( 15, 2 ),
        @lcUnidad1      CHAR( 10 ),
		@lcCodAnx       CHAR( 14 ),
		@codigoDocumentoReferencia Char(2), 
		@NroDocReferencia Char(14),
		@FechaDocReferencia datetime,
		@tipo_refcomprobmodi Char(2), 
		@serie_refcomprobmodi Char(4),
		@nro_refcomprobmodi Char(10) 

SET @lcAñoE  = CONVERT( CHAR( 4 ), CONVERT( INT, @lcYear ) - 1 )

--- PRIMERO ELIMINADOS TODOS LOS REGISTROS CON ESTADO='A' EN EL MOVCONTABLES_D
DELETE movcontables_d WHERE  IDMOVCONTABLES_C in(SELECT IDMOVCONTABLES_C FROM MOVCONTABLES_C c
																		inner join zona z on z.codzona=c.zona
																		WHERE c.anio = @lcYear AND c.codmgc = '00'
																	AND c.zona BETWEEN @aZona AND @bZona
																	AND c.codunidadeconomica BETWEEN rtrim(@aUnidad) AND rtrim(@bUnidad)
																	and z.idempresa=@idempresa
																	AND c.estado = '')
-- LO MISMO QUE EL PRIMERO PERO EN LA TABLA MOVCONTABLES_D
DELETE MOVCONTABLES_C WHERE idmovcontables_c in(SELECT IDMOVCONTABLES_C FROM MOVCONTABLES_C c
																		inner join zona z on z.codzona=c.zona
																		WHERE c.anio = @lcYear AND c.codmgc = '00'
																	AND c.zona BETWEEN @aZona AND @bZona
																	AND c.codunidadeconomica BETWEEN rtrim(@aUnidad) AND rtrim(@bUnidad)
																	and z.idempresa=@idempresa
																	AND c.estado = '')

------Borrando tabla temporal--------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpApertura]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpApertura
END

------Creando tabla temporal apertura----------
SELECT		   zona=c.zona,
			   codunidadeconomica=d.codunidadeconomica,
			   codigoDocumentoReferencia= d.codigoDocumentoReferencia,
			   NroDocReferencia = d.NroDocReferencia,
			   FechaDocReferencia = min(d.FechaDocReferencia),
			   cuenta = d.codcuenta,
			   codpro=d.codpro,
			   saldo  =  SUM( d.impdebe - d.imphaber  ),
				tipo_refcomprobmodi = max(d.tipo_refcomprobmodi), -- datos de la referenica a las Notas de Credito
				serie_refcomprobmodi = Max(d.serie_refcomprobmodi),
				nro_refcomprobmodi = Max(d.nro_refcomprobmodi)
		into tmpApertura FROM movcontables_d d 
		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_C
		inner join zona z on z.codzona=c.zona
		WHERE c.anio =@lcAñoE  and left(d.codcuenta,2) in 
			(SELECT	d.codcuenta
				FROM movcontables_d d 
				inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_C
				inner join zona z on z.codzona=c.zona
				WHERE 
				   c.anio =@lcAñoE and D.codmgc='19' and d.glosa='CIERRE CUENTAS DE BALANCE (00-59)'
				  AND c.zona BETWEEN @aZona AND @bZona
				  AND c.codunidadeconomica BETWEEN @aUnidad AND @bUnidad
				and c.estado!='4' and d.estado!='4' and d.codpro!='000001' and z.idempresa=@idempresa
				GROUP BY c.zona,d.codunidadeconomica,d.codcuenta,d.codpro,d.tipo_refcomprobmodi, d.serie_refcomprobmodi, d.nro_refcomprobmodi
				HAVING SUM( impdebe ) <> SUM( imphaber ) 
			)
	      and len(d.codcuenta)>2 
	      AND c.zona BETWEEN @aZona AND @bZona
		  AND c.codunidadeconomica BETWEEN @aUnidad AND @bUnidad
		and c.estado!='4' and d.estado!='4' and d.codpro!='000001' and z.idempresa=@idempresa
		GROUP BY c.zona,d.codunidadeconomica,d.codigoDocumentoReferencia,
			   d.NroDocReferencia, --d.FechaDocReferencia,
			   d.codcuenta,d.codpro,d.codpro --,d.tipo_refcomprobmodi, d.serie_refcomprobmodi, d.nro_refcomprobmodi
		HAVING SUM( impdebe ) <> SUM( imphaber ) 
		ORDER BY c.zona,d.codunidadeconomica,d.codcuenta
 
-- Creando el cursor
DECLARE ASIENTOAPERTURA CURSOR LOCAL STATIC READ_ONLY FORWARD_ONLY FOR
select * from (
--agrupando valores
select zona, codunidadeconomica, '00' codigoDocumentoReferencia, 'APER-001'+@lcYear NroDocReferencia,
			  convert(DATEtime,'02/01/'+@lcYear,103) FechaDocReferencia,cuenta, '' codpro,saldo = sum(saldo), '' tipo_refcomprobmodi, '' serie_refcomprobmodi, '' nro_refcomprobmodi 
from tmpApertura
where left(cuenta,2) not in ('12','14','37','38','41','42','45','46','48') --(select valor from parametros where idempresa=@idempresa and rtrim(clave) ='TransAperturaConDoc')
group by zona, codunidadeconomica, cuenta 
HAVING sum(saldo) <> 0.00

union all 
--sin agrupar valores
select zona, codunidadeconomica, codigoDocumentoReferencia, NroDocReferencia,
			   max(FechaDocReferencia) FechaDocReferencia,cuenta, codpro,saldo = sum(saldo), max(tipo_refcomprobmodi), max(serie_refcomprobmodi), max(nro_refcomprobmodi) 
from (
select zona, codunidadeconomica,
	(case when codigoDocumentoReferencia='07' then tipo_refcomprobmodi else codigoDocumentoReferencia end) codigoDocumentoReferencia,
	(case when codigoDocumentoReferencia='07' then serie_refcomprobmodi+'-'+nro_refcomprobmodi else NroDocReferencia end) NroDocReferencia,
	FechaDocReferencia,cuenta, codpro,saldo, tipo_refcomprobmodi, serie_refcomprobmodi, nro_refcomprobmodi 
from tmpApertura
where left(cuenta,2) in ('12','14','37','38','41','42','45','46','48') 
) documentos 
group by zona, codunidadeconomica, codigoDocumentoReferencia, NroDocReferencia,
			   --FechaDocReferencia,
			   cuenta, codpro--, tipo_refcomprobmodi, serie_refcomprobmodi, nro_refcomprobmodi
HAVING sum(saldo) <> 0.00
) lcapertura
order by zona, codunidadeconomica, cuenta,codigoDocumentoReferencia, NroDocReferencia,
			   FechaDocReferencia, codpro

OPEN ASIENTOAPERTURA

FETCH NEXT FROM ASIENTOAPERTURA INTO @lcZona,@lcUnidad,@codigoDocumentoReferencia, @NroDocReferencia,
			   @FechaDocReferencia,@lcCodCta,@lcCodAnx,@lnSaldo, @tipo_refcomprobmodi, @serie_refcomprobmodi, @nro_refcomprobmodi 
                              

SET @lnItem = 0
WHILE @@FETCH_STATUS = 0
      BEGIN
      SET @lcNrodoc  = '00' + RTRIM( RIGHT( @lcYear, 1 ) ) + '00' + '00001'-- tener en cuenta para el 2010
      SET @lcUnidad1 = @lcUnidad
INSERT movcontables_c ( anio,mes,zona,codunidadeconomica,nrodoc,fechco,codmgc,glosa,estado)
      VALUES       ( @lcYear,'00',@lcZona,@lcUnidad,@lcNroDoc,
                     GETDATE(), '00','APERTURA EJERCICIO AÑO '+@lcYear,'' )
	  SET @lnIdCabVoucher = @@IDENTITY

      WHILE @lcUnidad = @lcUnidad1 AND @@FETCH_STATUS = 0
            BEGIN
            SET @lnItem = @lnItem + 1
            SET @lcCorrel = '10000' + dbo.StrZero( @lnItem, 5 )     
            SET @lcTipo   = ( CASE WHEN @lnSaldo < 0 THEN 'D' ELSE 'H' END )
            SET @lnHaber  = ( CASE WHEN @lnSaldo < 0 THEN ABS( @lnSaldo ) ELSE 0.00 END )
            SET @lnDebe   = ( CASE WHEN @lnSaldo < 0 THEN 0.00 ELSE ABS( @lnSaldo ) END )
 INSERT MOVCONTABLES_D (IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,
			CodSubActividad,fechcontable,CodMGC,ClaseMovimiento,CtaDestino,CodigoDocumentoReferencia,
			NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
			FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,
			TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,
			codPro,u_codi,datUsu,Correlativo,estado,Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,reten,
			rigv,corrigv,CodAduana,FechDUA,CodDUA,ISC,tipoOper,NroDetrac,FechaDetrac,CodigoDetraccion,Fecha_RefComprobModi,
			Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,CuentaAbono,
			MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,montoISC,MontoDetraccionIvap,montocuentaauxiliar,montoIcbPer,MontoRetencionIGV,CuentaCCosto)

 VALUES (@lnIdCabVoucher,@lcUnidad,@lcNroDoc,'','','',
			'',GETDATE(),'00','','',@codigoDocumentoReferencia, @NroDocReferencia,
			   (case when @FechaDocReferencia = '01/01/1900' Then convert(DATEtime,'02/01/'+@lcYear,103)Else @FechaDocReferencia  End),convert(DATEtime,'02/01/'+@lcYear,103),'','',
			convert(DATEtime,'02/01/'+@lcYear,103),'','','','',@lcCodCta,'',
			@lcTipo,'APERTURA EJERCICIO AÑO : '+@lcYear,'',0,1,0,@lnDebe,@lnHaber,0.00,0.00,'','',
			ISNULL(@lcCodAnx,''),'','',@lcCorrel,'-','','',0,'','','','','',0,
			0,'','','','',0,0,'','','','',
			@tipo_refcomprobmodi, @serie_refcomprobmodi, @nro_refcomprobmodi,'',0.00,'',
			0.00,'','',0.00,'',0.00,0.00,0.0,0,0,'')
            FETCH NEXT FROM ASIENTOAPERTURA INTO @lcZona,@lcUnidad,@codigoDocumentoReferencia, @NroDocReferencia,
			   @FechaDocReferencia,@lcCodCta,@lcCodAnx,@lnSaldo, @tipo_refcomprobmodi, @serie_refcomprobmodi, @nro_refcomprobmodi 
            END
      END
CLOSE ASIENTOAPERTURA
DEALLOCATE ASIENTOAPERTURA
if @@rowcount>0
	begin
		set @aviso='Se aperturaron las cuentas '
	end
else
	begin
		set @aviso='Se aperturaron las cuentas '
	end
/****** Object:  StoredProcedure [dbo].[spp_AsientoCuentaCierre_Delete]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_AsientoCuentaCierre_Delete] 
@lcYear CHAR( 4 ),
@aZona CHAR( 6 ),
--@bZona CHAR( 6 ),
@aUnidad CHAR( 10 ),
--@bUnidad CHAR( 10 ),
@IdEmpresa int
as
--- PRIMERO ELIMINADOS TODOS LOS REGISTROS CON ESTADO='A' EN EL MOVCONTABLES_D
DELETE movcontables_d WHERE      estado = 'A' AND IDMOVCONTABLES_C in(SELECT IDMOVCONTABLES_C FROM MOVCONTABLES_C c
																	inner join zona z on z.codzona=c.zona
																		WHERE anio = @lcYear AND codmgc = '19'
																	AND c.zona BETWEEN @aZona AND @aZona
																	AND c.codunidadeconomica BETWEEN @aUnidad AND @aUnidad
																	and z.idempresa=@idempresa 
																	AND c.estado = 'A')
-- LO MISMO QUE EL PRIMERO PERO EN LA TABLA MOVCONTABLES_D
DELETE MOVCONTABLES_C 
WHERE idmovcontables_c in (SELECT IDMOVCONTABLES_C FROM MOVCONTABLES_C c
																	inner join zona z on z.codzona=c.zona
																		WHERE anio = @lcYear AND codmgc = '19'
																	AND c.zona BETWEEN @aZona AND @aZona
																	AND c.codunidadeconomica BETWEEN @aUnidad AND @aUnidad
																	and z.idempresa=@idempresa 
																	AND c.estado = 'A')
/****** Object:  StoredProcedure [dbo].[spp_asientosAjusteTC]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[spp_asientosAjusteTC]
@Periodo1 varchar(10),
@IdEmpresa int 

As
-- spp_asientosAjusteTC '31/03/2014', 36
-- declaramos variables de control de cuentas
declare @ctaGanancia as varchar(10), @ctaPerdida as varchar(10), @ctaCompra as varchar(10), @ctaVenta as varchar(10),
@zona as varchar(10), @UnidadEconomica as varchar(10), @mes as varchar(2), @anio as varchar(4)

--- buscando en parametros las cuentas automaticas del TC
set @ctaGanancia = (select valor from parametros where idempresa=@IdEmpresa and clave ='CtaGananciaDiferenciaCambio')
set @ctaPerdida  = (select valor from parametros where idempresa=@IdEmpresa and clave ='CtaPerdidaDiferenciaCambio')
set @ctaCompra   = (select valor from parametros where idempresa=@IdEmpresa and clave ='CtaCierreCompras')
set @ctaVenta    = (select valor from parametros where idempresa=@IdEmpresa and clave ='CtaCierreVentas')

set @zona        = (select codzona from unidad_economica where codzona in (
												select codzona from zona where idempresa= @IdEmpresa))
set @UnidadEconomica = (select codunidadEconomica from unidad_economica where codzona in (
												select codzona from zona where idempresa= @IdEmpresa))
set @mes         = Substring(@Periodo1,4,2)
set @anio        = right(@Periodo1,4)

-------------------------------------
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'tmpdocpendientes') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpdocpendientes
END
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'exportaventas') AND type in (N'U'))
BEGIN 
	DROP TABLE exportaventas
END
-------------------------------------
-- borrando registros anterios 
delete from movcontables_d where idmovContables_c in (
	select idmovContables_c from movcontables_c where codmgc='11' and glosa='AJUSTE POR DIFERENCIA DE TIPO DE CAMBIO*' and anio=@anio and mes = @mes)
--Delete from movcontables_c where codmgc='11' and glosa='AJUSTE POR DIFERENCIA DE TIPO DE CAMBIO*' and anio=@anio and mes = @mes

--obteniendo las fac pendientes
select '11' grupo, *,
		((imphaberdolar- impdebedolar)*tcventa+impdebe-imphaber) diftc 
into tmpDocpendientes
from (
		select codzona,codunidadEconomica unidad_economica,codpro,codigoDocumentoReferencia,NrodocReferencia, 
			DATEADD(dd,-(DAY(DATEADD(mm,1,min(fechadocreferencia)))),DATEADD(mm,1,min(fechadocreferencia))) fechadocreferencia,
			--min(fechadocreferencia) fechadocreferencia,
			min(codcuenta) codcuenta,moneda,sum(impdebe) impdebe,sum(imphaber) imphaber, 
			sum(impdebedolar) impdebedolar,sum(imphaberdolar) imphaberdolar,
			sum(imphaberdolar)- sum(impdebedolar) dif,tcCompra, tcVenta
		from (
			select codzona, d.codunidadEconomica,codpro,codigoDocumentoReferencia,NrodocReferencia, fechadocreferencia,codcuenta, 
					impdebe,imphaber, impdebedolar,imphaberdolar,moneda --, tipocambio 
			from movcontables_d d inner join (select codzona,codunidadEconomica from unidad_economica where codzona in (
												select codzona from zona where idempresa= @IdEmpresa)) c on c.codunidadeconomica=d.codunidadeconomica
			where estado<>'4' and left(codcuenta,2) in ('12','13','42','45','46')
--													   (select codcuentacontable from planCuentascontables where idempresa=36 and convermoneda not in ('','-')
--														)	
				and moneda <>'1'
				and tipoCambio<>0 and substring(nrodocumento,4,2) between '01' and @mes and substring(nrodocumento,3,1)=right(@anio,1)
			) todos left outer join 
			--obtenemos el tipo de cambio del ultimo dia del mes
			(	select idmoneda,tipoCambioCompra tcCompra, TipoCambioVenta tcVenta from tipocambio
				where estado<>'0' and fecha = convert(datetime,@Periodo1,103)
			) tc on moneda=idmoneda 
		group by codzona,CodunidadEconomica,codpro,codigoDocumentoReferencia,NrodocReferencia,moneda,tcCompra, tcVenta
) ajuste

--creamos estructura de migracion
select  grupo,CodZona zona, Unidad_Economica,
		right(@Periodo1,4) as año,
		Substring(@Periodo1,4,2) as mes,
		convert(datetime,@Periodo1,103) as fecha_registro,
		(case when left(codcuenta,2)='42' then 
--		(case when diftc<0 then @ctaPerdida else @ctaGanancia end) else (Case when diftc>0 then @ctaGanancia else codcuenta end) end) as cuenta_contable,
		(case when diftc<0 then codcuenta else @ctaGanancia end) else (Case when diftc>0 then @ctaGanancia else codcuenta end) end) as cuenta_contable,
		
--		(case when left(codcuenta,2)='42' then (case when diftc>0 then codcuenta else (case when left(@ctaGanancia,2)='67' then codcuenta else @ctaGanancia end) end)
--		 else (case when diftc<0 then @ctaPerdida else codcuenta end) end) as cuenta_abono,
		(case when left(codcuenta,2)='42' then (case when diftc>0 then codcuenta else 
							(case when left(@ctaGanancia,2)='67' then (case when left(@ctaPerdida,2)='77' then @ctaPerdida else codcuenta end) else @ctaGanancia end) end)
		 else (case when diftc<0 then @ctaPerdida else codcuenta end) end) as cuenta_abono,
		
		codpro proveedor, '' razon_social, '' direccion, codigoDocumentoReferencia tipo_documento,
		nroDocReferencia nro_documento, nroDocReferencia nro_documento2,fechaDocReferencia fecha_documento,
		'AJUSTE POR DIFERENCIA DE TIPO DE CAMBIO*' detalle_venta, '1' tipo_moneda, tcVenta tipo_cambio,
		'3' tipo_operacion, 
		(case when left(codcuenta,2)='42' then --left(@ctaPerdida,2)='77'
		(case when diftc>0 then diftc else (case when left(@ctaPerdida,2)='77' Then diftc*-1 else 0 end) end) else (case when diftc>0 then diftc else (Case When diftc<0 Then diftc*-1 else 0 end) end) end) importe_Debe, 
		(case when left(codcuenta,2)='42' then 
		(case when diftc>0 then 0 else (case when left(@ctaPerdida,2)='77' Then 0 else diftc*-1 end) end) else (case when diftc>0 then 0 else (Case When diftc<0 Then 0 else diftc*-1 end) end)  end) importe_Haber, 
		'0' afecto,0 monto_igv, '' isc, 0 monto_isc,
		'0' cancelado,0 percepcion,0 monto_percepcion, '01/01/1900' fechanc, '' tipo_docnc, '' nro_docnc,
		dense_rank() OVER(order by codigoDocumentoReferencia,NroDocReferencia ) voucher, 
		'CAB. AJUSTE POR DIFERENCIA DE TIPO DE CAMBIO*' GLOSA,'' ccosto		
into exportaventas
from tmpdocpendientes

--DROP TABLE tmpdocpendientes

----exec spp_MigrarComprasVentas1 '', '000012','000012','000012','000012',@mesA,@mesB,@Anio,44,@Tipo,@porDiaDoc
exec spp_MigrarComprasVentas1 '', @zona,@zona,@UnidadEconomica,@UnidadEconomica,@mes,@mes,@Anio,@IdEmpresa,'VENTAS','PORDIA'
/****** Object:  StoredProcedure [dbo].[spp_aux_Intervalos_Zona_Unidad]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_aux_Intervalos_Zona_Unidad]
@IDEmpresa int
as
select ZonaA=isnull(min(z.codzona),'-'),ZonaB=isnull(max(z.codzona),'-'),
       UnidadA=isnull(min(u.codunidadeconomica),'-'),UnidadB=isnull(max(u.codUnidadEconomica),'-')
from zona z
inner join unidad_economica u on u.codzona=z.codzona
where z.estado=1 and u.estado=1 and z.IdEmpresa=@IDEmpresa
/****** Object:  StoredProcedure [dbo].[spp_BorrarTemporales]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[spp_BorrarTemporales]

As

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaVentasCob0') AND type in (N'U'))
BEGIN 
	drop table tmpExportaVentasCob0 
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaVentasCob1') AND type in (N'U'))
BEGIN 
	drop table tmpExportaVentasCob1 
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaVentasCob2') AND type in (N'U'))
BEGIN 
	drop table tmpExportaVentasCob2 
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaVentasCob3') AND type in (N'U'))
BEGIN 
	drop table tmpExportaVentasCob3 
End 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpexportaVentas') AND type in (N'U'))
BEGIN 
	drop table tmpexportaVentas
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaventas1') AND type in (N'U'))
BEGIN 
	drop table tmpexportaVentas1
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpexporta1') AND type in (N'U'))
BEGIN 
	drop table tmpexporta1
END

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'exportaventas') AND type in (N'U'))
BEGIN 
	drop table exportaventas
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'exportaventas0') AND type in (N'U'))
BEGIN 
	drop table exportaventas0
END

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmp') AND type in (N'U'))
BEGIN 
	drop table tmp
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmp1') AND type in (N'U'))
BEGIN 
	drop table tmp1
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmp4') AND type in (N'U'))
BEGIN 
	drop table tmp4

END

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ExportaVentasCOB') AND type in (N'U'))
BEGIN 
	drop table ExportaVentasCOB
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ExportaVentasCOBA') AND type in (N'U'))
BEGIN 
	drop table ExportaVentasCOBA 
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ExportaVentasCOBB') AND type in (N'U'))
BEGIN 
	drop table ExportaVentasCOBB 
END

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ExportaVta1') AND type in (N'U'))
BEGIN 
	drop table ExportaVta1 
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'ExportaVta2') AND type in (N'U'))
BEGIN 
	drop table ExportaVta2 
END

/****** Object:  StoredProcedure [dbo].[spp_buscarDocumento]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_buscarDocumento]
@Datos as varchar(50)
--@tipo as char(3),
--@Documento as char(50)
-- exec spp_buscarDocumento @Datos='  3CAB0001486                                     '
as
declare @tipo as varchar(3), @Documento as varChar(47), @idempresa as varchar(3),
@minue as varchar(10), @maxue as varchar(10) 
declare @csql as varchar(4000)

set @idempresa = left(@Datos,3) 
set @tipo= substring(@Datos,4,3) 
Set @Documento = rtrim(substring(@Datos,7,47))

select @minue = min(codunidadeconomica),@maxue = max(codunidadeconomica) from unidad_economica 
			where codzona in (select codzona from zona 
			where idempresa in (select idempresa from empresa where idempresa=@idempresa ))


If @tipo='CAB'
Begin

set @csql=('select d.codigodocumentoreferencia, d.nrodocreferencia, d.fechadocreferencia, d.nrodocumento, d.codpro,max(d.estado) estado 
from movcontables_d d
where d.codunidadeconomica between '''+@minue+''' and '''+@maxue+''' and d.estado in (''-'',''D'') and d.idmovcontables_c is not null
and d.nrodocreferencia like ''%''+'''+rtrim(@Documento)+'''+''%'' 
group by d.codigodocumentoreferencia, d.nrodocreferencia, d.fechadocreferencia, d.nrodocumento,d.codpro --,estado
order by d.fechadocreferencia, d.nrodocumento,d.codpro --,estado
')

exec(@csql) 

End
if @tipo='DET'
Begin
--select * from [vBuscaDocumentodetalle](@minue,@maxue) where nrodocumento+nrodocreferencia = rtrim(@Documento)
--order by idmovcontable_d
print @minue 
print @maxue
print @documento


set @csql=('select d.codcuenta,d.centrocosto,d.impdebe, d.imphaber,d.impdebedolar, d.imphaberdolar,d.codanexo,d.codigodocumentoreferencia,
d.nrodocreferencia,d.codigodocumentofuente,d.nrodocumentofuente,d.idmovcontable_d,d.codpro,d.estado
 from movcontables_d d
where d.codunidadeconomica between '''+@minue+''' and '''+@maxue+'''
and rtrim(d.nrodocumento)+rtrim(d.nrodocreferencia) = rtrim('''+@Documento+''') 
 and d.estado in (''-'',''D'') and d.idmovcontables_c is not null
order by d.idmovcontable_d
')
exec(@csql) 

End
/****** Object:  StoredProcedure [dbo].[spp_buscarInconsisDocs]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_buscarInconsisDocs]
@Datos as char(60)
-- exec spp_buscarInconsisDocs @Datos='  5CABSRE201401120001486                                     '
-- exec spp_buscarInconsisDocs @Datos='  5CABNCU201401120001486                                     '
-- exec spp_buscarInconsisDocs @Datos='  5CABHUE201401120001486                                     '
-- exec spp_buscarInconsisDocs @Datos='  5CABDUP201401120001486                                     '
-- exec spp_buscarInconsisDocs @Datos='  5CABSRE20210112                                           '
-- exec spp_buscarInconsisDocs @Datos='  5DETSRE20210112000012    0410100013                       '
-- exec spp_buscarInconsisDocs @Datos='  5CABCL220210112                                           '
-- exec spp_buscarInconsisDocs @Datos='  5DETCL2202101122 O MAS VECES10003703971                   '
as
declare @idempresa as char(3), @tipo as char(3), @tipoIncon as char(3), @Documento as Char(43), @Anio as Char(4), @MesA as Char(2), @MesB as Char(2), @UEcono as Char(10)
declare @minue as varchar(10), @maxue as varchar(10), @zonaA as varchar(10), @zonaB as varchar(10)  

set @idempresa = left(@Datos,3) 
set @tipo= substring(@Datos,4,3) 
set @tipoIncon= substring(@Datos,7,3) 
set @Anio= substring(@Datos,10,4) 
set @MesA= substring(@Datos,14,2) 
set @MesB= substring(@Datos,16,2) 
Set @UEcono = substring(@Datos,18,10)
Set @Documento = substring(@Datos,28,33)

select @zonaA=min(codzona),@zonaB=max(codzona),@minue = min(codunidadeconomica),@maxue = max(codunidadeconomica) from unidad_economica 
			where codzona in (select codzona from zona 
			where idempresa in (select idempresa from empresa where idempresa=@idempresa ))


If @tipo='CAB'
Begin
	If @tipoIncon='SRE' -- Ctas Contables registradas Sin Nivel de Cuentas como Registro
	Begin
		-- 1 ok verificando cuentas contables inexistentes entre registro y plan contable
		select distinct codunidadEconomica,nrodocumento, codcuenta,  codcuentacontable,impdebe, imphaber,'','','','',''
		from movcontables_d d LEFT OUTER JOIN (Select codcuentacontable, nivelcuenta from PlanCuentasContables where idempresa= @idempresa and left(anio,4)=(case When rtrim(@anio)<'2020' then '2009' else rtrim(@anio) end) and estado<>'0') p 
			ON codcuenta=codcuentacontable
		where idmovcontables_c in ( select idmovcontables_c from movcontables_c where anio=@Anio and mes between @MesA and @MesB AND CodMGC<>'19' 
									and zona between @zonaA and @zonaB
									)
		and d.estado<>'4' and nivelcuenta<>'R' AND impdebe+imphaber<>0
		And d.codUnidadEconomica between @minue and @maxue
		union all
		-- duplicado de cuenta contable 
		Select '2 O MAS VECES',str(count(codcuentacontable)) veces,codcuentacontable,'CUENTA DUPLICADA EN EL PLAN', 0,0,'','','','',''
		from PlanCuentasContables 
		where idempresa= 5 and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and estado<>'0'
		group by codcuentacontable having count(*)>1
		
		union all
		---- cuenta contable inexistente
		Select codunidadEconomica,nrodocumento, isnull(codcuenta,'') codcuenta,  isnull(codcuentacontable,'CTA INEXIS') codcuentacontable,impdebe, imphaber,'','','','','' from (
		Select distinct p.codcuentacontable codcta2,codunidadEconomica,nrodocumento, codcuenta,  codcuentacontable,impdebe, imphaber 
		from movcontables_d d LEFT OUTER JOIN (Select codcuentacontable, nivelcuenta from PlanCuentasContables where idempresa= @idempresa and left(anio,4)=(case When rtrim(@anio)<'2020' then '2009' else rtrim(@anio) end) and estado<>'0') p 
			ON codcuenta=codcuentacontable
		Where d.codUnidadEconomica between @minue and @maxue
		and idmovcontables_c in ( select idmovcontables_c from movcontables_c where anio=@Anio and mes between @MesA and @MesB AND CodMGC<>'19' 
									and zona between @zonaA and @zonaB
									)
		and d.estado<>'4'
		) sinCta where codcta2 is null 

		ORDER BY codcuenta
		
		-- fin 1 ok
	End

	If @tipoIncon='NCU' -- Voucher's que no Cuadran (Cuentas huerfanas)
	Begin
		-- 2 ok uniendo con seleccionando cuentas huerfanas en voucher
		select codunidadEconomica,nrodocumento,max(codcuenta) codcuenta, sum(impdebe) debe, sum(imphaber) haber, sum(impdebedolar) debedolar, sum(imphaberdolar) haberdolar, count(nrodocumento) veces,'','',''
		from movcontables_d 
		where idmovcontables_c in ( select idmovcontables_c from movcontables_c where anio=@Anio and mes between @MesA and @MesB and codmgc<>'19'
									and zona between @zonaA and @zonaB
									)
		and estado<>'4'
		And codUnidadEconomica between @minue and @maxue
		group by codunidadEconomica,nrodocumento --, codcuenta 
		having sum(impdebe) <> sum(imphaber)
		order by CodunidadEconomica,nrodocumento
		--fin 2 ok
	End

	If @tipoIncon='HUE' -- Cancelaciones Automáticas sin provisiones (Cancelaciones huerfanas sin provisiones)
	Begin
		-- 3 ok buscamos cancelaciones huerfanas sin provision
		--uniendo las dos consultas la 20 y la 04
		-- ubicamos todos las cancelaciones automaticas (20)
		select *,'' from (
		select d.codunidadeconomica,d.nrodocumento,d.codpro,d.codigoDocumentoReferencia,d.NroDocReferencia,d.FechaDocReferencia,d.impDebe, d.ImpHaber, 
			isnull(prov.nrodocumento,'') provision, isnull(prov.impHaber,0.0) montoprov
		from movcontables_d d left outer join 
		-- seleccionamos las provisiones (04)
		(
			select nrodocumento,codpro,codigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,impDebe, ImpHaber
			from movcontables_d 
			where codmgc in ('04','18','05') and left(codcuenta,2) in ('42','12','41','40') and idmovcontables_c in 
					( select idmovcontables_c from movcontables_c where anio=@Anio and mes between @MesA and @MesB
						and zona between @zonaA and @zonaB
					) 
			And estado<>'4'
			And codUnidadEconomica between @minue and @maxue
		) prov 
		on d.codpro+d.codigoDocumentoReferencia+d.NroDocReferencia=prov.codpro+prov.codigoDocumentoReferencia+prov.NroDocReferencia
		where d.codmgc in ('20','02','11') and left(d.codcuenta,2) in ('42','12','41','40') and d.idmovcontables_c in 
				( select idmovcontables_c from movcontables_c 
				  where glosa in ('PAGO A PROVEEDORES*','CANCELACION EN EFECTIVO*','PAGO PLANILLA*','COSTEO DEL IGV*') and anio=@Anio and mes between @MesA and @MesB
					and zona between @zonaA and @zonaB
				)
		and d.estado<>'4'
		And d.codUnidadEconomica between @minue and @maxue
		) aaa
		where provision=''
		-- fin 3ok
	End

	If @tipoIncon='DUP' -- Varias cancelaciones de un mismo documento (dobles cancelaciones)
	Begin
		-- 4 ok buscamos dobles cancelaciones provisionadas
		--uniendo las dos consultas la 20 y la dobles
		-- ubicamos todos las cancelaciones automaticas (20)
		select d.codunidadeconomica,d.nrodocumento,d.codcuenta,d.codpro,d.codigoDocumentoReferencia,d.NroDocReferencia,d.FechaDocReferencia,d.impDebe, d.ImpHaber,d.codmgc,veces
		from movcontables_d d left outer join 
		(
			-- buscando pagos dobles
			select count(codmgc) veces, 
			d.codmgc,d.codunidadeconomica,d.codpro,d.codigoDocumentoReferencia,d.NroDocReferencia,d.FechaDocReferencia --,d.impDebe, d.ImpHaber
			from movcontables_d d 
			-- seleccionamos las cancelaciones y provisiones (02,20 y 11)
			where d.codmgc in ('20','02','11') and left(d.codcuenta,2) in ('42','12','41','40') and d.idmovcontables_c in 
					( select idmovcontables_c from movcontables_c 
					  where glosa in ('PAGO A PROVEEDORES*','CANCELACION EN EFECTIVO*','PAGO PLANILLA*','COSTEO DEL IGV*') and anio=@Anio and mes between @MesA and @MesB
						and zona between @zonaA and @zonaB
					)
			and d.estado<>'4'
			And d.codUnidadEconomica between @minue and @maxue
			group by d.codmgc,d.codunidadeconomica,d.codpro,d.codigoDocumentoReferencia,d.NroDocReferencia,d.FechaDocReferencia --,d.impDebe, d.ImpHaber
			having count(*)>1
		) dobles
		on d.codmgc+d.codpro+d.codigoDocumentoReferencia+d.NroDocReferencia=dobles.codmgc+dobles.codpro+dobles.codigoDocumentoReferencia+dobles.NroDocReferencia
		where d.codmgc in ('20','02','11') and left(d.codcuenta,2) in ('42','12','41','40') and d.idmovcontables_c in 
				( select idmovcontables_c from movcontables_c 
				  where glosa in ('PAGO A PROVEEDORES*','CANCELACION EN EFECTIVO*','PAGO PLANILLA*','COSTEO DEL IGV*') and anio=@Anio and mes between @MesA and @MesB
						and zona between @zonaA and @zonaB
				)
		and d.estado<>'4' and veces>1
		And d.codUnidadEconomica between @minue and @maxue
		order by 6,5,7,8
		-- fin 4ok
	End

	If @tipoIncon='CIN' -- cuenta contable inexistente
	Begin
		select codunidadEconomica,nrodocumento, codcuenta, isnull(codcuentacontable,'CTA INEXIS') codcuentacontable,impdebe, imphaber,'','','','','' from (
		select distinct codunidadEconomica,nrodocumento, codcuenta,  codcuentacontable,impdebe, imphaber
		from movcontables_d d LEFT OUTER JOIN (Select codcuentacontable from PlanCuentasContables where idempresa= @idempresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and estado<>'0') p 
			ON codcuenta=codcuentacontable
		where idmovcontables_c in ( select idmovcontables_c from movcontables_c where anio=@Anio and mes between @MesA and @MesB AND CodMGC<>'19' 
									and zona between @zonaA and @zonaB
									)
		and d.estado<>'4' 
		AND impdebe+imphaber<>0
		And d.codUnidadEconomica between @minue and @maxue
		) inexistente  where codcuentacontable is null
		-- fin 5ok
	End

	If @tipoIncon='CL2' -- duplicado de cuenta contable
	Begin		 
	
		select '2 O MAS VECES', ruc,rtrim(rtrim(razonsocial)+' '+rtrim(nombre)+' '+rtrim(apellido)) RazonSocial, direccion, 
		0,0,'','','','',''
		from tbl_msto_ClienteProveedor 
		where ruc in (
		select  ruc
		from tbl_msto_ClienteProveedor 
		group by ruc
		having count(*)>1
		) order by ruc

		-- fin 6ok		
	End
end 

if @tipo='DET'
Begin

print @tipo
print @idempresa
print @UEcono
print @Documento

	If @tipoIncon<>'CL2' -- para las otras consultas
	Begin		 
		select codcuenta,centrocosto,impdebe, imphaber,impdebedolar, imphaberdolar,codanexo,codigodocumentoreferencia,
		nrodocreferencia,codigodocumentofuente,nrodocumentofuente,idmovcontable_d,codpro,estado
		 from movcontables_d 
		where codunidadeconomica between @minue and @maxue and 
		--rtrim(nrodocumento)+rtrim(nrodocreferencia) = rtrim(@Documento) --+'%' 
		rtrim(codunidadeconomica)+rtrim(nrodocumento)= rtrim(@UEcono)+rtrim(@Documento)
		 and estado<>'4' and idmovcontables_c is not null
		order by idmovcontable_d
	End

	If @tipoIncon='CL2' -- solo para el maestro de clientes duplicado 
	Begin		 

		select ruc,razonsocial,nombre, apellido,direccion, telefono,'','',
		'','','',idclienteproveedor,ruc ruccodigo,estado
		from tbl_msto_ClienteProveedor
		where ruc = right(rtrim(@Documento),11)
	End
End
/****** Object:  StoredProcedure [dbo].[spp_cbo_AFDocumentoCompra]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_cbo_AFDocumentoCompra]
--gescmbDocumento.nombreSP=sp_cbo_AFDocumentoCompra
 AS

select Descripcion=rtrim(Descripcion),Codigo_Documento_Compra
from tbl_AFDocumento_Compra
where estado=1 
--UNION ALL
--SELECT Descripcion = '- Seleccione -',
--	   Codigo_Documento_Compra =  ' '
ORDER BY Codigo_Documento_Compra


/****** Object:  StoredProcedure [dbo].[spp_cbo_AFReadecuacion]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_cbo_AFReadecuacion]
--gescmbReadecuacion.nombreSP=spp_cbo_AFReadecuacion
 AS

select Descripcion=rtrim(Descripcion),idTipoReadecuacion
from tbl_AFTipoReadecuacion
where estado=1 
UNION ALL
SELECT Descripcion = '- Ninguno -',
	   idTipoReadecuacion =  '0'
ORDER BY Descripcion


/****** Object:  StoredProcedure [dbo].[spp_cbo_AFTipoBaja]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_cbo_AFTipoBaja]
--gescmbReadecuacion.nombreSP=spp_cbo_AFReadecuacion
 AS

select Descripcion=rtrim(Descripcion),idBaja
from tbl_AFBaja
where estado=1 
UNION ALL
SELECT Descripcion = '- Ninguno -',
	   idBaja =  '0'
ORDER BY Descripcion
/****** Object:  StoredProcedure [dbo].[spp_cbo_cuentaContable]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_cbo_cuentaContable]
@idempresa as varchar(4), @anio as varchar(4)

-- spp_cbo_cuentaContable '2','2020'
as
select descripcion,codcuentacontable from dbo.PlanCuentasContables
where left(codcuentacontable,3) in ('101','102','104','107') and nivelcuenta='R' 
and idempresa=@idempresa and left(anio,4)=(case When rtrim(@anio)<'2020' then '2009' else rtrim(@anio) end)
order by codcuentacontable
/****** Object:  StoredProcedure [dbo].[spp_cbo_TipoActMtto]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[spp_cbo_TipoActMtto]
@proceso as char(15)= null
--GescmbMoneda.nombreSP=spp_cbo_TipoActMtto
--exec spp_cbo_TipoActMtto 'ACTIVIDAD'
--exec spp_cbo_TipoActMtto 'MANTENIMIENTO'
--exec spp_cbo_TipoActMtto ' 1ACTI'
--exec spp_cbo_TipoActMtto ' 2SACTA'
--exec spp_cbo_TipoActMtto ' 2SAC2A.4.'

 AS
if @proceso is null
Begin
	select '-','- SELECCIONE -'

End
if rtrim(@proceso) ='ACTIVIDAD'
Begin
	select codigo+' '+descripcion,codigo
	from tbl_tipoActMtto
	where tipo='ACT' and Estado='1'
	ORDER BY Id

END
if rtrim(@proceso) ='MANTENIMIENTO'
Begin
	select codigo+' '+descripcion,codigo
	from tbl_tipoActMtto
	where tipo='MTTO' and Estado='1'
	ORDER BY codigo

End
if rtrim(@proceso) ='CCOSTO'
Begin
	select codigo+' '+descripcion,codigo
	from tbl_tipoActMtto
	where tipo='CC' and Estado='1'
	ORDER BY codigo

End
if rtrim(@proceso) ='SISELEC'
Begin
	select codigo+' '+descripcion,codigo
	from tbl_tipoActMtto
	where tipo='SE' and Estado='1'
	ORDER BY codigo

End
if rtrim(@proceso) ='AREAOPER'
Begin
	select LTRIM(STR(IDAREA))+' '+ Area Area,idArea
	from tbl_ActividadOper
	where Estado='1'
	Group by idArea,Area
	union all select '0 - NO APLICA -' ,0 
	ORDER BY idArea,Area

End
if right(rtrim(@proceso),4) ='ACTI'
Begin
	select rtrim(CodAct)+' '+rtrim(descripcion) descripcion,rtrim(CodAct) CodAct
	from tbl_ActividadOper
	where rtrim(IdArea)= ltrim(left(@proceso,2)) and tipoact ='ACT' and Estado='1'
	union all select '0 - NO APLICA -' ,'0' 
	ORDER BY CodAct

End
if substring(rtrim(@proceso),3,4) ='SACT'
Begin
	select descripcion,codact from (
	select id, rtrim(CodAct)+' '+rtrim(descripcion) descripcion,rtrim(CodAct) CodAct
	from tbl_ActividadOper
	where rtrim(IdArea)= ltrim(left(@proceso,2)) and tipoact=SUBSTRING(@proceso,3,4) and left(codact,1)=right(rtrim(@proceso),1) and Estado='1'
	union all select 0 id, '0.0 - NO APLICA -' descripcion,'0.0' codAct 
	) todos ORDER BY Id

End
if substring(rtrim(@proceso),3,4) ='SAC2'
Begin
	select descripcion,codact from (
	select id, rtrim(CodAct)+' '+rtrim(descripcion) descripcion,rtrim(CodAct) CodAct
	from tbl_ActividadOper
	where rtrim(IdArea)= ltrim(left(@proceso,2)) and tipoact=SUBSTRING(@proceso,3,4) and left(codact,4)=right(RTRIM(@proceso),4) 
	and Estado='1'
	union all 
	select 0 id ,'0.0.0 - NO APLICA -' descripcion,'0.0.0' codact
	) todos
	ORDER BY Id

End
if rtrim(@proceso) ='FFINAN'
Begin
	select codigo+' '+descripcion,codigo
	from tbl_tipoActMtto
	where tipo='FFINAN' and Estado='1'
	ORDER BY codigo

End

if rtrim(@proceso) ='SOLICITA'
Begin
	select rtrim(t.nombre)+' ('+rtrim(t.cargo) +')',t.idCodTrabajador
	from tbl_Ppto_Trabajador t inner join tbl_Ppto_GerenciaArea g on t.ActOper=g.idCodGerencia 
	where t.cargo like '%logis%' and t.Situacion='0'
		and g.DetalleGerenciaUnidad like '%logis%' and g.estado='1'

End
/****** Object:  StoredProcedure [dbo].[Spp_cboDocRefere]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[Spp_cboDocRefere]
@rucMonto as varchar(100)

as
-- Spp_cboDocRefere '01/1/202131/12/202210450449780  200.00'

declare @ruc as varchar(14),@monto as varchar(20), @fecha1 as varchar(10),@fecha2 as varchar(10)

set @fecha1= left(@rucmonto,10)
set @fecha2= substring(@rucmonto,11,10)

set @ruc = substring(@rucMonto,21,14)
set @monto =substring(@rucMonto,36,20)
print @fecha1
print @fecha2
print @ruc
print @monto

select LEFT(c.Documento, 4) + SUBSTRING(c.Documento, 5, 11)+' '+convert(char(10),Fecha_Pedido,103)+'--> '+rtrim(c.total) AS DocRefe,
c.Codigo_pedido AS codigo_pedido
from cealogis19..tbl_pedido AS c 
INNER JOIN cealogis19..tbl_Documento_venta AS dc ON c.Codigo_Documento_pedido = dc.Codigo_Documento_Venta
inner join cealogis19..tbl_clienteproveedor cp on c.codigo_proveedor = cp.codigo_cliente
where cp.ruc = @ruc  --and c.Total= @monto
	and c.fecha_pedido between convert(datetime,@fecha1,103) and convert(datetime,@fecha2,103) 
	and c.Aprobado='A'
union all select '--- NINGUNO ---', 0
ORDER BY 1 desc
/****** Object:  StoredProcedure [dbo].[spp_CierreCuenta0059]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_CierreCuenta0059]
@lcYear CHAR( 4 ),
@aZona CHAR( 6 ),
--@bZona CHAR( 6 ),
@aUnidad CHAR( 10 ),
--@bUnidad CHAR( 10 ),
@IdEmpresa int,
@aviso15 varchar(max) output

as
Declare @lcCorrel INT, @lcCodcta1 CHAR(12), @lcNrodoc CHAR(10), @lnItem INT, @lnIdCabVoucher INT, @lcTipo CHAR( 1 )
DECLARE @lcZona         CHAR( 6 ),
        @lcUnidad	CHAR( 10 ),
        @lcCodCta	CHAR( 12 ),
        @lnImpDeb	NUMERIC( 15, 2 ),
		@lnImpHab	NUMERIC( 15, 2 ),
		@lnSaldo	NUMERIC( 15, 2 ),
		@lnDebe 	NUMERIC( 15, 2 ),
		@lnHaber	NUMERIC( 15, 2 ),
        @lcUnidad1  CHAR( 10 )
	---------------Elimina tablas temporales tmpmovd
--	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpmovd]') AND type in (N'U'))
--	BEGIN 
--		DROP TABLE tmpmovd
--	END
--
--SELECT	d.* into tmpmovd
--		FROM movcontables_d d 
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_C
--		inner join zona z on z.codzona=c.zona
--		WHERE left(codcuenta,2) BETWEEN '00' AND '59'
--		  AND c.anio = @lcYear
--		  --AND c.zona BETWEEN @aZona AND @bZona 
--		  --AND c.codunidadeconomica BETWEEN @aUnidad AND @bUnidad 
--			and c.estado!='4' and d.estado!='4' and d.codpro!='000001'
--		  and z.idempresa=@IdEmpresa
--		ORDER BY d.codcuenta


DECLARE ASIENTOCIERRE CURSOR FOR
SELECT	--	   cuenta = d.codcuenta,
		       cuenta = left(d.codcuenta,2),	
		       debe   = SUM( d.impdebe ),
			   haber  = SUM( d.imphaber ),
			   saldo  = ABS( SUM( d.impdebe ) - SUM( d.imphaber ) )
		FROM movcontables_d d 
		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_C
		inner join zona z on z.codzona=c.zona
		WHERE left(codcuenta,2) BETWEEN '00' AND '59'
		  AND c.anio = @lcYear
		  --AND c.zona BETWEEN @aZona AND @bZona 
		  --AND c.codunidadeconomica BETWEEN @aUnidad AND @bUnidad 
			and c.estado!='4' and d.estado!='4' and d.codpro!='000001' and d.codcuenta<>'413'
		  and z.idempresa=@IdEmpresa
		GROUP BY d.codcuenta --, d.codunidadeconomica, d.codpro
		HAVING SUM( impdebe ) - SUM( imphaber ) <> 0
		ORDER BY d.codcuenta

OPEN ASIENTOCIERRE
FETCH NEXT FROM ASIENTOCIERRE INTO @lcCodCta,@lnImpDeb,@lnImpHab,@lnSaldo 
SET @lnItem = 0
WHILE @@FETCH_STATUS = 0
      BEGIN
      SET @lcNrodoc  = '19' + RTRIM( RIGHT( @lcYear, 1 ) ) + '13' + '00023'
      SET @lcUnidad1 = @lcCodCta

      INSERT movcontables_c ( anio,mes,zona,codunidadeconomica,nrodoc,fechco,codmgc,glosa,estado)
      VALUES       ( @lcYear,'13',@aZona,@aUnidad,@lcNroDoc,
                     convert(datetime,'31/12/'+@lcYear,103), '19','CIERRE CUENTAS DE BALANCE (00-59)','A' )
	  SET @lnIdCabVoucher = @@IDENTITY
      WHILE @lcCodCta = @lcUnidad1 AND @@FETCH_STATUS = 0
            BEGIN
            SET @lcCodcta1   = ( SELECT case when ctacierre='' then codcuentacontable else
								ctacierre end FROM PLAnCUENTASCONTABLES WHERE CODCUENTACONTABLE = @lcCodcta and idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@lcYear)<'2020' then '2009' else rtrim(@lcYear) end))
            SET @lnItem = @lnItem + 1
            SET @lcCorrel = '10000' + dbo.StrZero( @lnItem, 5 )     
            SET @lcTipo    = ( CASE WHEN @lnImpDeb < @lnImpHab THEN 'D' ELSE 'H' END )
            SET @lnDebe    = ( CASE WHEN @lnImpDeb < @lnImpHab THEN @lnSaldo ELSE 0.00 END )
            SET @lnHaber   = ( CASE WHEN @lnImpDeb < @lnImpHab THEN 0.00     ELSE @lnSaldo END )  

            INSERT MOVCONTABLES_D (IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,
			CodSubActividad,fechcontable,CodMGC,ClaseMovimiento,CtaDestino,CodigoDocumentoReferencia,
			NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
			FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,
			TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,
			codPro,u_codi,datUsu,Correlativo,estado,Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,reten,
			rigv,corrigv,CodAduana,FechDUA,CodDUA,ISC,tipoOper,NroDetrac,FechaDetrac,CodigoDetraccion,Fecha_RefComprobModi,
			Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,CuentaAbono,
			MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,montocuentaauxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

            VALUES (@lnIdCabVoucher,@aUnidad,@lcNroDoc,'','','',
			'',GETDATE(),'19','','','00',
			@lcNroDoc,convert(datetime,'31/12/'+@lcYear,103),convert(datetime,'31/12/'+@lcYear,103),'','',
			convert(datetime,'31/12/'+@lcYear,103),'','','','',@lcCodCta1,'',
			@lcTipo,'CIERRE CUENTAS DE BALANCE (00-59)','',0,0,0,@lnDebe,@lnHaber,0.00,0.00,'','',
			'','','',@lcCorrel,'A','','',0,'','','','','',0,
			0,'','','','',0,0,'','','','',
			'','','','',0.00,'',
			0.00,'','',0.00,'',0.00,0.00,0.00,0.00,0,'')
      
            FETCH NEXT FROM ASIENTOCIERRE INTO @lcCodCta,@lnImpDeb,@lnImpHab,@lnSaldo 
            END
      END
CLOSE ASIENTOCIERRE
DEALLOCATE ASIENTOCIERRE

if @@rowcount>0
	begin
		set @aviso15='Cuentas del Balance --> (se cerró)'
	end
else
	begin
		set @aviso15='Cuentas del Balance --> (ya fueron cerradas)'
	end
/****** Object:  StoredProcedure [dbo].[spp_CierreCuenta9]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_CierreCuenta9]
@lcYear CHAR( 4 ),
@aZona CHAR( 6 ),
@bZona CHAR( 6 ),
@aUnidad CHAR( 10 ),
@bUnidad CHAR( 10 ),
@IdEmpresa int,
@aviso1 varchar(max) output
AS

Declare @lcCorrel INT, @lcCodcta1 CHAR(12), @lcNrodoc CHAR(10), @lnItem INT, @lnIdCabVoucher INT, @lcTipoD CHAR( 1 ),@lcTipoH CHAR( 1 )
DECLARE @lcZona         CHAR( 6 ),
        @lcUnidad	CHAR( 10 ),
        @lcCodCta	CHAR( 12 ),
        @lnImpDeb	NUMERIC( 15, 2 ),
	@lnImpHab	NUMERIC( 15, 2 ),
	@lnSaldo	NUMERIC( 15, 2 ),
	@lnDebe 	NUMERIC( 15, 2 ),
	@lnHaber	NUMERIC( 15, 2 ),
        @lcUnidad1      CHAR( 10 ) 

if not exists(select * from movcontables_c c inner join movcontables_d d on c.idmovcontables_c=d.idmovcontables_c
									where c.codmgc='19'  AND c.zona BETWEEN @aZona AND @bZona
									AND c.codunidadeconomica BETWEEN @aUnidad AND @bUnidad 
									and d.codcuenta='791'
									and codigodocumentoreferencia in ('00','21') and c.anio=@lcYear )
begin
--- PRIMERO ELIMINADOS TODOS LOS REGISTROS CON ESTADO='A' EN EL MOVCONTABLES_D
DELETE movcontables_d WHERE      estado = 'A' AND IDMOVCONTABLES_C=(SELECT IDMOVCONTABLES_C FROM MOVCONTABLES_C
																		WHERE anio = @lcYear AND codmgc = '19'
																	AND zona BETWEEN @aZona AND @bZona
																	AND codunidadeconomica BETWEEN @aUnidad AND @bUnidad
																	AND estado = 'A')
-- LO MISMO QUE EL PRIMERO PERO EN LA TABLA MOVCONTABLES_D
DELETE MOVCONTABLES_C WHERE anio = @lcYear AND codmgc = '19'
                                 AND zona BETWEEN @aZona AND @bZona
                                 AND codunidadeconomica BETWEEN @aUnidad AND @bUnidad
                                 AND estado = 'A'


DECLARE ASIENTOCIERRE CURSOR FOR
SELECT		   cuenta = left(d.codcuenta,2),
			   debe   = SUM( d.impdebe ),
			   haber  = SUM( d.imphaber ),
			   saldo  = ABS( SUM( d.impdebe ) - SUM( d.imphaber ) )
		FROM movcontables_d d 
		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_C
		inner join zona z on z.codzona=c.zona
		WHERE left(codcuenta,1)IN( '9')
		  AND c.anio = @lcYear
		  AND c.zona BETWEEN @aZona AND @bZona 
		  AND c.codunidadeconomica BETWEEN @aUnidad AND @bUnidad and c.estado!='4' and d.estado!='4' and d.codpro!='000001'
		GROUP BY d.codcuenta
		HAVING SUM( impdebe ) - SUM( imphaber ) <> 0
		ORDER BY  d.codcuenta

OPEN ASIENTOCIERRE
FETCH NEXT FROM ASIENTOCIERRE INTO @lcCodCta,@lnImpDeb,@lnImpHab,@lnSaldo 

SET @lnItem = 0
WHILE @@FETCH_STATUS = 0
      BEGIN
      SET @lcNrodoc  = '19' + RTRIM( RIGHT( @lcYear, 1 ) ) + '13' + '00001'
      SET @lcUnidad1 = @lcCodCta

      INSERT movcontables_c ( anio,mes,zona,codunidadeconomica,nrodoc,fechco,codmgc,glosa,estado)
      VALUES       ( @lcYear,'13',@lcZona,@lcUnidad,@lcNroDoc,
                     GETDATE(), '19','CIERRE CUENTAS CLASE 9','A' )
	  SET @lnIdCabVoucher = @@IDENTITY
WHILE @lcCodCta = @lcUnidad1  AND @@FETCH_STATUS = 0
            BEGIN
            SET @lcCodcta1   = ( SELECT distinct case when ctacierre='' then codcuentacontable else
								ctacierre end FROM PLAnCUENTASCONTABLES 
WHERE idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@lcYear)<'2020' then '2009' else rtrim(@lcYear) end) and left(CODCUENTACONTABLE,3) in (select left(codcuenta,3) from movcontables_d where left(codcuenta,2)=@lcCodCta group by left(codcuenta,3))
and idempresa=1 and ctacierre!='' )
            SET @lnItem = @lnItem + 1
            SET @lcCorrel = '10000' + dbo.StrZero( @lnItem, 5 )     
            SET @lcTipoD   = ( CASE WHEN @lnImpDeb < @lnImpHab THEN 'D' ELSE 'H' END )
            SET @lcTipoH   = ( CASE WHEN @lnImpDeb < @lnImpHab THEN 'H' ELSE 'D' END )
            SET @lnDebe    = ( CASE WHEN @lnImpDeb < @lnImpHab THEN @lnSaldo ELSE 0.00 END )
            SET @lnHaber   = ( CASE WHEN @lnImpDeb < @lnImpHab THEN 0.00     ELSE @lnSaldo END )

INSERT MOVCONTABLES_D (IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,
			CodSubActividad,fechcontable,CodMGC,ClaseMovimiento,CtaDestino,CodigoDocumentoReferencia,
			NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
			FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,
			TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,
			codPro,u_codi,datUsu,Correlativo,estado,Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,reten,
			rigv,corrigv,CodAduana,FechDUA,CodDUA,ISC,tipoOper,NroDetrac,FechaDetrac,CodigoDetraccion,Fecha_RefComprobModi,
			Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,CuentaAbono,
			MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,montocuentaauxiliar,MontoIcbPer,MontoRetencionIGV,cuentaCCosto)
 VALUES (@lnIdCabVoucher,@lcUnidad,@lcNroDoc,'','','',
			'',GETDATE(),'19','','','00',
			@lcNroDoc,GETDATE(),GETDATE(),'','',
			GETDATE(),'','','','',@lcCodCta1,'',
			@lcTipoD,'CIERRE CUENTAS CLASE 9','',0,0,0,@lnDebe,@lnHaber,0.00,0.00,'','',
			'','','',@lcCorrel,'A','','',0,'','','','','',0,
			0,'','','','',0,0,'','','','',
			'','','','',0.00,'',
			0.00,'','',0.00,'',0.00,0.00,0.00,0.00,0,'')

			SET @lnItem = @lnItem + 1
            SET @lcCorrel = '10000' + dbo.StrZero( @lnItem, 5 )

            INSERT MOVCONTABLES_D (IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,
			CodSubActividad,fechcontable,CodMGC,ClaseMovimiento,CtaDestino,CodigoDocumentoReferencia,
			NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
			FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,
			TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,
			codPro,u_codi,datUsu,Correlativo,estado,Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,reten,
			rigv,corrigv,CodAduana,FechDUA,CodDUA,ISC,tipoOper,NroDetrac,FechaDetrac,CodigoDetraccion,Fecha_RefComprobModi,
			Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,CuentaAbono,
			MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,montocuentaauxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)
 VALUES (@lnIdCabVoucher,@lcUnidad,@lcNroDoc,'','','',
			'',GETDATE(),'19','','','00',
			@lcNroDoc,GETDATE(),GETDATE(),'','',
			GETDATE(),'','','','',@lcCodCta1,'',
			@lcTipoH,'CIERRE CUENTAS CLASE 9','',0,0,0,@lnHaber,@lnDebe,0.00,0.00,'','',
			'','','',@lcCorrel,'A','','',0,'','','','','',0,
			0,'','','','',0,0,'','','','',
			'','','','',0.00,'',
			0.00,'','',0.00,'',0.00,0.00,0.00,0.00,0,'')

            FETCH NEXT FROM ASIENTOCIERRE INTO @lcCodCta,@lnImpDeb,@lnImpHab,@lnSaldo 
            END
      END
CLOSE ASIENTOCIERRE
DEALLOCATE ASIENTOCIERRE

end
if @@rowcount>0
	begin
		set @aviso1='Cuentas Clase 9 --> (se cerró)'
	end
else
	begin
		set @aviso1='Cuentas Clase 9 --> (ya fueron cerradas)'
	end
/****** Object:  StoredProcedure [dbo].[spp_CierreCuentasContables]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_CierreCuentasContables]
@lcYear CHAR( 4 ),
@aZona CHAR( 6 ),
--@bZona CHAR( 6 ),
@aUnidad CHAR( 10 ),
--@bUnidad CHAR( 10 ),
@IdEmpresa int,
@cuenta char(2),
@Indice char(5),
@aviso varchar(max) output
as
-- [spp_CierreCuentasContables] '2017','000004','000004',3,'87','0',''
Declare @lcCorrel INT, @lcCodcta1 CHAR(12), @lcNrodoc CHAR(10), @lnItem INT, @lnIdCabVoucher INT, @lcTipoD CHAR( 1 ),@lcTipoH CHAR( 1 )
DECLARE @lcZona         CHAR( 6 ),
        @lcUnidad	CHAR( 10 ),
        @lcCodCta	CHAR( 12 ),
        @lnImpDeb	NUMERIC( 15, 2 ),
		@lnImpHab	NUMERIC( 15, 2 ),
		@lnSaldo	NUMERIC( 15, 2 ),
		@lnDebe 	NUMERIC( 15, 2 ),
		@lnHaber	NUMERIC( 15, 2 ),
		@lnDebeRUtil 	NUMERIC( 15, 2 ),
		@lnHaberRUtil	NUMERIC( 15, 2 ),
        @lcUnidad1      CHAR( 10 ) 

		declare @lnperdida NUMERIC( 15, 2 )
		declare @lnReparto as NUMERIC( 15, 2 )
		declare @lnIncReparo as NUMERIC( 15, 2 ),@UIT as numeric(18,2), @PorRenta as numeric(10,6),@PorParticipaUtil as numeric(10,6)
		declare @VerificaIncReparo as char(6), @regimen as char(10), @lcCta87 as char(2)

		set @lnReparto = 0.0
		set @lnIncReparo = 0.0
		set @lnDebeRUtil = 0.0
		set @lnHaberRUtil = 0.0

		Select @VerificaIncReparo =valor from parametros where Clave='IncReparo' and idempresa= @idempresa and Estado =1
		Select @UIT =valor from parametros where Clave='UIT' and idempresa= @idempresa and Estado =1
		Select @Regimen= regimen, @PorRenta= convert(numeric(10,6),porrenta)/100,@PorParticipaUtil=convert(numeric(10,6),PorParticipaTrab)/100 from empresa where idempresa=@IdEmpresa
		-- buscando si tiene cta 87 como asiento
		select @lcCta87= isnull(left(codcuenta,2),'') from movcontables_d 
		where codunidadeconomica=@aUnidad and left(codcuenta,2)='87' and left(nrodocumento,3)='11'+right(@lcYear,1) and estado in ('-','D') and (impdebe+impdebe)>0
		group by left(codcuenta,2) 

	if @cuenta='85' --or @cuenta='89'
	begin
--		set @lnReparto =(select imphaber from movcontables_d D
--			INNER JOIN MOVCONTABLES_c C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
--			INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
--			WHERE C.MES='13' AND CODCUENTA='87' AND C.ANIO=@lcYear AND C.ESTADO!='4' AND D.ESTADO!='4'
--			AND Z.IDEMPRESA=@IdEmpresa AND CODPRO!='000001' and d.codmgc='19')
		
		if @VerificaIncReparo = 'True'
			Begin
			set @lnIncReparo = (SELECT ISNULL(SUM(impDebe), 0.00) AS importe
							FROM dbo.tmpReparo AS d INNER JOIN
								dbo.PlanCuentasContables AS p ON p.CodCuentaContable = d.CodCuenta INNER JOIN
								dbo.Empresa AS e ON e.IdEmpresa = p.IdEmpresa
							WHERE     (p.IdEmpresa =@idempresa) and left(p.anio,4)=(case When rtrim(@lcYear)<'2020' then '2009' else rtrim(@lcYear) end)
							GROUP BY p.IdEmpresa)
			End
	end
--if @cuenta='89'
--	begin
--		set @lnReparto =(select imphaber from movcontables_d D
--			INNER JOIN MOVCONTABLES_c C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
--			INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
--			WHERE C.MES='13' AND CODCUENTA='87' AND C.ANIO=@lcYear AND C.ESTADO!='4' AND D.ESTADO!='4'
--			AND Z.IDEMPRESA=@IdEmpresa AND CODPRO!='000001' and d.codmgc='19')
--		
----		if @VerificaIncReparo = 'True'
----			Begin
----			set @lnIncReparo = (SELECT ISNULL(SUM(impDebe), 0.00) AS importe
----							FROM dbo.tmpReparo AS d INNER JOIN
----								dbo.PlanCuentasContables AS p ON p.CodCuentaContable = d.CodCuenta INNER JOIN
----								dbo.Empresa AS e ON e.IdEmpresa = p.IdEmpresa
----							WHERE     (p.IdEmpresa =@idempresa)
----							GROUP BY p.IdEmpresa)
----			End
--	end

DECLARE ASIENTOCIERRE CURSOR FOR
SELECT		   cuenta = left(d.codcuenta,2),
			   debe   = (SUM( d.impdebe )+(case when @cuenta='89' then @lnReparto*-1 else @lnReparto end) - @lnIncReparo)/(Case when @cuenta='87' and @lcCta87='87' then 2 else 1 end),
			   haber  = (SUM( d.imphaber )+(case when @cuenta='89' then @lnReparto*-1 else @lnReparto end) - @lnIncReparo)/(Case when @cuenta='87' and @lcCta87='87' then 2 else 1 end),
			   saldo  = (ABS( SUM( d.impdebe ) - SUM( d.imphaber ) +(case when @cuenta='89' then @lnReparto*-1 else @lnReparto end)- @lnIncReparo))/(Case when @cuenta='87' and @lcCta87='87' then 2 else 1 end)
		FROM movcontables_d d 
		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_C
		inner join zona z on z.codzona=c.zona
		WHERE left(codcuenta,2)IN (@cuenta) 
		  AND c.anio = @lcYear
		  and z.idempresa=@IdEmpresa
		  and c.estado!='4' and d.estado!='4' and d.codpro!='000001'
		GROUP BY left(d.codcuenta,2)
		HAVING SUM( impdebe ) - SUM( imphaber ) <> 0
		ORDER BY left(d.codcuenta,2)

OPEN ASIENTOCIERRE
FETCH NEXT FROM ASIENTOCIERRE INTO @lcCodCta,@lnImpDeb,@lnImpHab,@lnSaldo 
SET @lnItem = 0
WHILE @@FETCH_STATUS = 0
	BEGIN
      SET @lcNrodoc  = '19' + RTRIM( RIGHT(@lcYear, 1 ) ) + '13' + replicate('0',5-len(convert(varchar(5),ltrim(rtrim(@Indice))))+convert(varchar(5),rtrim(ltrim(@Indice))) )
      SET @lcUnidad1 = @lcCodCta

      INSERT movcontables_c ( anio,mes,zona,codunidadeconomica,nrodoc,fechco,codmgc,glosa,estado)
      VALUES       ( @lcYear,'13',@aZona,@aUnidad,@lcNroDoc,
                     convert(DATEtime,'31/12/'+@lcYear,103), '19','CIERRE CUENTAS CLASE '+@cuenta ,'A')  
	  SET @lnIdCabVoucher = @@IDENTITY

      WHILE @lcCodCta = @lcUnidad1 AND @@FETCH_STATUS = 0
		BEGIN
            SET @lcCodcta1   = ( SELECT distinct case when ctacierre='' then codcuentacontable else
								ctacierre end FROM PLAnCUENTASCONTABLES 
								WHERE idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@lcYear)<'2020' then '2009' else rtrim(@lcYear) end) and left(CODCUENTACONTABLE,3) in (select left(codcuenta,3) from movcontables_d 
																	where left(codcuenta,2)=@lcCodCta group by left(codcuenta,3))
								and ctacierre!='' )
            SET @lnItem = @lnItem + 1
            SET @lcCorrel = '10000' + dbo.StrZero( @lnItem, 5 )     
            SET @lcTipoD   = ( CASE WHEN @lnImpDeb < @lnImpHab THEN 'D' ELSE 'H' END )
            SET @lcTipoH   = ( CASE WHEN @lnImpDeb < @lnImpHab THEN 'H' ELSE 'D' END )
            SET @lnDebe    = ( CASE WHEN @lnImpDeb < @lnImpHab THEN @lnSaldo ELSE 0.00 END )
            SET @lnHaber   = ( CASE WHEN @lnImpDeb < @lnImpHab THEN 0.00     ELSE @lnSaldo END )			

            INSERT MOVCONTABLES_D (IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,
				CodSubActividad,fechcontable,CodMGC,ClaseMovimiento,CtaDestino,CodigoDocumentoReferencia,
				NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
				FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,
				TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,
				codPro,u_codi,datUsu,Correlativo,estado,Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,reten,
				rigv,corrigv,CodAduana,FechDUA,CodDUA,ISC,tipoOper,NroDetrac,FechaDetrac,CodigoDetraccion,Fecha_RefComprobModi,
				Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,CuentaAbono,
				MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIVAP,montocuentaauxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)
			 VALUES (@lnIdCabVoucher,@aUnidad,@lcNroDoc,'','','',
				'',getdate(),'19','','','00',
				@lcNroDoc,convert(DATEtime,'31/12/'+@lcYear,103),convert(DATEtime,'02/01/'+@lcYear,103),'','',
				convert(DATEtime,'31/12/'+@lcYear,103),'','','','',@lcCodCta,'',
				@lcTipoD,'CIERRE CUENTAS CLASE '+@cuenta,'',0,1,0,@lnDebe,@lnHaber,0.00,0.00,'','',
				'','','',@lcCorrel,'A','','',0,'','','','','',0,
				0,'','','','',0,0,'','','','',
				'','','','',0.00,'',
				0.00,'','',0.00,'',0.00,0.00,0.0,0.0,0.0,'')


			SET @lnItem = @lnItem + 1
            SET @lcCorrel = '10000' + dbo.StrZero( @lnItem, 5 )

            INSERT MOVCONTABLES_D (IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,
				CodSubActividad,fechcontable,CodMGC,ClaseMovimiento,CtaDestino,CodigoDocumentoReferencia,
				NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
				FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,
				TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,
				codPro,u_codi,datUsu,Correlativo,estado,Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,reten,
				rigv,corrigv,CodAduana,FechDUA,CodDUA,ISC,tipoOper,NroDetrac,FechaDetrac,CodigoDetraccion,Fecha_RefComprobModi,
				Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,CuentaAbono,
				MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,montoISC,MontoDetraccionIvap,montocuentaauxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)
			VALUES (@lnIdCabVoucher,@aUnidad,@lcNroDoc,'','','',
				'',GETDATE(),'19','','','00',
				@lcNroDoc,convert(DATEtime,'31/12/'+@lcYear,103),convert(DATEtime,'31/12/'+@lcYear,103),'','',
				convert(DATEtime,'31/12/'+@lcYear,103),'','','','',@lcCodCta1,'',
				@lcTipoH,'CIERRE CUENTAS CLASE '+@cuenta,'',0,1,0,@lnHaber,@lnDebe,0.00,0.00,'','',
				'','','',@lcCorrel,'A','','',0,'','','','','',0,
				0,'','','','',0,0,'','','','',
				'','','','',0.00,'',
				0.00,'','',0.00,'',0.00,0.00,0.0,0.0,0.0,'')

			if isnull(@lcCta87,'')=''
			begin
				if @cuenta='85'
				begin
					-- si tiene perdida no calcula la renta 

					set @lnperdida =(select imphaber from movcontables_d D
						INNER JOIN MOVCONTABLES_c C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
						INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
						WHERE C.MES='13' AND CODCUENTA=@cuenta AND C.ANIO=@lcYear AND C.ESTADO!='4' AND D.ESTADO!='4'
						AND Z.IDEMPRESA=@IdEmpresa AND CODPRO!='000001' and d.codmgc='19')

---------------- calculando el reparto de utilidad si la empresa tiene monto del porcentaje
					if @PorParticipaUtil>0.0
					begin 
						SELECT @lnDebeRUtil=(case when IMPdebe>0 then (case when @Regimen='MYPE TRI' then 
						--(case When ImpDebe*@PorRenta > @UIT*15 Then (@UIT*15*.10)+(IMPdebe-@UIT*15)*@PorRenta Else ImpDebe*@PorRenta End) else (ImpDebe-@lnDebeRUtil)*@PorRenta end) else 0 end),--@lnDebeRUtil,
									(@UIT*15*.10)+(IMPdebe-@UIT*15)*@PorParticipaUtil else ImpDebe*@PorParticipaUtil end) else 0 end),
							   @lnHaberRUtil=(case when IMPHABER>0 then (case when @Regimen='MYPE TRI' then 
									(@UIT*15*.10)+(IMPHABER-@UIT*15)*@PorParticipaUtil else ImpHaber*@PorParticipaUtil end) else 0 end) 
						--(case When ImpHaber*@PorRenta > @UIT*15 Then (@UIT*15*.10)+(IMPHaber-@UIT*15)*@PorRenta Else ImpHaber*@PorRenta End) else (ImpHaber-@lnHaberRUtil)*@PorRenta end) else 0 end)--@lnHaberRUtil 
						FROM MOVCONTABLES_D D
						INNER JOIN MOVCONTABLES_c C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
						INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
						WHERE C.MES='13' AND CODCUENTA=@lcCodCta1 AND C.ANIO=@lcYear AND C.ESTADO!='4' AND D.ESTADO!='4'
						AND Z.IDEMPRESA=@IdEmpresa AND CODPRO!='000001' and d.codmgc='19'
						
						INSERT MOVCONTABLES_D (IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,
							CodSubActividad,fechcontable,CodMGC,ClaseMovimiento,CtaDestino,CodigoDocumentoReferencia,
							NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
							FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,
							TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,
							codPro,u_codi,datUsu,Correlativo,estado,Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,reten,
							rigv,corrigv,CodAduana,FechDUA,CodDUA,ISC,tipoOper,NroDetrac,FechaDetrac,CodigoDetraccion,Fecha_RefComprobModi,
							Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,CuentaAbono,
							MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIVAP,montocuentaauxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)
						VALUES (@lnIdCabVoucher,@aUnidad,@lcNroDoc,'','','',
							'',GETDATE(),'19','','','00',
							@lcNroDoc,convert(DATEtime,'31/12/'+@lcYear,103),convert(DATEtime,'31/12/'+@lcYear,103),'','',
							convert(DATEtime,'31/12/'+@lcYear,103),'','','','','871','',
							@lcTipoH,'CIERRE CUENTAS CLASEhp '+@cuenta,'',0,1,0,@lnHaberRUtil,@lnDebeRUtil,0.00,0.00,'','',
							'','','',@lcCorrel,'A','','',0,'','','','','',0,
							0,'','','','',0,0,'','','','',
							'','','','',0.00,'',
							0.00,'','',0.00,'',0.00,0.00,0.0,0.0,0.0,'')
						--insertnamos la 891 con monto invertido con respecto a la cuenta 85
						INSERT MOVCONTABLES_D (IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,
							CodSubActividad,fechcontable,CodMGC,ClaseMovimiento,CtaDestino,CodigoDocumentoReferencia,
							NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
							FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,
							TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,
							codPro,u_codi,datUsu,Correlativo,estado,Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,reten,
							rigv,corrigv,CodAduana,FechDUA,CodDUA,ISC,tipoOper,NroDetrac,FechaDetrac,CodigoDetraccion,Fecha_RefComprobModi,
							Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,CuentaAbono,
							MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIVAP,montocuentaauxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)
						VALUES (@lnIdCabVoucher,@aUnidad,@lcNroDoc,'','','',
							'',GETDATE(),'19','','','00',
							@lcNroDoc,convert(DATEtime,'31/12/'+@lcYear,103),convert(DATEtime,'31/12/'+@lcYear,103),'','',
							convert(DATEtime,'31/12/'+@lcYear,103),'','','','','413','',
							@lcTipoH,'CIERRE CUENTAS CLASEhp '+@cuenta,'',0,1,0,@lnDebeRUtil,@lnHaberRUtil,0.00,0.00,'','',
							'','','',@lcCorrel,'A','','',0,'','','','','',0,
							0,'','','','',0,0,'','','','',
							'','','','',0.00,'',
							0.00,'','',0.00,'',0.00,0.00,0.0,0.0,0.0,'')
					End

----------------
-----------------calculando la el impuesto total
					if @lnperdida<=0.0
					begin 
						SELECT @lnDebe=(case when IMPdebe>0 then (case when @Regimen='MYPE TRI' then
									(case When ImpDebe > @UIT*15 Then (@UIT*15*.10)+(IMPdebe-@UIT*15)*@PorRenta Else ImpDebe*0.10 End) else (ImpDebe-@lnDebeRUtil)*@PorRenta end) else 0 end),--@lnDebeRUtil,
							   @lnHaber=(case when IMPHABER>0 then (case when @Regimen='MYPE TRI' then 
									(case When ImpHaber > @UIT*15 Then (@UIT*15*.10)+(ImpHaber-@UIT*15)*@PorRenta Else ImpHaber*0.10 End) else (ImpHaber-@lnHaberRUtil)*@PorRenta end) else 0 end)--@lnHaberRUtil 
						FROM MOVCONTABLES_D D
						INNER JOIN MOVCONTABLES_c C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
						INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
						WHERE C.MES='13' AND CODCUENTA=@lcCodCta1 AND C.ANIO=@lcYear AND C.ESTADO!='4' AND D.ESTADO!='4'
						AND Z.IDEMPRESA=@IdEmpresa AND CODPRO!='000001' and d.codmgc='19'
						
						INSERT MOVCONTABLES_D (IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,
							CodSubActividad,fechcontable,CodMGC,ClaseMovimiento,CtaDestino,CodigoDocumentoReferencia,
							NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
							FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,
							TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,
							codPro,u_codi,datUsu,Correlativo,estado,Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,reten,
							rigv,corrigv,CodAduana,FechDUA,CodDUA,ISC,tipoOper,NroDetrac,FechaDetrac,CodigoDetraccion,Fecha_RefComprobModi,
							Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,CuentaAbono,
							MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIVAP,montocuentaauxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)
						VALUES (@lnIdCabVoucher,@aUnidad,@lcNroDoc,'','','',
							'',GETDATE(),'19','','','00',
							@lcNroDoc,convert(DATEtime,'31/12/'+@lcYear,103),convert(DATEtime,'31/12/'+@lcYear,103),'','',
							convert(DATEtime,'31/12/'+@lcYear,103),'','','','','881','',
							@lcTipoH,'CIERRE CUENTAS CLASE '+@cuenta,'',0,1,0,@lnDebe,@lnHaber,0.00,0.00,'','',
							'','','',@lcCorrel,'A','','',0,'','','','','',0,
							0,'','','','',0,0,'','','','',
							'','','','',0.00,'',
							0.00,'','',0.00,'',0.00,0.00,0.0,0.0,0.0,'')
						--insertnamos la 891 con monto invertido con respecto a la cuenta 85
						INSERT MOVCONTABLES_D (IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,
							CodSubActividad,fechcontable,CodMGC,ClaseMovimiento,CtaDestino,CodigoDocumentoReferencia,
							NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
							FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,
							TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,
							codPro,u_codi,datUsu,Correlativo,estado,Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,reten,
							rigv,corrigv,CodAduana,FechDUA,CodDUA,ISC,tipoOper,NroDetrac,FechaDetrac,CodigoDetraccion,Fecha_RefComprobModi,
							Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,CuentaAbono,
							MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIVAP,montocuentaauxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)
						VALUES (@lnIdCabVoucher,@aUnidad,@lcNroDoc,'','','',
							'',GETDATE(),'19','','','00',
							@lcNroDoc,convert(DATEtime,'31/12/'+@lcYear,103),convert(DATEtime,'31/12/'+@lcYear,103),'','',
							convert(DATEtime,'31/12/'+@lcYear,103),'','','','','891','',
							@lcTipoH,'CIERRE CUENTAS CLASE '+@cuenta,'',0,1,0,@lnHaber,@lnDebe,0.00,0.00,'','',
							'','','',@lcCorrel,'A','','',0,'','','','','',0,
							0,'','','','',0,0,'','','','',
							'','','','',0.00,'',
							0.00,'','',0.00,'',0.00,0.00,0.0,0.0,0.0,'')
					End
				End
			End
			Else --caso contrario genera 88 y 89
			Begin
--print 'cta c87 '+ @lccta87 + ' -- '+@cuenta
				if @cuenta='85'
				begin
-- insertamos el cierre de la cuenta 87 con la 89
						INSERT INTO MOVCONTABLES_D 
						SELECT @lnIdCabVoucher,@aUnidad,@lcNroDoc,'','','',
							'',GETDATE(),'19','','','00',
							@lcNroDoc,convert(DATEtime,'31/12/'+@lcYear,103),convert(DATEtime,'31/12/'+@lcYear,103),'','',
							convert(DATEtime,'31/12/'+@lcYear,103),'','','','','871','',
							@lcTipoH,'CIERRE CUENTAS CLASE '+'871','',0,1,0,ImpDebe,ImpHaber,0.00,0.00,'','',
							'','','',@lcCorrel,'A','','',0,'','','','','',0,
							0,'','','','',0,0,'','','','',
							'','','','',0.00,'',
							0.00,'','',0.00,'',0.00,0.00,0.0,0.0,0.0,''
							from movcontables_d where codunidadeconomica=@aUnidad and left(codcuenta,2)='87' and left(nrodocumento,3)='11'+right(@lcYear,1) and estado in ('-','D') and (impdebe+impdebe)>0
						Union All
						SELECT @lnIdCabVoucher,@aUnidad,@lcNroDoc,'','','',
							'',GETDATE(),'19','','','00',
							@lcNroDoc,convert(DATEtime,'31/12/'+@lcYear,103),convert(DATEtime,'31/12/'+@lcYear,103),'','',
							convert(DATEtime,'31/12/'+@lcYear,103),'','','','','413','',
							@lcTipoH,'CIERRE CUENTAS CLASE '+'871','',0,1,0,ImpHaber,ImpDebe,0.00,0.00,'','',
							'','','',@lcCorrel,'A','','',0,'','','','','',0,
							0,'','','','',0,0,'','','','',
							'','','','',0.00,'',
							0.00,'','',0.00,'',0.00,0.00,0.0,0.0,0.0,''
							from movcontables_d where codunidadeconomica=@aUnidad and left(codcuenta,2)='87' and left(nrodocumento,3)='11'+right(@lcYear,1) and estado in ('-','D') and (impdebe+impdebe)>0

				End
				if @cuenta='87'
				begin
					-- si tiene perdida no calcula la renta 
					set @lnperdida =(select imphaber from movcontables_d D
						INNER JOIN MOVCONTABLES_c C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
						INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
						WHERE C.MES='13' AND CODCUENTA=@cuenta AND C.ANIO=@lcYear AND C.ESTADO!='4' AND D.ESTADO!='4'
						AND Z.IDEMPRESA=@IdEmpresa AND CODPRO!='000001' and d.codmgc='19')

					if @lnperdida>=0.0
					begin 
						SELECT @lnDebe=(case when IMPdebe>0 then (case when @Regimen='MYPE TRI' then (@UIT*15*.10)+(IMPdebe-@UIT*15)*@PorRenta else ImpDebe*@PorRenta end) else 0 end),
							   @lnHaber=(case when IMPHABER>0 then (case when @Regimen='MYPE TRI' then ImpHaber*@PorRenta else (@UIT*15*.10)+(IMPHABER-@UIT*15)*@PorRenta end) else 0 end) 
						From (select (Case When sum(d.impdebe-d.imphaber)>0 then sum(d.impdebe-d.imphaber) else 0 end) impdebe, 
								 (case When sum(d.impHaber-d.impdebe)>0 then sum(d.impHaber-d.impdebe) else 0 end) impHaber  
								FROM MOVCONTABLES_D D
								INNER JOIN MOVCONTABLES_c C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
								INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
								WHERE C.MES='13' AND CODCUENTA=@lcCodCta1 AND C.ANIO=@lcYear AND C.ESTADO!='4' AND D.ESTADO!='4'
								AND Z.IDEMPRESA=@IdEmpresa AND CODPRO!='000001' and d.codmgc='19'
								group by d.codcuenta ) aa
						
						INSERT MOVCONTABLES_D (IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,
							CodSubActividad,fechcontable,CodMGC,ClaseMovimiento,CtaDestino,CodigoDocumentoReferencia,
							NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
							FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,
							TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,
							codPro,u_codi,datUsu,Correlativo,estado,Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,reten,
							rigv,corrigv,CodAduana,FechDUA,CodDUA,ISC,tipoOper,NroDetrac,FechaDetrac,CodigoDetraccion,Fecha_RefComprobModi,
							Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,CuentaAbono,
							MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIVAP,montocuentaauxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)
						VALUES (@lnIdCabVoucher,@aUnidad,@lcNroDoc,'','','',
							'',GETDATE(),'19','','','00',
							@lcNroDoc,convert(DATEtime,'31/12/'+@lcYear,103),convert(DATEtime,'31/12/'+@lcYear,103),'','',
							convert(DATEtime,'31/12/'+@lcYear,103),'','','','','881','',
							@lcTipoH,'CIERRE CUENTAS CLASE '+@cuenta,'',0,1,0,@lnDebe,@lnHaber,0.00,0.00,'','',
							'','','',@lcCorrel,'A','','',0,'','','','','',0,
							0,'','','','',0,0,'','','','',
							'','','','',0.00,'',
							0.00,'','',0.00,'',0.00,0.00,0.0,0.0,0.0,'')
						--insertnamos la 891 con monto invertido con respecto a la cuenta 85
						INSERT MOVCONTABLES_D (IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,
							CodSubActividad,fechcontable,CodMGC,ClaseMovimiento,CtaDestino,CodigoDocumentoReferencia,
							NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
							FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,
							TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,
							codPro,u_codi,datUsu,Correlativo,estado,Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,reten,
							rigv,corrigv,CodAduana,FechDUA,CodDUA,ISC,tipoOper,NroDetrac,FechaDetrac,CodigoDetraccion,Fecha_RefComprobModi,
							Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,CuentaAbono,
							MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIVAP,montocuentaauxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)
						VALUES (@lnIdCabVoucher,@aUnidad,@lcNroDoc,'','','',
							'',GETDATE(),'19','','','00',
							@lcNroDoc,convert(DATEtime,'31/12/'+@lcYear,103),convert(DATEtime,'31/12/'+@lcYear,103),'','',
							convert(DATEtime,'31/12/'+@lcYear,103),'','','','','891','',
							@lcTipoH,'CIERRE CUENTAS CLASE '+@cuenta,'',0,1,0,@lnHaber,@lnDebe,0.00,0.00,'','',
							'','','',@lcCorrel,'A','','',0,'','','','','',0,
							0,'','','','',0,0,'','','','',
							'','','','',0.00,'',
							0.00,'','',0.00,'',0.00,0.00,0.0,0.0,0.0,'')
					End
				End
			End
       FETCH NEXT FROM ASIENTOCIERRE INTO @lcCodCta,@lnImpDeb,@lnImpHab,@lnSaldo 
       END
    END
CLOSE ASIENTOCIERRE
DEALLOCATE ASIENTOCIERRE	

if @@rowcount>0
	begin
		set @aviso='Cuentas Clase '+@cuenta+' --> (se cerró)'
	end
else
	begin
		set @aviso='Cuentas Clase '+isnull(@cuenta,'')+' --> (ya fueron cerradas)' 
		--+str(isnull(@lnDebe,0)) + ' >> '+ str(isnull(@lnHaber,0)) + ' >@lnHaberRUtil> '+ str(@lnHaberRUtil)+
		--'@lnperdida '+str(isnull(@lnperdida,0)) + ' ==> ImpHaber '+isnull(@lcCodCta1,'')
	end
/****** Object:  StoredProcedure [dbo].[spp_cobranzaCajaPagarCobrar]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[spp_cobranzaCajaPagarCobrar]
@Zona as varchar(10),
@UnidadEconomica as varchar(10),
@Codpro as varchar(14),
@Anio varchar(4),
@MesA varchar(2),
@grupo varchar(10),
@Tipo as varchar(10),
@CtaCtble as varchar(10),
@Nrodoc as varchar(10)


-- spp_cobranzaCajaPagarCobrar '000012','000012','','2019','05','20','CAB','4031001',''
as
--declare @cuenta as varchar(10)
--set @cuenta =(case when @grupo='02' then '12' else '42' end)
if @Tipo ='CAB' 
Begin
If @Codpro =''
	Begin
	--select ruc, proveedor,total= (case When @cuenta='12' then SUM(debe) else SUM(haber) end), amortiza= (case When @cuenta='12' then SUM(Haber) else SUM(debe) end), 
	select ruc,proveedor,sum(Total) total, sum(amortiza) amortiza, sum(saldo) saldo from (
	select ruc, proveedor,total= (case When left(cuenta,2) in ('12','14','16','18','37') then SUM(debe) else SUM(haber) end), 
			amortiza= (case When left(cuenta,2) in ('12','14','16','18','37') then SUM(Haber) else SUM(debe) end), 
			saldo=(case when SUM(saldo)<0 then SUM(saldo)*-1 else SUM(saldo) end) 
	from vcuentasxcobrarpagar(@Zona,@Zona,@UnidadEconomica,@UnidadEconomica,@Anio,@MesA,@MesA,@grupo)
	where left(cuenta,4)<>'4011' and cuenta like '%'+@CtaCtble+'%' and newdr like '%'+@Nrodoc+'%'
		group by left(cuenta,2),zona, ruc,proveedor
		having sum(saldo)<>0
		--order by cuenta,proveedor,fechadocreferencia,newdr 
	) todos
	group by ruc, proveedor
	order by proveedor

	End 
Else 
	if left(@Codpro,1) in ('1','2','3','4','5','6','7','8','9','0')
		Begin
			select ruc, proveedor,total= (case When left(cuenta,2) in ('12','14','16','18','37') then SUM(debe) else SUM(haber) end), 
			amortiza= (case When left(cuenta,2) in ('12','14','16','18','37') then SUM(Haber) else SUM(debe) end), 
			saldo=(case when SUM(saldo)<0 then SUM(saldo)*-1 else SUM(saldo) end) 
			from vcuentasxcobrarpagar(@Zona,@Zona,@UnidadEconomica,@UnidadEconomica,@Anio,@MesA,@MesA,@grupo)
			Where Ruc like '%'+@Codpro+'%' and left(cuenta,4)<>'4011' and cuenta like '%'+@CtaCtble+'%' and newdr like '%'+@Nrodoc+'%'
			group by left(cuenta,2),cuenta, zona, ruc,proveedor
			having sum(saldo)<>0

		End 
	Else 
		If left(@Codpro,1) not in ('1','2','3','4','5','6','7','8','9','0')
		Begin
			select ruc, proveedor,total= (case When left(cuenta,2) in ('12','14','16','18','37') then SUM(debe) else SUM(haber) end), 
			amortiza= (case When left(cuenta,2) in ('12','14','16','18','37') then SUM(Haber) else SUM(debe) end), 
			saldo=(case when SUM(saldo)<0 then SUM(saldo)*-1 else SUM(saldo) end) 
			from vcuentasxcobrarpagar(@Zona,@Zona,@UnidadEconomica,@UnidadEconomica,@Anio,@MesA,@MesA,@grupo)
			Where proveedor like '%'+@Codpro+'%' and left(cuenta,4)<>'4011' and cuenta like '%'+@CtaCtble+'%' and newdr like '%'+@Nrodoc+'%'
			group by left(cuenta,2),cuenta, zona, ruc,proveedor 
			having sum(saldo)<>0
		End 
End 
if @Tipo ='DET' 
Begin

select ROW_NUMBER() OVER(ORDER BY fecha) AS item,nrodocreferencia,dr,fecha,sum(haber) haber,sum(debe) debe, abs(sum(saldo)) saldo, 
		codcuenta, max(newdr) newdr,ruc,proveedor,fvcto from (
select --ROW_NUMBER() OVER(ORDER BY fechadocreferencia) AS item,
	nrodocreferencia= (select DISTINCT rtrim(Descripcion) from tipodocumento where codigOdocumento=vcuentasxcobrarpagar.codigodocumentoreferencia ), 
	dr= substring(dr,Charindex(' ',dr)+1,20), 
fecha= fechadocreferencia, haber=(case When left(cuenta,2) in ('12','14','16','18','37') then debe else haber end), 
debe= (case When left(cuenta,2) in ('12','14','16','18','37') then Haber else debe end), 
saldo=saldo, --(case when saldo<0 then saldo*-1 else saldo*1 end),
codigodocumentoreferencia+'-'+cuenta codcuenta ,
newdr=(case when codigodocumentoreferencia='07' then newdr else '' end),ruc,proveedor,fvcto=FechaVencimiento
from vcuentasxcobrarpagar(@Zona,@Zona,@UnidadEconomica,@UnidadEconomica,@Anio,@MesA,@MesA,@grupo)
	where ruc= @Codpro	and left(cuenta,4)<>'4011' and cuenta like '%'+@CtaCtble+'%' and newdr like '%'+@Nrodoc+'%'
) detalle 
group by nrodocreferencia,dr,fecha,codcuenta,ruc,proveedor,fvcto
having sum(haber)-sum(debe)<>0
--order by fechadocreferencia, dr

End

if @Tipo ='DETTOTAL' 
Begin

select ROW_NUMBER() OVER(ORDER BY fecha) AS item,nrodocreferencia,dr,fecha,sum(haber) haber,sum(debe) debe, abs(sum(saldo)) saldo, 
		codcuenta, max(newdr) newdr,ruc,proveedor,fvcto from (
select --ROW_NUMBER() OVER(ORDER BY fechadocreferencia) AS item,
	nrodocreferencia= (select DISTINCT rtrim(Descripcion) from tipodocumento where codigOdocumento=vcuentasxcobrarpagar.codigodocumentoreferencia ), 
	dr= substring(dr,Charindex(' ',dr)+1,20), 
fecha= fechadocreferencia, haber=(case When left(cuenta,2) in ('12','14','16','18','37') then debe else haber end), 
debe= (case When left(cuenta,2) in ('12','14','16','18','37') then Haber else debe end), 
saldo=saldo, --(case when saldo<0 then saldo*-1 else saldo*1 end),
codigodocumentoreferencia+'-'+cuenta codcuenta ,
newdr=(case when codigodocumentoreferencia='07' then newdr else '' end),ruc,proveedor,fvcto=FechaVencimiento
from vcuentasxcobrarpagar(@Zona,@Zona,@UnidadEconomica,@UnidadEconomica,@Anio,@MesA,@MesA,@grupo)
	where left(cuenta,4)<>'4011' and cuenta like '%'+@CtaCtble+'%' and newdr like '%'+@Nrodoc+'%'
	 and ruc in (select ruc from tblDetSeleccion)
) detalle 
group by nrodocreferencia,dr,fecha,codcuenta,ruc,proveedor,fvcto
having sum(haber)-sum(debe)<>0
--order by fechadocreferencia, dr

End
/****** Object:  StoredProcedure [dbo].[spp_CobranzaDiaria]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[spp_CobranzaDiaria]
@Fecha1 varchar(10),
@fecha2 varchar(10),
@Grupo varchar(2)

as
-- spp_CobranzaDiaria '01/07/2019','31/07/2019','31'
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'tmp1') AND type in (N'U'))
BEGIN 
	drop table tmp1
END

Declare @periodo1 as varchar(5),@periodo2 as varchar(5)

set @periodo1=@Grupo+right(@fecha1,1)+SUBSTRING(@fecha1,4,2)
set @periodo2=@Grupo+right(@fecha2,1)+SUBSTRING(@fecha2,4,2)
 
select cap=dbo.padl(cap.Cap,2,'0'),c.RucEmitido,cap.RazonSocial,convert(varchar(2),day(c.FechaContable)) xdia,sum(monto) total 
into tmp1
from tbl_MovimientoCajaC c inner join (select codigo Cap,ruc_Cpto Ruc,Descripcion RazonSocial from tbl_CapCptoComercial where Tipo='CAP' and Estado=1) cap 
--on c.RucEmitido+(case when rtrim(c.nrodocPago)='' then '' else rtrim(c.nrodocPago) end)=cap.RUC+(case when rtrim(c.nrodocPago)='' then '' else cap.cap end)
on rtrim(c.RucEmitido)+rtrim(c.nrodocPago) =rtrim(cap.RUC)+rtrim(cap.cap) 
where left(c.NroDoc,5) between @periodo1 and @periodo2 and c.estado=''
and c.FechaContable between convert(datetime,@Fecha1,103) and convert(datetime,@Fecha2,103)
group by cap.cap,c.RucEmitido,cap.RazonSocial,c.FechaContable
order by cap.cap,c.RucEmitido,cap.RazonSocial,c.FechaContable


		select cap,RucEmitido RucDni,RazonSocial Responsable,isnull([1],0) Dia1,isnull([2],0) Dia2,isnull([3],0) Dia3,isnull([4],0) Dia4
		,isnull([5],0) Dia5,isnull([6],0) Dia6,isnull([7],0) Dia7,isnull([8],0) Dia8
		,isnull([9],0) Dia9,isnull([10],0) Dia10,isnull([11],0) Dia11,isnull([12],0) Dia12
		,isnull([13],0) Dia13,isnull([14],0) Dia14,isnull([15],0) Dia15,isnull([16],0) Dia16
		,isnull([17],0) Dia17,isnull([18],0) Dia18,isnull([19],0) Dia19,isnull([20],0) Dia20
		,isnull([21],0) Dia21,isnull([22],0) Dia22,isnull([23],0) Dia23,isnull([24],0) Dia24
		,isnull([25],0) Dia25,isnull([26],0) Dia26,isnull([27],0) Dia27,isnull([28],0) Dia28
		,isnull([29],0) Dia29,isnull([30],0) Dia30,isnull([31],0) Dia31
		from tmp1
		pivot
		( sum(total)
			for xdia in ([1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31])
		) 
		as unpvTTable
--		order by Cap
		union all  -- agregando el total por dia
		Select ' ' cap,'' RucDni, 'TOTAL GENERAL' Responsable, sum(dia1) dia1,sum(dia2) dia2, sum(dia3) dia3, sum(dia4) dia4, sum(dia5) dia5, sum(dia6) dia6, sum(dia7) dia7,
		sum(dia8) dia8, sum(dia9) dia9, sum(dia10) dia10, sum(dia11) dia11, sum(dia12) dia12, sum(dia13) dia13, sum(dia14) dia14, sum(dia15) dia15,
		sum(dia16) dia16, sum(dia17) dia17, sum(dia18) dia18, sum(dia19) dia19, sum(dia20) dia20, sum(dia21) dia21, sum(dia22) dia22, sum(dia23) dia23,
		sum(dia24) dia24, sum(dia25) dia25, sum(dia26) dia26, sum(dia27) dia27, sum(dia28) dia28, sum(dia29) dia29, sum(dia30) dia30, sum(dia31) dia31
		From (
		select cap,RucEmitido,RazonSocial,isnull([1],0) Dia1,isnull([2],0) Dia2,isnull([3],0) Dia3,isnull([4],0) Dia4
		,isnull([5],0) Dia5,isnull([6],0) Dia6,isnull([7],0) Dia7,isnull([8],0) Dia8
		,isnull([9],0) Dia9,isnull([10],0) Dia10,isnull([11],0) Dia11,isnull([12],0) Dia12
		,isnull([13],0) Dia13,isnull([14],0) Dia14,isnull([15],0) Dia15,isnull([16],0) Dia16
		,isnull([17],0) Dia17,isnull([18],0) Dia18,isnull([19],0) Dia19,isnull([20],0) Dia20
		,isnull([21],0) Dia21,isnull([22],0) Dia22,isnull([23],0) Dia23,isnull([24],0) Dia24
		,isnull([25],0) Dia25,isnull([26],0) Dia26,isnull([27],0) Dia27,isnull([28],0) Dia28
		,isnull([29],0) Dia29,isnull([30],0) Dia30,isnull([31],0) Dia31
		from tmp1
		pivot
		( sum(total)
			for xdia in ([1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31])
		) 
		as unpvTTable
		) total

/****** Object:  StoredProcedure [dbo].[spp_ComercialMigrarComprasVentas]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_ComercialMigrarComprasVentas]
@ZonaA varchar(6),
@ZonaB varchar(6),
@CodUnidadA varchar(10),
@CodUnidadB varchar(10),
@MesA char(2),
@MesB char(2),
@Anio1 char(4),
@IdEmpresa int ,
@tMovimiento Char(8),
@porDiaDoc char(6) 

as
--Solicitar variables 
--@IdEmpresa

DECLARE
	@CodUnidadEconomica char(10),
	@Anio char(4),
	@mes char(2),
	@Zona char(10),
	@FechContable datetime,
	@CodMGC char(3), 
	@CodMGC2 char(3), 
	@Glosa varchar(250),
	@CodigoDocumentoReferencia char(2),
	@Nrodoc nchar(12), 
	@CodCuenta char(12),
	@TipoMov char(1),
	@Afecto bit,
	@Moneda bigint,
	@TipoCambio decimal(7, 3),
	@impDebe decimal(15, 2),
	@impDebe1 decimal(15, 2),
	@impDebeDolar decimal(15, 2),
	@codPro char(11),
	@Cancelado char(1),
	@tipoOper int,
	@CuentaAbono varchar(50),
	@CuentaAbono2 varchar(50),
	@CuentaAbono3 varchar(50),
	@CuentaAbono4 varchar(50),
	@MontoIGV decimal(12, 3),
	@MontoIGVCompras decimal(12, 3),
	@MontoIGVVentas decimal(12, 3),
	@GlosaCancelacion varchar(28),
	@TipoMedioPago nchar(3), 
	@imptotal as decimal(15,2), 
	@imptotal1 as decimal(15,2),
	@tmpPorDiaDoc as Char(2), 
	@ctaigv as char(10)

Declare @correl as char(10),
	@movc int, @nrodocumento as char(12), @hoy as datetime
----migra datos de excel
--exec spp_MigrarComprasVentas0  @lcdireccion
--
-- actualizar clientes 
-------seleccionando clientes nuevos
declare @ruc as char(11), @razon_social as char(50)

declare nuevosclientes cursor for
	select proveedor, razon_social from (
		select * from (
			select proveedor, razon_social from exportaventas where proveedor is not null 
			group by proveedor, razon_social 
			) prove left outer join 
			(select ruc from dbo.tbl_msto_ClienteProveedor WHERE Estado=1) clie 
			on prove.proveedor = clie.ruc
			) clientesnuevos 
	where ruc is null 

open nuevosclientes
fetch next from nuevosclientes
into @ruc, @razon_social
WHILE @@FETCH_STATUS = 0
BEGIN
	exec spp_instup_tablagen '6',@razon_social,@ruc,
	'-','-',0,0,0,0,0,0,0,0,0,0,0,0,0,'1','0','-','-','-',
	'-','-','0','-','0','-','0','-','0','-','-','-','-','-',0,'','','',4,
	'','','@','.com',
	'','','','','',1,'','','','',0,0,'CP','',0,@idempresa

	fetch next from nuevosclientes
	into @ruc, @razon_social
end 

CLOSE nuevosclientes
DEALLOCATE nuevosclientes
---- fin actualiza clientes

-- asigna variables los campos de cada registro
DECLARE vistasubir CURSOR FOR
SELECT año, mes, zona, unidad_economica, fecha_registro, grupo, 
	   glosa = rtrim(detalle_venta) +' '+ proveedor, nro_documento, cancelado
FROM exportaventas
WHERE --año is not null and 
		Año = @anio1
		AND mes between @mesA and @mesB --cancelado = '1' --and right(rtrim(asociado),2)<=2
		AND zona BETWEEN @ZonaA AND @ZonaB
		AND UNIDAD_ECONOMICA BETWEEN @codUnidadA AND @codUnidadB
ORDER BY zona, unidad_economica
--select * from exportaventas
--select * from movcontables_d where estado <>'4' and CodUnidadEconomica= 
 
OPEN vistasubir
FETCH NEXT FROM vistasubir
INTO @Anio, @mes, @Zona, @CodUnidadEconomica, 
	 @FechContable, @CodMGC, @Glosa, @nrodocumento, @cancelado
WHILE @@FETCH_STATUS = 0
BEGIN

--crea el asiento por dia o por documento
IF @tmpPorDiaDoc = 'SI' 
BEGIN
	-- obtener el ultimo nro del registro cabecera
	set @correl = (select max(nrodoc) from movcontables_c 
					where codunidadeconomica = @CodUnidadEconomica 
						and codmgc= @CodMGC and anio= @Anio and mes= @mes)
	set @hoy = getdate()

	--- Crear cabecera para un nuevo asiento contable COMPRAS
	exec spp_instup_MovContables_C 0,@Anio,@mes, @Zona, @CodUnidadEconomica,@correl,
		@FechContable, @CodMGC, @Glosa,'',''

	--verifica si el asiento es por dia o por documento
	set @tmpPorDiaDoc = (Case When @porDiaDoc= 'PORDOC' Then 'SI' Else 'NO' End)
END

-------- obtener el nro de cabecera creada para el registro
set @correl = (select max(nrodoc) from movcontables_c 
				where codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC and anio= @Anio and mes= @mes)

set @movc = (select idmovcontables_c from movcontables_c where nrodoc=@correl and codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC and anio= @Anio and mes= @mes)
set @nrodoc = (select nrodoc from movcontables_c where nrodoc=@correl and codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC and anio= @Anio and mes= @mes)

DECLARE vistadetalle CURSOR FOR
SELECT unidad_economica, fecha_registro, tipo_documento,
	nro_documento, cuenta_contable, detalle_venta, TipoMov = 'D', Afecto, tipo_Moneda, TipoCambio = isnull(tipo_cambio,0.00), 
	importe_debe, 
	Proveedor,  tipo_Operacion, Cuenta_Abono, Monto_IGV, TipoMedioPago='008'
FROM exportaventas
WHERE nro_documento = @nrodocumento and
		Año = @anio1
		AND mes between @mesA and @mesB --cancelado = '1' --and right(rtrim(asociado),2)<=2
		AND zona BETWEEN @ZonaA AND @ZonaB
		AND UNIDAD_ECONOMICA BETWEEN @codUnidadA AND @codUnidadB
OPEN vistadetalle
FETCH NEXT FROM vistadetalle INTO @CodUnidadEconomica, @FechContable, @CodigoDocumentoReferencia,
	@Nrodoc, @CodCuenta,@glosa, @TipoMov, @Afecto, @Moneda, @TipoCambio, @impDebe, 
	@codPro, @tipoOper, @CuentaAbono, @MontoIGV, @TipoMedioPago

--IF @@FETCH_STATUS <> 0
	WHILE @@FETCH_STATUS = 0
	BEGIN
	---------------------------------Creando Correl
	Declare @lcCorrela int,@lcCorrelcA CHAR(10)
	--------------------
	Select @lcCorrela= (select e_corr from empresa a inner join zona b on a.idEmpresa=b.idEmpresa inner join unidad_economica c on c.codZona=b.codZona where c.codUnidadEconomica=@CodUnidadEconomica )

	UPDATE Empresa SET E_CORR = E_CORR + 1
	SET @lcCorrelcA =Replicate('0',10-LEN(@lcCorrela+1))+ CONVERT(CHAR,@lcCorrela+1)

----------------------- registra las cuentas 6011 y su dinamica 2011 y 6111 segun plan contable
---Define parametros de acuerdo al tipo de cambio
	Set @impDebe  = (Case When @Moneda = 1 Then @impDebe Else @impDebe*@tipocambio End) 
	Set @montoIGV = (Case When @Moneda = 1 Then @MontoIGV Else @impDebe*@tipocambio*(select valor from parametros where clave ='porcentajeIGV' and idempresa = @idempresa) End) 
	SET @ImpDebe1 = @impDebe + (case When ltrim(rtrim(@TMovimiento))= 'VENTAS' then @montoIGV else 0.00 end)
	set @impDebeDolar = (Case When @Moneda = 1 Then 0.00 Else @impDebe*@tipocambio End) 
	set @imptotal = (Case When @Moneda = 1 Then @impDebe+@montoigv Else (@impDebe+@montoigv)*@tipocambio End) 
	set @ctaigv   = (select valor from parametros where clave ='CuentaIGV' and idempresa = @IdEmpresa)
---fin define parametros

	exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
	@correl, ' ','-','-','-',
	@hoy,@CodMGC, '-','-',@CodigoDocumentoReferencia,
	@NroDoc,@FechContable, @FechContable,@CodigoDocumentoReferencia,
	@NroDoc,'1900-01-01 00:00:00.000','-','-','-','',@CodCuenta,'',
	@TipoMov,@Glosa,'-',@Afecto,@Moneda,@TipoCambio,@impDebe1,0,@impDebeDolar,0,'-','-',
	@codPro,'-',@hoy, @lcCorrela ,'-','-','-',0,'- ','-',	'-',
	@CodigoDocumentoReferencia,@NroDoc,0,0,'-',
	'','','1900-01-01 00:00:00.000','',0,@TipoOper,'',
	'1990-01-01 00:00:00.000','','1900-01-01 00:00:00.000',
	'','','','',
	0,@CuentaAbono,@MontoIGV,'',
	'1900-01-01 00:00:00.000',0,'008',
	0,0,0

	IF @montoIGV <> 0 
	BEGIN  
	----------------------- registra la cuenta 4011 igv
	-- Creando variables de IGV para las compras y ventas D-H
	SET @montoIGVCompras = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then @montoIGV Else 0.00 End) 
	SET @montoIGVVentas  = (Case When ltrim(rtrim(@TMovimiento))= 'VENTAS'  Then @montoIGV Else 0.00 End) 
--		set @CuentaAbono3 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then '4211' Else '7011' End)
	set @CuentaAbono3 = @CuentaAbono

	--- Actualizando asientos de Compras


		exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
		@correl,'','-','-','-',
		@hoy,@CodMGC,'- ','-',@CodigoDocumentoReferencia,
		@NroDoc,@FechContable, @FechContable,@CodigoDocumentoReferencia,
		@NroDoc,'1900-01-01 00:00:00:000','-','-','-','',@ctaigv,'-',
		'D',@Glosa,'-',@Afecto,@Moneda,@TipoCambio,@montoIGVcompras,@montoIGVVentas,0,0,'- ','-',
		@codPro,'-', @hoy, @lcCorrela,'D','-','-',0,'- ','-','-',
		@CodigoDocumentoReferencia,@NroDoc,0,0,'-',
		'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
		'1990-01-01 00:00:00:000','','1900-01-01 00:00:00:000',
		'','','','',0,
		@CuentaAbono3,@MontoIGV,'','1900-01-01 00:00:00:000',0,
		'008',0,0,0
	END
-----------------------registra la cuenta 4211 total y 7011 total
set @imptotal1 = @imptotal + (case When ltrim(rtrim(@TMovimiento))= 'VENTAS' then @montoIGV*(-1) else 0.00 end)

exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
@correl,'','-','-','-',
@hoy,@CodMGC,'- ','-',@CodigoDocumentoReferencia,
@NroDoc,@FechContable,@FechContable,@CodigoDocumentoReferencia,
@NroDoc,'1900-01-01 00:00:00:000','-','-','-','',@CuentaAbono,'-',
'D',@Glosa,'-',@Afecto,@Moneda,@TipoCambio,0,@imptotal1,0,0,'-','-',
@codPro,'-',@hoy,@lcCorrela,'D','-','-',0,'-','-','-',
@CodigoDocumentoReferencia,@NroDoc,0,0,'-',
'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
'1990-01-01 00:00:00:000','','1900-01-01 00:00:00:000',
'','','','',0,
@CuentaAbono3,@MontoIGV,'','1900-01-01 00:00:00:000',0,
'008',0,0,0

-----------------------
	------ registrar cancelaciones de facturas
	IF @cancelado ='1'
	BEGIN
		--Asignando glosa de compra y venta
		SET @GlosaCancelacion = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then 'PAGO A PROVEEDORES*' Else 'CANCELACION EN EFECTIVO*' End) 
		set @CodMGC2 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then '20' Else '02' End)
		--crea cabecera pago efectivo
		exec spp_instup_MovContables_C 0,@Anio,@mes, @Zona, @CodUnidadEconomica,@correl,
		@FechContable,@CodMGC2,@GlosaCancelacion,'',''

		-------- obtener el nro de cabecera creada para el registro
		set @correl = (select max(nrodoc) from movcontables_c where codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC2 and anio= @Anio and mes= @mes)
		set @movc = (select idmovcontables_c from movcontables_c where nrodoc=@correl and codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC2 and anio= @Anio and mes= @mes)
		set @nrodoc = (select nrodoc from movcontables_c where nrodoc=@correl and codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC2 and anio= @Anio and mes= @mes)

		--- Crea detalle pago efectivo cta 4211 y 1011
		set @CuentaAbono4 = (select valor from parametros where idempresa = (select idempresa from zona where  codzona = (select zona from exportaventas group by zona)) and clave = 'CuentaAutoCCompras')

--		set @CuentaAbono2 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then '4211' Else '1011' End)
		set @CuentaAbono2 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then @CuentaAbono Else @CuentaAbono4 End)
		
		declare @p41 char(10)
		set @p41='0         '
		exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
		@correl,'','-','-','-',
		@hoy,@CodMGC2,'- ','-',@CodigoDocumentoReferencia,
		@NroDocumento,@FechContable,@FechContable,@CodigoDocumentoReferencia,
		@NroDoc,'1900-01-01 00:00:00:000','-','-','-','',@CuentaAbono2,'-',
		'D',@Glosa,'-',0,@Moneda,@TipoCambio,@impTotal,0,0,0,'- ',@codPro,
		@codPro,'-',@hoy,@lcCorrela,'-','-','-',0,'-','-','-',
		@CodigoDocumentoReferencia,@nrodoc,0,0,'-',
		'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
		'1990-01-01 00:00:00:000','','1900-01-01 00:00:00:000',
		'','','','',0,
		@CuentaAbono3,0,'','1900-01-01 00:00:00:000',0,
		'008',0,0,0

	--- detalle pago efectivo cta 1011 y 1211
--		set @CuentaAbono2 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then '1011' Else '1211' End)
		set @CuentaAbono2 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then @CuentaAbono4 Else @codCuenta End)

		exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
		@correl,'','-','-','-',
		@hoy,@CodMGC2,'-','-',@CodigoDocumentoReferencia,
		@NroDocumento,@FechContable,@FechContable,@CodigoDocumentoReferencia,
		@NroDoc,'1900-01-01 00:00:00:000','-','-','-','',@CuentaAbono2,'-',
		'D',@Glosa,'-',0,@Moneda,@TipoCambio,0,@impTotal,0,0,'-',@codPro,
		@codPro,'-',@hoy,@lcCorrela,'-','-','-',	0,'-','-','-',
		@CodigoDocumentoReferencia,@nrodoc,0,0,'-',
		'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
		'1990-01-01 00:00:00:000','','1900-01-01 00:00:00:000',
		'','','','',0,
		@CuentaAbono3,0,'','1900-01-01 00:00:00:000',0,
		'008',0,0,0

	END
	FETCH NEXT FROM vistadetalle INTO @CodUnidadEconomica, @FechContable, @CodigoDocumentoReferencia,
		@Nrodoc, @CodCuenta,@glosa, @TipoMov, @Afecto, @Moneda, @TipoCambio, @impDebe, 
		@codPro, @tipoOper, @CuentaAbono, @MontoIGV, @TipoMedioPago
END

CLOSE vistadetalle
DEALLOCATE vistadetalle

--------
FETCH NEXT FROM vistasubir
INTO @Anio, @mes, @Zona, @CodUnidadEconomica, 
	 @FechContable, @CodMGC, @Glosa, @nrodocumento, @cancelado
end 

CLOSE vistasubir
DEALLOCATE vistasubir

-- Bloque
CREATE procedure [dbo].[spp_creaAnioApertura]
@Anio char(4),
@Zona nchar(6),
@Unidad varchar(10)
as
if not exists(select cAñoProceso from tbl_ctrl_AñoProceso where cAñoProceso=@Anio)
	begin
		insert into tbl_ctrl_AñoProceso values(@Anio,@Zona,@Unidad)
		if @@error<>0
			begin
				raiserror('ERROR: en el ingreso de datos',1,16)
				with nowait
				return
			end 
	end
else
	begin
		raiserror('YA EXISTE EL AÑO CREADO',1,16)
		with nowait 
		return
	end
/****** Object:  StoredProcedure [dbo].[spp_CreaExportaVentas]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[spp_CreaExportaVentas]
@tipo as char(10)

As 
-- spp_CreaExportaVentas 'BFISCOM'   RPC:Completed	exec spp_CreaExportaVentas @tipo='COBISCOM' select * from exportaventas

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[exportaventas]') AND type in (N'U'))
BEGIN 
	If @tipo= 'BFISCOM'
	Begin
		IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[exportaventasCOB]') AND type in (N'U'))
		BEGIN 
			DROP TABLE exportaventasCOB
			DROP TABLE exportaventasCOBA
			DROP TABLE exportaventasCOBB
			--Actualizando NroDoc para los Depositos
			update exportaventas
			set nrodoc=(Case When len(rtrim(nrodoc))<=9 Then 'DEPO-'+dbo.PADL(rtrim(nrodoc),9,'0')  
						Else (case when left(rtrim(nrodoc),2)='00' then 'DEPO-'+right(rtrim(nrodoc),9) else rtrim(nrodoc) end) 
						End)
			where tipo='DE'

			select * into exportaventasCOB from exportaventas
			select * into exportaventascobA from exportaventas where tipo='DE' and tipodoc='DE'
			select * into exportaventascobB from exportaventas where tipo='DE' and tipodoc='OO'
			DROP TABLE exportaventas
print 'ok'
		END
		else
		BEGIN 
			--Actualizando NroDoc para los Depositos
			update exportaventas
			set nrodoc=(Case When len(rtrim(nrodoc))<=9 Then 'DEPO-'+dbo.PADL(rtrim(nrodoc),9,'0')  
						Else (case when left(rtrim(nrodoc),2)='00' then 'DEPO-'+right(rtrim(nrodoc),9) else rtrim(nrodoc) end) 
						End)
			where tipo='DE'

			select * into exportaventasCOB from exportaventas
			select * into exportaventascobA from exportaventas where tipo='DE' and tipodoc='DE'
			select * into exportaventascobB from exportaventas where tipo='DE' and tipodoc='OO'
			DROP TABLE exportaventas
print '2'
		END
	End
	If @tipo<> 'BFISCOM'
	Begin

print '2a'
		DROP TABLE exportaventas
	End
	print '3'
END

If @tipo='CONMODELO' --Con modelo del CEACOMERCIAL
Begin
	CREATE TABLE [dbo].[exportaventas](
	[RUC] [nvarchar](255) NULL,
	[Razón Social] [nvarchar](255) NULL,
	[Dirección] [nvarchar](255) NULL,
	[fecha] [datetime] NULL,
	[Serie] [nvarchar](255) NULL,
	[Desde] [nvarchar](255) NULL,
	[Hasta] [nvarchar](255) NULL,
	[Moneda] [nvarchar](255) NULL,
	[Sub Total] [float] NULL,
	[Igv] [float] NULL,
	[Otros Imp] [float] NULL,
	[Total] [float] NULL
) ON [PRIMARY]
End
If @tipo='SINMODELO'  --sin modelo
Begin 
-- Se debe poner cuando es la estructura de la tabla migrada por el ceaComercial
	CREATE TABLE [dbo].[exportaventas](
	[GRUPO] [nvarchar](255) NULL,
	[ZONA] [nvarchar](255) NULL,
	[UNIDAD_ECONOMICA] [nvarchar](255) NULL,
	[AÑO] [float] NULL,
	[MES] [nvarchar](255) NULL,
	[FECHA_REGISTRO] [datetime] NULL,
	[CUENTA_CONTABLE] [nvarchar](255) NULL,
	[CUENTA_ABONO] [nvarchar](255) NULL,
	[AUTOMATICO] [nvarchar](255) NULL,
	[PROVEEDOR] [nvarchar](255) NULL,
	[Razon_Social] [nvarchar](255) NULL,
	[Direccion] [nvarchar](255) NULL,
	[TIPO_DOCUMENTO] [nvarchar](255) NULL,
	[NRO_DOCUMENTO] [nvarchar](255) NULL,
	[NRO_DOCUMENTO2] [nvarchar](255) NULL,
	[FECHA_DOCUMENTO] [datetime] NULL,
	[DETALLE_VENTA] [nvarchar](255) NULL,
	[TIPO_MONEDA] [nvarchar](255) NULL,
	[TIPO_CAMBIO] [float] NULL,
	[TIPO_OPERACION] [float] NULL,
	[IMPORTE_DEBE] [float] NULL,
	[IMPORTE_HABER] [float] NULL,
	[AFECTO] [float] NULL,
	[MONTO_IGV] [float] NULL,
	[ISC] [float] NULL,
	[MONTO_ISC] [float] NULL,
	[CANCELADO] [float] NULL,
	[PERCEPCION] [float] NULL,
	[MONTO_PERCEPCION] [float] NULL,
	[fechanc] [datetime] NULL,
	[tipo_docnc] [nvarchar](255) NULL,
	[nro_docnc] [nvarchar](255) NULL,
	[voucher] [float] NULL,
	[glosa] [nvarchar](255) NULL,
	[ccosto] [nvarchar](255) NULL,
	[fefec] [nvarchar](255) NULL,
	[Adicional1] [float] NULL,
	[Adicional2] [float] NULL,
	[Adicional3] [float] NULL,
	[OtrosMontos] [float] NULL
	) ON [PRIMARY]

End
If @tipo= 'FACISCOM' --Con modelo del CEACOMERCIAL
Begin
	CREATE TABLE [dbo].[exportaventas](
	[sitcta] [varchar](1) NULL,
	[mes] [varchar](6) NULL,
	[tarifa] [nvarchar](5) NULL,
	[descrip] [nvarchar] (40) NULL,
	[clientes] [float] NULL,
	[consumo] [float] NULL,
	[cf] [float] NULL,
	[v1] [float] NULL,
	[v4] [float] NULL,
	[v5] [float] NULL,
	[v6] [float] NULL,
	[v7] [float] NULL,
	[igv] [float] NULL,
	[conc] [varchar] (4) NULL,
	[monto] [float] NULL,
	[tipor] [varchar] (4) NULL,
	[tipor2] [varchar] (4) NULL
) ON [PRIMARY]
End
If @tipo='COBISCOM'  --Cobranza del ISCom
Begin 
---- Se debe poner cuando es la estructura de la tabla migrada por el ceaComercial
CREATE TABLE [dbo].[exportaventas](
		[NROLIQ] [float] NULL,
		[FECHAI] [datetime] NULL,
		[CAP] [float] NULL,
		[TIPO] [nvarchar](255) NULL,
		[TIPODOC] [nvarchar](255) NULL,
		[FECHADOC] [datetime] NULL,
		[NRODOC] [nvarchar](255) NULL,
		[BANCO] [nvarchar](255) NULL,
		[DESCRIP] [nvarchar](255) NULL,
		[CONTRATO] [nvarchar](255) NULL,
		[CLIENTES] [float] NULL,
		[TALONESC] [float] NULL,
		[MONTOC] [float] NULL,
		[CUENTA] [nvarchar](255) NULL,
		[TOTALC] [float] NULL,
		[TOTALD] [float] NULL,
		[TALONESL] [float] NULL,
		[DETALLE] [nvarchar](255) NULL,
		[OPERADOR] [nvarchar](255) NULL
	) ON [PRIMARY]

--	CREATE TABLE [dbo].[exportaventas](
--	[GRUPO] [nvarchar](255) NULL,
--	[ZONA] [nvarchar](255) NULL,
--	[UNIDAD_ECONOMICA] [nvarchar](255) NULL,
--	[AÑO] [float] NULL,
--	[MES] [nvarchar](255) NULL,
--	[FECHA_REGISTRO] [datetime] NULL,
--	[CUENTA_CONTABLE] [nvarchar](255) NULL,
--	[CUENTA_ABONO] [nvarchar](255) NULL,
--	[AUTOMATICO] [nvarchar](255) NULL,
--	[PROVEEDOR] [nvarchar](255) NULL,
--	[Razon_Social] [nvarchar](255) NULL,
--	[Direccion] [nvarchar](255) NULL,
--	[TIPO_DOCUMENTO] [nvarchar](255) NULL,
--	[NRO_DOCUMENTO] [nvarchar](255) NULL,
--	[NRO_DOCUMENTO2] [nvarchar](255) NULL,
--	[FECHA_DOCUMENTO] [datetime] NULL,
--	[DETALLE_VENTA] [nvarchar](255) NULL,
--	[TIPO_MONEDA] [nvarchar](255) NULL,
--	[TIPO_CAMBIO] [float] NULL,
--	[TIPO_OPERACION] [float] NULL,
--	[IMPORTE_DEBE] [float] NULL,
--	[IMPORTE_HABER] [float] NULL,
--	[AFECTO] [float] NULL,
--	[MONTO_IGV] [float] NULL,
--	[ISC] [float] NULL,
--	[MONTO_ISC] [float] NULL,
--	[CANCELADO] [float] NULL,
--	[PERCEPCION] [float] NULL,
--	[MONTO_PERCEPCION] [float] NULL,
--	[fechanc] [nvarchar](255) NULL,
--	[tipo_docnc] [nvarchar](255) NULL,
--	[nro_docnc] [nvarchar](255) NULL,
--	[voucher] [float] NULL,
--	[glosa] [nvarchar](255) NULL,
--	[ccosto] [nvarchar](255) NULL,
--	[fefec] [nvarchar](255) NULL,
--	[Adicional2] [float] NULL,
--	[Adicional3] [float] NULL
--	) ON [PRIMARY]

End
If @tipo='BFISCOM'  --BVT y FAC del ISCom
Begin 
	CREATE TABLE [dbo].[ExportaVentas](
		[FECHACOMP] [datetime] NULL,
		[COMPROB] [nvarchar](255) NULL,
		[SERCOMPROB] [nvarchar](255) NULL,
		[NROCOMPROB] [float] NULL,
		[CONTRATO] [float] NULL,
		[CODRUTA] [nvarchar](255) NULL,
		[NOMBRES] [nvarchar](255) NULL,
		[RUC] [nvarchar](255) NULL,
		[DETASOL] [nvarchar](255) NULL,
		[DETALLE] [nvarchar](255) NULL,
		[SUBTOTAL] [float] NULL,
		[IGV] [float] NULL,
		[OTROSNA] [float] NULL,
		[TOTAL] [float] NULL,
		[CONSUMO] [float] NULL,
		[MONTOP] [float] NULL,
		[SALDO] [float] NULL,
		[CUOTASPROG] [float] NULL,
		[CUOTASPAG] [float] NULL,
		[NROSOLIC] [float] NULL,
		[NROPRESU] [float] NULL,
		[TARIFASOL] [nvarchar](255) NULL,
		[TIPOSOLIC] [nvarchar](255) NULL,
		[CODPRES] [nvarchar](255) NULL,
		[FECHAP] [datetime] NULL,
		[OBSERV] [nvarchar](255) NULL,
		[CAP] [float] NULL
	) ON [PRIMARY]
End
If @tipo='CCOISCOM'  --Cobranza Comercial del ISCom
Begin 
	CREATE TABLE [dbo].[ExportaVentas](
		[FECHAI] [datetime] NULL,
		[FECHAC] [datetime] NULL,
		[CAP] [nvarchar](255) NULL,
		[LOTE] [float] NULL,
		[TALON] [float] NULL,
		[CODRUTA] [nvarchar](255) NULL,
		[CONTRATO] [float] NULL,
		[NOMBRES] [nvarchar](255) NULL,
		[INTERES] [float] NULL,
		[OTROS] [float] NULL,
		[IGV] [float] NULL,
		[MONTO] [float] NULL,
		--[SUBTOTAL] [float] NULL,
		[TOTAL] [float] NULL,
		[DIF] [float] NULL,
		[OBS] [nvarchar](255) NULL,
		[MESULT] [nvarchar](255) NULL,
		[MESC] [nvarchar](255) NULL,
		[ESTADO] [nvarchar](255) NULL,
		[FECHA] [datetime] NULL,
		[INGRESO] [nvarchar](255) NULL,
		[LOCALIDAD] [nvarchar](255) NULL,
		--[SECTIPICO] [nvarchar](255) NULL,
		[RECIBO] [float] NULL,
		[NBV] [float] NULL,
		[MESFP] [nvarchar](255) NULL,
		[DIRECCION] [nvarchar](255) NULL --,
		--[COMISION] [float] NULL,
		--[TOTAL] [float] NULL
	) ON [PRIMARY]
End

If @tipo='COBOFAPE'  --Cobranza Comercial de Boletas Facturas Pendientes del ISCom
Begin 
	CREATE TABLE [dbo].[ExportaVentas](
		[FECHA] [datetime] NULL,
		[IMPORTE] [float] NULL,
		[DOC] [nvarchar](255) NULL,
		[SERIE] [nvarchar](255) NULL,
		[NRO] [float] NULL,
		[FECHAEMI] [datetime] NULL,
		[CLIENTE] [nvarchar](255) NULL,
		[CONTRATO] [float] NULL,
		[DNI] [nvarchar](255) NULL
	) ON [PRIMARY]
End
/****** Object:  StoredProcedure [dbo].[spp_ctrl_AsignaEmpresa]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_ctrl_AsignaEmpresa]
@CodEmpleado varchar(10),
@IdEmpresa int,
@oper nchar(4)
as
if @oper='inst'
begin
if not exists(select cCodEmpleado,IdEmpresa from tbl_AsignEmpresa_Empleado where cCodEmpleado=@CodEmpleado and IdEmpresa=@IdEmpresa)
	begin
		insert into tbl_AsignEmpresa_Empleado values(@CodEmpleado,@IdEmpresa)
		raiserror('ERROR: en la inserción de datos',1,16)
		with nowait
		return
	end
else
	begin
		raiserror('Ya fue asignano la empresa al empleado',1,16)
		with nowait
		return
	end
end
else
	begin
		delete from tbl_AsignEmpresa_Empleado where cCodEmpleado=@CodEmpleado and IdEmpresa=@IdEmpresa
	end
/****** Object:  StoredProcedure [dbo].[spp_ctrl_maestrogrupocontablexUnidadEconomica]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_ctrl_maestrogrupocontablexUnidadEconomica]
@CodUnidadEconomica varchar(10),
@CodZona nchar(10),
@anio char(4),
@sistema char(4)
-- spp_ctrl_maestrogrupocontablexUnidadEconomica '000072','000072','2021','CONT'
as
if not exists(select CodZona,CodUnidadEconomica from maestrogrupocontable where CodZona=@CodZona and CodUnidadEconomica=@CodUnidadEconomica and anio=@anio  AND SISTEMA LIKE '%CONT%')
	begin
		if @sistema='CONT'
		Begin 
		insert into maestrogrupocontable 
			select CodMGC,MGC,Sistema,@CodZona,@CodUnidadEconomica,@Anio,0,Ene,Feb,Mar,Abr,May,Jun,Jul,Ago,Sep,Oct,Nov,Dic,Anual,Estado,CodForm 
			from maestrogrupocontable
			where CodUnidadEconomica='0' and CodZona='0' and sistema like '%CONT%'
		End
	end

if not exists(select CodZona,CodUnidadEconomica from maestrogrupocontable where CodZona=@CodZona and CodUnidadEconomica=@CodUnidadEconomica and anio=@anio  AND SISTEMA LIKE '%TESO%')
	begin
		if @sistema='TESO'
		Begin 
		insert into maestrogrupocontable 
			select CodMGC,MGC,Sistema,@CodZona,@CodUnidadEconomica,@Anio,0,Ene,Feb,Mar,Abr,May,Jun,Jul,Ago,Sep,Oct,Nov,Dic,Anual,Estado,CodForm 
			from maestrogrupocontable
			where CodUnidadEconomica='0' and CodZona='0' and sistema like '%TESO%'
		End

	end
-- actualizando plancontable
declare @idempresa as int
if not exists(select top 1 anio from plancuentascontables where estado=1 and anio!='202000' and idempresa = 
				(select top 1 idempresa from zona where estado=1 and codzona= @CodZona))
	begin

		set @idempresa=(select top 1 idempresa from zona where estado=1 and codzona= @CodZona)
		exec spp_ctrl_PlancuentasxEmpresa @idempresa,-44 	
	end
-- actualizando plancontable 2020
if not exists(select top 1 anio from plancuentascontables where estado=1 and anio='202000' and idempresa = 
				(select top 1 idempresa from zona where estado=1 and codzona= @CodZona))
	begin
	if exists(select top 1 anio from plancuentascontables where estado=1 and anio='200900' and idempresa = 
					(select top 1 idempresa from zona where estado=1 and codzona= @CodZona))
		begin
			set @idempresa=(select top 1 idempresa from zona where estado=1 and codzona= @CodZona)
			exec spp_ctrl_PlancuentasxEmpresa20 @idempresa,@idempresa,'2020'	
		end
	else
		begin
			set @idempresa=(select top 1 idempresa from zona where estado=1 and codzona= @CodZona)
			exec spp_ctrl_PlancuentasxEmpresa @idempresa,-4 	
		end
	end
/****** Object:  StoredProcedure [dbo].[spp_ctrl_PlancuentasxEmpresa]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_ctrl_PlancuentasxEmpresa]
@IdEmpresa int, @CopiarDe int
as
if @CopiarDe<0
	begin
		insert into plancuentascontables select CodCuentaContable,Descripcion,CtaDebe,CtaHaber,CtaCierre,TipoMovPCCDB,NivelCuenta,TipoCuenta,TipoAnalisis,
		ConverMoneda,ManejoDocumentPendientes,AjusteInflacion,ValidaAutomatico,Estado,@IdEmpresa,
		Porcenta, CtaDebe2, Porcenta2, Ctadebe3, Porcenta3, Ctadebe4, Porcenta4,CtaPDT,anio
		from PlanCuentasMaestro
		where idempresa=abs(@CopiarDe)
	end
else
	begin
		insert into plancuentascontables select CodCuentaContable,Descripcion,CtaDebe,CtaHaber,CtaCierre,TipoMovPCCDB,NivelCuenta,TipoCuenta,TipoAnalisis,
		ConverMoneda,ManejoDocumentPendientes,AjusteInflacion,ValidaAutomatico,Estado,@IdEmpresa,
		Porcenta, CtaDebe2, Porcenta2, Ctadebe3, Porcenta3, Ctadebe4, Porcenta4, CtaPDT,anio
		from PlanCuentasContables
		where idempresa=@CopiarDe
		and anio = (select max(anio) from PlanCuentasContables
					where idempresa=@CopiarDe)
	end


set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
/****** Object:  StoredProcedure [dbo].[spp_ctrl_PlancuentasxEmpresa20]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_ctrl_PlancuentasxEmpresa20]
@IdEmpresa int, @CopiarDe int, @anio int
as
-- exec spp_ctrl_PlancuentasxEmpresa20 65,65,2021
if @CopiarDe<0
	begin
		insert into plancuentascontables select CodCuentaContable,Descripcion,CtaDebe,CtaHaber,CtaCierre,TipoMovPCCDB,NivelCuenta,TipoCuenta,TipoAnalisis,
		ConverMoneda,ManejoDocumentPendientes,AjusteInflacion,ValidaAutomatico,Estado,@IdEmpresa,
		Porcenta, CtaDebe2, Porcenta2, Ctadebe3, Porcenta3, Ctadebe4, Porcenta4,CtaPDT,anio
		from PlanCuentasMaestro
		where idempresa=abs(@CopiarDe)
		order by CodCuentaContable
	end
else
	begin
		declare @anioAnt int
		
		set @anioAnt= (case when @anio<=2020 then 2020 else @anio-1 end)

	if not exists(select top 1 anio from plancuentascontables where estado=1 and anio='202000' and idempresa = @IdEmpresa)
		begin
			insert into plancuentascontables 
				select CodCuentaContable,Descripcion,CtaDebe,CtaHaber,CtaCierre,TipoMovPCCDB,NivelCuenta,TipoCuenta,TipoAnalisis,
				ConverMoneda,ManejoDocumentPendientes,AjusteInflacion,ValidaAutomatico,Estado,@IdEmpresa,
				Porcenta, CtaDebe2, Porcenta2, Ctadebe3, Porcenta3, Ctadebe4, Porcenta4, CtaPDT,convert(varchar(4),@anio)+'00'
				from PlanCuentasContables
				where idempresa=@CopiarDe and anio='200900'
				order by CodCuentaContable
		end
	else
		begin
			insert into plancuentascontables 
				select CodCuentaContable,Descripcion,CtaDebe,CtaHaber,CtaCierre,TipoMovPCCDB,NivelCuenta,TipoCuenta,TipoAnalisis,
				ConverMoneda,ManejoDocumentPendientes,AjusteInflacion,ValidaAutomatico,Estado,@IdEmpresa,
				Porcenta, CtaDebe2, Porcenta2, Ctadebe3, Porcenta3, Ctadebe4, Porcenta4, CtaPDT,convert(varchar(4),@anio)+'00'
				from PlanCuentasContables
				where idempresa=@CopiarDe and anio=convert(varchar(4),@anioAnt)+'00'
				order by CodCuentaContable
		end
	end

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
/****** Object:  StoredProcedure [dbo].[spp_Cuenta34intangibles]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Cuenta34intangibles]
@anio CHAR( 4 ),
@MesA Char(2 ),
@MesB Char(2 ),
@ZonaA CHAR( 6 ),
@ZonaB CHAR( 6 ),
@UnidadA CHAR( 10 ),
@UnidadB CHAR( 10 ),
@IdEmpresa int,
@Cuenta CHAR(2)
AS

If @Cuenta = '34'
---filtra solo la cuenta 34 formato 3.19
select c.anio,d.codcuenta, d.fechadocreferencia, 
	NroDocReferencia = (rtrim(t.Descripcion)+'- '+ d.nrodocreferencia), 
		descripcion = rtrim(p.Descripcion)+' - '+substring(d.glosa,charindex('COMPRA DE ', d.glosa) + (Case When charindex('COMPRA DE ', d.glosa)=0 then 1 else 10 end) ,60),
	intangible = '01', valor= d.impdebe, valorh= d.MontoIgv, nrodocumento 
 from movcontables_d d inner join movcontables_c c 
	on d.IdMovContables_c = c.IdMovContables_c
	inner join zona z on c.zona= z.codzona 
 	inner join tipodocumento t  on t.codigodocumento=d.codigodocumentoreferencia
	inner join (select descripcion,codcuentacontable from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@anio)<'2020' then '2009' else rtrim(@anio) end)) p on p.codcuentacontable=d.codcuenta
where left(d.codcuenta,2)='34'
	and d.estado not in ('4','D','A') and c.estado not in ('4','D','A')
	and d.codunidadeconomica between  @UnidadA and @UnidadB
	and c.zona between @ZonaA and @ZonaB 
	and d.impdebe>0
	and c.anio = @anio
	AND c.mes between @MesA and @MesB
	and z.idempresa= @idempresa
else
--- muestra todos los activos cta 30 al 39
	select c.anio,d.codcuenta, d.fechadocreferencia, 
		NroDocReferencia = (rtrim(t.Descripcion)+'- '+ d.nrodocreferencia), 
		descripcion = rtrim(p.Descripcion)+' - '+substring(d.glosa,charindex('COMPRA DE ', d.glosa) + (Case When charindex('COMPRA DE ', d.glosa)=0 then 1 else 10 end) ,60),
		intangible = '01', valor= d.impdebe, valorh= d.MontoIgv, d.nrodocumento 
	 from movcontables_d d inner join movcontables_c c 
		on d.IdMovContables_c = c.IdMovContables_c
		inner join zona z on c.zona= z.codzona 
 		inner join tipodocumento t  on t.codigodocumento=d.codigodocumentoreferencia
		inner join (select descripcion,codcuentacontable from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@anio)<'2020' then '2009' else rtrim(@anio) end)) p on p.codcuentacontable=d.codcuenta
	where left(d.codcuenta,1)='3'
		and d.estado not in ('4','D','A') and c.estado not in ('4','D','A')
		and d.codunidadeconomica between  @UnidadA and @UnidadB
		and c.zona between @ZonaA and @ZonaB 
		and d.impdebe>0
		and c.anio = @anio
		AND c.mes between @MesA and @MesB
		and z.idempresa= @idempresa
/****** Object:  StoredProcedure [dbo].[spp_Fact_Elect_Informes]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Fact_Elect_Informes]
@opcion AS VARCHAR(20), @fechaInicio AS VARCHAR(10), @fechaFin AS VARCHAR(10), @nombreCert AS VARCHAR(750), @entrysign AS VARCHAR(750)
OUTPUT AS

DECLARE @fecha CHAR(10), @lcTipoComprobante AS CHAR(2), @lcSerie AS VARCHAR(5), @lcMini INT, @lcMaxi INT, @i INT, @id INT, @count INT
DECLARE @prim AS VARCHAR(250), @seg As VARCHAR(250), @terc AS VARCHAR(250), @cuart AS VARCHAR(250)

------------------------- Datos -------------------------
--	exec spp_Fact_Elect_Informes 'CERT', '14/08/2019', '09/09/2019', 'CertificadoPFX.pfx', '(pe1_pfvp_365_sw_kpsc)_sanchez_40540109'
--	exec spp_Fact_Elect_Informes 'ADDLIC', '14/08/2019', '09/09/2019', 'Alimentos Balanceados Extrusados E.I.R.L.', 'CEA Comercial$6 Meses&4'
----------------------------------------------------------

	IF @opcion = 'CERT'
		Begin
			
			Update Parametros set Valor = @nombreCert where clave = 'NombCerti'
			Update Parametros set Valor = @entrysign where clave = 'EntrySign'
			Update tbl_Empresa set FAltaCert = @fechaInicio, FBajaCert = @fechaFin where codigo_empresa = 1

		End
	Else If @opcion = 'LICC'
		Begin

			Update tbl_Empresa set Licencia = @entrysign, FechaFin = convert(datetime, @fechaFin, 120) where codigo_empresa = 1

		End
	Else If @opcion = 'ADDLIC'
		Begin

			Select master.dbo.fn_varbintohexsubstring(0, HashBytes('SHA1', @nombreCert + @fechaInicio + @fechaFin + @entrysign), 1, 0) licencia from tbl_empresa

			--HASHBYTES('MD5', @nombreCert + @fechaInicio + @fechaFin + @entrysign) licencia from tbl_empresa

		End

RETURN

/****** Object:  StoredProcedure [dbo].[Spp_FactElecGestionDocs]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[Spp_FactElecGestionDocs]
@Datos as varchar(150) = null

as
declare @Tipo as char(10),@TipoResumen as char(1),@TipoDoc as char(4),@Fecha1 as char(10),@Fecha2 as char(10),@Situacion as char(24), @buscar as char(65)
declare @codunidadA as varchar(10),@codunidadB as varchar(10),@ZonaA as varchar(10),@ZonaB as varchar(10),@anio as char(4),@mesA as char(2),@mesB as char(2)
--exec Spp_FactElecGestionDocs @Datos='RESDIARCOMP01/07/202103/08/2021TODOS         34'

set @tipo= left(@Datos,6) --Resumen Diario
set @tipoResumen= substring(@Datos,7,1) -- Tipo Resumen
set @tipoDoc = substring(@Datos,8,4) -- COMPRAS O VENTAS
set @fecha1 = substring(@Datos,12,10)
set @fecha2 = substring(@Datos,22,10)
set @Situacion = Substring(@Datos,32,14) -- tipo = TODOS
set @buscar = substring(@Datos,46,64)  -- idempresa

set @anio=right(@fecha2,4)
set @mesA=substring(@fecha1,4,2)
set @mesB=substring(@fecha2,4,2)

set @situacion = (Case When @situacion='RESPUESTA PEND' Then 'RESPUESTA PENDIENTE' Else @situacion End)
set @buscar = (Case When rtrim(@buscar)= 'IENTE' Then '' Else @buscar End)
print @situacion
print @buscar 

select @ZonaA=min(codzona),@ZonaB=max(codzona) from zona where idempresa=@buscar
select @codunidadA=min(codUnidadEconomica),@codunidadB=max(codUnidadEconomica) from unidad_economica where codzona between @ZonaA and @ZonaB

print @codunidadA 
print @codunidadB 
print @ZonaA 
print @ZonaB 
print @anio 
print @mesA 
print @mesB
print @fecha1
print @fecha2

If @Tipo='RESDIA' 
Begin

-- resumen diario
	if @tipoResumen= 'R' -- Resumen de ventas del Facturador Observados o errados
	begin

		if @TipoDoc='COMP'
		Begin
		--Para Compras
			delete from LeCompras

			insert into LeCompras
			--EXEC spp_Rep_RegistroCompra @Anio,@aMes,@bMes,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@IdEmpresa
			EXEC spp_Rep_RegistroCompra @anio,@mesA,@mesB,@ZonaA,@ZonaB,@codunidadA,@codunidadB,'01','99',@buscar

		--Para Ventas
		--	EXEC spp_rep_RegVentasIngresos @ZonaVta,@UnidadVta,@Anio,@aMes,@bMes

				select ROW_NUMBER() OVER (ORDER BY left(nroDocumento,3),fechaDocReferencia desc, nroDocReferencia desc) nro, 
				fechaDocReferencia fecha_emision,serie  direccion_comprobante,
				ltrim(str(nrodocreferencia*1)) nombre_comprobante,  
				(case when DesTipoDocumento in ('01') then 'FAC' when DesTipoDocumento in ('03') then 'BVT' 
					  when DesTipoDocumento in ('07') then 'NCR' when DesTipoDocumento in ('08') then 'NDB' 
					  when DesTipoDocumento in ('09') then 'GUI' when DesTipoDocumento in ('02') then 'REH' 
					  when DesTipoDocumento in ('14') then 'RES' when DesTipoDocumento in ('05') then 'BVI' else '' end) Tipo_doc,
				serie+'-'+right(rtrim(nrodocreferencia),7) numero_correlativo, --'' docModifica,
				ruc,proveedor cliente_emisor,totalImporte monto_total,
				--isnull(monto_grati,0) bonif, 
				'' fecha_envio, --isnull(nro_ticket,'') ticket, 
				'' fecha_respuesta,
				--(Case When Estado_anulacion='ANULADO' Then 'ANULADO' Else 'EMITIDO' End) EstadoDoc,
				'' Situacion,
				'' Respuesta_sunat, 1 id --, isnull(serie,'') serie, isnull(numero_inicial,'') inicio, isnull(numero_final,'') final,
				--isnull(faltantes,'') faltantes
				from leCompras
				where --left(tipo_comprobante,2) like '%'+rtrim(@tipoDoc)+'%' --3 solo boleta
				--and rtrim(left(estado_anulacion,1)) in (rtrim(@DocAnul))
				DestipoDocumento in ('01','03','02','07','08') and 
				fechaDocReferencia between convert(datetime,@Fecha1,103) and convert(datetime,@Fecha2,103)
				and (proveedor like '%'+ltrim(rtrim(@situacion))+'%' or ruc like '%'+ltrim(rtrim(@situacion))+'%' or serie+'-'+nrodocreferencia like '%'+ltrim(rtrim(@situacion))+'%')
		End

		if @TipoDoc='VENT'
		Begin
		--Para Ventas
			--exec "spp_rep_RegVentasIngresos";1 'select distinct(codZona) from zona where idEmpresa=57', '57', '2012', '01', '01'
			declare @zonaVta varchar(200)

			set @zonaVta = 'select distinct(codZona) from zona where idEmpresa='+@buscar
			print @zonaVta

			EXEC spp_rep_RegVentasIngresos @zonaVta,@buscar,@Anio,@MesA,@MesB

print '22'
			print convert(datetime,'01/01/2021',103)

				select ROW_NUMBER() OVER (ORDER BY left(nroDocumento,3),fechaEmision desc, left(numero,7) desc) nro, 
				fechaemision,serie  direccion_comprobante,
				ltrim(str(left(numero,7)*1)) nombre_comprobante,  
				(case when codigoDocumento in ('01') then 'FAC' when codigoDocumento in ('03') then 'BVT' 
					  when codigoDocumento in ('07') then 'NCR' when codigoDocumento in ('08') then 'NDB' 
					  when codigoDocumento in ('09') then 'GUI' when codigoDocumento in ('02') then 'REH' 
					  when codigoDocumento in ('14') then 'RES' when codigoDocumento in ('05') then 'BVI' else '' end) Tipo_doc,
				serie+'-'+left(numero,7) numero_correlativo, --'' docModifica,
				ruc,entidad cliente_emisor,total monto_total,
				--isnull(monto_grati,0) bonif, 
				'' fecha_envio, --isnull(nro_ticket,'') ticket, 
				'' fecha_respuesta,
				--(Case When Estado_anulacion='ANULADO' Then 'ANULADO' Else 'EMITIDO' End) EstadoDoc,
				'' Situacion,
				'' Respuesta_sunat, 1 id --, isnull(serie,'') serie, isnull(numero_inicial,'') inicio, isnull(numero_final,'') final,
				--isnull(faltantes,'') faltantes select top 5 * from lecompras select * 
				from leVentas
				where --left(tipo_comprobante,2) like '%'+rtrim(@tipoDoc)+'%' --3 solo boleta
				--and rtrim(left(estado_anulacion,1)) in (rtrim(@DocAnul))
				codigoDocumento in ('01','03','02','07','08') and 
				ruc<>'00001' and  -- no considera anulados
				convert(datetime,fechaemision,5) between convert(datetime,@Fecha1,103) and convert(datetime,@Fecha2,103)
				and (entidad like '%'+ltrim(rtrim(@situacion))+'%' or ruc like '%'+ltrim(rtrim(@situacion))+'%' or serie+'-'+left(numero,7) like '%'+ltrim(rtrim(@situacion))+'%')
		End

	End
End


/****** Object:  StoredProcedure [dbo].[spp_generaParametros]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_generaParametros]
	@idEmpresa bigint,@idSource bigint
as

	DECLARE @lcExiste AS INT
	SET @lcExiste=(SELECT count(clave) FROM Parametros WHERE idempresa=@idEmpresa GROUP BY clave)

	IF isnull(@lcExiste,0)=0
	BEGIN

		if @idSource<0
			begin
				insert into parametros
				select @idEmpresa,Clave,Valor,SubValor,Estado from parametrosMaestro where idEmpresa=(case when abs(@idSource)=44 then 4 else abs(@idSource) end)
				-- actualiza parametros planilla
				insert into tbl_parametrosAux
				select orden,descripcion,monto,ctadebe,ctahaber,idempresa=@idEmpresa,estado from tbl_parametrosaux where idempresa=0 order by orden
		
			end
		else
			begin
				insert into parametros
				select @idEmpresa,Clave,Valor,SubValor,Estado from parametros where idEmpresa=@idSource
				-- actualiza parametros planilla
				insert into tbl_parametrosAux
				select orden,descripcion,monto,ctadebe,ctahaber,idempresa=@idEmpresa,estado from tbl_parametrosaux where idempresa=0 order by orden
			end
	END
/****** Object:  StoredProcedure [dbo].[spp_GeneraZonaUE]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_GeneraZonaUE]
@DES1 VARCHAR(100),
@IdEmpresa int
as
declare @AVISO TINYINT

	declare @codigozona char(6),@max int
		select @max=isnull(max(right(rtrim(ltrim(CODZONA)),6)),0)from ZONA
		set @codigozona=replicate('0',6-len(rtrim(ltrim(@max+1))))+rtrim(ltrim(convert(char(6),@max+1)))

		-- Actualiza Zona
		INSERT INTO ZONA (CODZONA,ZONA,DESCRIPCION,ESTADO,IDEMPRESA)
		VALUES(@codigozona,@DES1,LEFT(@DES1,15),1,@IdEmpresa)

		-- Actualiza Unidad Economica

		INSERT INTO UNIDAD_ECONOMICA(CODUNIDADECONOMICA,UNIDADECONOMICA,DESCRIPCION,CODZONA,ESTADO)
		VALUES(@codigozona,@DES1,LEFT(@DES1,10),@codigozona,1)
		IF @@ERROR<>0
			SET @AVISO=2

--Verificacion de respuesta de transaccion
IF @AVISO=2
	BEGIN
		RAISERROR('ERROR: EN EL INGRESO DE DATOS',1,16)
		WITH NOWAIT RETURN
	END
ELSE
	IF @AVISO=1
		BEGIN
		RAISERROR('ADVERTENCIA: YA EXISTE EL REGISTRO',1,16)
		WITH NOWAIT RETURN
		END

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
/****** Object:  StoredProcedure [dbo].[spp_inst_Empresa]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
--select * from empresa


CREATE PROCEDURE [dbo].[spp_inst_Empresa]
@IdEmpresa int output,
@RazonSocial varchar(60),
@RUC varchar(11),
@Rubro varchar(60),
@Telefono varchar(12),
@Direccion varchar(90),
@Ciudad varchar(40),
@PDT varchar(20),
@AnioIniContable char(4),
@PorRenta decimal(12,6),
@PorParticipaTrab int,
@Codigo_Tipo_Empresa int,
@oper varchar(4)
as
declare @codEmpre int
set @codEmpre =(select isnull(max(idempresa),0) from empresa)+1
if @oper='inst'
begin
if not exists(select RazonSocial from Empresa where razonsocial=@RazonSocial) and 
	not exists(select RUC from Empresa where RUC=@RUC)
	begin
		insert into empresa values(@codEmpre,@RazonSocial,@RUC,@Rubro,@Telefono,@Direccion,@Ciudad,0,0,0,@PDT,@AnioIniContable,@PorRenta,@PorParticipaTrab,@Codigo_Tipo_Empresa,'D:\Gestion\'+rtrim(@RUC)+'\')
		set @IdEmpresa=@codEmpre
		if @@error<>0
			begin
				raiserror('ERROR: En el ingreso de datos',1,16)
				with nowait
				return
			end
	end
else
	begin
		raiserror('Ya existe la Empresa',1,16)
		with nowait
		return
	end
end

if @oper='up'
	begin
			update empresa
			set Razonsocial=@RazonSocial,RUC=@RUC,rubro=@Rubro,Telefono=@Telefono,Direccion=@Direccion,Ciudad=@Ciudad,Regimen=@PDT,AnioIniContable=@AnioIniContable,
				PorRenta=@PorRenta,PorParticipaTrab=@PorParticipaTrab,Codigo_Tipo_Empresa=@Codigo_Tipo_Empresa,direccionPle='D:\Gestion\'+rtrim(@RUC)+'\'
			where idempresa=@idEmpresa
	end


--actualiza procedimiento spp_up_MovContables_D 
-- se agrego el control de la cuenta por empresa
-- se agrego distribucion de gastos
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
/****** Object:  StoredProcedure [dbo].[spp_inst_MovContables_D]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_inst_MovContables_D]
@idMovContables_d int, @IdMovContables_C int,@CodigoDocumento char(18),@NroDocumento char(10),
@CRP char(10),@CodActividad char(14),@CodPar char(14),@CodSubActividad char(10),
@FechContable datetime,@CodMGC char(3),@ClaseMovimiento char(2),@CtaDestino nchar(10),
@CodigoDocumentoReferencia nchar(10),@NroDocReferencia nchar(14),@FechaDocReferencia datetime,@FechaVencimiento datetime,
@CodigoDocumentoFuente nchar(10),@NroDocumentoFuente nchar(14),@FechaDocumentoFuente datetime,@CodigoCtaBancaria nchar(10),
@NroOperacion nchar(10),@NroCheque nchar(40),@CuentaNaturaleza char(12),@CodCuenta nchar(10),
@CentroCosto char(15),@TipoMov char(1),@Glosa varchar(250),@Orden varchar(250),
@Afecto bit,@Moneda char(2),@TipoCambio decimal(5,3),@impDebe decimal(15,2),
@impHaber decimal(15,2),@impDebeDolar decimal(15,2),@impHaberDolar decimal(15,2),@TipoAnexo char(2),
@CodAnexo char(14),@codPro char(14),@u_codi char(6),@datUsu datetime,
@Correlativo char(10) output,@estado char(1),@Destino char(1),@Anexo char(11),
@GastoIntPersonal bit,@cocach char(10),@nomanx varchar(250),@codIn char(24),
@tipdca char(2),@nrodca char(10),@reten bit,@rigv bit,
@corrigv char(10),@OPER VARCHAR(3),@CodAduana nchar(3),@FechDUA smalldatetime,@CodDUA nchar(30),
@ISC bit, @TipoOper int,@NroDetrac varchar(24),@FechaDetrac datetime,@CodigoDetraccion varchar(3),
@Fecha_RefComprobModi smalldatetime,@Tipo_RefComprobModi char(2),@Serie_RefComprobModi char(4),@Nro_RefComprobModi nchar(10),
@CodigoPercepcion varchar(5),@PorcentajePercepcion decimal(10,2),@CuentaAbono varchar(10),@MontoIGV decimal(12,3),
@NumeroPercepcion varchar(11),@FechaPercepcion datetime,@MontoRetencion4 decimal(18,2),
@TipoMedioPago nchar(3),@MontoISC decimal(10,2),@MontoDetraccionIvap decimal(10,2),@MontoCuentaAuxiliar decimal(10,2),@MontoIcbPer decimal(10,2),@MontoRetencionIGV decimal(18,2),
@CuentaCCosto varchar(10)
as
---------------------------------Eliminando registros
SET @reten = ISNULL( @reten, 0 )
set @tipomov=(select case when @impDebe>0.0 or @impDebeDolar>0.0 then 'D' when @impHaber>0.0 or @impHaberDolar>0.0 then 'H' else '-' end)
IF @CentroCosto = '' and @idMovContables_d=0
	begin
		DELETE MOVCONTABLES_D WHERE idMovContable_d = @idMovContables_d
		delete from movcontables_d where idmovcontables_c =0 
		delete from movcontables_d where idmovcontables_c is null
	end

if @idMovcontables_C=0 and len(@NroDocumento)=10
	begin
		update movcontables_c set estado ='5' where anio='2012' and codunidadeconomica=@CodigoDocumento
		and estado=''

		set @idMovcontables_C=(select idMovcontables_C from movcontables_C where CodUnidadEconomica=@CodigoDocumento and NroDoc=@NroDocumento and CodMGC=@CodMGC and (Glosa='CANCELACION EN EFECTIVO*' OR Glosa='PAGO A PROVEEDORES*' OR Glosa='CANCELACION EN EFECTIVO M*' OR Glosa='PAGO A PROVEEDORES M*' OR Glosa='PAGO PLANILLA*' OR Glosa='COSTEO DEL IGV*') and estado not in ('A','5'))
	end

---------------------------------Creando Correl
Declare @lcCorrel int,@lcCorrelc CHAR(10),@corigv int,@lcCorreli char(10),@valzona char(3), @idEmpresa int 
--------------------
Select @idEmpresa= a.idEmpresa from empresa a inner join zona b on a.idEmpresa=b.idEmpresa inner join unidad_economica c on c.codZona=b.codZona where c.codUnidadEconomica=@CodigoDocumento and b.estado<>0 and c.estado <>0
Select @lcCorrel= e_corr from empresa where idempresa=@idempresa

UPDATE Empresa SET E_CORR = E_CORR + 1 where idempresa=@idempresa
SET @lcCorrelc =Replicate('0',10-LEN(@lcCorrel+1))+ CONVERT(CHAR,@lcCorrel+1)
if @Correlativo!='-'
	begin
		set @lcCorrelc=@Correlativo
	end
set @Correlativo=@lcCorrelc
SET @lcCorreli = ''


IF @OPER=''
	BEGIN
		INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
		CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
		FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
		NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
		impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,
		estado,Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,reten,
		rigv,corrigv,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,CodigoDetraccion,
		Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,
		CodigoPercepcion,PorcentajePercepcion,CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,
		MontoDetraccionIvap, MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

		VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
		@CtaDestino,@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
		@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
		@NroCheque,@CuentaNaturaleza,@CodCuenta,@CentroCosto,@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
		(Case When rtrim(@CodigoDocumentoReferencia)='07' and left(@CodCuenta,2)='70' Then @impDebe-@MontoDetraccionIvap Else @impDebe End),
		@impHaber,@impDebeDolar,@impHaberDolar,@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,
		@estado,@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@reten,
		@rigv,@corrigv,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,@CodigoDetraccion,
		@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,
		@CodigoPercepcion,@PorcentajePercepcion,@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,
		@MontoDetraccionIvap,(case when @MontoIGV<>0 then 0 else @MontoCuentaAuxiliar end),@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
		
		/*Este bloque es para el ingreso en las cuentas de amarre*/
		declare @lcCtaDebe varchar(10), @lcCtaHaber varchar(10),
			@lcPorcenta varchar(3), @lcCtaDebe2 varChar(10),
			@lcPorcenta2 varchar(3), @lcCtaDebe3 varChar(10),
			@lcPorcenta3 varchar(3), @lcCtaDebe4 varChar(10),
			@lcPorcenta4 varchar(3)
		-- buscando cuentas de amarre en los c.Costos
		Declare @lcCCostoCtaDebe varchar(10), @lcCCostoCtaHaber varchar(10),
			@lcCcPorcenta varchar(3), @lcCcCtaDebe2 varChar(10),
			@lcCcPorcenta2 varchar(3), @lcCcCtaDebe3 varChar(10),
			@lcCcPorcenta3 varchar(3), @lcCcCtaDebe4 varChar(10),
			@lcCcPorcenta4 varchar(3)

		select @lcCtaDebe=max(CtaDebe), @lcCtaHaber=max(CtaHaber), @lcPorcenta=max(Porcenta), @lcCtaDebe2=max(CtaDebe2), @lcPorcenta2=max(Porcenta2),
				@lcCtaDebe3=max(CtaDebe3), @lcPorcenta3=max(Porcenta3), @lcCtaDebe4=max(CtaDebe4), @lcPorcenta4=max(Porcenta4) 
		from plancuentasContables where idempresa = @idEmpresa and left(anio,4)= (Case When year(@FechaDocReferencia)>2019 Then '202'+substring(@NroDocumento,3,1) Else '2009' End) and codCuentaContable=@CodCuenta 
		-- obteniendo cuentas del Centro de Costo
		Select @lcCCostoCtaDebe =@CuentaCCosto, --max(ctadebe), 
				@lcCCostoCtaHaber =max(ctaHaber), @lcCcPorcenta=max(Porcenta), @lcCcCtaDebe2=max(CtaDebe2),
				@lcCcPorcenta2=max(Porcenta2), @lcCcCtaDebe3=max(CtaDebe3), @lcCcPorcenta3=max(Porcenta3), @lcCcCtaDebe4=max(CtaDebe4), @lcCcPorcenta4=max(Porcenta4) 
		from centrocosto where idempresa = @idEmpresa and codcentrocosto=@CentroCosto 

		declare @MontoD decimal(10,2), @MontoH decimal(10,2), @MontoDD decimal(10,2), @MontoHD decimal(10,2)

		declare @Monto1 decimal(10,2), @Monto2 decimal(10,2), @Monto3 decimal(10,2), @Monto4 decimal(10,2),
				@MontoH1 decimal(10,2), @MontoH2 decimal(10,2),@MontoH3 decimal(10,2),@MontoH4 decimal(10,2),
				@MontoDD1 decimal(10,2), @MontoDD2 decimal(10,2), @MontoDD3 decimal(10,2), @MontoDD4 decimal(10,2),
				@MontoHD1 decimal(10,2), @MontoHD2 decimal(10,2), @MontoHD3 decimal(10,2), @MontoHD4 decimal(10,2)
		-- para los centro de costo
		declare @ccMonto1 decimal(10,2), @ccMonto2 decimal(10,2), @ccMonto3 decimal(10,2), @ccMonto4 decimal(10,2),
				@ccMontoH1 decimal(10,2), @ccMontoH2 decimal(10,2),@ccMontoH3 decimal(10,2),@ccMontoH4 decimal(10,2),
				@ccMontoDD1 decimal(10,2), @ccMontoDD2 decimal(10,2), @ccMontoDD3 decimal(10,2), @ccMontoDD4 decimal(10,2),
				@ccMontoHD1 decimal(10,2), @ccMontoHD2 decimal(10,2), @ccMontoHD3 decimal(10,2), @ccMontoHD4 decimal(10,2)

		set @MontoD=@impDebe 
		set @MontoH=@impHaber 
		set @MontoDD=@impDebeDolar
		set @MontoHD=@impHaberDolar

		Set @CentroCosto='-'

		----- calculando los porcentajes 
		Set @Monto1 = round(@MontoD*(case when @lcporcenta in (100, 0) then 1 else (Cast(@lcPorcenta as decimal(6,1))/100) end),2)
		Set @Monto2 = Round(@MontoD*(case when @lcporcenta2 in (100, 0) then 1 else (Cast(@lcPorcenta2 as decimal(6,1))/100) end),2)
		Set @Monto3 = Round(@MontoD*(case when @lcporcenta3 in (100, 0) then 1 else (Cast(@lcPorcenta3 as decimal(6,1))/100) end),2)
		Set @Monto4 = Round(@MontoD*(case when @lcporcenta4 in (100, 0) then 1 else (Cast(@lcPorcenta4 as decimal(6,1))/100) end),2)
		Set @MontoH1 = round(@MontoH*(case when @lcporcenta in (100, 0) then 1 else (Cast(@lcPorcenta as decimal(6,1))/100) end),2)
		Set @MontoH2 = Round(@MontoH*(case when @lcporcenta2 in (100, 0) then 1 else (Cast(@lcPorcenta2 as decimal(6,1))/100) end),2)
		Set @MontoH3 = Round(@MontoH*(case when @lcporcenta3 in (100, 0) then 1 else (Cast(@lcPorcenta3 as decimal(6,1))/100) end),2)
		Set @MontoH4 = Round(@MontoH*(case when @lcporcenta4 in (100, 0) then 1 else (Cast(@lcPorcenta4 as decimal(6,1))/100) end),2)
		Set @MontoDD1 = round(@MontoDD*(case when @lcporcenta in (100, 0) then 1 else (Cast(@lcPorcenta as decimal(6,1))/100) end),2)
		Set @MontoDD2 = Round(@MontoDD*(case when @lcporcenta2 in (100, 0) then 1 else (Cast(@lcPorcenta2 as decimal(6,1))/100) end),2)
		Set @MontoDD3 = Round(@MontoDD*(case when @lcporcenta3 in (100, 0) then 1 else (Cast(@lcPorcenta3 as decimal(6,1))/100) end),2)
		Set @MontoDD4 = Round(@MontoDD*(case when @lcporcenta4 in (100, 0) then 1 else (Cast(@lcPorcenta4 as decimal(6,1))/100) end),2)
		Set @MontoHD1 = round(@MontoHD*(case when @lcporcenta in (100, 0) then 1 else (Cast(@lcPorcenta as decimal(6,1))/100) end),2)
		Set @MontoHD2 = Round(@MontoHD*(case when @lcporcenta2 in (100, 0) then 1 else (Cast(@lcPorcenta2 as decimal(6,1))/100) end),2)
		Set @MontoHD3 = Round(@MontoHD*(case when @lcporcenta3 in (100, 0) then 1 else (Cast(@lcPorcenta3 as decimal(6,1))/100) end),2)
		Set @MontoHD4 = Round(@MontoHD*(case when @lcporcenta4 in (100, 0) then 1 else (Cast(@lcPorcenta4 as decimal(6,1))/100) end),2)
		----- calculando los porcentajes para Centro de costos
		Set @ccMonto1 = round(@MontoD*(case when @lcccporcenta in (100, 0) then 1 else (Cast(@lcccPorcenta as decimal(6,1))/100) end),2)
		Set @ccMonto2 = Round(@MontoD*(case when @lcccporcenta2 in (100, 0) then 1 else (Cast(@lcccPorcenta2 as decimal(6,1))/100) end),2)
		Set @ccMonto3 = Round(@MontoD*(case when @lcccporcenta3 in (100, 0) then 1 else (Cast(@lcccPorcenta3 as decimal(6,1))/100) end),2)
		Set @ccMonto4 = Round(@MontoD*(case when @lcccporcenta4 in (100, 0) then 1 else (Cast(@lcccPorcenta4 as decimal(6,1))/100) end),2)
		Set @ccMontoH1 = round(@MontoH*(case when @lcccporcenta in (100, 0) then 1 else (Cast(@lcccPorcenta as decimal(6,1))/100) end),2)
		Set @ccMontoH2 = Round(@MontoH*(case when @lcccporcenta2 in (100, 0) then 1 else (Cast(@lcccPorcenta2 as decimal(6,1))/100) end),2)
		Set @ccMontoH3 = Round(@MontoH*(case when @lcccporcenta3 in (100, 0) then 1 else (Cast(@lcccPorcenta3 as decimal(6,1))/100) end),2)
		Set @ccMontoH4 = Round(@MontoH*(case when @lcccporcenta4 in (100, 0) then 1 else (Cast(@lcccPorcenta4 as decimal(6,1))/100) end),2)
		Set @ccMontoDD1 = round(@MontoDD*(case when @lcccporcenta in (100, 0) then 1 else (Cast(@lcccPorcenta as decimal(6,1))/100) end),2)
		Set @ccMontoDD2 = Round(@MontoDD*(case when @lcccporcenta2 in (100, 0) then 1 else (Cast(@lcccPorcenta2 as decimal(6,1))/100) end),2)
		Set @ccMontoDD3 = Round(@MontoDD*(case when @lcccporcenta3 in (100, 0) then 1 else (Cast(@lcccPorcenta3 as decimal(6,1))/100) end),2)
		Set @ccMontoDD4 = Round(@MontoDD*(case when @lcccporcenta4 in (100, 0) then 1 else (Cast(@lcccPorcenta4 as decimal(6,1))/100) end),2)
		Set @ccMontoHD1 = round(@MontoHD*(case when @lcccporcenta in (100, 0) then 1 else (Cast(@lcccPorcenta as decimal(6,1))/100) end),2)
		Set @ccMontoHD2 = Round(@MontoHD*(case when @lcccporcenta2 in (100, 0) then 1 else (Cast(@lcccPorcenta2 as decimal(6,1))/100) end),2)
		Set @ccMontoHD3 = Round(@MontoHD*(case when @lcccporcenta3 in (100, 0) then 1 else (Cast(@lcccPorcenta3 as decimal(6,1))/100) end),2)
		Set @ccMontoHD4 = Round(@MontoHD*(case when @lcccporcenta4 in (100, 0) then 1 else (Cast(@lcccPorcenta4 as decimal(6,1))/100) end),2)

----------- Para el primer porcentaje
		if @lcCtaDebe!='' and @estado!='D' and (@lcPorcenta!='' or @lcporcenta !=0)
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcCtaDebe,'-',@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						@Monto1,@MontoH1,@MontoDD1,@MontoHD1,
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
----------- Para el segundo porcentaje
		if @lcCtaDebe2!='' and @estado!='D' and (@lcPorcenta2!='' or @lcporcenta2 != 0)
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcCtaDebe2,'-',@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						(Case when (@MontoD-@Monto1-@Monto2)<=0.02 then @MontoD-@Monto1 else @Monto2 end),
						(Case when (@MontoH-@MontoH1-@MontoH2)<=0.02 then @MontoH-@MontoH1 else @MontoH2 end),
						(Case when (@MontoDD-@MontoDD1-@MontoDD2)<=0.02 then @MontoDD-@MontoDD1 else @MontoDD2 end),
						(Case when (@MontoHD-@MontoHD1-@MontoHD2)<=0.02 then @MontoHD-@MontoHD1 else @MontoHD2 end),
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
----------- Para el Tercer porcentaje
		if @lcCtaDebe3!='' and @estado!='D' and (@lcPorcenta3!='' or @lcporcenta3 != 0)
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcCtaDebe3,'-',@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						(Case when (@MontoD-@Monto1-@Monto2-@Monto3)<=0.02 then (@MontoD-@Monto1-@Monto2) else @Monto3 end),
						(Case when (@MontoH-@MontoH1-@MontoH2-@MontoH3)<=0.02 then (@MontoH-@MontoH1-@MontoH2) else @MontoH3 end),
						(Case when (@MontoDD-@MontoDD1-@MontoDD2-@MontoDD3)<=0.02 then (@MontoDD-@MontoDD1-@MontoDD2) else @MontoDD3 end),
						(Case when (@MontoHD-@MontoHD1-@MontoHD2-@MontoHD3)<=0.02 then (@MontoHD-@MontoHD1-@MontoHD2) else @MontoHD3 end),
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
----------- Para el Cuarto porcentaje
		if @lcCtaDebe4!='' and @estado!='D' and (@lcPorcenta4!='' or @lcporcenta4 != 0)
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcCtaDebe4,'-',@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						(Case when (@MontoD-@Monto1-@Monto2-@Monto3-@Monto4)<=0.02 then (@MontoD-@Monto1-@Monto2-@Monto3) else @Monto4 end),
						(Case when (@MontoH-@MontoH1-@MontoH2-@MontoH3-@MontoH4)<=0.02 then (@MontoH-@MontoH1-@MontoH2-@MontoH3) else @MontoH4 end),
						(Case when (@MontoDD-@MontoDD1-@MontoDD2-@MontoDD3-@MontoDD4)<=0.02 then (@MontoDD-@MontoDD1-@MontoDD2-@MontoDD3) else @MontoDD4 end),
						(Case when (@MontoHD-@MontoHD1-@MontoHD2-@MontoHD3-@MontoHD4)<=0.02 then (@MontoHD-@MontoHD1-@MontoHD2-@MontoHD3) else @MontoHD4 end),
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
		-----****** asignando para los centros de costos
		----------- Para el primer porcentaje
		if (@lcCCostoCtaDebe!='' and @lcCCostoCtaDebe!='-') and @estado!='D' and (@lcccPorcenta!='' or @lcccporcenta !=0)
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcCCostoCtaDebe,'-',@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						@ccMonto1,@ccMontoH1,@ccMontoDD1,@ccMontoHD1,
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
----------- Para el segundo porcentaje
		if (@lcccCtaDebe2!='' and @lcccCtaDebe2!='-') and @estado!='D' and (@lcccPorcenta2!='' or @lcccporcenta2 != 0)
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcccCtaDebe2,'-',@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						(Case when (@MontoD-@ccMonto1-@ccMonto2)<=0.02 then @MontoD-@ccMonto1 else @ccMonto2 end),
						(Case when (@MontoH-@ccMontoH1-@ccMontoH2)<=0.02 then @MontoH-@ccMontoH1 else @ccMontoH2 end),
						(Case when (@MontoDD-@ccMontoDD1-@ccMontoDD2)<=0.02 then @MontoDD-@ccMontoDD1 else @ccMontoDD2 end),
						(Case when (@MontoHD-@ccMontoHD1-@ccMontoHD2)<=0.02 then @MontoHD-@ccMontoHD1 else @ccMontoHD2 end),
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
----------- Para el Tercer porcentaje
		if (@lcccCtaDebe3!='' and @lcccCtaDebe3!='-') and @estado!='D' and (@lcccPorcenta3!='' or @lcccporcenta3 != 0)
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcccCtaDebe3,'-',@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						(Case when (@MontoD-@ccMonto1-@ccMonto2-@ccMonto3)<=0.02 then (@MontoD-@ccMonto1-@ccMonto2) else @ccMonto3 end),
						(Case when (@MontoH-@ccMontoH1-@ccMontoH2-@ccMontoH3)<=0.02 then (@MontoH-@ccMontoH1-@ccMontoH2) else @ccMontoH3 end),
						(Case when (@MontoDD-@ccMontoDD1-@ccMontoDD2-@ccMontoDD3)<=0.02 then (@MontoDD-@ccMontoDD1-@ccMontoDD2) else @ccMontoDD3 end),
						(Case when (@MontoHD-@ccMontoHD1-@ccMontoHD2-@ccMontoHD3)<=0.02 then (@MontoHD-@ccMontoHD1-@ccMontoHD2) else @ccMontoHD3 end),
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
----------- Para el Cuarto porcentaje
		if (@lcccCtaDebe4!='' and @lcccCtaDebe4!='-') and @estado!='D' and (@lcccPorcenta4!='' or @lcccporcenta4 != 0)
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcccCtaDebe4,'-',@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						(Case when (@MontoD-@ccMonto1-@ccMonto2-@ccMonto3-@ccMonto4)<=0.02 then (@MontoD-@ccMonto1-@ccMonto2-@ccMonto3) else @ccMonto4 end),
						(Case when (@MontoH-@ccMontoH1-@ccMontoH2-@ccMontoH3-@ccMontoH4)<=0.02 then (@MontoH-@ccMontoH1-@ccMontoH2-@ccMontoH3) else @ccMontoH4 end),
						(Case when (@MontoDD-@ccMontoDD1-@ccMontoDD2-@ccMontoDD3-@ccMontoDD4)<=0.02 then (@MontoDD-@ccMontoDD1-@ccMontoDD2-@ccMontoDD3) else @ccMontoDD4 end),
						(Case when (@MontoHD-@ccMontoHD1-@ccMontoHD2-@ccMontoHD3-@ccMontoHD4)<=0.02 then (@MontoHD-@ccMontoHD1-@ccMontoHD2-@ccMontoHD3) else @ccMontoHD4 end),
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
-----****** fin asignando para los centros de costos
----------- Para el C.Costo Debe
--		if (@lcCCostoCtaDebe!='' and @lcCCostoCtaDebe!='-') and @estado!='D' -- @estado!=(Case When @CodigoDocumento='000012' and @idEmpresa='5' Then 'D' Else '-' End) --@estado!='-' --@estado!='D'
--			begin
--			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
--			CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
--			NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
--			impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
--			Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
--			CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
--			CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV)
--
--			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
--			'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
--			@NroCheque,'',@lcCCostoCtaDebe,@CentroCosto,@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
--			@impDebe,@impHaber,@impDebeDolar,@impHaberDolar,
--			@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
--			@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
--			@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
--			@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV)
--			end
----------- Para el C.Costo Haber
		if (@lcCCostoCtaHaber!='' and @lcCCostoCtaHaber!='-') and @estado!='D' --@estado!=(Case When @CodigoDocumento='000012' and @idEmpresa='5' Then 'D' Else '-' End) --@estado!='-' --@estado!='D'
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcCCostoCtaHaber,@CentroCosto,@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						@impHaber,@impDebe,@impHaberDolar,@impDebeDolar,
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end

		if (@lcCtaHaber!='' and @lcCtaHaber!='-') and @estado!='D'
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcCtaHaber,'-',@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						/**/@MontoH,@MontoD,@MontoHD,@MontoDD,@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
		/*Fin del Bloque <Cuentas de Amarre>*/
			-----------Consolidad las cuentas 12, 40 y 42 
			EXEC sp_Agrupa12y42 @codigoDocumentoReferencia, @NroDocumento, @NroDocReferencia, @codPro, @idEmpresa,@CodigoDocumento

			declare @lcCtaIcbper as char(10)
			select @lcCtaIcbper= valor from parametros where idempresa=@idEmpresa and clave='CuentaICBPER'

			delete from movcontables_D where codmgc='18' and nrodocumento=@NroDocumento and codunidadeconomica=@CodigoDocumento
			and codcuenta=@lcCtaIcbper and tipoMov='D' and estado='D'

							IF @@ERROR<>0
										BEGIN
											RAISERROR('ERROR: EN EL INGRESO DE DATOS',16,1)
											WITH NOWAIT
											RETURN
										END
	END

/****** Object:  StoredProcedure [dbo].[spp_instup_DepaEmp_CenCos]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_instup_DepaEmp_CenCos]
@Id int,
-- centro de costo
@CodCentroCosto nchar(15),
@Descripcion varchar(170),
@CctaDestino nchar(10),
@CctaDestino2 nchar(10),
@CctaDebe varchar(10),
@CctaHaber varchar(10),
@CNivel varchar(10),
@Porcenta CHAR(3), @CtaDebe2 CHAR(10), @Porcenta2 CHAR(3), @CtaDebe3 CHAR(10), @Porcenta3 CHAR(3),@CtaDebe4 CHAR(10), @Porcenta4 CHAR(3), 
@Tipo nchar(10),
@CodUnidadEconomica nchar(10),
@CRP char(10),
@Abreviatura varchar(50),
@Relacion varchar(10),
@CodZona VARchar(6),
@IDENTTABLA char(3),
@Oper char(3), 
@IdEmpresa Int,
@CodAccionista As Char(6),
@Accionista As VarChar(50),
@Documento As nChar(11),
@ValorAccion As Integer,
@NroAccion As float,
@PorcentajePArticipacion As float,
@Anio As nChar(4),
@Mes As nChar(2),

-- flujoEfectivo
@CodigoFlujoEfectivo char(10),
@formula varchar(50),
@CodigoSbs char(10),
@CodigoOrden char(10),
@orden char(2)

--@Estado bit
as
declare @AVISO TINYINT
declare @ncodAccionista as char(2) 

IF @IDENTTABLA='DE' --Departamento Empresarial
	BEGIN

		IF NOT EXISTS(SELECT CRP,Descripcion FROM	CRP WHERE CRP=@crp and Descripcion=@Descripcion) and @Oper=''
			BEGIN
				INSERT INTO CRP (CRP,Descripcion,Abreviatura,CodUnidadEconomica,Relacion,CodZona,Estado)
					VALUES(@CRP,@Descripcion,@Abreviatura,@CodUnidadEconomica,@Relacion,@CodZona,1)
					IF @@ERROR<>0
							SET @AVISO=2						
			END
		ELSE
			BEGIN
				IF @Oper='up'
					BEGIN
						UPDATE CRP SET CRP=@CRP,Descripcion=@Descripcion,Abreviatura=@Abreviatura,
									CodUnidadEconomica=@CodUnidadEconomica,Relacion=@Relacion,CodZona=@CodZona	
						 WHERE IdCRP=@ID
					END
				IF @Oper='del'
					BEGIN
						UPDATE CRP SET ESTADO=0 WHERE IdCRP=@Id
					END
				IF @Oper=''
					BEGIN
						SET @AVISO=1			
					END
			END
	END

IF @IDENTTABLA='CC' -- Centro de Costo
	BEGIN

		IF NOT EXISTS(SELECT CodCentroCosto,Descripcion FROM CENTROCOSTO WHERE CodCentroCosto=@CodCentroCosto and IdEmpresa = @IdEmpresa and estado=1) and @Oper=''
			BEGIN
				INSERT INTO CENTROCOSTO(CodCentroCosto,Descripcion,CctaDestino,ctaDebe, ctaHaber,Nivel,Estado, IdEmpresa,
										Porcenta, CtaDebe2, Porcenta2, CtaDebe3, Porcenta3,CtaDebe4, Porcenta4, Tipo )
					VALUES(@CodCentroCosto,@Descripcion,@CctaDestino,@CctaDebe,@CctaHaber,@CNivel,1, @IdEmpresa,
							@Porcenta, @CtaDebe2, @Porcenta2, @CtaDebe3, @Porcenta3,@CtaDebe4, @Porcenta4, @Tipo)
					IF @@ERROR<>0
							SET @AVISO=2	
				----insertamos en comercial el Ccosto
--				declare @maxIdCcosto as int
--				select @maxIdCCosto =max(idcentrocosto) from CentroCosto
				--insert into gestsercon..centrocosto(codcentrocosto, descripcion, cctaDestino, estado, IdEmpresa,IdCentroCostoConta, Tipo)
				--		Values(@CodCentroCosto,@Descripcion,@CctaDestino,1, 1,@maxIdCCosto, @Tipo) --@IdEmpresa)
				--	IF @@ERROR<>0
				--			SET @AVISO=2	
			END
		ELSE
			BEGIN
				IF @Oper='up'
					BEGIN
						UPDATE CENTROCOSTO SET CodCentroCosto=rtrim(@CodCentroCosto),Descripcion=@Descripcion,
						CctaDestino=@CctaDestino,ctaDebe=@cctaDebe, ctaHaber=@cctaHaber, nivel = @CNivel,
							Porcenta=@Porcenta, CtaDebe2=@CtaDebe2, Porcenta2=@Porcenta2, CtaDebe3=@CtaDebe3, Porcenta3=@Porcenta3,CtaDebe4=@CtaDebe4, Porcenta4=@Porcenta4, Tipo=@Tipo 
						WHERE IdCentroCosto=@Id and IdEmpresa = @IdEmpresa

					---- actualizamos en comercial el ccosto
					--	UPDATE gestsercon..centrocosto set CodCentroCosto=rtrim(@CodCentroCosto)+'-',Descripcion=@Descripcion,
					--	CctaDestino=@CctaDestino,Tipo=@Tipo
					--	WHERE --IdCentroCosto=@Id 
					--			rtrim(idCentroCostoConta)=rtrim(@Id) and IdEmpresa = 1 --@IdEmpresa
					END
				IF @Oper='del'
					BEGIN
						UPDATE CENTROCOSTO SET ESTADO=0 WHERE IdCentroCosto=@Id and IdEmpresa = @IdEmpresa
						----borramos en comercial el ccosto
						--UPDATE gestsercon..centrocosto set estado=0 where rtrim(idCentroCostoConta)=rtrim(@Id) and IdEmpresa = 1 --@IdEmpresa
					END
				IF @Oper=''
					BEGIN
						SET @AVISO=1			
					END
			END
--		--agreega centro costo en rrhh
--		--borramos valores del centro de costo
--		delete from gestionrrhhEtocache..tablagen  where t_tipo='02'
--		--insertamos valores
--		insert into gestionrrhhETocache..tablagen
--		select t_tipo='02',convert(char(4), Row_Number() over (order by estado)) t_elem, descripcion t_des1, cctaDestino t_des2, 
--			'06' t_rel1,codcentrocosto t_rel2, 0 t_logi, '' t_char, 1 t_nume
--			from centrocosto
--			where estado =1
--			order by descripcion

		--agreega centro costo en Comercial
		--borramos valores del centro de costo
--		delete from gestionindusemilla..centrocosto  where idempresa=1
--		
--		exec gestionindusemilla..sp_reinicia_indice 'centrocosto'
		
		--insertamos valores
--		insert into gestionindusemilla..centrocosto 
--		select codcentrocosto, descripcion, cctaDestino, estado, 1 idempresa
--			from centrocosto
--			where estado =1 and IdEmpresa=@IdEmpresa
--			order by descripcion
	END

IF @IDENTTABLA='AC' --Accionistas
	BEGIN

	--Select max(codaccionista)+1 from tbl_msto_accionistas where idempresa = @idempresa

		IF NOT EXISTS(SELECT Accionista,idempresa FROM tbl_msto_accionistas WHERE Accionista=@Accionista and idempresa=@idempresa and anio = @anio and mes = @mes) and @Oper=''

			BEGIN
				set @ncodAccionista =(Case when isnull((Select max(codaccionista)+1 from tbl_msto_accionistas where idempresa = @idempresa),0) <10 
				then '0'+isnull((Select max(codaccionista)+1 from tbl_msto_accionistas where idempresa = @idempresa),1) 
				else (Select max(codaccionista)+1 from tbl_msto_accionistas where idempresa = @idempresa) end)
				
				INSERT INTO tbl_msto_accionistas (codaccionista,Accionista,Descripcion,estado,idEmpresa,documento,valorAccion,nroAccion,PorcentajeParticipacion, anio, mes)
				VALUES(@ncodAccionista,@Accionista,@Descripcion,1,@idEmpresa,@documento,@valorAccion,@nroAccion,@PorcentajeParticipacion,@anio,@mes)
					IF @@ERROR<>0
							SET @AVISO=2						
			END
		ELSE
			BEGIN
				IF @Oper='up'
					BEGIN
						UPDATE tbl_msto_accionistas 
						SET codaccionista= @codaccionista, Accionista= @Accionista, Descripcion = @Descripcion,
							idEmpresa = @idEmpresa, documento = @documento,
							valorAccion = @valorAccion, nroAccion = @nroAccion, 
							PorcentajeParticipacion = @PorcentajeParticipacion,anio = @anio, mes = @mes
						 WHERE IdAccionista=@ID --and anio = @anio and mes = @mes
					END
				IF @Oper='del'
					BEGIN
						UPDATE tbl_msto_accionistas SET ESTADO=0 WHERE IdAccionista=@Id and anio = @anio and mes = @mes
					END
				IF @Oper=''
					BEGIN
						SET @AVISO=1			
					END
			END
	END

IF @IDENTTABLA='FE' --Flujo Efectivo
	BEGIN

		IF NOT EXISTS(SELECT CodigoFlujoEfectivo,Descripcion FROM tbl_FlujoEfectivo WHERE CodigoFlujoEfectivo=@CodigoFlujoEfectivo and Descripcion=@Descripcion) and @Oper=''
			BEGIN
				INSERT INTO tbl_FlujoEfectivo (CodigoFlujoEfectivo,Descripcion,Abreviatura,formula,CodigoSbs,CodigoOrden,Orden,Estado,cuenta)
					VALUES(@CodigoFlujoEfectivo,@Descripcion,@Abreviatura,@formula,@CodigoSbs,@CodigoOrden,@orden,1,@CctaDestino)
					IF @@ERROR<>0
							SET @AVISO=2						
			END
		ELSE
			BEGIN
				IF @Oper='up'
					BEGIN
						UPDATE tbl_FlujoEfectivo SET CodigoFlujoEfectivo=@CodigoFlujoEfectivo,Descripcion=@Descripcion,Abreviatura=@Abreviatura,
									formula=@formula,CodigoSbs=@CodigoSbs, CodigoOrden=@CodigoOrden, Orden=@Orden,cuenta=@CctaDestino
						 WHERE IdFlujoEfectivo=@ID
					END
				IF @Oper='del'
					BEGIN
						UPDATE tbl_FlujoEfectivo SET ESTADO=0 WHERE IdFlujoEfectivo=@Id
					END
				IF @Oper=''
					BEGIN
						SET @AVISO=1			
					END
			END
	END

--Verificacion de respuesta de transaccion
IF @AVISO=2
	BEGIN
		RAISERROR('ERROR: EN EL INGRESO DE DATOS',1,16)
		WITH NOWAIT RETURN
	END
ELSE
	IF @AVISO=1
		BEGIN
		RAISERROR('ADVERTENCIA: YA EXISTE EL REGISTRO',1,16)
		WITH NOWAIT RETURN
		END
/****** Object:  StoredProcedure [dbo].[spp_instup_MovContables_C]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_instup_MovContables_C]
@idMovContable_c int, @Anio char(4),@Mes char(2),@Zona VARchar(6),@CodUnidadEconomica char(10),@NroDoc char(10) output,@FechCo datetime,@CodMGC char(2),@Glosa varchar(200),
@Estado varchar(50),@OPER varchar(3)
as
--set @CodUnidadEconomica=rtrim(ltrim(@CodUnidadEconomica))+replicate('0',10-len(rtrim(ltrim(@CodUnidadEconomica))))
-----------------------------------------------TOMANDO CORRELATIVO
	DECLARE @CorreCont CHAR(10),@Valor	char(5)
	set @CorreCont=dbo.CorrelativoMes(@Zona ,@CodUnidadEconomica,@CodMGC ,@Anio ,@Mes )
	set @Valor=right(@CorreCont,5)
-----------------------------------------------Actualizando Transacciones de Insertar y Actualizar
	
IF @OPER=''
	BEGIN
	EXEC cont_ActualizaCorrelaGrupoContable @Valor,@zona,@CodUnidadEconomica,@CodMGC,@Anio ,@Mes
		INSERT INTO MOVCONTABLES_C(Anio,Mes,Zona,CodUnidadEconomica,nrodoc,FechCo,CodMGC,Glosa,
						Estado)
		VALUES(@Anio,@Mes,@Zona,@CodUnidadEconomica,@CorreCont,@FechCo,@CodMGC,@Glosa,
						@Estado)
		set @NroDoc=@CorreCont
		--set @idMovContable_c=(select idMovContables_c from MOVCONTABLES_C where nrodoc=@CorreCont)
		IF @@ERROR<>0
			BEGIN
				RAISERROR('ERROR: EN EL INGRESO DE DATOS',16,1)
				WITH NOWAIT
				RETURN
			END
		
	END
IF @OPER='up'
	BEGIN
		
		UPDATE MOVCONTABLES_C
		SET Anio=@Anio,Mes=@Mes,Zona=@Zona,CodUnidadEconomica=@CodUnidadEconomica,nroDoc=@NroDoc,FechCo=@FechCo,CodMGC=@CodMGC,Glosa=@Glosa,
						Estado=@Estado	
		where idMovContables_c=@idMovContable_c
			
		IF @@ERROR<>0
			BEGIN
				RAISERROR('ERROR: EN EL ACTUALIZACION DE DATOS',16,1)
				WITH NOWAIT
				RETURN
			END

	END
IF @OPER='del'
	BEGIN
		--UPDATE MOVCONTABLES_C
		--SET estado='4' where idMovContables_c=@idMovContable_c
		Declare @CodCoCach char(10)
		set @CodCoCach=(select distinct cocach from movContables_D where idMovContables_c=@idMovContable_c and estado!='D')

		if rtrim(@CodCoCach)<>'' or rtrim(@CodCoCach)<>'-' 
			begin
				update movContables_D set estado='4' where idMovContables_c=@idMovContable_c and cocach=@CodCoCach and cocach<>'-' and estado!='D' and CodMGC=@CodMGC and CodUnidadEconomica=@CodUnidadEconomica
				delete from movContables_D where idMovContables_c=@idMovContable_c and cocach=@CodCoCach and cocach<>'-' and estado='D' and CodMGC=@CodMGC and CodUnidadEconomica=@CodUnidadEconomica
				
				update tbl_movimientoCajaC set TransferidoAnt= transferido, transferido='' 
				where nrodoc= (select distinct cocach from movcontables_d WHERE idMovContables_C=@IdMovContable_C and estado='4')	
			end
		if rtrim(@CodCoCach)='' or rtrim(@CodCoCach)='-' 
			begin
				update movContables_D set estado='4' where idMovContables_c=@idMovContable_c and estado!='D' and CodMGC=@CodMGC and CodUnidadEconomica=@CodUnidadEconomica
				delete from movContables_D where idMovContables_c=@idMovContable_c and estado='D' and CodMGC=@CodMGC and CodUnidadEconomica=@CodUnidadEconomica
			end

	END
/****** Object:  StoredProcedure [dbo].[spp_instup_tablagen]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_instup_tablagen]
--variables GENERALES
@COD CHAR(10),
@DES1 VARCHAR(100),
@DES2 VARCHAR(100),
--variables unidadeconomica
@DEBE CHAR(10),
@HABER CHAR(10),
--variables grupo contable
@Ene int,@Feb int,@Mar int,@Abr int,@May int,@Jun int,
@Jul int,@Ago int,@Sep int,@Oct int,@Nov int,@Dic int,@Anual int,
@Anio int,@CodZona varchar(6),@CodUnidadEconomica char(10) ,
--variables plan cuenta contable
@CTAHABER CHAR(10),@CTACIERRE CHAR(10),@TIPOMOVPCCDB CHAR(10),@NIVELCUENTA CHAR(1),@TIPOCUENTA CHAR(1),
@Porcenta CHAR(3), @CtaDebe2 CHAR(10), @Porcenta2 CHAR(3), @CtaDebe3 CHAR(10), @Porcenta3 CHAR(3),@CtaDebe4 CHAR(10), @Porcenta4 CHAR(3), @ctaPDT CHAR(10), 
@TIPOANALISIS CHAR(1), @CONVERMONEDA CHAR(1),
@MANEJODOCUMENTPENDIENTES CHAR(3),@AJUSTEINFLACION CHAR(2),@VALIDAAUTOMATICO BIT,

--variables para la tabla ClienteProveedor
@Nombre NVARCHAR(30),@Apellido NVARCHAR(30),@Telefono CHAR(11),@IdTipoClienteProveedor INT,@Direccion VARCHAR(100)
,@Cobrador NVARCHAR(90),@Correo NVARCHAR(60),@PaginaWeb NVARCHAR(70),@RepreLegal NVARCHAR(60),
@CodAval CHAR(10),@Aval NVARCHAR(60),@DireccionAval NVARCHAR(60),@TelfonoAval CHAR(11),
@Estado bit,
-- variables para tablas Detraccions, percepciones e IVA 
@CodigoDetraccion  nchar(7), @Categoria varchar(500), @TipoBienServicio varchar(150),
@OperacionesExceptuadas varchar(500),@Porcent decimal(10,2),@Tipo int,

--IDENTIFICADOR DE TABLA AFECTADA
@IDENTTABLA CHAR(3),
@Oper varchar(3),
@ID INT,
@IdEmpresa int
as
declare @AVISO TINYINT

IF @IDENTTABLA='ZO'
	BEGIN 

	declare @codigozona char(6),@max int
		select @max=isnull(max(right(rtrim(ltrim(CODZONA)),6)),0)from ZONA
		set @codigozona=replicate('0',6-len(rtrim(ltrim(@max+1))))+rtrim(ltrim(convert(char(6),@max+1)))

		IF NOT EXISTS(SELECT zona,IDEMPRESA FROM ZONA WHERE ZONA=@DES1 and idempresa=@IdEmpresa and estado ='1') and @Oper=''
			BEGIN
				INSERT INTO ZONA (CODZONA,ZONA,DESCRIPCION,ESTADO,IDEMPRESA)
					VALUES(@codigozona,@DES1,@DES2,1,@IdEmpresa)
					IF @@ERROR<>0
							SET @AVISO=2						
			END
		ELSE
			BEGIN
				IF @Oper='up'
					BEGIN
						UPDATE ZONA SET ZONA=@DES1,DESCRIPCION=@DES2,IDEMPRESA=@IdEmpresa WHERE IDZONA=@ID
					END
				IF @Oper='del'
					BEGIN
						UPDATE ZONA SET ESTADO=0 WHERE IDZONA=@ID
					END
				IF @Oper=''
					BEGIN
						SET @AVISO=1			
					END
			END
	END
IF @IDENTTABLA='UE'
	BEGIN
			IF NOT EXISTS(SELECT CODZona,CODUNIDADECONOMICA FROM UNIDAD_ECONOMICA WHERE CODUNIDADECONOMICA=@COD and CodZona=@CodZona)-- AND @Oper=''
				BEGIN
					INSERT INTO UNIDAD_ECONOMICA(CODUNIDADECONOMICA,UNIDADECONOMICA,DESCRIPCION,CODZONA,ESTADO)
					VALUES(@COD,@DES1,@DES2,@CodZona,1)
					IF @@ERROR<>0
						SET @AVISO=2
				END				
			ELSE  
				BEGIN
					IF @Oper='up'
						BEGIN
							UPDATE UNIDAD_ECONOMICA SET CODUNIDADECONOMICA=@COD,UNIDADECONOMICA=@DES1,
							DESCRIPCION=@DES2,CODZONA=@CodZona WHERE IDUNIDADECONOMICA=@ID								
						END
					IF @Oper='del'
						BEGIN
							UPDATE UNIDAD_ECONOMICA SET ESTADO=0 WHERE IDUNIDADECONOMICA=@ID
						END
					IF @Oper=''
						BEGIN
							SET @AVISO=1			
						END	
				END
	END

IF @IDENTTABLA='MGC'

	BEGIN
		IF NOT EXISTS(SELECT * FROM MAESTROGRUPOCONTABLE WHERE CODMGC=@COD OR MGC=@DES1)
			BEGIN
				INSERT INTO MAESTROGRUPOCONTABLE(CODMGC,MGC,SISTEMA,CODZONA,CODUNIDADECONOMICA,ANIO
				,ENE,FEB,MAR,ABR,MAY,JUN,JUL,AGO,SEP,OCT,NOV,DIC,ANUAL,ESTADO)
				VALUES(@COD,@DES1,@DES2,@CodZona,@CodUnidadEconomica,@Anio,@Ene,@Feb,@Mar,@Abr,@May,@Jun,@Jul,@Ago,@Sep,@Oct,@Nov,@Dic,@Anual,1)
				IF @@ERROR<>0
					SET @AVISO=2				
			END
		ELSE
			BEGIN
				IF @Oper='up'
					BEGIN
						UPDATE MAESTROGRUPOCONTABLE SET CODMGC=@COD,MGC=@DES1,SISTEMA=@DES2,CODZONA=@CodZona,CODUNIDADECONOMICA=@CodUnidadEconomica,ANIO=@ANIO
				,ENE=@Ene,Feb=@FEB,Mar=@MAR,Abr=@ABR,May=@May,Jun=@JUN,Jul=@JUL,Ago=@AGO,Sep=@SEP,Oct=@OCT,Nov=@NOV,Dic=@DIC,Anual=@Anual
						WHERE IDMGC=@ID
					END
				IF @Oper='del'
					BEGIN
						UPDATE MAESTROGRUPOCONTABLE SET ESTADO=0 WHERE IDMGC=@ID
					END
				IF @Oper=''
					BEGIN
						SET @AVISO=1			
					END	
			END
	END

IF @IDENTTABLA='PCC'
	BEGIN
		IF NOT EXISTS(SELECT IDPLANCUENTASCONTABLES FROM PLANCUENTASCONTABLES WHERE IDPLANCUENTASCONTABLES=@ID)
			BEGIN
				INSERT INTO PLANCUENTASCONTABLES(CODCUENTACONTABLE,DESCRIPCION,CTADEBE,CTAHABER,CTACIERRE,TIPOMOVPCCDB,NIVELCUENTA,TIPOCUENTA,TIPOANALISIS,CONVERMONEDA
,MANEJODOCUMENTPENDIENTES,AJUSTEINFLACION,VALIDAAUTOMATICO,ESTADO,IdEmpresa, Porcenta, CtaDebe2, Porcenta2, Ctadebe3, Porcenta3, Ctadebe4, Porcenta4,ctaPDT,anio)
				VALUES(@COD,@DES1,@DES2,@CTAHABER,@CTACIERRE,@TIPOMOVPCCDB,@NIVELCUENTA,@TIPOCUENTA,@TIPOANALISIS,@CONVERMONEDA
,@MANEJODOCUMENTPENDIENTES,@AJUSTEINFLACION,@VALIDAAUTOMATICO,1,@IdEmpresa, @Porcenta, @CtaDebe2, @Porcenta2, @Ctadebe3, @Porcenta3, @Ctadebe4, @Porcenta4,@ctaPDT,convert(varchar(4),(case When @anio<'2020' then '2009' Else @anio End))+'00')
				IF @@ERROR<>0
					SET @AVISO=2
			END	
		ELSE
			BEGIN
--				if @oper=''
--					begin
--					
--					end
				IF @Oper='up'
					BEGIN
						UPDATE PLANCUENTASCONTABLES SET CODCUENTACONTABLE=@COD,DESCRIPCION=@DES1,CTADEBE=@DES2,CTAHABER=@CTAHABER,CTACIERRE=@CTACIERRE,
							TIPOMOVPCCDB=@TIPOMOVPCCDB,NIVELCUENTA=@NIVELCUENTA,TIPOCUENTA=@TIPOCUENTA,TIPOANALISIS=@TIPOANALISIS,CONVERMONEDA=@CONVERMONEDA,
							MANEJODOCUMENTPENDIENTES=@MANEJODOCUMENTPENDIENTES,AJUSTEINFLACION=@AJUSTEINFLACION,VALIDAAUTOMATICO=@VALIDAAUTOMATICO,
							Porcenta=@Porcenta, CtaDebe2=@CtaDebe2, Porcenta2=@Porcenta2, Ctadebe3=@Ctadebe3, Porcenta3=@Porcenta3, Ctadebe4=@Ctadebe4, Porcenta4=@Porcenta4,ctaPDT=@ctaPDT,anio=convert(varchar(4),(case When @anio<'2020' then '2009' Else @anio End))+'00'
						WHERE IDPLANCUENTASCONTABLES=@ID
					END
				IF @Oper='del'
					BEGIN
						--Esta linea esta en evaluacion
						delete from plancuentascontables WHERE IDPLANCUENTASCONTABLES=@ID
					END
				IF @Oper=''
					BEGIN
						SET @AVISO=1			
					END	
			END			
			
	END

IF @IDENTTABLA='DOC'
	BEGIN

		IF NOT EXISTS (SELECT codigoDocumento,DesTipoDocumento from tipodocumento WHERE CODIGODOCUMENTO=@COD or DesTipoDocumento=@DES1)
			BEGIN
				insert into TipoDocumento(CodigoDocumento,DesTipoDocumento,Descripcion,Estado)
				values(@COD,@DES1,@DES2,1)
				IF @@ERROR<>0
					SET @AVISO=2
			END
		ELSE
			BEGIN

				IF @OPER='up'
					BEGIN
						UPDATE TIPODOCUMENTO
						SET CODIGODOCUMENTO=@COD,DESTIPODOCUMENTO=@DES1,DESCRIPCION=@DES2 WHERE IDTIPODOCUMENTO=@ID
					END
				IF @OPER='del'
					BEGIN
						UPDATE TIPODOCUMENTO
						SET ESTADO=0 WHERE IDTIPODOCUMENTO=@ID
					END
				IF @OPER=''
					BEGIN
						SET @AVISO=1
					END
			END
	END

IF @IDENTTABLA='CP'
	BEGIN
--		IF EXISTS (SELECT idClienteProveedor from tbl_msto_ClienteProveedor WHERE estado=1 and rtrim(RUC)=rtrim(@des2))
--		begin
--			SET @AVISO=1
--		end

		--IF NOT EXISTS (SELECT idClienteProveedor from tbl_msto_ClienteProveedor WHERE estado=1 and rtrim(RUC)=rtrim(@des2))
		IF NOT EXISTS (SELECT idClienteProveedor from tbl_msto_ClienteProveedor WHERE idClienteProveedor=@ID)
			BEGIN
				INSERT INTO tbl_msto_ClienteProveedor(CodClienteProveedor,RazonSocial,RUC,Nombre,Apellido,Telefono,IdTipoClienteProveedor,Direccion
										,CodZona,Cobrador,Correo,PaginaWeb,RepreLegal,CodAval,Aval,DireccionAval,TelefonoAval,estado)
				values(@COD,@DES1,@DES2,@Nombre,@Apellido,@Telefono,@IdTipoClienteProveedor,@Direccion
									,@CodZona,@Cobrador,@Correo,@PaginaWeb,@RepreLegal,@CodAval,@Aval,@DireccionAval,@TelfonoAval,@Estado)

				IF @@ERROR<>0
					SET @AVISO=2
			END
		ELSE
			BEGIN

				IF @OPER='up'
					BEGIN
						UPDATE tbl_msto_ClienteProveedor
						SET CodClienteProveedor=@COD,RazonSocial=@DES1,RUC=@DES2,Nombre=@Nombre,Apellido=@Apellido,Telefono=@Telefono,IdTipoClienteProveedor=@IdTipoClienteProveedor,Direccion=@Direccion
									,CodZona=@CodZona,Cobrador=@Cobrador,Correo=@Correo,PaginaWeb=@PaginaWeb,RepreLegal=@RepreLegal,CodAval=@CodAval,Aval=@Aval,DireccionAval=@DireccionAval,TelefonoAval=@TelfonoAval, estado=@Estado				
						WHERE IdClienteProveedor=@ID

					END
				IF @OPER='del'
					BEGIN
						IF @ESTADO=0
						BEGIN
							delete tbl_msto_ClienteProveedor
							WHERE IdClienteProveedor=@ID and ESTADO=0 
						END
						ELSE
						Begin 
							UPDATE tbl_msto_ClienteProveedor
							SET ESTADO=0 WHERE IdClienteProveedor=@ID
						End
					END
				IF @OPER=''
					BEGIN
						SET @AVISO=1
					END
			END
	END

IF @IDENTTABLA='BAN'
	BEGIN

		IF NOT EXISTS (SELECT DESCRIPCION from BANCO WHERE IDBANCO=@ID)
			BEGIN
				insert into BANCO(CTACONTABLE,DESCRIPCION,CTABANCARIA,CODMONEDA,NROOPERACION,NROCHEQUE,ESTADO,IdEmpresa)
				values(@COD,@DES1,@DES2,@DEBE,@Ene,@Feb,1,@idEmpresa)
				IF @@ERROR<>0
					SET @AVISO=2
			END
		ELSE
			BEGIN
				IF @OPER='up'
					BEGIN
						UPDATE BANCO
						SET CTACONTABLE=@COD,DESCRIPCION=@DES1,CTABANCARIA=@DES2,CODMONEDA=@DEBE,NROOPERACION=@Ene,NROCHEQUE=@Feb WHERE IDBANCO=@ID
					END
				IF @OPER='del'
					BEGIN
						UPDATE BANCO
						SET ESTADO=0 WHERE IDBANCO=@ID
					END
				IF @OPER=''
					BEGIN
						SET @AVISO=1
					END
			END
	END

-- TIPO MONEDA
IF @IDENTTABLA='MON'
	BEGIN

		IF NOT EXISTS (SELECT DESCRIPCION from MONEDA WHERE IDMONEDA=@ID)
			BEGIN
				insert into MONEDA(DESCRIPCION,SIMBOLO,ESTADO)
				values(@DES1,@DES2,1)
				IF @@ERROR<>0
					SET @AVISO=2
			END
		ELSE
			BEGIN
				IF @OPER='up'
					BEGIN
						UPDATE MONEDA
						SET DESCRIPCION=@DES1,SIMBOLO=@DES2 WHERE IDMONEDA=@ID
					END
				IF @OPER='del'
					BEGIN
						UPDATE MONEDA
						SET ESTADO=0 WHERE IDMONEDA=@ID
					END
				IF @OPER=''
					BEGIN
						SET @AVISO=1
					END
			END
	END
-- DETRACCIONES, PERCEPCION, IVA,T30
IF @IDENTTABLA IN ('DEV','DET','PER','IVA','T30') 
	BEGIN

		IF NOT EXISTS (SELECT TIPOBIENSERVICIO from TBL_DETRACCION WHERE CODIGODETRACCION= @CODIGODETRACCION) 
			BEGIN
				insert into TBL_DETRACCION(CodigoDetraccion, Categoria, TipoBienServicio, 
											OperacionesExceptuadas, Porcent, Tipo)
				values(@CodigoDetraccion, @Categoria, @TipoBienServicio, 
						@OperacionesExceptuadas, @Porcent, @Tipo)
				IF @@ERROR<>0
					SET @AVISO=2
			END
		ELSE
			BEGIN
				IF @OPER='up'
					BEGIN
						UPDATE TBL_DETRACCION
						SET CodigoDetraccion=@CodigoDetraccion, Categoria=@Categoria, TipoBienServicio=@TipoBienServicio, 
							OperacionesExceptuadas=@OperacionesExceptuadas, Porcent=@Porcent, Tipo=@Tipo WHERE CodigoDetraccion= @CodigoDetraccion 
					END
				IF @OPER='del'
					BEGIN
						delete TBL_DETRACCION
						WHERE CodigoDetraccion=@CodigoDetraccion 
					END
				IF @OPER=''
					BEGIN
						SET @AVISO=1
					END
			END
	END 

--Verificacion de respuesta de transaccion
IF @AVISO=2
	BEGIN
		RAISERROR('ERROR: EN EL INGRESO DE DATOS',1,16)
		WITH NOWAIT RETURN
	END
ELSE
	IF @AVISO=1
		BEGIN
		RAISERROR('ADVERTENCIA: YA EXISTE EL REGISTRO',1,16)
		WITH NOWAIT RETURN
		END

set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
/****** Object:  StoredProcedure [dbo].[spp_LibrosElectronicos]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_LibrosElectronicos]
--	 @direc Sysname
@Anio char(4),
@aMes char(2),
@bMes char(2),
@aZona varchar(6),
@bZona varchar(6),
@aCodUnidadEconomica varchar(10),
@bCodUnidadEconomica varchar(10),
@docA char(2),
@docB char(2),
@IdEmpresa int,
@zonaVta varchar(200),
@UnidadVta varchar(200),
@tipo char(6)

As 
declare @cadena varchar(1200), @direcCab Sysname --, @NombreDB varchar(30), @direcDet Sysname,@idempre int --, @direcXMC Sysname, @direcXMD Sysname
Declare @carpeta varchar(20),@ruc varchar(11), @reg int, @regimen varchar(10)
Declare @RazonSocial varchar(150)
---- spp_LibrosElectronicos '2015', '01', '01', '000003', '000003', '000003    ', '000003    ', '01', '99', 3,'select distinct(codZona) from zona where idEmpresa=3', '3','DIARIO'

--set @ruc= (select ruc from Empresa where IdEmpresa=@IdEmpresa)
--set @carpeta = 'D:\Gestion\'
-- --Buscamos la carpeta del cliente identificado por RUC si no existe lo creamos
--declare @t table (dir varchar(200))
-- INSERT INTO @t
-- EXEC master.dbo.xp_subdirs @carpeta 
-- set @reg = (select count(dir) from @t where dir like (@ruc+'%'))

--if @reg=0
--Begin -- creando la carpeta del cliente
--	declare @MD varchar(100), @Dir varchar(100)

--	set @Dir = @carpeta + @ruc
--	SET @MD = ' mkdir ' + @Dir

--	EXEC xp_cmdshell @MD, no_output
--End
---- Fin Busca la carpeta del cliente identificado por RUC

	select @regimen=rtrim(regimen),@ruc=ruc,@RazonSocial=RazonSocial from Empresa where idempresa = @IdEmpresa
	print @idempresa
	print @ruc
	print @RazonSocial


-- Generando PLE Compras
If @tipo ='COMPRA'
Begin 
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLeCompras]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLeCompras
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLeCompras2]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLeCompras2
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpSireCom11]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpSireCom11
END
-------------------------------------
	delete from leCompras

	insert into LeCompras

	--EXEC spp_Rep_RegistroCompra '2014','01','01','000012','000012','000012','000012','01','99',5
	EXEC spp_Rep_RegistroCompra @Anio,@aMes,@bMes,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@IdEmpresa

	select  periodo=@Anio+(Case When mes='13' then '12' else mes end)+'00', --left(CONVERT(varchar(10),fechaDocreferencia,111),4)+mes+'00', -- campo1
--		cuo = nrodocumento, --campo2
		cuo = (case When @regimen='ESPECIAL' Then 
					rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY mes ORDER BY mes,desTipoDocumento,fechaDocreferencia,serie, NroDocReferencia, FechaVencimiento) AS varchar(10)),10,'0'))
				Else 
					nrodocumento
				End), --campo2
--		correlativo =(Case When left(nrodocumento,2)='00' Then 'A' Else (Case When left(nrodocumento,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY mes ORDER BY mes,desTipoDocumento,fechaDocreferencia,serie, NroDocReferencia, FechaVencimiento) AS varchar(10)),5,'0')),  --campo3
		correlativo = (case When @regimen='ESPECIAL' Then 
							'M-RER'
						Else 
							(Case When left(nrodocumento,2)='00' Then 'A' Else (Case When left(nrodocumento,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY mes ORDER BY mes,desTipoDocumento,fechaDocreferencia,serie, NroDocReferencia, FechaVencimiento) AS varchar(10)),5,'0'))
						End),  --campo3
		fEmision=CONVERT(varchar(10),fechaDocreferencia,103), -- campo4
		fvcto= (case when destipoDocumento='14' then left(FechaVencimiento,2)+'/'+substring(FechaVencimiento,4,2)+'/20'+RIGHT(FechaVencimiento,2) else (CASE WHEN FechaVencimiento in ('','''') THEN '01/01/0001' ELSE left(FechaVencimiento,2)+'/'+substring(FechaVencimiento,4,2)+'/20'+RIGHT(FechaVencimiento,2) END) end), -- campo5
		desTipoDocumento,-- campo6
		serie=(case when desTipoDocumento='50' then codAduana else (Case When desTipoDocumento='10' Then '1683' Else (case when serie in ('-','') then '-' else CONVERT(varchar(4),serie) end) End) end), --campo7
		anioDua=CONVERT(varchar(4),aniodua), --campo8
		nrodocreferencia= (case when desTipoDocumento='50' then convert(varchar(7),nrodocreferencia*1) else right(rtrim(CONVERT(varchar(9),right(nrodocreferencia,9))),8) end), -- campo9
		impcampo9 ='', --campo10
		tipdoc= CONVERT(varchar(1),codclienteproveedor) , -- campo11
		ruc = CONVERT(varchar(14),ruc), --campo12
		proveedor= CONVERT(varchar(60),rtrim(proveedor)), --campo13
		agdoge1=CONVERT(varchar(15),CONVERT(numeric(38,2),agdoge1)),--campo14
		igv_1=CONVERT(varchar(15),CONVERT(numeric(38,2),igv_1)),--campo15
		agdoge_ng=CONVERT(varchar(15),CONVERT(numeric(38,2),agdoge_ng)),--campo16
		igv_2=CONVERT(varchar(15),CONVERT(numeric(38,2),igv_2)),--campo17
		agdo_ng=CONVERT(varchar(15),CONVERT(numeric(38,2),agdo_ng)),--campo18
		igv_3=CONVERT(varchar(15),CONVERT(numeric(38,2),igv_3)),--campo19
		valor_adquisicion=CONVERT(varchar(15),CONVERT(numeric(38,2),valor_adquisicion)),--campo20
		isc=CONVERT(varchar(15),CONVERT(numeric(38,2),isc)),--campo21
		otroimp=CONVERT(varchar(15),CONVERT(numeric(38,2),MontoIcbper)),--campo22  icbper
		otroCpto=CONVERT(varchar(15),CONVERT(numeric(38,2),OtrosCptos+PorcentajePercepcion)), --campo23
		totalimporte=CONVERT(varchar(15),CONVERT(numeric(38,2),totalimporte)), --campo24
		moneda= (Case When TipoCambio=0 Then 'PEN' Else 'USD' End), --Campo25 falta tipo moneda
		tipocambio=CONVERT(varchar(15),CONVERT(numeric(5,3),tipocambio)),--campo26
		fecha_refcomprobmodi=(case when fecha_refcomprobmodi='' then '01/01/0001' else CONVERT(varchar(10),fecha_refcomprobmodi,103) end),--campo27
		tipo_refcomprobmodi=(case when tipo_refcomprobmodi='' then '00' else CONVERT(varchar(2),tipo_refcomprobmodi) end),--campo28
		serie_refcomprobmodi=CONVERT(varchar(4),(case when serie_refcomprobmodi='' then '-' else serie_refcomprobmodi end)),--campo29
		codDua=(case when desTipoDocumento='50' then codAduana else '' end), --campo30
		nro_refcomprobmodi=CONVERT(varchar(8),(case when nro_refcomprobmodi='' then '-' else (case When len(rtrim(nro_refcomprobmodi))>7 then right(rtrim(nro_refcomprobmodi),8) else right(rtrim(nro_refcomprobmodi),8) end) end)),--campo31
		fechadetrac=(case when CONVERT(varchar(10),fechadetrac,103)in ('01/01/1900','01/01/1990') then '01/01/0001' else CONVERT(varchar(10),fechadetrac,103) end),--campo32
		nrodetrac=convert(varchar(24),(case when nrodetrac='' then '0' else nrodetrac end)),--campo33
		marcasujReten='',--campo34
		clasbien=clasificaBS,--campo35
		identiContrato='',--campo36
		tipo1='',--campo37
		tipo2='',--campo38
		tipo3='',--campo39
		tipo4='',--campo40
		mediopago='',--campo41
		estado = (Case when desTipoDocumento in ('02','03','10','15','16','17','18','19','21','22','44','45','46','49') Then '0' else (case when fechaDocreferencia < convert(datetime, '01/'+(Case When mes='13' then '12' else mes end)+'/'+@Anio, 103) then '6' else '1' end) end), -- campo42
		Cierre=convert(varchar(10),null) --campo43
	into tmpLeCompras
	from lecompras
	order by mes, DesTipoDocumento,FechaDocReferencia,nrodocumento,serie, NroDocReferencia, FechaVencimiento

	select * into tmpLeCompras2
	from tmpLeCompras where periodo=''
	
	select @ruc rucEmp,@RazonSocial RazonsocialEmp,Periodo,fEmision,fvcto,desTipoDocumento,serie,anioDua,nrodocreferencia,impcampo9,tipdoc,ruc
		,proveedor,agdoge1,igv_1,agdoge_ng,igv_2,agdo_ng,igv_3,valor_adquisicion,isc,otroimp,otroCpto,totalimporte
		,moneda,tipocambio,fecha_refcomprobmodi,tipo_refcomprobmodi,serie_refcomprobmodi,codDua,nro_refcomprobmodi,fechadetrac
		,nrodetrac,marcasujReten,clasbien,identiContrato,tipo1,tipo2,tipo3,tipo4,mediopago 
	into tmpSireCom11 -- select * from lecompras
	from tmpLeCompras

--	set @reg = (select count(serie) from tmpLeCompras)
--	set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@aMes+'00080100001'+(case when @reg=0 then '0' else '1' end)+'11.txt'

--			set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+femision+''|''+fvcto+''|''+destipodocumento+''|''+serie+''|''+aniodua+''|''+nrodocreferencia+''|''+impcampo9+''|''+tipdoc+''|''+ruc+''|''+proveedor+''|''+agdoge1+''|''+igv_1+''|''+agdoge_ng+''|''+igv_2+''|''+agdo_ng+''|''+igv_3+''|''+valor_adquisicion+''|''+isc+''|''+otroimp+''|''+totalimporte+''|''+moneda+''|''+tipocambio+''|''+fecha_refcomprobmodi+''|''+tipo_refcomprobmodi+''|''+serie_refcomprobmodi+''|''+coddua+''|''+nro_refcomprobmodi+''|''+fechadetrac+''|''+nrodetrac+''|''+marcasujreten+''|''+clasbien+''|''+identiContrato+''|''+tipo1+''|''+tipo2+''|''+tipo3+''|''+tipo4+''|''+mediopago+''|''+convert(char(1),estado)+''|'' from gestion..tmpLeCompras'
--			--set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r '+(Case when @aMes='03' then '\r' else '' end)+'\n' --\r\n
--			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
--			EXEC master..xp_cmdshell @cadena , no_output

--	drop table gestion..tmpLeCompras
----	exec spp_LibrosElectronicosPortal @Anio,@aMes,@bMes,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@IdEmpresa,@zonaVta,@UnidadVta,@tipo
----creando compras no domiciliados en blanco

--	set @reg = 0
--	set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@aMes+'00080200001'+(case when @reg=0 then '0' else '1' end)+'11.txt'

--			set @cadena = ''
--			--set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r '+(Case when @aMes='03' then '\r' else '' end)+'\n' --\r\n
--			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
--			EXEC master..xp_cmdshell @cadena , no_output

End
-- Generando las PLE Ventas
If @tipo ='VENTAS'
Begin 
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLeVentas]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLeVentas
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpSireVen03]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpSireVen03
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpSireVen02]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpSireVen02
END
-------------------------------------
	--	@zona varchar(200),@Unidad varchar(200),@Anio varchar(4),@Mes1 varchar(2),@Mes2 varchar(2)

	--exec "spp_rep_RegVentasIngresos";1 'select distinct(codZona) from zona where idEmpresa=57', '57', '2012', '01', '01'
	EXEC spp_rep_RegVentasIngresos @ZonaVta,@UnidadVta,@Anio,@aMes,@bMes

	select periodo=@Anio+(Case When mes='13' then '12' else mes end)+'00', --'20'+RIGHT(fechaEmision,2)+mes+'00', -- campo1
		cuo = (case When @regimen='ESPECIAL' Then 
					rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY mes ORDER BY mes, correlativo,FechaEmision,serie, Numero, FechaVencimiento) AS varchar(10)),10,'0'))
				Else 
					nrodocumento
				End), --campo2
--		correlativo =(Case When left(nrodocumento,2)='00' Then 'A' Else (Case When left(nrodocumento,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY mes ORDER BY mes, correlativo,FechaEmision,serie, Numero, FechaVencimiento) AS varchar(10)),5,'0')),  --campo3
		correlativo = (case When @regimen='ESPECIAL' Then 
							'M-RER'
						Else 
							(Case When left(nrodocumento,2)='00' Then 'A' Else (Case When left(nrodocumento,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY mes ORDER BY mes, correlativo,FechaEmision,serie, Numero, FechaVencimiento) AS varchar(10)),5,'0'))
						End),  --campo3
		fEmision=left(fechaEmision,2)+'/'+substring(fechaEmision,4,2)+'/20'+RIGHT(fechaEmision,2), -- campo4
		fvcto= (case when CodigoDocumento='14' then left(FechaVencimiento,2)+'/'+substring(FechaVencimiento,4,2)+'/20'+RIGHT(FechaVencimiento,2) else (CASE WHEN FechaVencimiento in ('','''') THEN '01/01/0001' ELSE left(FechaVencimiento,2)+'/'+substring(FechaVencimiento,4,2)+'/20'+RIGHT(FechaVencimiento,2) END) end), -- campo5
		CodigoDocumento= (case when CodigoDocumento='99' then '03' else CodigoDocumento end),-- campo6
		serie=CONVERT(varchar(4),serie), -- campo7
		nrodocumento= CONVERT(varchar(14),(case when len(rtrim(numero))>9 then substring(numero,1,7) else right(rtrim(numero),7) end)), -- campo8
		impcampo8 = (Case When  CodigoDocumento in ('03','99','12') Then CONVERT(varchar(7),substring(numero,10,7)) Else '' End) , --campo9
		tipdoc= CONVERT(varchar(1),(case when tipodoc='0' then (case when entidad in ('AN ULADO','ANULADO') then '' else tipodoc end) else tipodoc end)) , -- campo10
		ruc = (Case When tipodoc='0' Then (case when entidad in ('AN ULADO','ANULADO') then '' else CONVERT(varchar(14),ruc) end) else CONVERT(varchar(14),ruc) end), --campo11
		proveedor= (Case When tipodoc='0' Then (case when entidad in ('AN ULADO','ANULADO') then '-' else CONVERT(varchar(61),rtrim(entidad)) end) else CONVERT(varchar(61),rtrim(entidad)) end), --campo12
		exportacion=CONVERT(varchar(15),CONVERT(numeric(38,2),exportacion)),--campo13
		baseimponible=CONVERT(varchar(15),CONVERT(numeric(38,2),baseimponible)),--campo14
		DsctoBI=CONVERT(varchar(15),CONVERT(numeric(38,2),0.0)),--campo15
		igv=CONVERT(varchar(15),CONVERT(numeric(38,2),igv)),--campo16
		DsctoIgv=CONVERT(varchar(15),CONVERT(numeric(38,2),0.0)),--campo17
		exonerado=CONVERT(varchar(15),CONVERT(numeric(38,2),exonerado)),--campo18
		inafecta=CONVERT(varchar(15),CONVERT(numeric(38,2),inafecta)),--campo19
		isc=CONVERT(varchar(15),CONVERT(numeric(38,2),isc)),--campo20
		baseimponibleIva=CONVERT(varchar(15),CONVERT(numeric(38,2),BaseImponibleIva)),--campo21
		ImpuestoIva=CONVERT(varchar(15),CONVERT(numeric(38,2),impuestoIva)),--campo22
		otrosTributos=CONVERT(varchar(15),CONVERT(numeric(38,2),MontoIcbper)),--campo23
		otrosCptos=CONVERT(varchar(15),CONVERT(numeric(38,2),OtrosTributos)),--campo24
		Total=CONVERT(varchar(15),CONVERT(numeric(38,2),total)), --campo25
		moneda= (Case When TipoCambio=0 Then 'PEN' Else 'USD' End), --Campo26 tipo moneda
		tipocambio=CONVERT(varchar(15),(Case When TipoCambio=0 Then 3.0 Else CONVERT(numeric(5,3),TipoCambio) End)),--campo27
		fecha_refcomprobmodi=(case when fecha='' then '01/01/0001' else left(fecha,2)+'/'+substring(fecha,4,2)+'/20'+RIGHT(fecha,2) end),--campo28
		tipo_refcomprobmodi=(case when tipo='' then '00' else CONVERT(varchar(2),tipo) end),--campo29
		serie_refcomprobmodi=CONVERT(varchar(4),(case when serie2='' then '-' else serie2 end)),--campo30
		nro_refcomprobmodi=CONVERT(varchar(9),(case when numero2='' then '-' else (case When len(rtrim(numero2))>7 then right(rtrim(numero2),9) else '0'+rtrim(numero2) end) end)),--campo31
		--codDua='', --campo32
		identiContrato='', --campo32
		tipo1='', --campo33
		medioPago='', --campo34
		estado = (case when CONVERT(datetime,left(fechaEmision,2)+'/'+substring(fechaEmision,4,2)+'/20'+RIGHT(fechaEmision,2),103) < convert(datetime, '01/'+(Case When mes='13' then '12' else mes end)+'/20'+RIGHT(fechaEmision,2), 103) then 
		'9' else (case when tipodoc='0' then (case when entidad in ('AN ULADO','ANULADO') then '2' else '1' end) else (case when ruc='0' then '2' else '1' end) end) end), -- campo35
		Cierre=convert(varchar(10),null) --campo36

	into tmpLeVentas
 	from leVentas
	order by mes, FechaEmision,CodigoDocumento,serie, Numero, FechaVencimiento

	select @ruc rucEmp,@RazonSocial RazonsocialEmp,Periodo,fEmision,fvcto,CodigoDocumento,serie,nrodocumento,impcampo8,tipdoc
		,ruc,proveedor,exportacion,baseimponible,DsctoBI,igv,DsctoIgv,exonerado,inafecta,isc,baseimponibleIva,ImpuestoIva,otrosTributos,otrosCptos,Total,moneda
		,tipocambio,fecha_refcomprobmodi,tipo_refcomprobmodi,serie_refcomprobmodi,nro_refcomprobmodi,identiContrato,tipo1,medioPago
	into tmpSireVen03
	from tmpLeVentas

	select @ruc rucEmp,@RazonSocial RazonsocialEmp,Periodo,fEmision,fvcto,CodigoDocumento,serie,nrodocumento,impcampo8,tipdoc
		,ruc,proveedor,exportacion,baseimponible,DsctoBI,igv,DsctoIgv,exonerado,inafecta,isc,baseimponibleIva,ImpuestoIva,otrosTributos,otrosCptos,Total,moneda
		,tipocambio,fecha_refcomprobmodi,tipo_refcomprobmodi,serie_refcomprobmodi,nro_refcomprobmodi,identiContrato,tipo1,medioPago
	into tmpSireVen02
	from tmpLeVentas
	where left(serie,1) in ('0','1','2','3','4','5','6','7','8','9')

--	set @reg = (select count(serie) from tmpLeVentas) select * from tmpleventas where left(serie,1) in ('0','1','2','3','4','5','6','7','8','9')

--	set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@aMes+'00140100001'+(case when @reg=0 then '0' else '1' end)+'11.txt'

--			set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+femision+''|''+fvcto+''|''+codigoDocumento+''|''+serie+''|''+nrodocumento+''|''+impcampo8+''|''+tipdoc+''|''+ruc+''|''+proveedor+''|''+exportacion+''|''+baseimponible+''|''+DsctoBI+''|''+igv+''|''+DsctoIgv+''|''+exonerado+''|''+inafecta+''|''+isc+''|''+baseimponibleIva+''|''+ImpuestoIva+''|''+otrosTributos+''|''+total+''|''+moneda+''|''+tipocambio+''|''+fecha_refcomprobmodi+''|''+tipo_refcomprobmodi+''|''+serie_refcomprobmodi+''|''+nro_refcomprobmodi+''|''+identiContrato+''|''+tipo1+''|''+medioPago+''|''+convert(char(1),estado)+''|'' from gestion..tmpLeVentas'
----			set @cadena = 'select * from gestion..tmpLeVentas'
--			--set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r '+(Case when @aMes='03' then '\r' else '' end)+'\n' --\r\n
--			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
--			EXEC master..xp_cmdshell @cadena , no_output

--	drop table gestion..tmpLeVentas

--	exec spp_LibrosElectronicosPortal @Anio,@aMes,@bMes,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@IdEmpresa,@zonaVta,@UnidadVta,@tipo

End

--------------------------
-- Generando las PLE Diario
If @tipo ='DIARIO' or @tipo ='MAYOR'
Begin 
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLeDiario]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLeDiario
	drop table tmpLePlanConta
END
-------------------------------------
	declare @newMes as varchar(4)
	set @newMes=@aMes+@bMes
	delete from leDiario

	insert into LeDiario
--	exec "spp_rep_LibroDiario";1 '2015', '0101', '000003', '000003', '000003    ', '000003    ', 3, NULL, ''
	exec spp_rep_LibroDiario @Anio, @newMes, @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica, @IdEmpresa, NULL, ''

	select periodo=@Anio+(Case When substring(@newMes,3,2)='13' then '12' else (Case When substring(@newMes,3,2)='00' then '01' else substring(@newMes,3,2) end) end)+'00', --'201'+substring(nrodoc,3,3)+'00', -- campo1
		--cuo = nrodoc, --campo2
		cuo = (case When @regimen='ESPECIAL' Then 
					rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY nrodoc ORDER BY zona,orden,nrodoc) AS varchar(10)),10,'0'))
				Else 
					nrodoc
				End), --campo2
--		correlativo =(Case When left(nrodoc,2)='00' Then 'A' Else (Case When left(nrodoc,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY nrodoc ORDER BY zona,orden,nrodoc) AS varchar(10)),5,'0')),  --campo3
		correlativo = (case When @regimen='ESPECIAL' Then 
							'M-RER'
						Else 
							(Case When left(nrodoc,2)='00' Then 'A' Else (Case When left(nrodoc,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY nrodoc ORDER BY zona,orden,nrodoc) AS varchar(10)),5,'0'))
						End),  --campo3
		codcuenta= convert(varchar(24),codcuenta), --campo4
		UniEcon='', -- campo5
		CenCosto=Centrocosto, -- campo6
		moneda= 'PEN', --(Case When TipoCambio=0 Then 'PEN' Else 'USD' End), --Campo7
		tipodocEmisor= rtrim(CodClienteProveedor), --Campo8
		DocEmisor= (case when rtrim(ruc)='' then '0' else rtrim(ruc) end), --Campo9
		CodDocRef=(case when CodDocRef in ('-','') then '00' else CodDocRef end), --Campo10
		Serie=(case when serie in ('-','') then '' else Serie end), --Campo11
		NroDocRef=(case when NroDocRef in ('-','') then '-' else NroDocRef end), --Campo12
		FechContable= convert(varchar(10),fechContable,103), --Campo13
		fvcto= '01/01/0001', -- campo14
		foperacion=convert(varchar(10),fechCo,103), --convert(varchar(10),fechContable,103), -- campo15
		descripcion= convert(varchar(100),descripcion), -- campo16
		GlosaReferencia='', --Campo17
		debe= CONVERT(varchar(15),convert(decimal(38,2),impDebe)), -- campo18
		haber = CONVERT(varchar(15),convert(decimal(38,2),imphaber)), --campo19
		CodigoLibro ='', --campo20
		estado = (case when year(fechCo) < year(convert(datetime, '01/'+(Case when substring(nrodoc,4,2)='00' then '01' else (Case When substring(nrodoc,4,2)='13' then '12' else substring(nrodoc,4,2) end) end) +'/201'+substring(nrodoc,3,1))) then 8 else 1 end), -- campo21
		Cierre=null --campo22
	into tmpLeDiario
 	from leDiario
	order by zona,orden,nrodoc, IDMovContables_c,correlativo,FechContable,nrodocref

--	set @reg = (select count(codcuenta) from tmpLeDiario)

----	set @direcCab = 'd:\gestion\'+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'00050100001'+(case when @reg=0 then '0' else '1' end)+'11.txt'
--	set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+(case when @aMes='00' then '01' else @aMes end)+'000'+(Case When @tipo ='DIARIO' Then '5' Else '6' End)+'0100001'+(case when @reg=0 then '0' else '1' end)+'11.txt'

--			set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+codcuenta+''|''+uniecon+''|''+cencosto+''|''+moneda+''|''+tipoDocEmisor+''|''+DocEmisor+''|''+CodDocRef+''|''+Serie+''|''+NroDocRef+''|''+foperacion+''|''+Fvcto+''|''+FechContable+''|''+descripcion+''|''+GlosaReferencia+''|''+debe+''|''+haber+''|''+codigoLibro+''|''+convert(char(1),estado)+''|'' from gestion..tmpLeDiario'
----			set @cadena = 'select * from gestion..tmpLeDiario'
----			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -rgt \n'
--			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n

--			EXEC master..xp_cmdshell @cadena , no_output

----	set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+(case when @aMes='00' then '01' else @aMes end)+'000'+(Case When @tipo ='DIARIO' Then '5' Else '6' End)+'0200001'+(case when @reg=0 then '0' else '1' end)+'11.txt'
----			set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+codcuenta+''|''+uniecon+''|''+cencosto+''|''+moneda+''|''+tipoDocEmisor+''|''+DocEmisor+''|''+CodDocRef+''|''+Serie+''|''+NroDocRef+''|''+foperacion+''|''+Fvcto+''|''+FechContable+''|''+descripcion+''|''+GlosaReferencia+''|''+debe+''|''+haber+''|''+codigoLibro+''|''+convert(char(1),estado)+''|'' from gestion..tmpLeDiario'
----			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
----			EXEC master..xp_cmdshell @cadena , no_output

--	drop table gestion..tmpLeDiario

-----------Creando el formato 5.3 detalle plan cuentas
	If @tipo ='DIARIO' 
	Begin 
	select periodo=@Anio+(Case When @bMes='13' then '12' else (case when @bMes='00' then '01' else @bMes end) end)+'01', --'201'+substring(nrodoc,3,3)+'00', -- campo1
			codcuentacontable= convert(varchar(24),codcuentacontable), --campo2
			descripcion=max(rtrim(descripcion)), -- campo3
			plancontable =convert(varchar(2),'01'), --campo4
			descrplanUsuarioDeudor='', --campo5	
			CodCuentaCorporativa='', --campo6	
			descripCuentaCorporativa='', --campo7	
			estado='1', -- campo8
			Cierre=null --campo9
	into tmpLePlanconta
	from plancuentascontables
	where IdEmpresa= @IdEmpresa and left(anio,4)=(case When rtrim(@anio)<'2020' then '2009' else rtrim(@anio) end)
		and estado='1' and descripcion<>'' and len(codcuentacontable)>2 Group by codcuentacontable
	order by codcuentacontable

--	set @reg = (select count(codcuentacontable) from tmpLePlanconta)

--	set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+(case when @bMes='00' then '01' else @bMes end)+'00050300001'+(case when @reg=0 then '0' else '1' end)+'11.txt'

--			set @cadena = 'select periodo+''|''+codcuentacontable+''|''+descripcion+''|''+plancontable+''|''+descrplanUsuarioDeudor+''|''+CodCuentaCorporativa+''|''+descripCuentaCorporativa+''|''+convert(char(1),estado)+''|'' from gestion..tmpLePlanconta'
----			set @cadena = 'select * from gestion..tmpLePlanConta'
----			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -rgt \n'
--			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
--			EXEC master..xp_cmdshell @cadena , no_output

----	set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+(case when @bMes='00' then '01' else @bMes end)+'00050400001'+(case when @reg=0 then '0' else '1' end)+'11.txt'
----			set @cadena = 'select periodo+''|''+codcuentacontable+''|''+descripcion+''|''+plancontable+''|''+descrplanUsuarioDeudor+''|''+CodCuentaCorporativa+''|''+descripCuentaCorporativa+''|''+convert(char(1),estado)+''|'' from gestion..tmpLePlanconta'
----			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
----			EXEC master..xp_cmdshell @cadena , no_output
--	drop table gestion..tmpLePlanConta
	End
---------------------------------------------
End
/****** Object:  StoredProcedure [dbo].[spp_LibrosElectronicos2]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_LibrosElectronicos2]
--	 @direc Sysname
@Anio char(4),
@aMes char(2),
@bMes char(2),
@aZona varchar(6),
@bZona varchar(6),
@aCodUnidadEconomica varchar(10),
@bCodUnidadEconomica varchar(10),
@docA char(2),
@docB char(2),
@IdEmpresa int,
@zonaVta varchar(200),
@UnidadVta varchar(200),
@digitos int,
@tipo char(6)

As 
declare @cadena varchar(1200), @direcCab Sysname 
Declare @carpeta varchar(20),@ruc varchar(11), @reg int,@nrodoc as int

set @nrodoc = (select valor from parametros where clave ='NumbersLength' and idempresa=@IdEmpresa)

---- spp_LibrosElectronicos2 '2016', '01', '01', '000003', '000003', '000003    ', '000003    ', '01', '99', 3,'', '',7,'CTA10'
----exec spp_LibrosElectronicos2 @Anio='2019',@aMes='12',@bMes='12',@AZona='000012',@BZona='000012',@aCodUnidadEconomica='000012    ',@bCodUnidadEconomica='000012    ',@docA='00',@docB='99',@IdEmpresa='5',@zonaVta='',@UnidadVta='',@Digitos='2',@tipo='CTA12'
--set @ruc= (select ruc from Empresa where IdEmpresa=@IdEmpresa)
--set @carpeta = 'D:\gestion\'
---- Buscamos la carpeta del cliente identificado por RUC si no existe lo creamos
--declare @t table (dir varchar(200))
-- INSERT INTO @t
-- EXEC master.dbo.xp_subdirs @carpeta 
-- set @reg = (select count(dir) from @t where dir like (@ruc+'%'))

--if @reg=0
--Begin -- creando la carpeta del cliente
--	declare @MD varchar(100), @Dir varchar(100)

--	set @Dir = @carpeta + @ruc
--	SET @MD = ' mkdir ' + @Dir

--	EXEC xp_cmdshell @MD, no_output
--End
---- Fin Busca la carpeta del cliente identificado por RUC

--------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLePle
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle2]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLePle2
END




IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle3]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLePle3
END---------------------------------------

-- Generando detalle mov. del efectivo
If @tipo ='CJAEFE'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle2CE]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePle2CE
	END
		CREATE TABLE tmpLePle2CE (Campo1 VarChar(12), Campo2 Varchar(100), campo3 Varchar(50), Campo4 CHAR(10),campo5 VARCHAR(10),
				Campo6 VarChar(3),Campo7 Varchar(250), Campo8 varchar(13), Campo9 Varchar(100), campo10 varchar(250),
				Campo11 varchar(12), Campo12 Varchar(100), Campo13 VarChar(30), Campo14 Numeric(38,5), Campo15 Numeric(38,5), 
				campo16 varchar(10),campo17 char(3),campo18 varchar(3), campo19 varchar(30)) 

	insert into tmpLePle2CE
	exec spp_RepCajayBanco_Detalle @Anio,@aMes,@bMes,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@IdEmpresa,'CE'
	
	select  periodo=@Anio+@bMes+'00', -- campo1
		cuo = campo4, --campo2
		correlativo =(Case When left(campo4,2)='00' Then 'A' Else (Case When left(campo4,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY substring(campo4,4,2) ORDER BY substring(campo4,4,2)) AS varchar(10)),5,'0')),  --campo3
		ctaC = Campo11, --campo4
		UEcon ='', --Campo5
		CCosto='', --Campo6
		moneda = (case when campo17='1' then 'PEN' else 'USD' end), --Campo7
		TipDoc = (case when campo18='' then '00' else isnull(campo18,'00') end), --campo8
		serie  = (case when campo18='05' then right(left(campo19,(case when charindex('-',campo19)=0 then 0 else charindex('-',campo19)-1 end)),1) else left(campo19,(case when charindex('-',campo19)=0 then 0 else charindex('-',campo19)-1 end)) end), --campo9 
		nrodocumento = Substring(campo19,(case when charindex('-',campo19)=0 then 0 else charindex('-',campo19)+(Case When isnull(campo18,'00')  in ('03','01') Then 2 else (Case When isnull(campo18,'00')  in ('02') Then 3 else 1 end) end) end),
										  len(campo19)-
										   (case when charindex('-',campo19)=0 then 0 else charindex('-',campo19)-1 end)+2
										  ), --campo10 
		FecCon= CONVERT(varchar(10),(case when campo5='01/01/1900' then '01/01/'+@anio else campo5 end),103), -- campo11
		FecVen= '', -- campo12
		FecEmi= CONVERT(varchar(10),campo5,103), -- campo13
		Glosa = campo7, -- campo14
		GloRef= campo10, -- campo15
		Deudor=CONVERT(varchar(15),CONVERT(numeric(38,2),campo15)),-- campo16
		Acreedor=CONVERT(varchar(15),CONVERT(numeric(38,2),campo14)), --campo17
		CodLibro= '', --campo18 
		estado =(Case When substring(campo4,4,2) = @bMes Then 1 Else (Case When substring(campo4,4,2) = '00' then 1 else 8 End) End), -- campo9
		Cierre=null --campo35
	into tmpLePle
	from tmpLePle2CE where campo4<>''

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'00010100'+
	--	(Case When @bMes='12' Then '00' Else (Case When @bMes='01' Then '00' Else 
	--	(Case When @bMes='06' Then '00' Else '00' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+ctaC+''|''+UEcon+''|''+CCosto+''|''+Moneda+''|''+TipDoc+''|''+Serie+''|''+NroDocumento+''|''+FecCon+''|''+FecVen+''|''+FecEmi+''|''+Glosa+''|''+GloRef+''|''+deudor+''|''+Acreedor+''|''+CodLibro+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table tmpLePle2CE

End
-- Generando detalle mov. de la CTACTE
If @tipo ='CJACTE'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePleCC]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePleCC
	END
	CREATE TABLE tmpLePleCC (Campo1 VarChar(12), Campo2 Varchar(100), campo3 Varchar(50), Campo4 CHAR(10),campo5 VARCHAR(10),
				Campo6 VarChar(3),Campo7 Varchar(250), Campo8 varchar(13), Campo9 Varchar(100), campo10 varchar(250),
				Campo11 varchar(12), Campo12 Varchar(100), Campo13 VarChar(30), Campo14 Numeric(38,5), Campo15 Numeric(38,5), 
				campo16 varchar(10),campo17 char(3),campo18 varchar(3), campo19 varchar(30),campo20 char(3)) 

	insert into tmpLePleCC
	exec spp_RepCajayBanco_Detalle @Anio,@aMes,@bMes,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@IdEmpresa,'CC'
	
	select  periodo=@Anio+@bMes+'00', -- campo1
		cuo = campo4, --campo2
		correlativo =(Case When left(campo4,2)='00' Then 'A' Else (Case When left(campo4,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY campo1,substring(campo4,4,2) ORDER BY campo1,substring(campo4,4,2)) AS varchar(10)),5,'0')),  --campo3
		ctaEFina = Campo20, --campo4
		CtaBanca = campo1, --right(right(rtrim(campo2),25),len(right(rtrim(campo2),25))- charindex(' ', right(rtrim(campo2),25))), --Campo5
		FechOper = CONVERT(varchar(10),(case when campo5='01/01/1900' then '01/01/'+@anio else campo5 end),103), -- campo6
		medioPago= campo6, --Campo7
		descrip =  rtrim(left(campo7,200)), --campo8
		TipDoc  = (Case When len(rtrim(campo8))=11 and rtrim(campo8) not in ('11111111111','00000000002','99999999997','99999999998') Then (Case When left(campo8,6)='000000' then '0' else '6' end) Else (Case When len(rtrim(campo8))=8 Then '1' Else '0' End) End), --campo9 
		nrodoc  = campo8, --campo10 
		RazSoc  = campo9, -- campo11
		NroTrans= rtrim(right(rtrim(campo19),18)), --right(rtrim(replace(campo10,'*','')),20), -- campo12
		Deudor=CONVERT(varchar(15),CONVERT(numeric(38,2),campo15)),-- campo13
		Acreedor=CONVERT(varchar(15),CONVERT(numeric(38,2),campo14)), --campo14
		estado =(Case When substring(campo4,4,2) = @bMes Then 1 Else (Case When substring(campo4,4,2) = '00' then 1 else 8 End) End), -- campo15
		Cierre=null --campo35
	into tmpLePle
	from tmpLePleCC where campo4<>''

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'00010200'+
	--	(Case When @bMes='12' Then '00' Else (Case When @bMes='01' Then '00' Else 
	--	(Case When @bMes='06' Then '00' Else '00' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+ctaEFina+''|''+CtaBanca+''|''+FechOper+''|''+mediopago+''|''+descrip+''|''+TipDoc+''|''+NroDoc+''|''+RazSoc+''|''+NroTrans+''|''+deudor+''|''+Acreedor+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table gestionEO20..tmpLePle2

End
-- Generando PLE BGRAL
If @tipo ='BGRAL'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle2]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePle2
	END	
	
	exec Spp_LibrosElectronicos2Tmp @Anio,@aMes,@bMes,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@IdEmpresa,7,'ESF01'




	select periodo=@Anio+@bMes+'31', -- campo1
		catalogo = '01', --campo2
		rubroEEFF =rtrim(codigo),  --campo3
		saldo=CONVERT(varchar(15),CONVERT(numeric(38,2),total)),-- campo4
		estado =(case when @bMes = @bMes Then 1 Else 8 End), -- campo5
		Cierre=null --campo35
	into tmpLePle
	from (select * from tbl_FlujoEfectivo e left outer join tmpffee fe on e.codigoSbs=fe.codigo
	where codigoOrden='ESF01'
	and Cuenta+Cuenta2<>'') aa
	where total is not null

	-- BGRAL idem real
	--IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle2]') AND type in (N'U'))
	--BEGIN 
	--	DROP TABLE tmpLePle2
	--END
	--	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle21]') AND type in (N'U'))
	--BEGIN 
	--	DROP TABLE tmpLePle21
	--END
	--CREATE TABLE tmpLePle2 (Campo1 VarChar(30), Campo2 Varchar(12), campo3 Varchar(150), Campo4 Numeric(38,2)) 
	--CREATE TABLE tmpLePle21 (Campo1 VarChar(30), Campo2 Varchar(12), campo3 Varchar(150), Campo4 Numeric(38,2),campo5 Varchar(12)) 

	--insert into tmpLePle2
	--exec spp_rep_BalanceGeneralI @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica, @Anio,@aMes,@bMes, @IdEmpresa
	--insert into tmpLePle21
	--exec spp_rep_BalanceGeneralII @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica, @Anio,@aMes,@bMes, @IdEmpresa

	--select  periodo=@Anio+@bMes+'31', -- campo1
	--	Catalogo = '01', --campo2
	--	RubroEEFF ='1D0109',  --campo3
	--	Saldo=CONVERT(varchar(15),CONVERT(numeric(38,2),campo4)), -- campo4
	--	estado = 1, -- campo9
	--	Cierre=null --campo35
	--into tmpLePle
	--from (select campo1,campo2,campo3,campo4 from tmpLePle2
	--		union all
	--		select campo1,campo2,campo3,campo4 from tmpLePle21
	--	) todos

--print 'ok'
--	set @reg = (select count(periodo) from tmpLePle)
--	set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31030100'+
--		(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
--		(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

--			set @cadena = 'select periodo+''|''+catalogo+''|''+RubroEEFF+''|''+Saldo+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

--			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
--			EXEC master..xp_cmdshell @cadena , no_output

--	--drop table gestionEO20..tmpLePle
--	drop table gestionEO20..tmpLePle2
--	drop table gestionEO20..tmpLePle21

End
-- Generando PLE Cta 10
If @tipo ='CTA10'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle10]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePle10
	END
	CREATE TABLE tmpLePle10 (Campo1 VarChar(12), Campo2 Varchar(150), campo3 char(80), Campo4 CHAR(30),campo5 CHAR(2),
				Campo6 Numeric(38,2),Campo7 Numeric(38,2), Campo8 int) 

	insert into tmpLePle10
	exec Spp_Rep_SaldoCuenta10 @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa

	select  periodo=@Anio+@bMes+'31', -- campo1
		ctaC = Campo1, --campo2
		CodEFina =CONVERT(Varchar(3),Campo8),  --campo3
		ctaBancaria=campo4, -- campo4
		Moneda= campo5, -- campo5
		Deudor=CONVERT(varchar(15),CONVERT(numeric(38,2),campo6)),-- campo6
		Acreedor=CONVERT(varchar(15),CONVERT(numeric(38,2),campo7)), --campo7
		estado = 1, -- campo9
		Cierre=null --campo35
	into tmpLePle
	from tmpLePle10

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31030200'+
	--	(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
	--	(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+ctaC+''|''+codEFina+''|''+ctaBancaria+''|''+moneda+''|''+deudor+''|''+Acreedor+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table gestionEO20..tmpLePle21

End
-- Generando PLE Cta 12
If @tipo ='CTA12'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle12]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePle12
	END
	CREATE TABLE tmpLePle12 (Campo1 VarChar(12), Campo2 Varchar(20), campo3 Varchar(100), 
				Campo4 Numeric(38,2),Campo5 datetime,campo6 varchar(15),campo7 varchar(180)) 

	insert into tmpLePle12
	exec Spp_Rep_SaldoCuenta12 @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa,'12' --@zonaVta
	insert into tmpLePle12
	exec Spp_Rep_SaldoCuenta12 @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa,'13'

	select  periodo=@Anio+substring(campo6,4,2)+'31', -- campo1
		cuo = campo6, --campo2
		correlativo =(Case When left(campo6,2)='00' Then 'A' Else (Case When left(campo6,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY substring(campo6,4,2) ORDER BY substring(campo6,4,2)) AS varchar(10)),5,'0')),  --campo3
		tipodoc = CONVERT(Varchar(1),Campo1), --campo4
		Nrodoc =CONVERT(Varchar(15),campo2),  --campo5
		RazSoc=campo3, -- campo6
		FecEmi= CONVERT(varchar(10),campo5,103), -- campo7
		monto=CONVERT(varchar(15),CONVERT(numeric(38,2),campo4)),-- campo8
		estado =(Case When substring(campo6,4,2) = @bMes Then 1 Else 8 End), -- campo9
		Cierre=null --campo35
	into tmpLePle
	from tmpLePle12

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31030300'+
	--	(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
	--	(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+tipodoc+''|''+nrodoc+''|''+razsoc+''|''+FecEmi+''|''+monto+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table gestionEO20..tmpLePle2

End
-- Generando PLE Cta 14
If @tipo ='CTA14'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle14]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePle14
	END
	CREATE TABLE tmpLePle14 (Campo1 VarChar(12), Campo2 Varchar(20), campo3 Varchar(100), 
				Campo4 Numeric(38,2),Campo5 datetime,campo6 varchar(15),campo7 varchar(180)) 

	insert into tmpLePle14
	exec Spp_Rep_SaldoCuenta12 @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa,'14'

	select  periodo=@Anio+substring(campo6,4,2)+'31', -- campo1
		cuo = campo6, --campo2
		correlativo =(Case When left(campo6,2)='00' Then 'A' Else (Case When left(campo6,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY substring(campo6,4,2) ORDER BY substring(campo6,4,2)) AS varchar(10)),5,'0')),  --campo3
		tipodoc = CONVERT(Varchar(1),Campo1), --campo4
		Nrodoc =CONVERT(Varchar(15),campo2),  --campo5
		RazSoc=campo3, -- campo6
		FecEmi= CONVERT(varchar(10),campo5,103), -- campo7
		monto=CONVERT(varchar(15),CONVERT(numeric(38,2),campo4)),-- campo8
		estado =(Case When substring(campo6,4,2) = @bMes Then 1 Else 8 End), -- campo9
		Cierre=null --campo35
	into tmpLePle
	from tmpLePle14

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31030400'+
	--	(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
	--	(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+tipodoc+''|''+nrodoc+''|''+razsoc+''|''+FecEmi+''|''+monto+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table gestionEO20..tmpLePle2

End
-- Generando PLE Cta 16
If @tipo ='CTA16'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle16]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePle16
	END
	CREATE TABLE tmpLePle16 (Campo1 VarChar(12), Campo2 Varchar(20), campo3 Varchar(100), 
				Campo4 Numeric(38,2),Campo5 datetime,campo6 varchar(15),campo7 varchar(180)) 

	insert into tmpLePle16
	exec Spp_Rep_SaldoCuenta12 @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa,'16'
	insert into tmpLePle16
	exec Spp_Rep_SaldoCuenta12 @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa,'17'

	select  periodo=@Anio+substring(campo6,4,2)+'31', -- campo1
		cuo = campo6, --campo2
		correlativo =(Case When left(campo6,2)='00' Then 'A' Else (Case When left(campo6,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY substring(campo6,4,2) ORDER BY substring(campo6,4,2)) AS varchar(10)),5,'0')),  --campo3
		tipodoc = CONVERT(Varchar(1),Campo1), --campo4
		Nrodoc =CONVERT(Varchar(15),campo2),  --campo5
		RazSoc=campo3, -- campo6
		FecEmi= CONVERT(varchar(10),campo5,103), -- campo7
		monto=CONVERT(varchar(15),CONVERT(numeric(38,2),campo4)),-- campo8
		estado =(Case When substring(campo6,4,2) = @bMes Then 1 Else 8 End), -- campo9
		Cierre=null --campo35
	into tmpLePle
	from tmpLePle16

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31030500'+
	--	(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
	--	(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+tipodoc+''|''+nrodoc+''|''+razsoc+''|''+FecEmi+''|''+monto+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table gestionEO20..tmpLePle2

End
-- Generando PLE Cta 19
If @tipo ='CTA19'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle19]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePle19
	END
	CREATE TABLE tmpLePle19 (Campo1 VarChar(2), Campo2 Varchar(15), campo3 Varchar(100), 
				Campo4 varchar(2),Campo5 Varchar(42),Campo6 datetime,Campo7 Numeric(38,2),campo8 varchar(15)) 

	insert into tmpLePle19
	exec Spp_Rep_SaldoCuenta19 @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa,'19'
	
	select  periodo=@Anio+substring(campo8,4,2)+'31', -- campo1
		cuo = campo8, --campo2
		correlativo =(Case When left(campo8,2)='00' Then 'A' Else (Case When left(campo8,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY substring(campo8,4,2) ORDER BY substring(campo8,4,2)) AS varchar(10)),5,'0')),  --campo3
		tipodoc = CONVERT(Varchar(1),Campo1), --campo4
		Nrodoc =CONVERT(Varchar(15),campo2),  --campo5
		RazSoc=campo3, -- campo6
		tipoDocumento= campo4, -- campo7
		serie  = left(campo5,charindex('-',campo5)), --campo8 
		nrodocumento = Substring(campo5,charindex('-',campo5),len(campo5)-charindex('-',campo5)+1), --campo9 
		FecEmi= CONVERT(varchar(10),campo5,103), -- campo10
		monto=CONVERT(varchar(15),CONVERT(numeric(38,2),campo4)),-- campo11
		estado =(Case When substring(campo8,4,2) = @bMes Then 1 Else 8 End), -- campo9
		Cierre=null --campo35
	into tmpLePle
	from tmpLePle19

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31030600'+
	--	(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
	--	(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+tipodoc+''|''+nrodoc+''|''+razsoc+''|''+tipodocumento+''|''+serie+''|''+nrodocumento+''|''+FecEmi+''|''+monto+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table gestionEO20..tmpLePle2

End
-- Generando PLE Cta 34
If @tipo ='CTA34'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle34]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePle34
	END
	CREATE TABLE tmpLePle34 (Campo1 VarChar(4), Campo2 Varchar(12), campo3 datetime, 
				Campo4 varchar(40),Campo5 Varchar(300),Campo6 Varchar(2),Campo7 Numeric(38,2),campo8 Numeric(38,2),Campo9 varchar(10)) 

	insert into tmpLePle34
	exec spp_Cuenta34intangibles @Anio,@aMes,@bMes,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@IdEmpresa,'34'
	
	select  periodo=@Anio+substring(campo9,4,2)+'31', -- campo1
		cuo = campo9, --campo2
		correlativo =(Case When left(campo9,2)='00' Then 'A' Else (Case When left(campo9,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY substring(campo9,4,2) ORDER BY substring(campo9,4,2)) AS varchar(10)),5,'0')),  --campo3
		tipodoc = CONVERT(varchar(10),campo3,103), --campo4
		CtaCble =CONVERT(Varchar(15),campo2),  --campo5
		Descrip=campo5, -- campo6
		valorcont= CONVERT(varchar(15),CONVERT(numeric(38,2),campo7)), -- campo7
		Amortiza = CONVERT(varchar(15),CONVERT(numeric(38,2),campo8)), --campo8 
		estado =(Case When substring(campo9,4,2) = @bMes Then 1 Else 8 End), -- campo9
		Cierre=null --campo35
	into tmpLePle
	from tmpLePle34

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31030900'+
	--	(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
	--	(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+tipodoc+''|''+CtaCble+''|''+Descrip+''|''+ValorCont+''|''+Amortiza+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table gestionEO20..tmpLePle2

End
-- Generando PLE Cta 41
If @tipo ='CTA41'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle41]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePle41
	END
	CREATE TABLE tmpLePle41 (Campo1 VarChar(12), Campo2 Varchar(100), campo3 Varchar(13), 
				Campo4 varchar(180),Campo5 Varchar(1),Campo6 Varchar(15),Campo7 Numeric(38,2),campo8 varchar(15)) 

	insert into tmpLePle41
	exec Spp_Rep_SaldoCuenta41 @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa
		
	select  periodo=@Anio+substring(campo8,4,2)+'31', -- campo1
		cuo = campo8, --campo2
		correlativo =(Case When left(campo8,2)='00' Then 'A' Else (Case When left(campo8,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY substring(campo8,4,2) ORDER BY substring(campo8,4,2)) AS varchar(10)),5,'0')),  --campo3
		CtaConta = Campo1, --campo4
		Tipodoc =campo5,  --campo5
		NroDoc=campo6, -- campo6
		CodTrab= campo3, -- campo7
		NomTrab = CONVERT(varchar(100),campo4), --campo8 
		Saldo=CONVERT(varchar(15),CONVERT(numeric(38,2),campo7)),-- campo9
		estado =(Case When substring(campo8,4,2) = @bMes Then 1 Else 8 End), -- campo10
		Cierre=null --campo35
	into tmpLePle
	from tmpLePle41

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31031100'+
	--	(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
	--	(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+CtaConta+''|''+Tipodoc+''|''+NroDoc+''|''+CodTrab+''|''+NomTrab+''|''+Saldo+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table gestionEO20..tmpLePle2

End
-- Generando PLE Cta 42
If @tipo ='CTA42'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle42]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePle42
	END
	CREATE TABLE tmpLePle42 (Campo1 VarChar(12), Campo2 Varchar(20), campo3 Varchar(100), 
				Campo4 Numeric(38,2),Campo5 datetime,campo6 varchar(15),campo7 varchar(180)) 

	insert into tmpLePle42
	exec Spp_Rep_SaldoCuenta12 @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa,'42'
	insert into tmpLePle42
	exec Spp_Rep_SaldoCuenta12 @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa,'43'

	select  periodo=@Anio+substring(campo6,4,2)+'31', -- campo1
		cuo = campo6, --campo2
		correlativo =(Case When left(campo6,2)='00' Then 'A' Else (Case When left(campo6,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY substring(campo6,4,2) ORDER BY substring(campo6,4,2)) AS varchar(10)),5,'0')),  --campo3
		tipodoc = CONVERT(Varchar(1),Campo1), --campo4
		Nrodoc =CONVERT(Varchar(15),campo2),  --campo5
		FecEmi= CONVERT(varchar(10),campo5,103), -- campo6
		RazSoc=campo3, -- campo7
		monto=CONVERT(varchar(15),CONVERT(numeric(38,2),campo4)),-- campo8
		estado =(Case When substring(campo6,4,2) = @bMes Then 1 Else 8 End), -- campo9
		Cierre=null --campo35
	into tmpLePle
	from tmpLePle42

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31031200'+
	--	(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
	--	(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+tipodoc+''|''+nrodoc+''|''+FecEmi+''|''+razsoc+''|''+monto+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table gestionEO20..tmpLePle2

End
-- Generando PLE Cta 46
If @tipo ='CTA46'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle46]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePle46
	END
	CREATE TABLE tmpLePle46 (Campo1 VarChar(12), Campo2 Varchar(200), campo3 Varchar(20), 
				Campo4 varchar(100),Campo5 Numeric(38,2),Campo6 datetime,campo7 varchar(200), campo8 varchar(15)) 

	insert into tmpLePle46
	exec Spp_Rep_SaldoCuenta46 @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa,'46'
	--insert into tmpLePle2
	--exec Spp_Rep_SaldoCuenta46 @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa,'47'

	select  periodo=@Anio+substring(campo8,4,2)+'31', -- campo1
		cuo = campo8, --campo2
		correlativo =(Case When left(campo8,2)='00' Then 'A' Else (Case When left(campo8,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY substring(campo8,4,2) ORDER BY substring(campo8,4,2)) AS varchar(10)),5,'0')),  --campo3
		tipodoc = CONVERT(Varchar(1),Campo1), --campo4
		Nrodoc =CONVERT(Varchar(15),campo3),  --campo5
		FecEmi= CONVERT(varchar(10),campo6,103), -- campo6
		RazSoc=campo4, -- campo7
		CtaCble=campo7, -- campo8
		monto=CONVERT(varchar(15),CONVERT(numeric(38,2),campo5)),-- campo8
		estado =(Case When substring(campo8,4,2) = @bMes Then 1 Else 8 End), -- campo9
		Cierre=null --campo35
	into tmpLePle
	from tmpLePle46

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31031300'+
	--	(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
	--	(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+tipodoc+''|''+nrodoc+''|''+FecEmi+''|''+razsoc+''|''+CtaCble+''|''+monto+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table gestionEO20..tmpLePle2

End
If @tipo ='CTA47' -- Generando PLE Cta 47
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle47]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePle47
	END
	CREATE TABLE tmpLePle47 (Campo1 VarChar(12), Campo2 Varchar(200), campo3 Varchar(20), 
				Campo4 varchar(100),Campo5 Numeric(38,2),Campo6 datetime,campo7 varchar(200), campo8 varchar(15)) 

	insert into tmpLePle47
	exec Spp_Rep_SaldoCuenta46 @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa,'47'

	select  periodo=@Anio+substring(campo8,4,2)+'31', -- campo1
		cuo = campo8, --campo2
		correlativo =(Case When left(campo8,2)='00' Then 'A' Else (Case When left(campo8,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY substring(campo8,4,2) ORDER BY substring(campo8,4,2)) AS varchar(10)),5,'0')),  --campo3
		tipodoc = CONVERT(Varchar(1),Campo1), --campo4
		Nrodoc =CONVERT(Varchar(15),campo3),  --campo5
		--FecEmi= CONVERT(varchar(10),campo6,103), -- campo6
		RazSoc=campo4, -- campo7
		--CtaCble=campo7, -- campo8
		monto=CONVERT(varchar(15),CONVERT(numeric(38,2),campo5)),-- campo8
		estado =(Case When substring(campo8,4,2) = @bMes Then 1 Else 8 End), -- campo9
		Cierre=null --campo35
	into tmpLePle
	from tmpLePle47

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31031400' +
	--	(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
	--	(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+tipodoc+''|''+nrodoc+''|''+razsoc+''|''+monto+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table gestionEO20..tmpLePle2

End
-- Generando PLE Cta 49
If @tipo ='CTA49'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle49]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePle49
	END
	CREATE TABLE tmpLePle49 (Campo1 VarChar(12), Campo2 Varchar(300), campo3 Varchar(20), 
				Campo4 varchar(100),Campo5 Numeric(38,2),Campo6 datetime,campo7 varchar(40), campo8 varchar(12), campo9 varchar(15)) 

	insert into tmpLePle49
	exec Spp_Rep_SaldoCuenta49 @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa,'37'
	insert into tmpLePle49
	exec Spp_Rep_SaldoCuenta49 @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa,'49'

	select  periodo=@Anio+substring(campo9,4,2)+'31', -- campo1
		cuo = campo9, --campo2
		correlativo =(Case When left(campo9,2)='00' Then 'A' Else (Case When left(campo9,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY substring(campo9,4,2) ORDER BY substring(campo9,4,2)) AS varchar(10)),5,'0')),  --campo3
		tipodoc = CONVERT(Varchar(1),Campo1), --campo4
		serie  = left(campo7,charindex('-',campo7)), --campo5 
		nrodocumento = Substring(campo7,charindex('-',campo7),len(campo7)-charindex('-',campo7)+1), --campo6 
		CtaCble=campo8, -- campo7
		descrip= left(campo2,40), -- campo8
		monto=CONVERT(varchar(15),CONVERT(numeric(38,2),campo5)),-- campo9
		Adicion=CONVERT(varchar(15),CONVERT(numeric(38,2),0.0)),-- campo10
		deduccion=CONVERT(varchar(15),CONVERT(numeric(38,2),0.0)),-- campo11
		estado =(Case When substring(campo9,4,2) = @bMes Then 1 Else 8 End), -- campo12
		Cierre=null --campo35
	into tmpLePle
	from tmpLePle49

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31031500'+
	--	(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
	--	(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+tipodoc+''|''+serie+''|''+nrodocumento+''|''+ctacble+''|''+descrip+''|''+monto+''|''+adicion+''|''+deduccion+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table gestionEO20..tmpLePle2

End
-- Generando PLE Cta 50
If @tipo ='CTA50'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle50]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePle50
	END
	
	CREATE TABLE tmpLePle50 (Campo1 int, Campo2 Float, campo3 int, 
				Campo4 Float,Campo5 Numeric(38,2),Campo6 int,campo7 varchar(2), campo8 varchar(13), campo9 varchar(100),
				campo10 varchar(50),campo11 Float,campo12 Float) 

	insert into tmpLePle50
	exec Spp_Rep_SaldoCuenta50 @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa,@zonaVta
	--	resumen capital
	select  periodo=@Anio+@bMes+'31', -- campo1
		capital = CONVERT(varchar(15),CONVERT(numeric(38,2),sum(campo2))), --campo2
		valoraccion =CONVERT(varchar(2),campo3),  --campo3
		suscritas = CONVERT(varchar(15),CONVERT(numeric(38,2),sum(campo4))), --campo4
		pagada = CONVERT(varchar(15),CONVERT(numeric(38,2),sum(campo5))), --campo5 
		estado =1, -- campo12
		Cierre=null --campo35
	into tmpLePle
	from tmpLePle50
	group by campo3

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31031601'+
	--	(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
	--	(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+capital+''|''+valoraccion+''|''+suscritas+''|''+pagada+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle

	-- detalle participacion accionariado
	select  periodo=@Anio+@bMes+'31', -- campo1
		tipdoc = campo7, --campo2
		nrodoc =campo8,  --campo3
		tipAcci = '03', --campo4
		Razsoc = campo9, --campo5 
		NroAcci = CONVERT(varchar(15),CONVERT(numeric(38,2),campo11)), --campo6 
		porcentaje = CONVERT(varchar(15),CONVERT(numeric(38,2),campo12)), --campo7 
		estado =1, -- campo8
		Cierre=null --campo9
	into tmpLePle3
	from tmpLePle50

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31031602'+
	--	(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
	--	(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+tipdoc+''|''+nrodoc+''|''+tipacci+''|''+razsoc+''|''+NroAcci+''|''+procentaje+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table gestionEO20..tmpLePle2

End
----------------------------
-- Generando PLE Balance Comprobacion
If @tipo ='BALCOM'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePleBC]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePleBC
	END
	--crear la tabla con campos del BALANCE COMPROB. y asignar los campos
	CREATE TABLE tmpLePleBC (Campo1 VarChar(12), Campo2 Varchar(200), 
				campo3 Numeric(38,2),Campo4 Numeric(38,2),Campo5 Numeric(38,2),Campo6 Numeric(38,2),Campo7 Numeric(38,2),Campo8 Numeric(38,2),
				Campo9 Numeric(38,2),Campo10 Numeric(38,2),Campo11 Numeric(38,2),Campo12 Numeric(38,2),Campo13 Numeric(38,2),Campo14 Numeric(38,2),Campo15 Numeric(38,2),Campo16 Numeric(38,2)) 

	insert into tmpLePleBC
	exec Spp_Rep_balanceComprobacion @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa

	select  periodo=@Anio+@bMes+'31', -- campo1
		cuenta = campo1, --campo2
		inicialD =CONVERT(varchar(15),CONVERT(numeric(38,2),campo3)),  --campo3
		inicialH =CONVERT(varchar(15),CONVERT(numeric(38,2),campo4)),  --campo4
		MesD =CONVERT(varchar(15),CONVERT(numeric(38,2),campo5)),  --campo5
		MesH =CONVERT(varchar(15),CONVERT(numeric(38,2),campo6)),  --campo6
		MayorD =CONVERT(varchar(15),CONVERT(numeric(38,2),campo3+campo5)),  --campo7
		MayorH =CONVERT(varchar(15),CONVERT(numeric(38,2),campo4+campo6)),  --campo8
		SaldoD =CONVERT(varchar(15),CONVERT(numeric(38,2),campo7)),  --campo9
		SaldoH =CONVERT(varchar(15),CONVERT(numeric(38,2),campo8)),  --campo10
		TransfD =CONVERT(varchar(15),CONVERT(numeric(38,2),0.0)),  --campo11
		TransfH =CONVERT(varchar(15),CONVERT(numeric(38,2),0.0)),  --campo12
		BalanceD =CONVERT(varchar(15),CONVERT(numeric(38,2),campo11)),  --campo13
		BalanceH =CONVERT(varchar(15),CONVERT(numeric(38,2),campo12)),  --campo14
		NaturalezaD =CONVERT(varchar(15),CONVERT(numeric(38,2),campo13)),  --campo15
		NaturalezaH =CONVERT(varchar(15),CONVERT(numeric(38,2),campo14)),  --campo16
		Adicion =CONVERT(varchar(15),CONVERT(numeric(38,2),0.0)),  --campo17
		Deduccion =CONVERT(varchar(15),CONVERT(numeric(38,2),0.0)),  --campo18
		estado =(Case When @bMes = @bMes Then 1 Else 8 End), -- campo19
		Cierre=null --campo35
	into tmpLePle
	from tmpLePleBC

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31031700'+
	--	(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
	--	(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+cuenta+''|''+inicialD+''|''+inicialH+''|''+mesD+''|''+MesH+''|''+MayorD+''|''+MayorH+''|''+SaldoD+''|''+SaldoH+''|''+TransfD+''|''+TransfH+''|''+BalanceD+''|''+BalanceH+''|''+NaturalezaH+''|''+NaturalezaH+''|''+Adicion+''|''+Deduccion+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table gestionEO20..tmpLePle2

End
-- Generando PLE Flujo Efectivo Metodo Directo
If @tipo ='FJOEFE'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle2]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePle2
	END	
	
	exec Spp_LibrosElectronicos2Tmp @Anio,@aMes,@bMes,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@IdEmpresa,3,'FED01'



	select periodo=@Anio+@bMes+'31', -- campo1
		catalogo = '01', --campo2
		rubro =rtrim(codigo),  --campo3
		saldo=CONVERT(varchar(15),CONVERT(numeric(38,2),total)),-- campo4
		estado =(case when @bMes = @bMes Then 1 Else 8 End), -- campo5
		Cierre=null --campo35
	into tmpLePle
	from (select * from tbl_FlujoEfectivo e left outer join tmpffee fe on e.codigoSbs=fe.codigo
	where codigoOrden='FED01'
	and Cuenta+Cuenta2<>'') aa






----crear la tabla con campos del Flujo de Efectivo. y asignar los campos
--	CREATE TABLE tmpLePle2 (Campo1 VarChar(12), Campo2 Varchar(200), campo3 Numeric(38,2), 
--				Campo4 Numeric(38,2),Campo5 Numeric(38,2),Campo6 VarChar(12)) 

--	insert into tmpLePle2
--	Exec spp_Rep_FlujoEfectivo @Anio,@aMes,@bMes,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@IdEmpresa,'','RES'
---- 	Exec spp_Rep_FlujoEfectivo '2020','00','04','000012','000012','000012','000012','5','','RES'

--	select  periodo=@Anio+@bMes+'31', -- campo1
--		catalogo = '01', --campo2
--		rubro =rtrim(campo6),  --campo3
--		saldo=CONVERT(varchar(15),CONVERT(numeric(38,2),campo5)),-- campo4
--		estado =(case when @bMes = @bMes Then 1 Else 8 End), -- campo5
--		Cierre=null --campo35
--	into tmpLePle
--	from tmpLePle2

	----set @reg = (select count(periodo) from tmpLePle)
	----set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31031800'+
	----	(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
	----	(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	----		set @cadena = 'select periodo+''|''+catalogo+''|''+rubro+''|''+saldo+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	----		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	----		EXEC master..xp_cmdshell @cadena , no_output

	----drop table gestionEO20..tmpLePle
	----drop table gestionEO20..tmpLePle2

End
-- Generando PLE CAMBIO PATROMONIO NETO
If @tipo ='PNETO'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePlePN]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePlePN
	END
--crear la tabla con campos del Flujo de Efectivo. y asignar los campos
	CREATE TABLE tmpLePlePN (Campo1 VarChar(12), Campo2 Varchar(400), campo3 Varchar(50), 
				Campo4 Numeric(38,2),Campo5 Numeric(38,2),campo6 Numeric(38,2),Campo Varchar(20)) 

	insert into tmpLePlePN
	Exec spp_rep_PatrimonioNeto @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica, @Anio,@aMes,@bMes, @IdEmpresa
-- 	Exec spp_rep_PatrimonioNeto '000012','000012','000012','000012','2019','00','12',5

-- creando la tabla solicitada
		declare @cadena0 as varchar(8000)
		declare @cadena1 as varchar(8000)
		declare @cadena2 as varchar(800)
		declare @conceptos as varchar(30)
		declare @csql as varchar(8000)

		declare cuentas cursor for 
		select rtrim(campo3) cuentas from tmpLePlePN
		group by campo3
		order by campo3

		set @cadena0 = ''
		set @cadena1 = ''
		set @cadena2 = ''

		open cuentas
		fetch next from cuentas
		into @conceptos
		while @@fetch_status =0
		begin
		set @cadena0 = @cadena0 + '''['+(Case When @conceptos='' then 'SinCta' else @conceptos end) +']'' ' + (Case When @conceptos='' then 'SinCta' else @conceptos end) +','
		set @cadena1 = @cadena1 + 'isnull(['+(Case When @conceptos='' then 'SinCta' else @conceptos end) +'],0.00) ''C'+ (Case When @conceptos='' then 'SinCta' else LEFT(@conceptos,1) end) +''','
		set @cadena2 = @cadena2 + '['+(Case When @conceptos='' then 'SinCta' else @conceptos end) +'],'

		fetch next from cuentas
		into @conceptos
		end 
		close cuentas
		deallocate cuentas

		set @cadena0 = left(@cadena0, len(@cadena0)-1)
		set @cadena1 = left(@cadena1, len(@cadena1)-1)
		set @cadena2 = left(@cadena2, len(@cadena2)-1)

		IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'tmpTemporal') AND type in (N'U'))
		BEGIN 
			DROP TABLE tmpTemporal
		END

		set @csql = ('select campo1,campo2,campo,'+ @cadena1 +
		' into tmpTemporal from (
			select campo1,campo2,campo,round(campo4,2) total,(case When rtrim(campo3)='''' Then ''SinCta'' Else rtrim(campo3) End) cuentas 
			from tmpLePlePN
			) V pivot 
		(sum(total) for cuentas in ('
		+ @cadena2 +
		')) as PT order by campo2' 
		)

		exec(@csql)
		-- fin de la tabla solicitada
	select  periodo=@Anio+@bMes+'31', -- campo1
		catalogo = '01', --campo2
		rubro = campo,  --campo3
		capital = CONVERT(varchar(15),CONVERT(numeric(38,2),c1)), --campo4
		inversion = CONVERT(varchar(15),CONVERT(numeric(38,2),c3)),  --campo5
		Cadicional= CONVERT(varchar(15),CONVERT(numeric(38,2),c2)), -- campo6
		NoRealizado= CONVERT(varchar(10),0.0,103), -- campo7
		Rlegal=CONVERT(varchar(15),CONVERT(numeric(38,2),c5)),-- campo8
		OtraReservas=CONVERT(varchar(15),CONVERT(numeric(38,2),c6)),-- campo9
		RAcumulado=CONVERT(varchar(15),CONVERT(numeric(38,2),c7)),-- campo10
		DifConversion=CONVERT(varchar(15),CONVERT(numeric(38,2),0.0)),-- campo11
		AjustePatrimonio=CONVERT(varchar(15),CONVERT(numeric(38,2),0.0)),-- campo12
		ResNeto=CONVERT(varchar(15),CONVERT(numeric(38,2),0.0)),-- campo13
		ExcedenteRevalua=CONVERT(varchar(15),CONVERT(numeric(38,2),c4)),-- campo14
		ResulEjercicio=CONVERT(varchar(15),CONVERT(numeric(38,2),c7)),-- campo15
		estado =(case when @bMes = @bMes Then 1 Else 8 End), -- campo16
		Cierre=null --campo17
	into tmpLePle
	from tmpTemporal

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31031900'+
	--	(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
	--	(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+catalogo+''|''+rubro+''|''+capital+''|''+inversion+''|''+Cadicional+''|''+NoRealizado+''|''+Rlegal+''|''+OtraReservas+''|''+RAcumulado+''|''+DifConversion+''|''+AjustePatrimonio+''|''+ResNeto+''|''+ExcedenteRevalua+''|''+ResulEjercicio+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table gestionEO20..tmpLePle2

End
-- Retencion
-- Generando PLE RETENCIONES
If @tipo ='RETEN'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePleRE]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePleRE
	END
--crear la tabla con campos del Flujo de Efectivo. y asignar los campos
	CREATE TABLE tmpLePleRE (Campo1 VarChar(50), Campo2 Varchar(3), campo3 Varchar(10), campo4 DATETIME,
				Campo5 VARCHAR(2),Campo6 VARCHAR(14),Campo7 NVARCHAR(100),
				Campo8 Numeric(38,2),Campo9 Numeric(38,2),Campo10 Numeric(38,2),Campo11 CHAR(12),
				Campo12 Numeric(38,2),Campo13 Numeric(38,2),Campo14 CHAR(2),Campo15 VARCHAR(15),Campo16 DATETIME)

	insert into tmpLePleRE
	Exec spp_rep_LibroHonorarios @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@Anio,@aMes,@bMes,@IdEmpresa
-- 	Exec spp_rep_LibroHonorarios '000012', '000012', '000012    ', '000012    ', '2019', '01', '01', 5

	select  periodo=@Anio+@bMes+'00', -- campo1
		cuo = Campo3, --campo2
		correlativo =(Case When left(Campo3,2)='00' Then 'A' Else (Case When left(Campo3,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY Campo1 ORDER BY Campo4, Campo3) AS varchar(10)),5,'0')),  --campo3
		fEmision=convert(varchar(10),campo4,103), -- campo4
		TipoDoc = rtrim(Campo5), --campo5
		NroDoc =rtrim(Campo6),  --campo6
		Nombre =rtrim(Campo7),  --campo7
		Monto=CONVERT(varchar(15),CONVERT(numeric(38,2),campo8)),-- campo8
		Retencion=CONVERT(varchar(15),CONVERT(numeric(38,2),campo9)),-- campo9
		estado =(case when @bMes = @bMes Then 1 Else 8 End), -- campo10
		Cierre=null --campo35
	into tmpLePle
	from tmpLePleRE

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'00040100'+
	--	'00'+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+fEmision+''|''+TipoDoc+''|''+NroDoc+''|''+nombre+''|''+monto+''|''+retencion+''|''+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table gestionEO20..tmpLePle2

End
-- Generando PLE Estados Financieros por Función

If @tipo ='EFUN'
Begin 
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle2]') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePle2
	END	
	
	exec Spp_LibrosElectronicos2Tmp @Anio,@aMes,@bMes,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@IdEmpresa,2,'ERS01'



--	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle2]') AND type in (N'U'))
--	BEGIN 
--		DROP TABLE tmpLePle2
--	END
----crear la tabla con campos del Flujo de Efectivo. y asignar los campos
--	CREATE TABLE tmpLePle2 (Campo1 int, Campo2 Varchar(50), campo3 Varchar(60), 
--				Campo4 varchar(2),Campo5 Numeric(38,2),Campo6 Numeric(12,6)) 


--	insert into tmpLePle2
--	Exec spp_rep_EstadoPErdidaGAnancia @aMes,@bMes,@Anio,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@IdEmpresa,'F'
----	exec spp_rep_EstadoPErdidaGAnancia '00', '12', '2019', '000012  ', '000012  ', N'000012', N'000012', 5, 'F'


	select  periodo=@Anio+@bMes+'31', -- campo1
		catalogo = '01', --campo2
		rubroEEFF =rtrim(codigo),  --campo3
		saldo=CONVERT(varchar(15),CONVERT(numeric(38,2),total)),-- campo4
		estado =(case when @bMes = @bMes Then 1 Else 8 End), -- campo5
		Cierre=null --campo35
	into tmpLePle
	from (select * from tbl_FlujoEfectivo e left outer join tmpffee fe on e.codigoSbs=fe.codigo
	where codigoOrden='ERS01'
	and Cuenta+Cuenta2<>'') aa

	--set @reg = (select count(periodo) from tmpLePle)
	--set @direcCab = @carpeta+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'31032400'+
	--	(Case When @bMes='12' Then '01' Else (Case When @bMes='01' Then '02' Else 
	--	(Case When @bMes='06' Then '03' Else '07' End) End) End)+'1'+(case when @reg=0 then '0' else '1' end)+'11.txt'

	--		set @cadena = 'select periodo+''|''+catalogo+''|''+rubroEEFF+''|''+saldo+convert(char(1),estado)+''|'' from gestionEO20..tmpLePle'

	--		set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
	--		EXEC master..xp_cmdshell @cadena , no_output

	--drop table gestionEO20..tmpLePle
	--drop table gestionEO20..tmpLePle2

End

/****** Object:  StoredProcedure [dbo].[Spp_LibrosElectronicos2Tmp]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[Spp_LibrosElectronicos2Tmp]

@Anio char(4),
@aMes char(2),
@bMes char(2),
@aZona varchar(6),
@bZona varchar(6),
@aCodUnidadEconomica varchar(10),
@bCodUnidadEconomica varchar(10),
@docA char(2),
@docB char(2),
@IdEmpresa int,
@digitos int,
@tipo char(6)

-- Spp_LibrosElectronicos2Tmp '2019','00','12','000012','000012','000012','000012','00','99',5,7,'ESF01'
As 
	--------------------------------------
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpCtas') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpCtas
	END
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpLePle2') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpLePle2
	END
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpffee') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpffee
	END
	-------------------------------------
	--creando tabla de articulos con sus lotes
	CREATE TABLE tmpCtas (
		codigo varchar(10), cuenta char(160),cuenta2 char(80),tipo char(1))

	---- crea cursor del ESF
	Declare @lcCodigo varchar(10), @lcCuenta char(160), @lcCuenta2 char(80)

	declare ultCtas cursor for 
	select codigoSbs,Cuenta,Cuenta2 from tbl_FlujoEfectivo
	where codigoOrden=@tipo
	and Cuenta+Cuenta2<>''

	open ultCtas 
	Fetch ultCtas into @lcCodigo,@lcCuenta,@lcCuenta2 

	While @@Fetch_Status =0
	Begin
		insert into tmpCtas 
		select @lcCodigo, SValores,'','I' from CadenaConComasATabla(@lcCuenta,',')
		union all 
		select @lcCodigo, '', SValores,'D' from CadenaConComasATabla(@lcCuenta2,',')

		Fetch ultCtas into @lcCodigo,@lcCuenta,@lcCuenta2 
	End
	Close ultCtas
	Deallocate ultCtas

	CREATE TABLE tmpLePle2 (Campo1 VarChar(12), Campo2 Varchar(200), 
				campo3 Numeric(38,2),Campo4 Numeric(38,2),Campo5 Numeric(38,2),Campo6 Numeric(38,2),Campo7 Numeric(38,2),Campo8 Numeric(38,2),
				Campo9 Numeric(38,2),Campo10 Numeric(38,2),Campo11 Numeric(38,2),Campo12 Numeric(38,2),Campo13 Numeric(38,2),Campo14 Numeric(38,2),Campo15 Numeric(38,2),Campo16 Numeric(38,2)) 

	insert into tmpLePle2
	exec Spp_Rep_balanceComprobacion @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@Anio,@aMes,@bMes,@digitos,@IdEmpresa

	select codigo,sum(debe-haber) total  into tmpffee 
	from (
	select codigo,ltrim(rtrim(c.cuenta+c.cuenta2)) cuentas,c.tipo, b.* 
	from (select left(campo1,2) cta2,campo1 cuenta,campo11 debe,campo12 haber from tmpLePle2 where campo11+campo12<>0 ) b 
	left outer join tmpctas c 
	on b.cuenta=c.cuenta
	where c.cuenta+c.cuenta2<>'' and c.tipo='I' --order by 2,3
	union all
	select codigo,ltrim(rtrim(c.cuenta+c.cuenta2)) cuenta,c.tipo, b.* 
	from (select left(campo1,2) cta2,campo1 cuenta,campo11*-1 debe,campo12*-1 haber from tmpLePle2 where campo11+campo12<>0 ) b 
	left outer join tmpctas c 
	on b.cuenta=c.cuenta2
	where c.cuenta+c.cuenta2<>'' and c.tipo='D' --order by 2,3
	union all
	select codigo,cuentas,tipo,cta2,max(cuenta) cuenta, sum(debe) debe, sum(haber) haber from (
	select codigo,ltrim(rtrim(c.cuenta+c.cuenta2)) cuentas,c.tipo, b.* 
	from (select left(campo1,2) cta2,campo1 cuenta,campo11 debe,campo12 haber from tmpLePle2 where campo11+campo12<>0 ) b 
	left outer join tmpctas c 
	on b.cta2=c.cuenta
	where c.cuenta+c.cuenta2<>'' and c.tipo='I'
	) aa group by codigo,cuentas,tipo,cta2
	-- order by 2,3
	) bb group by codigo
	order by codigo
/****** Object:  StoredProcedure [dbo].[spp_LibrosElectronicos4]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_LibrosElectronicos4]
--	 @direc Sysname
@Anio char(4),
@aMes char(2),
@bMes char(2),
@aZona varchar(6),
@bZona varchar(6),
@aCodUnidadEconomica varchar(10),
@bCodUnidadEconomica varchar(10),
@docA char(2),
@docB char(2),
@IdEmpresa int,
@zonaVta varchar(200),
@UnidadVta varchar(200),
@tipo char(6)

As 
declare @cadena varchar(1200), @direcCab Sysname --, @NombreDB varchar(30), @direcDet Sysname,@idempre int --, @direcXMC Sysname, @direcXMD Sysname
Declare @ruc varchar(11), @reg int
-- spp_LibrosElectronicos '2014', '02', '02', '000012', '000012', '000012    ', '000012    ', '01', '99', 5,'select distinct(codZona) from zona where idEmpresa=5', '5','COMPRA'
-- Generando PLE Compras
If @tipo ='COMPRA'
Begin 
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLeCompras]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLeCompras
END
-------------------------------------
	delete from leCompras

	insert into LeCompras

	--EXEC spp_Rep_RegistroCompra '2014','01','01','000012','000012','000012','000012','01','99',5
	EXEC spp_Rep_RegistroCompra @Anio,@aMes,@bMes,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@IdEmpresa
select * from leCompras
select dbo.padl('3',2,'0')

	select  periodo=left(CONVERT(varchar(10),fechaDocreferencia,111),4)+mes+'00', -- campo1
		cuo = nrodocumento, --campo2
		correlativo ='M'+dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY mes ORDER BY mes) AS varchar(40)),3,'0'),  --campo2
		fEmision=CONVERT(varchar(10),fechaDocreferencia,103), -- campo3
		fvcto= (case when destipoDocumento='14' then '01/01/0001' else (CASE WHEN FechaVencimiento in ('','''') THEN '01/01/0001' ELSE left(FechaVencimiento,2)+'/'+substring(FechaVencimiento,4,2)+'/20'+RIGHT(FechaVencimiento,2) END) end), -- campo4
		desTipoDocumento,-- campo5
		serie=(case when serie in ('-','') then '-' else CONVERT(varchar(4),serie) end), --campo6,
		anioDua=CONVERT(varchar(4),aniodua), --campo7
		nrodocreferencia= CONVERT(varchar(7),nrodocreferencia), -- campo8
		'0' impcampo9, --campo9
		tipdoc= CONVERT(varchar(1),codclienteproveedor) , -- campo10
		ruc = CONVERT(varchar(11),ruc), --campo11
		proveedor= CONVERT(varchar(60),proveedor), --campo12
		agdoge1=CONVERT(varchar(15),CONVERT(numeric(38,2),agdoge1)),--campo13
		igv_1=CONVERT(varchar(15),CONVERT(numeric(38,2),igv_1)),--campo14
		agdoge_ng=CONVERT(varchar(15),CONVERT(numeric(38,2),agdoge_ng)),--campo15
		igv_2=CONVERT(varchar(15),CONVERT(numeric(38,2),igv_2)),--campo16
		agdo_ng=CONVERT(varchar(15),CONVERT(numeric(38,2),agdo_ng)),--campo17
		igv_3=CONVERT(varchar(15),CONVERT(numeric(38,2),igv_3)),--campo18
		valor_adquisicion=CONVERT(varchar(15),CONVERT(numeric(38,2),valor_adquisicion)),--campo19
		isc=CONVERT(varchar(15),CONVERT(numeric(38,2),isc)),--campo20
		otroimp=CONVERT(varchar(15),CONVERT(numeric(38,2),isc)),--campo21
		totalimporte=CONVERT(varchar(15),CONVERT(numeric(38,2),totalimporte)), --campo22
		tipocambio=CONVERT(varchar(15),CONVERT(numeric(5,3),tipocambio)),--campo23
		fecha_refcomprobmodi=(case when fecha_refcomprobmodi='' then '01/01/0001' else CONVERT(varchar(10),fecha_refcomprobmodi,103) end),--campo24
		tipo_refcomprobmodi=(case when tipo_refcomprobmodi='' then '00' else CONVERT(varchar(2),tipo_refcomprobmodi) end),--campo25
		serie_refcomprobmodi=CONVERT(varchar(4),(case when serie_refcomprobmodi='' then '-' else serie_refcomprobmodi end)),--campo26
		codDua='000', --campo28
		nro_refcomprobmodi=CONVERT(varchar(7),(case when nro_refcomprobmodi='' then '-' else nro_refcomprobmodi end)),--campo27
		sujetonodomicil='-',--campo28
		fechadetrac=(case when CONVERT(varchar(10),fechadetrac,103)in ('01/01/1900','01/01/1990') then '01/01/0001' else CONVERT(varchar(10),fechadetrac,103) end),--campo29
		nrodetrac=convert(varchar(7),(case when nrodetrac='' then '0' else nrodetrac end)),--campo30
		marcasujReten='0',--campo31
		estado = (case when fechaDocreferencia < convert(datetime, '01/'+mes+'/'+left(CONVERT(varchar(10),fechaDocreferencia,111),4), 103) then 6 else 1 end), -- campo32
		Cierre=null
--	into tmpLeCompras
	from lecompras

	set @ruc= (select ruc from Empresa where IdEmpresa=@IdEmpresa)
	set @reg = (select count(serie) from tmpLeCompras)
	set @direcCab = 'd:\gestion\LE'+ @ruc+@Anio+@aMes+'00080100001'+(case when @reg=0 then '0' else '1' end)+'11.txt'

			set @cadena = 'select * from gestion..tmpLeCompras'
			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r \n'
			-- EXEC master..xp_cmdshell @cadena , no_output

	drop table gestion..tmpLeCompras
End
-- Generando las PLE Ventas
If @tipo ='VENTAS'
Begin 
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLeVentas]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLeVentas
END
-------------------------------------
	--	@zona varchar(200),@Unidad varchar(200),@Anio varchar(4),@Mes1 varchar(2),@Mes2 varchar(2)

	--exec "spp_rep_RegVentasIngresos";1 'select distinct(codZona) from zona where idEmpresa=57', '57', '2012', '01', '01'
	EXEC spp_rep_RegVentasIngresos @ZonaVta,@UnidadVta,@Anio,@aMes,@bMes

	select  periodo='20'+RIGHT(fechaEmision,2)+mes+'00', -- campo1
			--correlativo =right( SPACE(39) + cast( ROW_NUMBER() OVER(PARTITION BY mes ORDER BY mes) AS varchar(40)), 40 ),  --campo2 con espacios a la izquierda
		correlativo =cast( ROW_NUMBER() OVER(PARTITION BY mes ORDER BY mes) AS varchar(40)),  --campo2
		fEmision=left(fechaEmision,2)+'/'+substring(fechaEmision,4,2)+'/20'+RIGHT(fechaEmision,2), -- campo3
		fvcto= (case when CodigoDocumento='14' then '01/01/0001' else (CASE WHEN FechaVencimiento in ('','''') THEN '01/01/0001' ELSE left(FechaVencimiento,2)+'/'+substring(FechaVencimiento,4,2)+'/20'+RIGHT(FechaVencimiento,2) END) end), -- campo4
		CodigoDocumento= (case when CodigoDocumento='99' then '03' else CodigoDocumento end),-- campo5
		serie=CONVERT(varchar(4),serie), --campo6,
		nrodocumento= CONVERT(varchar(7),numero), -- campo7
		impcampo8 = (Case When  CodigoDocumento='99' Then CONVERT(varchar(7),substring(numero,9,7)) Else '0' End) , --campo8
		tipdoc= CONVERT(varchar(1),(case when ruc='0' then '0' else tipodoc end)) , -- campo9
		ruc = (Case When tipodoc='0' Then '-' else CONVERT(varchar(11),ruc) end), --campo10
		proveedor= (Case When tipodoc='0' Then '-' else CONVERT(varchar(61),entidad) end), --campo11
		exportacion=CONVERT(varchar(15),CONVERT(numeric(38,2),exportacion)),--campo12
		baseimponible=CONVERT(varchar(15),CONVERT(numeric(38,2),baseimponible)),--campo13
		exonerado=CONVERT(varchar(15),CONVERT(numeric(38,2),exonerado)),--campo14
		inafecta=CONVERT(varchar(15),CONVERT(numeric(38,2),inafecta)),--campo15
		isc=CONVERT(varchar(15),CONVERT(numeric(38,2),isc)),--campo16
		igv=CONVERT(varchar(15),CONVERT(numeric(38,2),igv)),--campo17
		baseimponibleIva=CONVERT(varchar(15),CONVERT(numeric(38,2),BaseImponibleIva)),--campo18
		ImpuestoIva=CONVERT(varchar(15),CONVERT(numeric(38,2),impuestoIva)),--campo19
		otrosTributos=CONVERT(varchar(15),CONVERT(numeric(38,2),OtrosTributos)),--campo20
		Total=CONVERT(varchar(15),CONVERT(numeric(38,2),total)), --campo21
		tipocambio=CONVERT(varchar(15),CONVERT(numeric(5,3),tipocambio)),--campo22
		fecha_refcomprobmodi=(case when fecha='' then '01/01/0001' else left(fecha,2)+'/'+substring(fecha,4,2)+'/20'+RIGHT(fecha,2) end),--campo23
		tipo_refcomprobmodi=(case when tipo='' then '00' else CONVERT(varchar(2),tipo) end),--campo24
		serie_refcomprobmodi=CONVERT(varchar(4),(case when serie2='' then '-' else serie2 end)),--campo25
		nro_refcomprobmodi=CONVERT(varchar(7),(case when numero2='' then '-' else numero2 end)),--campo26
		estado = (case when CONVERT(datetime,left(fechaEmision,2)+'/'+substring(fechaEmision,4,2)+'/20'+RIGHT(fechaEmision,2),103) < convert(datetime, '01/'+mes+'/20'+RIGHT(fechaEmision,2), 103) then 
		9 else (case when tipodoc='0' then 2 else (case when ruc='0' then 2 else 1 end) end) end), -- campo27
		cierre=null
	into tmpLeVentas
	from leVentas

	set @ruc= (select ruc from Empresa where IdEmpresa=@IdEmpresa)
	set @reg = (select count(serie) from tmpLeVentas)

	set @direcCab = 'd:\gestion\LE'+ @ruc+@Anio+@aMes+'00140100001'+(case when @reg=0 then '0' else '1' end)+'11.txt'

			set @cadena = 'select * from gestion..tmpLeVentas'
			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r \n'
			--EXEC master..xp_cmdshell @cadena , no_output

	drop table gestion..tmpLeVentas
End

--------------------------
-- Generando las PLE Diario
If @tipo ='DIARIO'
Begin 
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLeDiario]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLeDiario
END
-------------------------------------
	declare @newMes as varchar(4)
	set @newMes=@aMes+@bMes
	delete from leDiario

	insert into LeDiario
--	exec "spp_rep_LibroDiario";1 '2013', '0101', '000012', '000012', '000012    ', '000012    ', 5, NULL, ''
--	EXEC spp_Rep_RegistroCompra @Anio,@aMes,@bMes,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@IdEmpresa

	exec spp_rep_LibroDiario @Anio, @newMes, @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica, @IdEmpresa, NULL, ''

	select  periodo='201'+substring(nrodoc,3,3)+'00', -- campo1
		correlativo =nrodoc+dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY nrodoc ORDER BY nrodoc) AS varchar(40)),4,'0'),  --campo2
		plancontable =convert(varchar(2),'01'), --campo3
		codcuenta= convert(varchar(24),codcuenta), --campo4
		foperacion=convert(varchar(10),fechContable,103), -- campo5
		descripcion= convert(varchar(100),descripcion), -- campo6
		debe= CONVERT(varchar(15),convert(decimal(38,2),impDebe)), -- campo7
		haber = CONVERT(varchar(15),convert(decimal(38,2),imphaber)), --campo8
		estado = (case when fechContable < convert(datetime, '01/'+(Case when substring(nrodoc,4,2)='00' then '01' else substring(nrodoc,4,2) end) +'/201'+substring(nrodoc,3,1))then 8 else 1 end), -- campo9
		Cierre=null
	into tmpLeDiario
	from leDiario

	set @ruc= (select ruc from Empresa where IdEmpresa=@IdEmpresa)
	set @reg = (select count(codcuenta) from tmpLeDiario)

	set @direcCab = 'd:\gestion\LE'+ @ruc+@Anio+@aMes+'00050100001'+(case when @reg=0 then '0' else '1' end)+'11.txt'

			set @cadena = 'select * from gestion..tmpLeDiario'
			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r \n'
			-- EXEC master..xp_cmdshell @cadena , no_output

	drop table gestion..tmpLeDiario
End
/****** Object:  StoredProcedure [dbo].[spp_LibrosElectronicos49]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_LibrosElectronicos49]
--	 @direc Sysname
@Anio char(4),
@aMes char(2),
@bMes char(2),
@aZona varchar(6),
@bZona varchar(6),
@aCodUnidadEconomica varchar(10),
@bCodUnidadEconomica varchar(10),
@docA char(2),
@docB char(2),
@IdEmpresa int,
@zonaVta varchar(200),
@UnidadVta varchar(200),
@tipo char(6)

As 
declare @cadena varchar(1200), @direcCab Sysname --, @NombreDB varchar(30), @direcDet Sysname,@idempre int --, @direcXMC Sysname, @direcXMD Sysname
Declare @ruc varchar(11), @reg int
-- spp_LibrosElectronicos '2015', '06', '06', '000012', '000012', '000012    ', '000012    ', '01', '99', 5,'select distinct(codZona) from zona where idEmpresa=5', '5','COMPRA'

set @ruc= (select ruc from Empresa where IdEmpresa=@IdEmpresa)

-- Buscamos la carpeta del cliente identificado por RUC si no existe lo creamos
declare @t table (dir varchar(200))
 INSERT INTO @t
 EXEC master.dbo.xp_subdirs 'D:\Gestion\' 
 set @reg = (select count(dir) from @t where dir like (@ruc+'%'))

if @reg=0
Begin -- creando la carpeta del cliente
	declare @MD varchar(100), @Dir varchar(100)

	set @Dir = 'D:\Gestion\' + @ruc
	SET @MD = ' mkdir ' + @Dir

	-- EXEC xp_cmdshell @MD, no_output
End
-- Fin Busca la carpeta del cliente identificado por RUC

-- Generando PLE Compras
If @tipo ='COMPRA'
Begin 
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLeCompras]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLeCompras
END
-------------------------------------
	delete from leCompras

	insert into LeCompras

	--EXEC spp_Rep_RegistroCompra '2014','01','01','000012','000012','000012','000012','01','99',5
	EXEC spp_Rep_RegistroCompra @Anio,@aMes,@bMes,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@IdEmpresa

	select  periodo=@Anio+mes+'00', --left(CONVERT(varchar(10),fechaDocreferencia,111),4)+mes+'00', -- campo1
		cuo = nrodocumento, --campo2
		correlativo =(Case When left(nrodocumento,2)='00' Then 'A' Else (Case When left(nrodocumento,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY mes ORDER BY mes) AS varchar(10)),5,'0')),  --campo3
		fEmision=CONVERT(varchar(10),fechaDocreferencia,103), -- campo4
		fvcto= (case when destipoDocumento='14' then '31/01/2014' else (CASE WHEN FechaVencimiento in ('','''') THEN '01/01/0001' ELSE left(FechaVencimiento,2)+'/'+substring(FechaVencimiento,4,2)+'/20'+RIGHT(FechaVencimiento,2) END) end), -- campo5
		desTipoDocumento,-- campo6
		serie=(case when serie in ('-','') then '-' else CONVERT(varchar(4),serie) end), --campo7
		anioDua=CONVERT(varchar(4),aniodua), --campo8
		nrodocreferencia= CONVERT(varchar(7),right(nrodocreferencia,7)), -- campo9
		'0' impcampo9, --campo10
		tipdoc= CONVERT(varchar(1),codclienteproveedor) , -- campo11
		ruc = CONVERT(varchar(11),ruc), --campo12
		proveedor= CONVERT(varchar(60),rtrim(proveedor)), --campo13
		agdoge1=CONVERT(varchar(15),CONVERT(numeric(38,2),agdoge1)),--campo14
		igv_1=CONVERT(varchar(15),CONVERT(numeric(38,2),igv_1)),--campo15
		agdoge_ng=CONVERT(varchar(15),CONVERT(numeric(38,2),agdoge_ng)),--campo16
		igv_2=CONVERT(varchar(15),CONVERT(numeric(38,2),igv_2)),--campo17
		agdo_ng=CONVERT(varchar(15),CONVERT(numeric(38,2),agdo_ng)),--campo18
		igv_3=CONVERT(varchar(15),CONVERT(numeric(38,2),igv_3)),--campo19
		valor_adquisicion=CONVERT(varchar(15),CONVERT(numeric(38,2),valor_adquisicion)),--campo20
		isc=CONVERT(varchar(15),CONVERT(numeric(38,2),isc)),--campo21
		otroimp=CONVERT(varchar(15),CONVERT(numeric(38,2),isc)),--campo22
		totalimporte=CONVERT(varchar(15),CONVERT(numeric(38,2),totalimporte)), --campo23
--falta tipo moneda
		tipocambio=CONVERT(varchar(15),CONVERT(numeric(5,3),tipocambio)),--campo24
		fecha_refcomprobmodi=(case when fecha_refcomprobmodi='' then '01/01/0001' else CONVERT(varchar(10),fecha_refcomprobmodi,103) end),--campo25
		tipo_refcomprobmodi=(case when tipo_refcomprobmodi='' then '00' else CONVERT(varchar(2),tipo_refcomprobmodi) end),--campo26
		serie_refcomprobmodi=CONVERT(varchar(4),(case when serie_refcomprobmodi='' then '-' else serie_refcomprobmodi end)),--campo27
		codDua=(case when desTipoDocumento='50' then '271' else '' end), --campo28
		nro_refcomprobmodi=CONVERT(varchar(7),(case when nro_refcomprobmodi='' then '-' else nro_refcomprobmodi end)),--campo29
		--sujetonodomicil='-',--campo30
		fechadetrac=(case when CONVERT(varchar(10),fechadetrac,103)in ('01/01/1900','01/01/1990') then '01/01/0001' else CONVERT(varchar(10),fechadetrac,103) end),--campo31
		nrodetrac=convert(varchar(7),(case when nrodetrac='' then '0' else nrodetrac end)),--campo32
		marcasujReten='0',--campo33
		estado = (Case when desTipoDocumento in ('02','03','10','15','16','17','18','19','21','22','44','45','46','49') Then 0 else (case when fechaDocreferencia < convert(datetime, '01/'+mes+'/'+@Anio, 103) then 6 else 1 end) end), -- campo34
		Cierre=null --campo35
	into tmpLeCompras
	from lecompras

	set @reg = (select count(serie) from tmpLeCompras)
	set @direcCab = 'd:\gestion\'+ @ruc+'\LE'+ @ruc+@Anio+@aMes+'00080100001'+(case when @reg=0 then '0' else '1' end)+'11.txt'


			set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+femision+''|''+fvcto+''|''+destipodocumento+''|''+serie+''|''+aniodua+''|''+nrodocreferencia+''|''+impcampo9+''|''+tipdoc+''|''+ruc+''|''+proveedor+''|''+agdoge1+''|''+igv_1+''|''+agdoge_ng+''|''+igv_2+''|''+agdo_ng+''|''+igv_3+''|''+valor_adquisicion+''|''+isc+''|''+otroimp+''|''+totalimporte+''|''+tipocambio+''|''+fecha_refcomprobmodi+''|''+tipo_refcomprobmodi+''|''+serie_refcomprobmodi+''|''+coddua+''|''+nro_refcomprobmodi+''|''+sujetonodomicil+''|''+fechadetrac+''|''+nrodetrac+''|''+marcasujreten+''|''+convert(char(1),estado)+''|'' from gestion..tmpLeCompras'
			--set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r '+(Case when @aMes='03' then '\r' else '' end)+'\n' --\r\n
			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
			-- EXEC master..xp_cmdshell @cadena , no_output

	drop table gestion..tmpLeCompras
--	exec spp_LibrosElectronicosPortal @Anio,@aMes,@bMes,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@IdEmpresa,@zonaVta,@UnidadVta,@tipo

End
-- Generando las PLE Ventas
If @tipo ='VENTAS'
Begin 
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLeVentas]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLeVentas
END
-------------------------------------
	--	@zona varchar(200),@Unidad varchar(200),@Anio varchar(4),@Mes1 varchar(2),@Mes2 varchar(2)

	--exec "spp_rep_RegVentasIngresos";1 'select distinct(codZona) from zona where idEmpresa=57', '57', '2012', '01', '01'
	EXEC spp_rep_RegVentasIngresos @ZonaVta,@UnidadVta,@Anio,@aMes,@bMes

	select periodo=@Anio+mes+'00', --'20'+RIGHT(fechaEmision,2)+mes+'00', -- campo1
		cuo = nrodocumento, --campo2
		correlativo =(Case When left(nrodocumento,2)='00' Then 'A' Else (Case When left(nrodocumento,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY mes ORDER BY mes) AS varchar(10)),5,'0')),  --campo3
		fEmision=left(fechaEmision,2)+'/'+substring(fechaEmision,4,2)+'/20'+RIGHT(fechaEmision,2), -- campo4
		fvcto= (case when CodigoDocumento='14' then left(FechaVencimiento,2)+'/'+substring(FechaVencimiento,4,2)+'/20'+RIGHT(FechaVencimiento,2) else (CASE WHEN FechaVencimiento in ('','''') THEN '01/01/0001' ELSE left(FechaVencimiento,2)+'/'+substring(FechaVencimiento,4,2)+'/20'+RIGHT(FechaVencimiento,2) END) end), -- campo5
		CodigoDocumento= (case when CodigoDocumento='99' then '03' else CodigoDocumento end),-- campo6
		serie=CONVERT(varchar(4),serie), --campo6, -- campo7
		nrodocumento= CONVERT(varchar(7),(case when len(rtrim(numero))>9 then substring(numero,1,7) else right(rtrim(numero),7) end)), -- campo8
		impcampo8 = (Case When  CodigoDocumento in ('99','03','12','14') Then CONVERT(varchar(7),substring(numero,9,7)) Else '0' End) , --campo9
		tipdoc= CONVERT(varchar(1),(case when ruc='0' then '0' else tipodoc end)) , -- campo10
		ruc = (Case When tipodoc='0' Then '-' else CONVERT(varchar(11),ruc) end), --campo11
		proveedor= (Case When tipodoc='0' Then '-' else CONVERT(varchar(61),rtrim(entidad)) end), --campo12
		exportacion=CONVERT(varchar(15),CONVERT(numeric(38,2),exportacion)),--campo13
		baseimponible=CONVERT(varchar(15),CONVERT(numeric(38,2),baseimponible)),--campo14
		exonerado=CONVERT(varchar(15),CONVERT(numeric(38,2),exonerado)),--campo15
		inafecta=CONVERT(varchar(15),CONVERT(numeric(38,2),inafecta)),--campo16
		isc=CONVERT(varchar(15),CONVERT(numeric(38,2),isc)),--campo17
		igv=CONVERT(varchar(15),CONVERT(numeric(38,2),igv)),--campo18
		baseimponibleIva=CONVERT(varchar(15),CONVERT(numeric(38,2),BaseImponibleIva)),--campo19
		ImpuestoIva=CONVERT(varchar(15),CONVERT(numeric(38,2),impuestoIva)),--campo20
		otrosTributos=CONVERT(varchar(15),CONVERT(numeric(38,2),OtrosTributos)),--campo21
		Total=CONVERT(varchar(15),CONVERT(numeric(38,2),total)), --campo22
		tipocambio=CONVERT(varchar(15),CONVERT(numeric(5,3),tipocambio)),--campo23
		fecha_refcomprobmodi=(case when fecha='' then '01/01/0001' else left(fecha,2)+'/'+substring(fecha,4,2)+'/20'+RIGHT(fecha,2) end),--campo24
		tipo_refcomprobmodi=(case when tipo='' then '00' else CONVERT(varchar(2),tipo) end),--campo25
		serie_refcomprobmodi=CONVERT(varchar(4),(case when serie2='' then '-' else serie2 end)),--campo26
		nro_refcomprobmodi=CONVERT(varchar(7),(case when numero2='' then '-' else numero2 end)),--campo27
		codDua='', --campo28
		estado = (case when CONVERT(datetime,left(fechaEmision,2)+'/'+substring(fechaEmision,4,2)+'/20'+RIGHT(fechaEmision,2),103) < convert(datetime, '01/'+mes+'/20'+RIGHT(fechaEmision,2), 103) then 
		9 else (case when tipodoc='0' then (case when entidad in ('AN ULADO','ANULADO') then 2 else 1 end) else (case when ruc='0' then 2 else 1 end) end) end), -- campo29
		Cierre=null --campo30

--		Cierre31=null,Cierre32=null,Cierre33=null,Cierre34=null,Cierre35=null,Cierre36=null,Cierre37=null,Cierre38=null,
--		Cierre39=null,Cierre40=null,Cierre41=null,Cierre42=null,Cierre43=null,Cierre44=null,Cierre45=null,Cierre46=null,
--		Cierre47=null,Cierre48=null,Cierre49=null,Cierre50=null,Cierre51=null,Cierre52=null,Cierre53=null,Cierre54=null,
--		Cierre55=null,Cierre56='-',Cierre57=null,Cierre58=null
	into tmpLeVentas
 	from leVentas

	set @reg = (select count(serie) from tmpLeVentas)

	set @direcCab = 'd:\gestion\'+ @ruc+'\LE'+ @ruc+@Anio+@aMes+'00140100001'+(case when @reg=0 then '0' else '1' end)+'11.txt'

			set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+femision+''|''+fvcto+''|''+codigoDocumento+''|''+serie+''|''+nrodocumento+''|''+impcampo8+''|''+tipdoc+''|''+ruc+''|''+proveedor+''|''+exportacion+''|''+baseimponible+''|''+exonerado+''|''+inafecta+''|''+isc+''|''+igv+''|''+baseimponibleIva+''|''+ImpuestoIva+''|''+otrosTributos+''|''+total+''|''+tipocambio+''|''+fecha_refcomprobmodi+''|''+tipo_refcomprobmodi+''|''+serie_refcomprobmodi+''|''+nro_refcomprobmodi+''|''+coddua+''|''+convert(char(1),estado)+''|'' from gestion..tmpLeVentas'
--			set @cadena = 'select * from gestion..tmpLeVentas'
			--set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r '+(Case when @aMes='03' then '\r' else '' end)+'\n' --\r\n
			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
			-- EXEC master..xp_cmdshell @cadena , no_output

	drop table gestion..tmpLeVentas

--	exec spp_LibrosElectronicosPortal @Anio,@aMes,@bMes,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@IdEmpresa,@zonaVta,@UnidadVta,@tipo

End

--------------------------
-- Generando las PLE Diario
If @tipo ='DIARIO'
Begin 
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLeDiario]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLeDiario
	drop table tmpLePlanConta
END
-------------------------------------
	declare @newMes as varchar(4)
	set @newMes=@aMes+@bMes
	delete from leDiario

	insert into LeDiario
--	exec "spp_rep_LibroDiario";1 '2012', '0101', '000002', '000002', '000002    ', '000002    ', 2, NULL, ''
	exec spp_rep_LibroDiario @Anio, @newMes, @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica, @IdEmpresa, NULL, ''

--	select periodo=@Anio+substring(nrodoc,4,2)+'00', --'201'+substring(nrodoc,3,3)+'00', -- campo1
	select periodo=@Anio+substring(@newMes,3,2)+'00', --'201'+substring(nrodoc,3,3)+'00', -- campo1
		cuo = nrodoc, --campo2
		correlativo =(Case When left(nrodoc,2)='00' Then 'A' Else (Case When left(nrodoc,2)='19' Then 'C' Else 'M' End) End)+dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY nrodoc ORDER BY nrodoc) AS varchar(10)),5,'0'),  --campo3
		plancontable =convert(varchar(2),'01'), --campo4
		codcuenta= convert(varchar(24),codcuenta), --campo5
		foperacion=convert(varchar(10),fechCo,103), --convert(varchar(10),fechContable,103), -- campo6
		descripcion= convert(varchar(100),descripcion), -- campo7
		debe= CONVERT(varchar(15),convert(decimal(38,2),impDebe)), -- campo8
		haber = CONVERT(varchar(15),convert(decimal(38,2),imphaber)), --campo9
		cuoVentas='', --campo10
		cuoCompras='', --campo11
		cuoConsignacion='', --campo12
		--estado = (case when year(fechContable) < year(convert(datetime, '01/'+(Case when substring(nrodoc,4,2)='00' then '01' else substring(nrodoc,4,2) end) +'/201'+substring(nrodoc,3,1))) then 8 else 1 end), -- campo13
		estado = (case when year(fechCo) < year(convert(datetime, '01/'+(Case when substring(nrodoc,4,2)='00' then '01' else substring(nrodoc,4,2) end) +'/201'+substring(nrodoc,3,1))) then 8 else 1 end), -- campo13
		Cierre=null --campo14
	into tmpLeDiario
	from leDiario

	set @reg = (select count(codcuenta) from tmpLeDiario)

	set @direcCab = 'd:\gestion\'+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'00050100001'+(case when @reg=0 then '0' else '1' end)+'11.txt'

			set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+plancontable+''|''+codcuenta+''|''+foperacion+''|''+descripcion+''|''+debe+''|''+haber+''|''+cuoVentas+''|''+cuoCompras+''|''+cuoConsignacion+''|''+convert(char(1),estado)+''|'' from gestion..tmpLeDiario'
--			set @cadena = 'select * from gestion..tmpLeDiario'
--			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -rgt \n'
			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n

			-- EXEC master..xp_cmdshell @cadena , no_output

	drop table gestion..tmpLeDiario

-----------Creando el formato 5.3 detalle plan cuentas
	select periodo=@Anio+@bMes+'01', --'201'+substring(nrodoc,3,3)+'00', -- campo1
			codcuentacontable= convert(varchar(24),codcuentacontable), --campo2
			descripcion=max(rtrim(descripcion)), -- campo3
			plancontable =convert(varchar(2),'01'), --campo4
			descrplanUsuario='-', --campo5	
			estado='1', -- campo6
			Cierre=null --campo7
	into tmpLePlanconta
	from plancuentascontables
	where IdEmpresa= @IdEmpresa and left(anio,4)=(case When rtrim(@anio)<'2020' then '2009' else rtrim(@anio) end)
		and estado='1' and descripcion<>'' and len(codcuentacontable)>2 Group by codcuentacontable
	order by codcuentacontable

	set @reg = (select count(codcuentacontable) from tmpLePlanconta)

	set @direcCab = 'd:\gestion\'+ @ruc+'\LE'+ @ruc+@Anio+@bMes+'00050300001'+(case when @reg=0 then '0' else '1' end)+'11.txt'

			set @cadena = 'select periodo+''|''+codcuentacontable+''|''+descripcion+''|''+plancontable+''|''+descrplanUsuario+''|''+convert(char(1),estado)+''|'' from gestion..tmpLePlanconta'
--			set @cadena = 'select * from gestion..tmpLePlanConta'
--			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -rgt \n'
			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
			-- EXEC master..xp_cmdshell @cadena , no_output

	drop table gestion..tmpLePlanConta

---------------------------------------------
End
-- Generando las PLE Mayor
If @tipo ='MAYOR'
Begin 
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLeMayor]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLeMayor
END
-------------------------------------
	declare @Digitos as varchar(4)
	set @Digitos=(select len(max(codcuentacontable)) from plancuentascontables where estado='1' and idempresa=@IdEmpresa and left(anio,4)=@anio )
	delete from leMayor

	insert into LeMayor
--	exec "spp_rep_LibroMayor";1 '000012', '000012', '000012    ', '000012    ', '1', '9999999999', '2014', '01', '01', 5, NULL, 7
	exec spp_rep_LibroMayor @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica, '1', '9999999999', @Anio, @aMes,@bMes, @IdEmpresa, NULL, @Digitos

	select periodo=@Anio+substring(nrodoc,4,2)+'00', --'201'+substring(nrodoc,3,3)+'00', -- campo1
		cuo = nrodoc, --campo2
		correlativo =(Case When left(nrodoc,2)='00' Then 'A' Else (Case When left(nrodoc,2)='19' Then 'C' Else 'M' End) End)+dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY nrodoc ORDER BY nrodoc) AS varchar(10)),5,'0'),  --campo3
		plancontable =convert(varchar(2),'01'), --campo4
		codcuenta= convert(varchar(24),rtrim(left(cuenta,charindex(' -',cuenta)))), --campo5
		foperacion=convert(varchar(10),fechContable,103), -- campo6
		descripcion= convert(varchar(100),glosa), -- campo7
		debe= CONVERT(varchar(15),convert(decimal(38,2),Debe)), -- campo8
		haber = CONVERT(varchar(15),convert(decimal(38,2),acreedor)), --campo9
		cuoVentas='', --campo10
		cuoCompras='', --campo11
		cuoConsignacion='', --campo12
		estado = (case when year(fechContable) < year(convert(datetime, '01/'+(Case when substring(nrodoc,4,2)='00' then '01' else substring(nrodoc,4,2) end) +'/201'+substring(nrodoc,3,1))) then 8 else 1 end), -- campo13
		Cierre=null --campo14
	into tmpLeMayor
	from leMayor
	where nrodoc<>''

	set @reg = (select count(codcuenta) from tmpLeMayor)

	set @direcCab = 'd:\gestion\'+ @ruc+'\LE'+ @ruc+@Anio+@aMes+'00060100001'+(case when @reg=0 then '0' else '1' end)+'11.txt'

			set @cadena = 'select periodo+''|''+cuo+''|''+correlativo+''|''+plancontable+''|''+codcuenta+''|''+foperacion+''|''+descripcion+''|''+debe+''|''+haber+''|''+cuoVentas+''|''+cuoCompras+''|''+cuoConsignacion+''|''+convert(char(1),estado)+''|'' from gestion..tmpLeMayor'
--			set @cadena = 'select * from gestion..tmpLeMayor'
--			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -rgt \n'
			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
			-- EXEC master..xp_cmdshell @cadena , no_output

	drop table gestion..tmpLeMayor
End
/****** Object:  StoredProcedure [dbo].[spp_LibroselectronicoSIRE]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[spp_LibroselectronicoSIRE]
@tabla as varchar(20),
@tipo as varchar(10)
as
-- spp_LibroselectronicoSIRE 'tmpLeCompras','Compras' 'Ventas'

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpDiaSimpl1]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpDiaSimpl1
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpDiaSimpl2]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpDiaSimpl2
END

--Creando la tabla a migrar del ple
declare @cadena1 as varchar(8000)
declare @conceptos1 as varchar(30)
declare @csql as varchar(8000)

declare cptos cursor for 
select COLUMN_NAME  
from INFORMATION_SCHEMA.COLUMNS
WHERE table_schema = 'dbo' -- schema name
		and  TABLE_NAME = @tabla

set @cadena1 = ''

open cptos
fetch next from cptos
into @conceptos1 
while @@fetch_status =0
begin

set @cadena1 = @cadena1 + '['+@conceptos1 +'],'

fetch next from cptos
into @conceptos1 
end 
close cptos
deallocate cptos

if @cadena1 <>''  
Begin 
	set @cadena1 = left(@cadena1, len(@cadena1)-1)
	print @cadena1 
	print ''
	print len(@cadena1) 

	set @csql =('SELECT * into tmpDiaSimpl'+(case when @tipo='Ventas' then '1' else '2' end)+' From ( select 0 Columna,COLUMN_NAME,''C''+ltrim(str(ROW_NUMBER() OVER(ORDER BY TABLE_NAME))) orden 
		From INFORMATION_SCHEMA.COLUMNS
		WHERE table_schema = ''dbo'' -- schema name
			and  TABLE_NAME = '''+@tabla+'''
		) v PIVOT (max(orden) for COLUMN_NAME IN (
		'+@cadena1+ ')
		) AS PT
		'
		)

	If len(@csql)<8000
	Begin
		print @csql
		exec(@csql)

		if @tipo='Ventas'
		Begin
			select (ROW_NUMBER() OVER(ORDER BY periodo)) fila,* from tmpLeVentas
			union all 
			select * from tmpdiaSimpl1
			union all
			select 999999999 columna,Periodo,'TOTALES','','' fEmision,'' fvcto,'' CodigoDocumento,'' serie,'' nrodocumento,'' impcampo8,'' tipdoc
				,'' ruc,'' proveedor,convert(varchar(15),sum(convert(numeric(38,2),exportacion))),convert(varchar(15),sum(convert(numeric(38,2),baseimponible))),convert(varchar(15),sum(convert(numeric(38,2),DsctoBI))),convert(varchar(15),sum(convert(numeric(38,2),igv))),convert(varchar(15),sum(convert(numeric(38,2),DsctoIgv))),convert(varchar(15),sum(convert(numeric(38,2),exonerado))),convert(varchar(15),sum(convert(numeric(38,2),inafecta))),convert(varchar(15),sum(convert(numeric(38,2),isc))),convert(varchar(15),sum(convert(numeric(38,2),baseimponibleIva))),convert(varchar(15),sum(convert(numeric(38,2),ImpuestoIva))),convert(varchar(15),sum(convert(numeric(38,2),otrosTributos))),convert(varchar(15),sum(convert(numeric(38,2),otrosCptos))),convert(varchar(15),sum(convert(numeric(38,2),Total))),'' moneda
				,'' tipocambio,'' fecha_refcomprobmodi,''tipo_refcomprobmodi,''serie_refcomprobmodi,'' nro_refcomprobmodi,'' identiContrato,'' tipo1,'' medioPago,'',''
			from tmpLeVentas group by periodo
			order by 1

			DROP TABLE tmpDiaSimpl1
			-- drop table tmpLeVentas
		End

		if @tipo='Compras'
		Begin
			select (ROW_NUMBER() OVER(ORDER BY periodo)) fila,* from tmpLeCompras
			union all 
			select * from tmpdiaSimpl2
			union all 
			select 999999999 columna,Periodo,'TOTALES','','' fEmision,'' fvcto,'' desTipoDocumento,'' serie,'' anioDua,'' nrodocreferencia,'' impcampo9,'' tipdoc,'' ruc
				,'' proveedor,convert(varchar(15),sum(convert(numeric(38,2),agdoge1))),convert(varchar(15),sum(convert(numeric(38,2),igv_1))),convert(varchar(15),sum(convert(numeric(38,2),agdoge_ng))),convert(varchar(15),sum(convert(numeric(38,2),igv_2))),convert(varchar(15),sum(convert(numeric(38,2),agdo_ng))),convert(varchar(15),sum(convert(numeric(38,2),igv_3))),convert(varchar(15),sum(convert(numeric(38,2),valor_adquisicion))),convert(varchar(15),sum(convert(numeric(38,2),isc))),convert(varchar(15),sum(convert(numeric(38,2),otroimp))),convert(varchar(15),sum(convert(numeric(38,2),otroCpto))),convert(varchar(15),sum(convert(numeric(38,2),totalimporte)))
				,'' moneda,'' tipocambio,'' fecha_refcomprobmodi,'' tipo_refcomprobmodi,'' serie_refcomprobmodi,'' codDua,'' nro_refcomprobmodi,'' fechadetrac
				,'' nrodetrac,'' marcasujReten,'' clasbien,'' identiContrato,'' tipo1,'' tipo2,'' tipo3,'' tipo4,'' mediopago,'',''
			from tmpLeCompras group by periodo
			order by 1

			DROP TABLE tmpDiaSimpl2
			-- drop table tmpLeCompras
		End
	End
End


/****** Object:  StoredProcedure [dbo].[spp_LibrosElectronicosPortal]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_LibrosElectronicosPortal]
--	 @direc Sysname
@Anio char(4),
@aMes char(2),
@bMes char(2),
@aZona varchar(6),
@bZona varchar(6),
@aCodUnidadEconomica varchar(10),
@bCodUnidadEconomica varchar(10),
@docA char(2),
@docB char(2),
@IdEmpresa int,
@zonaVta varchar(200),
@UnidadVta varchar(200),
@tipo char(6)

As 
declare @cadena varchar(1200), @direcCab Sysname --, @NombreDB varchar(30), @direcDet Sysname,@idempre int --, @direcXMC Sysname, @direcXMD Sysname
Declare @ruc varchar(11), @reg int
-- spp_LibrosElectronicos '2014', '02', '02', '000012', '000012', '000012    ', '000012    ', '01', '99', 5,'select distinct(codZona) from zona where idEmpresa=5', '5','COMPRA'
-- Generando PLE Compras
If @tipo ='COMPRA'
Begin 
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLeCompras]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLeCompras
END
-------------------------------------
	delete from leCompras

	insert into LeCompras

	--EXEC spp_Rep_RegistroCompra '2014','01','01','000012','000012','000012','000012','01','99',5
	EXEC spp_Rep_RegistroCompra @Anio,@aMes,@bMes,@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@docA,@docB,@IdEmpresa

	select  periodo=@Anio+mes+'00', --left(CONVERT(varchar(10),fechaDocreferencia,111),4)+mes+'00', -- campo1
		cuo = nrodocumento, --campo2
		correlativo =(Case When left(nrodocumento,2)='00' Then 'A' Else (Case When left(nrodocumento,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY mes ORDER BY mes) AS varchar(10)),3,'0')),  --campo3
		fEmision=CONVERT(varchar(10),fechaDocreferencia,103), -- campo4
		fvcto= --(case when destipoDocumento='14' then FechaVencimiento --'31/01/2014' else 
				(CASE WHEN FechaVencimiento in ('','''') THEN '01/01/0001' ELSE left(FechaVencimiento,2)+'/'+substring(FechaVencimiento,4,2)+'/20'+RIGHT(FechaVencimiento,2) --END) 
				end), -- campo5
		desTipoDocumento,-- campo6
		serie=(case when serie in ('-','') then '-' else CONVERT(varchar(4),serie) end), --campo7
		anioDua=CONVERT(varchar(4),aniodua), --campo8
		nrodocreferencia= CONVERT(varchar(7),right(nrodocreferencia,7)), -- campo9
		'0' impcampo9, --campo10
		tipdoc= CONVERT(varchar(1),codclienteproveedor) , -- campo11
		ruc = CONVERT(varchar(11),ruc), --campo12
		proveedor= CONVERT(varchar(60),rtrim(proveedor)), --campo13
		agdoge1=(case when agdoge1=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),agdoge1)) end),--campo14
		igv_1=(case when igv_1=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),igv_1)) end),--campo15
		agdoge_ng=(case when agdoge_ng=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),agdoge_ng)) end),--campo16
		igv_2=(case when igv_2=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),igv_2)) end),--campo17
		agdo_ng=(case when agdo_ng=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),agdo_ng)) end),--campo18
		igv_3=(case when igv_3=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),igv_3)) end),--campo19
		valor_adquisicion=(case when valor_adquisicion=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),valor_adquisicion)) end),--campo20
		isc=(case when isc=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),isc)) end),--campo21
		otroimp=(case when isc=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),isc)) end),--campo22
		totalimporte=(case when totalimporte=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),totalimporte)) end), --campo23
		tipocambio=CONVERT(varchar(15),CONVERT(numeric(5,3),tipocambio)),--campo24
		fecha_refcomprobmodi=(case when fecha_refcomprobmodi='' then '01/01/0001' else CONVERT(varchar(10),fecha_refcomprobmodi,103) end),--campo25
		tipo_refcomprobmodi=(case when tipo_refcomprobmodi='' then '-' else CONVERT(varchar(2),tipo_refcomprobmodi) end),--campo26
		serie_refcomprobmodi=CONVERT(varchar(4),(case when serie_refcomprobmodi='' then '-' else serie_refcomprobmodi end)),--campo27
		codDua=(case when desTipoDocumento='50' then '271' else '' end), --campo28
		nro_refcomprobmodi=CONVERT(varchar(9),(case when nro_refcomprobmodi='' then '-' else nro_refcomprobmodi end)),--campo29
		sujetonodomicil='-',--campo30
		fechadetrac=(case when CONVERT(varchar(10),fechadetrac,103)in ('01/01/1900','01/01/1990') then '-' else CONVERT(varchar(10),fechadetrac,103) end),--campo31
		nrodetrac=convert(varchar(7),(case when nrodetrac='' then '0' else nrodetrac end)),--campo32
		marcasujReten='0',--campo33
		estado = (Case when desTipoDocumento in ('02','03','10','15','16','17','18','19','21','22','44','45','46','49') Then 0 else (case when fechaDocreferencia < convert(datetime, '01/'+mes+'/'+@Anio, 103) then 6 else 1 end) end), -- campo34
--		estado = (case when fechaDocreferencia < convert(datetime, '01/'+mes+'/'+@Anio, 103) then 6 else 1 end), -- campo34
		Cierre=null --campo35
	into tmpLeCompras
	from lecompras

	set @ruc= (select ruc from Empresa where IdEmpresa=@IdEmpresa)
	set @reg = (select count(serie) from tmpLeCompras)
	set @direcCab = 'd:\gestion\LEPORTAL'+ @ruc+@Anio+@aMes+'COMPRAS'+(case when @reg=0 then '0' else '1' end)+'11.txt'

			set @cadena = 'select * from gestion..tmpLeCompras'
			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r \n' --\r\n
			-- EXEC master..xp_cmdshell @cadena , no_output

	drop table gestion..tmpLeCompras
End
-- Generando las PLE Ventas
If @tipo ='VENTAS'
Begin 
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLeVentas]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLeVentas
END
-------------------------------------
	--	@zona varchar(200),@Unidad varchar(200),@Anio varchar(4),@Mes1 varchar(2),@Mes2 varchar(2)

	--exec "spp_rep_RegVentasIngresos";1 'select distinct(codZona) from zona where idEmpresa=57', '57', '2012', '01', '01'
	EXEC spp_rep_RegVentasIngresos @ZonaVta,@UnidadVta,@Anio,@aMes,@bMes

	select periodo=@Anio+mes+'00', --'20'+RIGHT(fechaEmision,2)+mes+'00', -- campo1
		cuo = nrodocumento, --campo2
		correlativo =(Case When left(nrodocumento,2)='00' Then 'A' Else (Case When left(nrodocumento,2)='19' Then 'C' Else 'M' End) End)+rtrim(dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY mes ORDER BY mes) AS varchar(10)),3,'0')),  --campo3
		fEmision=left(fechaEmision,2)+'/'+substring(fechaEmision,4,2)+'/20'+RIGHT(fechaEmision,2), -- campo4
		fvcto= (case when CodigoDocumento='14' then '01/01/0001' else (CASE WHEN FechaVencimiento in ('','''') THEN '01/01/0001' ELSE left(FechaVencimiento,2)+'/'+substring(FechaVencimiento,4,2)+'/20'+RIGHT(FechaVencimiento,2) END) end), -- campo5
		CodigoDocumento= (case when CodigoDocumento='99' then '03' else CodigoDocumento end),-- campo6
		serie=CONVERT(varchar(4),serie), --campo7
		nrodocumento= right(rtrim(CONVERT(varchar(9),numero)),7), -- campo8
		impcampo8 = (Case When  CodigoDocumento='99' Then CONVERT(varchar(9),substring(numero,9,9)) Else '0' End) , --campo9
		tipdoc= CONVERT(varchar(1),(case when ruc='0' then '0' else tipodoc end)) , -- campo10
		ruc = (Case When tipodoc='0' Then '-' else CONVERT(varchar(11),ruc) end), --campo11
		proveedor= (Case When tipodoc='0' Then '-' else CONVERT(varchar(61),rtrim(entidad)) end), --campo12
		exportacion=(case when exportacion=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),exportacion)) end),--campo13
		baseimponible=(case when baseimponible=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),baseimponible)) end),--campo14
		exonerado=(case when exonerado=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),exonerado)) end),--campo15
		inafecta=(case when inafecta=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),inafecta)) end),--campo16
		isc=(case when isc=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),isc)) end),--campo17
		igv=(case when igv=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),igv)) end),--campo18
		baseimponibleIva=(case when BaseImponibleIva=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),BaseImponibleIva)) end),--campo19
		ImpuestoIva=(case when impuestoIva=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),impuestoIva)) end),--campo20
		otrosTributos=(case when OtrosTributos=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),OtrosTributos)) end),--campo21
		Total=(case when total=0 then '-' else CONVERT(varchar(15),CONVERT(numeric(38,2),total)) end), --campo22
		tipocambio=CONVERT(varchar(15),CONVERT(numeric(5,3),tipocambio)),--campo23
		fecha_refcomprobmodi=(case when fecha='' then '01/01/0001' else left(fecha,2)+'/'+substring(fecha,4,2)+'/20'+RIGHT(fecha,2) end),--campo24
		tipo_refcomprobmodi=(case when tipo='' then '-' else CONVERT(varchar(2),tipo) end),--campo25
		serie_refcomprobmodi=CONVERT(varchar(4),(case when serie2='' then '-' else serie2 end)),--campo26
		nro_refcomprobmodi=CONVERT(varchar(9),(case when numero2='' then '-' else numero2 end)),--campo27
		codDua='', --campo28
		estado = (case when CONVERT(datetime,left(fechaEmision,2)+'/'+substring(fechaEmision,4,2)+'/20'+RIGHT(fechaEmision,2),103) < convert(datetime, '01/'+mes+'/20'+RIGHT(fechaEmision,2), 103) then 
		9 else (case when tipodoc='0' then (Case When left(ruc,7)='9999999' and left(entidad,5)='ANULA' Then 2 Else 1 End) else (case when ruc='0' then 2 else 1 end) end) end), -- campo29
		Cierre=null --campo30

--		Cierre31=null,Cierre32=null,Cierre33=null,Cierre34=null,Cierre35=null,Cierre36=null,Cierre37=null,Cierre38=null,
--		Cierre39=null,Cierre40=null,Cierre41=null,Cierre42=null,Cierre43=null,Cierre44=null,Cierre45=null,Cierre46=null,
--		Cierre47=null,Cierre48=null,Cierre49=null,Cierre50=null,Cierre51=null,Cierre52=null,Cierre53=null,Cierre54=null,
--		Cierre55=null,Cierre56='-',Cierre57=null,Cierre58=null
	into tmpLeVentas
	from leVentas

	set @ruc= (select ruc from Empresa where IdEmpresa=@IdEmpresa)
	set @reg = (select count(serie) from tmpLeVentas)

	set @direcCab = 'd:\gestion\LEPORTAL'+ @ruc+@Anio+@aMes+'VENTAS'+(case when @reg=0 then '0' else '1' end)+'11.txt'

			set @cadena = 'select * from gestion..tmpLeVentas'
			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r \n' --\r\n
			-- EXEC master..xp_cmdshell @cadena , no_output

	drop table gestion..tmpLeVentas
End

--------------------------
-- Generando las PLE Diario
If @tipo ='DIARIO'
Begin 
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLeDiario]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLeDiario
	drop table tmpLePlanConta
END
-------------------------------------
	declare @newMes as varchar(4)
	set @newMes=@aMes+@bMes
	delete from leDiario

	insert into LeDiario
--	exec "spp_rep_LibroDiario";1 '2014', '0101', '000012', '000012', '000012    ', '000012    ', 5, NULL, ''
	exec spp_rep_LibroDiario @Anio, @newMes, @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica, @IdEmpresa, NULL, ''

	select periodo=@Anio+substring(nrodoc,4,2)+'00', --'201'+substring(nrodoc,3,3)+'00', -- campo1
		cuo = nrodoc, --campo2
		correlativo =(Case When left(nrodoc,2)='00' Then 'A' Else (Case When left(nrodoc,2)='19' Then 'C' Else 'M' End) End)+dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY nrodoc ORDER BY nrodoc) AS varchar(10)),3,'0'),  --campo3
		plancontable =convert(varchar(2),'01'), --campo4
		codcuenta= convert(varchar(24),codcuenta), --campo5
		foperacion=convert(varchar(10),fechContable,103), -- campo6
		descripcion= convert(varchar(100),descripcion), -- campo7
		debe= CONVERT(varchar(15),convert(decimal(38,2),impDebe)), -- campo8
		haber = CONVERT(varchar(15),convert(decimal(38,2),imphaber)), --campo9
		cuoVentas=null, --campo10
		cuoCompras=null, --campo11
		cuoConsignacion=null, --campo12
		estado = (case when year(fechContable) < year(convert(datetime, '01/'+(Case when substring(nrodoc,4,2)='00' then '01' else substring(nrodoc,4,2) end) +'/201'+substring(nrodoc,3,1))) then 8 else 1 end), -- campo13
		Cierre=null --campo14
	into tmpLeDiario
	from leDiario

	set @ruc= (select ruc from Empresa where IdEmpresa=@IdEmpresa)
	set @reg = (select count(codcuenta) from tmpLeDiario)

	set @direcCab = 'd:\gestion\LE'+ @ruc+@Anio+@aMes+'00050100001'+(case when @reg=0 then '0' else '1' end)+'11.txt'

			set @cadena = 'select * from gestion..tmpLeDiario'
			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -rgt \n'
			-- EXEC master..xp_cmdshell @cadena , no_output

	drop table gestion..tmpLeDiario

-----------Creando el formato 5.3 detalle plan cuentas
	select periodo=@Anio+@aMes+'01', --'201'+substring(nrodoc,3,3)+'00', -- campo1
			codcuentacontable= convert(varchar(24),codcuentacontable), --campo2
			descripcion=max(rtrim(descripcion)), -- campo3
			plancontable =convert(varchar(2),'01'), --campo4
			descrplanUsuario='-', --campo5	
			estado='1', -- campo6
			Cierre=null --campo7
	into tmpLePlanconta
	from plancuentascontables
	where IdEmpresa= @IdEmpresa and left(anio,4)=(case When rtrim(@anio)<'2020' then '2009' else rtrim(@anio) end)
		and estado='1' and descripcion<>'' and len(codcuentacontable)>2 Group by codcuentacontable
	order by codcuentacontable

	set @ruc= (select ruc from Empresa where IdEmpresa=@IdEmpresa)
	set @reg = (select count(codcuentacontable) from tmpLePlanconta)

	set @direcCab = 'd:\gestion\LE'+ @ruc+@Anio+@aMes+'00050300001'+(case when @reg=0 then '0' else '1' end)+'11.txt'

			set @cadena = 'select * from gestion..tmpLePlanConta'
			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -rgt \n'
			-- EXEC master..xp_cmdshell @cadena , no_output

	drop table gestion..tmpLePlanConta

---------------------------------------------
End
-- Generando las PLE Mayor
If @tipo ='MAYOR'
Begin 
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLeMayor]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpLeMayor
END
-------------------------------------
	declare @Digitos as varchar(4)
	set @Digitos=(select len(max(codcuentacontable)) from plancuentascontables where estado='1' and idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@anio)<'2020' then '2009' else rtrim(@anio) end) )
	delete from leMayor

	insert into LeMayor
--	exec "spp_rep_LibroMayor";1 '000012', '000012', '000012    ', '000012    ', '1', '9999999999', '2014', '01', '01', 5, NULL, 7
	exec spp_rep_LibroMayor @aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica, '1', '9999999999', @Anio, @aMes,@bMes, @IdEmpresa, NULL, @Digitos

	select periodo=@Anio+substring(nrodoc,4,2)+'00', --'201'+substring(nrodoc,3,3)+'00', -- campo1
		cuo = nrodoc, --campo2
		correlativo =(Case When left(nrodoc,2)='00' Then 'A' Else (Case When left(nrodoc,2)='19' Then 'C' Else 'M' End) End)+dbo.padl(cast( ROW_NUMBER() OVER(PARTITION BY nrodoc ORDER BY nrodoc) AS varchar(10)),3,'0'),  --campo3
		plancontable =convert(varchar(2),'01'), --campo4
		codcuenta= convert(varchar(24),rtrim(left(cuenta,charindex(' -',cuenta)))), --campo5
		foperacion=convert(varchar(10),fechContable,103), -- campo6
		descripcion= convert(varchar(100),glosa), -- campo7
		debe= CONVERT(varchar(15),convert(decimal(38,2),Debe)), -- campo8
		haber = CONVERT(varchar(15),convert(decimal(38,2),acreedor)), --campo9
		cuoVentas=null, --campo10
		cuoCompras=null, --campo11
		cuoConsignacion=null, --campo12
		estado = (case when year(fechContable) < year(convert(datetime, '01/'+(Case when substring(nrodoc,4,2)='00' then '01' else substring(nrodoc,4,2) end) +'/201'+substring(nrodoc,3,1))) then 8 else 1 end), -- campo13
		Cierre=null --campo14
	into tmpLeMayor
	from leMayor
	where nrodoc<>''

	set @ruc= (select ruc from Empresa where IdEmpresa=@IdEmpresa)
	set @reg = (select count(codcuenta) from tmpLeMayor)

	set @direcCab = 'd:\gestion\LE'+ @ruc+@Anio+@aMes+'00060100001'+(case when @reg=0 then '0' else '1' end)+'11.txt'

			set @cadena = 'select * from gestion..tmpLeMayor'
			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -rgt \n'
			-- EXEC master..xp_cmdshell @cadena , no_output

	drop table gestion..tmpLeMayor
End
/****** Object:  StoredProcedure [dbo].[spp_ListaDettale_Honomastico]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_ListaDettale_Honomastico]
@Emple varchar(150)
as
select FechaNac,Direccion,Telefono,Cel,Correo from Honomasticos
where estado='A' and (Nombres+ ' ' +Apellidos)=@Emple
/****** Object:  StoredProcedure [dbo].[spp_ListaHonomastico]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_ListaHonomastico]
as
set dateFormat mdy
select NombreCompleto=(Nombres+' '+Apellidos),convert(varchar(10),fechanac,103) as Fecha,dias=(datediff(day,getdate(),convert(varchar(2),month(fechanac))+'/'+convert(varchar(2),day(fechanac))+'/'+convert(varchar(4),year(getdate())))),Telefono,Direccion,Cel,Correo from Honomasticos
where estado='A' and month(fechanac)=month(GETDATE())
/****** Object:  StoredProcedure [dbo].[spp_listaSistemas]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_listaSistemas]
as
select NameSystem,id from Sistemas
where estado='1'
/****** Object:  StoredProcedure [dbo].[spp_lst_CabeceraUsuario]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_lst_CabeceraUsuario]
AS
select Usuario= case 
when Apellidos!='' and Nombres!='' then 
	Apellidos + ', ' + Nombres 
when Apellidos!='' and Nombres='' then
	Apellidos
when Apellidos='' and Nombres!='' then
	Nombres
when Apellidos='' and Nombres='' then
	Username
end,IdUsuario
from Usuarios
ORDER BY Usuario
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_MovContablesDNoDomici]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_MovContablesDNoDomici]
	@idNoDomiciliado int,
	@Movcontable_d  char(10),
	@CodUnidadEconomica char(10),
    @TipoDocCredFiscal char(2),
    @NroDocDUA char(45),
    @AnioDuaCredFiscal char(4),
    @MontoRetIGV numeric(18,2),
    @Pais char(7),
    @NombreNoDomiciliado varchar(100),
    @RentaBruta numeric(18,2),
    @DeduccionCosto numeric(18,2),
    @RentaNeta numeric(18,2),
    @TasaRetencion numeric(10,2),
    @ImpuestoRetenido numeric(18,2),
    @Convenio2Imposicion char(7),
    @TipoRenta char(7),
    @AplicaArt76 char(1),
	@Estado int,
	@Modo int
 AS
If @Modo = 1
	INSERT INTO MovContablesDNoDomici
           (Movcontable_d,
           CodUnidadEconomica,
           TipoDocCredFiscal,
           NroDocDUA,
           AnioDuaCredFiscal,
           MontoRetIGV,
           Pais,
           NombreNoDomiciliado,
           RentaBruta,
           DeduccionCosto,
           RentaNeta,
           TasaRetencion,
           ImpuestoRetenido,
           Convenio2Imposicion,
           TipoRenta,
           AplicaArt76,
           Estado)
     VALUES
           (@Movcontable_d,
           @CodUnidadEconomica,
           @TipoDocCredFiscal,
           @NroDocDUA, 
           @AnioDuaCredFiscal, 
           @MontoRetIGV, 
           @Pais, 
           @NombreNoDomiciliado, 
           @RentaBruta, 
           @DeduccionCosto, 
           @RentaNeta, 
           @TasaRetencion, 
           @ImpuestoRetenido, 
           @Convenio2Imposicion, 
           @TipoRenta, 
           @AplicaArt76, 
           1)

If @Modo = 2 

	Update MovContablesDNoDomici
	Set
	Movcontable_d=@Movcontable_d,
	CodUnidadEconomica=@CodUnidadEconomica,
	TipoDocCredFiscal=@TipoDocCredFiscal,
	NroDocDUA=@NroDocDUA, 
	AnioDuaCredFiscal=@AnioDuaCredFiscal, 
	MontoRetIGV=@MontoRetIGV, 
	Pais=@Pais, 
	NombreNoDomiciliado=@NombreNoDomiciliado, 
	RentaBruta=@RentaBruta, 
	DeduccionCosto=@DeduccionCosto, 
	RentaNeta=@RentaNeta, 
	TasaRetencion=@TasaRetencion, 
	ImpuestoRetenido=@ImpuestoRetenido, 
	Convenio2Imposicion=@Convenio2Imposicion, 
	TipoRenta=@TipoRenta, 
	AplicaArt76=@AplicaArt76
	where 
	idNoDomiciliado = @idNoDomiciliado
	
If @Modo = 3
	Update MovContablesDNoDomici
	Set Estado=0
	where idNoDomiciliado = @idNoDomiciliado
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_movimientoCajaC]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_movimientoCajaC]

@idMovimientoCajaC int, 
@anio char(4), 
@mes char(2), 
@Zona nchar(10), 
@CodUnidadEconomica char(10), 
@NroDoc nchar(10) output,
@FechaContable datetime,
@CodMGC char(2),
@glosa Varchar(200),
@RucEmitido nchar(11),
@CodigoCtaBancaria char(12), 
@CodigoTipoDocPago char(4),
@NroDocPago nchar(14),
@Monto decimal(18,2),
@Transferido char(20), 
@Correlativo nchar(20),
@estado char(1),
@TransferidoAnt char(20), 
@OPER varchar(3)

as
-----------------------------------------------TOMANDO CORRELATIVO
	DECLARE @CorreCont CHAR(10),@Valor	char(5),@CorreContAnual CHAR(10),@ValorAnual	char(5)
	set @CorreCont=dbo.CorrelativoMes(@Zona ,@CodUnidadEconomica,@CodMGC ,@Anio ,@Mes )
	set @CorreContAnual=dbo.CorrelativoMes(@Zona ,@CodUnidadEconomica,@CodMGC ,@Anio ,'AN' )

	set @Valor=right(@CorreCont,5)
	set @ValorAnual=right(@CorreContAnual,5)

-----------------------------------------------Actualizando Transacciones de Insertar y Actualizar
	
IF @OPER=''
	BEGIN
	EXEC cont_ActualizaCorrelaGrupoContable @Valor,@zona,@CodUnidadEconomica,@CodMGC,@Anio ,@Mes
	EXEC cont_ActualizaCorrelaGrupoContable @ValorAnual,@zona,@CodUnidadEconomica,@CodMGC,@Anio ,'AN' --

		INSERT INTO tbl_MovimientoCajaC(Anio,Mes,Zona,CodUnidadEconomica,nrodoc,FechaContable,CodMGC,Glosa,
						RucEmitido,CodigoCtaBancaria,CodigoTipoDocPago,NroDocPago,Monto,Transferido,Correlativo,Estado,TransferidoAnt)
		VALUES(@Anio,@Mes,@Zona,@CodUnidadEconomica,@CorreCont,@FechaContable,@CodMGC,@Glosa,
						@RucEmitido,@CodigoCtaBancaria,@CodigoTipoDocPago,@NroDocPago,@Monto,@Transferido,right(@CorreContAnual,5),@Estado,@TransferidoAnt)
		set @NroDoc=@CorreCont
		IF @@ERROR<>0
			BEGIN
				RAISERROR('ERROR: EN EL INGRESO DE DATOS',16,1)
				WITH NOWAIT
				RETURN
			END
	END
IF @OPER='up'
	BEGIN
		
		UPDATE Tbl_MovimientoCajaC
		SET Anio=@Anio,Mes=@Mes,Zona=@Zona,CodUnidadEconomica=@CodUnidadEconomica,nroDoc=@NroDoc,FechaContable=@FechaContable,CodMGC=@CodMGC,Glosa=@Glosa,
			RucEmitido=@RucEmitido,CodigoCtaBancaria=@CodigoCtaBancaria,CodigoTipoDocPago=@CodigoTipoDocPago,NroDocPago=@NroDocPago,Monto=@Monto,
			Transferido=@Transferido,Correlativo=@Correlativo,Estado=@Estado,TransferidoAnt=@TransferidoAnt 	
		where idMovimientoCajaC=@idMovimientoCajaC
			
		IF @@ERROR<>0
			BEGIN
				RAISERROR('ERROR: EN EL ACTUALIZACION DE DATOS',16,1)
				WITH NOWAIT
				RETURN
			END

	END
IF @OPER='del'
	BEGIN
		delete from tbl_MovimientoCajaD where idMovimientoCajaC=@idMovimientoCajaC
		
	END
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_movimientoCajaD]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_movimientoCajaD]

@idMovimientoCajaD int, 
@idMovimientoCajaC int, 
@CodUnidadEconomica nchar(10), 
@NroDocumento char(10),
@FechaContable datetime,
@TipoMedioPago nchar(3),
@codpro nchar(14),
@glosa Varchar(250),
@FlujoEfectivo nchar(10), 
@CodigoDocumentoFuente char(2),
@NroDocumentoFuente char(14),
@FechaDocFuente datetime,
@FechaVencimiento datetime,
@codigoCtaBancaria char(12),
@CodCuenta char(12),
@impDebe decimal(18,2),
@impHaber decimal(18,2),
@NroOperacion char(12), 
@NroCheque char(20),
@estado char(1),
@reparo char(1),
@TipoDoc char(3),
@TipoOper int,
@MontoIgv decimal(12,3),
@MontoIsc decimal(10,2),
@MontoRetencion4 decimal(10,2),
@RIgv bit,
@Afecto bit,
@CostearIgv Char(1),
@Direccion Varchar(90),
@OPER varchar(3)

as
-----------------------------------------------TOMANDO CORRELATIVO
	if @idMovimientoCajaC=0 and len(@NroDocumento)=10
	begin
		set @idMovimientoCajaC=(select idMovimientoCajaC from tbl_MovimientoCajaC where NroDoc=@NroDocumento and CodUnidadEconomica=@CodUnidadEconomica)
	end

---------------------------------Creando Correl
--Declare @lcCorrel int,@lcCorrelc CHAR(10), --@corigv int,@lcCorreli char(10),@valzona char(3), 
--		@idEmpresa int 
--------Arreglar aiçki
----------------------
--Select @lcCorrel= (select e_corr from empresa a inner join zona b on a.idEmpresa=b.idEmpresa inner join unidad_economica c on c.codZona=b.codZona where c.codUnidadEconomica=@CodigoDocumento and b.estado<>0 and c.estado <>0)
--Select @idEmpresa= (select a.idEmpresa from empresa a inner join zona b on a.idEmpresa=b.idEmpresa inner join unidad_economica c on c.codZona=b.codZona where c.codUnidadEconomica=@CodigoDocumento and b.estado<>0 and c.estado <>0)
--
--UPDATE Empresa SET E_CORR = E_CORR + 1 where idempresa=@idempresa
--SET @lcCorrelc =Replicate('0',10-LEN(@lcCorrel+1))+ CONVERT(CHAR,@lcCorrel+1)
--if @Correlativo!='-'
--	begin
--		set @lcCorrelc=@Correlativo
--	end
--set @Correlativo=@lcCorrelc
--SET @lcCorreli = ''

-----------------------------------------------Actualizando Transacciones de Insertar y Actualizar
Declare @NImpDebe as decimal(18,2), @NImpHaber as decimal(18,2)
	
set @NImpDebe = (case when @CodigoDocumentoFuente ='07' then @ImpHaber else @ImpDebe end)
set @NImpHaber = (case when @CodigoDocumentoFuente ='07' then @ImpDebe else abs(@ImpHaber) end)
	
IF @OPER=''
	BEGIN
--	EXEC cont_ActualizaCorrelaGrupoContable @Valor,@zona,@CodUnidadEconomica,@CodMGC,@Anio ,@Mes
		INSERT INTO tbl_MovimientoCajaD(IdMovimientoCajaC,CodUnidadEconomica,nrodocumento,FechaContable,TipoMedioPago,CodPro,
					Glosa,FlujoEfectivo,CodigoDocumentoFuente,NroDocumentoFuente,FechaDocFuente,FechaVencimiento,
					CodigoCtaBancaria,CodCuenta,ImpDebe,ImpHaber,NroOperacion,NroCheque,Estado,reparo,
					TipoDoc,TipoOper,MontoIgv,MontoIsc,MontoRetencion4,RIgv,Afecto,CostearIgv,Direccion)
		VALUES(@IdMovimientoCajaC,@CodUnidadEconomica,@nrodocumento,@FechaContable,@TipoMedioPago,@CodPro,
					@Glosa,@FlujoEfectivo,@CodigoDocumentoFuente,@NroDocumentoFuente,@FechaDocFuente,@FechaVencimiento,
					@CodigoCtaBancaria,@CodCuenta,@NImpDebe,@NImpHaber,@NroOperacion,@NroCheque,@Estado,@reparo,
					@TipoDoc,@TipoOper,@MontoIgv,@MontoIsc,@MontoRetencion4,@RIgv,@Afecto,@CostearIgv,@Direccion)
--		set @NroDoc=@CorreCont
		IF @@ERROR<>0
			BEGIN
				RAISERROR('ERROR: EN EL INGRESO DE DATOS',16,1)
				WITH NOWAIT
				RETURN
			END
	END
IF @OPER='up'
	BEGIN
		
		UPDATE Tbl_MovimientoCajaD
		SET idMovimientoCajaC=@idMovimientoCajaC,CodUnidadEconomica=@CodUnidadEconomica,nroDocumento=@NroDocumento,FechaContable=@FechaContable,
			TipoMedioPago=@TipoMedioPago,CodPro=@CodPro,Glosa=@Glosa,FlujoEfectivo=@FlujoEfectivo,
			CodigoDocumentoFuente=@CodigoDocumentoFuente,NroDocumentoFuente=@NroDocumentoFuente,
			FechaDocFuente=@FechaDocFuente,FechaVencimiento=@FechaVencimiento,CodigoCtaBancaria=@CodigoCtaBancaria,
			CodCuenta=@CodCuenta,ImpDebe=@NImpDebe,ImpHaber=@NImpHaber,NroOperacion=@NroOperacion,NroCheque=@NroCheque,
			Estado=@Estado, reparo=@reparo,TipoDoc=@TipoDoc,TipoOper=@TipoOper,MontoIgv=@MontoIgv,MontoIsc=@MontoIsc,
			MontoRetencion4=@MontoRetencion4,RIgv=@RIgv,Afecto=@Afecto,CostearIgv=@CostearIgv,Direccion=@Direccion
		where idMovimientoCajaD=@idMovimientoCajaD
			
		IF @@ERROR<>0
			BEGIN
				RAISERROR('ERROR: EN EL ACTUALIZACION DE DATOS',16,1)
				WITH NOWAIT
				RETURN
			END

	END
IF @OPER='del'
	BEGIN
		--print @idMovimientoCajaD		
		--delete from tbl_movimientoCajaD where idMovimientoCajaD=@idMovimientoCajaD --and estado='1'
		update tbl_movimientoCajaD set estado='1' where idMovimientoCajaD=@idMovimientoCajaD and (estado='0' or estado='')
	END
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_Tbl_AFBaja]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_Tbl_AFBaja]
		   @IdBaja int,
		   @Descripcion Nchar(20),
           @Estado bit,
		   @modo int
 AS
If @Modo = 1
	Insert into Tbl_AFBaja
		  (Descripcion,
           Estado)
	Values
		  (@Descripcion,
		   @Estado)

If @Modo = 2 

	Update Tbl_AFBaja
	Set
		   Descripcion= @Descripcion,
           estado = @Estado
	Where
	IdBaja = @IdBaja

If @Modo = 3
--	Delete Tbl_AFBaja
	Update Tbl_AFBaja set Estado = 0
	Where
	IdBaja = @IdBaja
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_Tbl_AFCargo]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_Tbl_AFCargo]
		   @IdCargo int,
		   @Descripcion Varchar(50),
		   @IdEmpresa int,
           @Estado bit,
		   @modo int
 AS

Declare @AVISO as TINYINT

If @Modo = 1
	Insert into Tbl_AFCargo
		  (Descripcion,
		   IdEmpresa,
           Estado)
	Values
		  (@Descripcion,
			@IdEmpresa,
		   @Estado)

	IF @@ERROR<>0
		SET @AVISO=2

If @Modo = 2 

	Update Tbl_AFCargo
	Set
		   Descripcion= @Descripcion,
		   IdEmpresa= @IdEmpresa,
           estado = @Estado
	Where
	IdCargo = @IdCargo

If @Modo = 3
--	Delete Tbl_AFCargo
	Update Tbl_AFCargo set Estado = 0
	Where
	IdCargo = @IdCargo

IF @Modo=''
	BEGIN
		SET @AVISO=1			
	END

--Verificacion de respuesta de transaccion
IF @AVISO=2
	BEGIN
		RAISERROR('ERROR: EN EL INGRESO DE DATOS',1,16)
		WITH NOWAIT RETURN
	END
ELSE
	IF @AVISO=1
		BEGIN
		RAISERROR('ADVERTENCIA: YA EXISTE EL REGISTRO',1,16)
		WITH NOWAIT RETURN
		END
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_Tbl_AFDetalleProceso]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_Tbl_AFDetalleProceso]
		   @IdProceso int,
		   @IdDetalleProceso int,
			@DepreciacionHistorica numeric (18,2),
			@DepreciacionAjustada numeric (18,2),
			@ValorAjustado numeric (18,2),
			@DepreciacionMensualCalculado numeric (18,2),
			@IdEmpresa int,
			@Estado bit,
		   @modo int
 AS

Declare @AVISO as TINYINT

If @Modo = 1
	Insert into Tbl_AFDetalleProceso
		  (IdProceso,
			DepreciacionHistorica,
			DepreciacionAjustada,
			ValorAjustado,
			DepreciacionMensualCalculado,
			IdEmpresa,
           Estado)
	Values
		  (@IdProceso,
			@DepreciacionHistorica,
			@DepreciacionAjustada,
			@ValorAjustado,
			@DepreciacionMensualCalculado,
			@IdEmpresa,
		   @Estado)

	IF @@ERROR<>0
		SET @AVISO=2

If @Modo = 2 

	Update Tbl_AFDetalleProceso
	Set
		  IdProceso= @IdProceso,
			DepreciacionHistorica =@DepreciacionHistorica,
			DepreciacionAjustada =@DepreciacionAjustada,
			ValorAjustado=@ValorAjustado,
			DepreciacionMensualCalculado =@DepreciacionMensualCalculado,
			IdEmpresa= @IdEmpresa,
           estado = @Estado
	Where
	IdDetalleProceso = @IdDetalleProceso

If @Modo = 3
--	Delete Tbl_AFDetalleProceso
	Update Tbl_AFDetalleProceso set Estado = 0
	Where
	IdDetalleProceso = @IdDetalleProceso

IF @Modo=''
	BEGIN
		SET @AVISO=1			
	END

--Verificacion de respuesta de transaccion
IF @AVISO=2
	BEGIN
		RAISERROR('ERROR: EN EL INGRESO DE DATOS',1,16)
		WITH NOWAIT RETURN
	END
ELSE
	IF @AVISO=1
		BEGIN
		RAISERROR('ADVERTENCIA: YA EXISTE EL REGISTRO',1,16)
		WITH NOWAIT RETURN
		END
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_tbl_AFDocumento_compra]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_tbl_AFDocumento_compra]
		   @Codigo_Documento_Compra bigint,
		   @Descripcion nchar(20),
           @Abreviatura nchar(10), 
           @Serie nchar(10), 
           @Correlativo nchar(10), 
		   @estado int,
           @modo int
 AS
If @Modo = 1
	Insert into tbl_AFDocumento_compra
		   (descripcion,
            Abreviatura,
            Serie,
            Correlativo, estado)
	Values
		  (@descripcion,
            @Abreviatura,
            @Serie,
            @Correlativo,1)

If @Modo = 2 

	Update tbl_AFDocumento_compra
	Set
		   descripcion= @descripcion,
            Abreviatura= @Abreviatura,
            Serie= @Serie,
            Correlativo= @Correlativo
    where
	Codigo_documento_compra = @Codigo_documento_compra

If @Modo = 3
	Update tbl_AFDocumento_compra
	Set
		   estado=@estado
    where
	Codigo_documento_compra = @Codigo_documento_compra
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_Tbl_AFEstado]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_Tbl_AFEstado]
		   @IdEstado int,
		   @Descripcion Varchar(20),
           @Estado bit,
		   @modo int
 AS
If @Modo = 1
	Insert into Tbl_AFEstado
		  (Descripcion,
           Estado)
	Values
		  (@Descripcion,
		   @Estado)

If @Modo = 2 

	Update Tbl_AFEstado
	Set
		   Descripcion= @Descripcion,
           estado = @Estado
	Where
	IdEstado = @IdEstado

If @Modo = 3
--	Delete Tbl_AFEstado
	Update Tbl_AFEstado set Estado = 0
	Where
	IdEstado = @IdEstado
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_Tbl_AFFamilia]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_Tbl_AFFamilia]
		   @Idfamilia int,
		   @IdGrupo int,
			@Descripcion char(100),
			@Cuenta_Compra char(10),
			@Cuenta_Venta char(10),
			@Cuenta_Contable nchar(10),
			@Cuenta_Mercaderia char(10),
			@Cuenta_ProdManufac char(10),
			@orden int,@Estado bit,
			@Modo int
 AS
If @Modo = 1
	Insert into Tbl_AFFamilia
		  (IdGrupo,
			Descripcion,
			Cuenta_Compra,
			Cuenta_Venta,
			Cuenta_Contable,
			Cuenta_Mercaderia,
			Cuenta_ProdManufac,
			orden,Estado)
	Values
		  (@IdGrupo,
			@Descripcion,
			@Cuenta_Compra,
			@Cuenta_Venta,
			@Cuenta_Contable,
	        @Cuenta_Mercaderia,
			@Cuenta_ProdManufac,
			@orden,@Estado)

If @Modo = 2 

	Update Tbl_AFFamilia
	Set
		  IdGrupo= @IdGrupo,
			Descripcion=@Descripcion,
			Cuenta_Compra =@Cuenta_Compra,
			Cuenta_Venta=@Cuenta_Venta,
			Cuenta_Contable =@Cuenta_Contable,
			Cuenta_Mercaderia=@Cuenta_Mercaderia,
			Cuenta_ProdManufac=@Cuenta_ProdManufac,
			orden=@orden,estado = @Estado
	Where
	Idfamilia = @Idfamilia
If @Modo = 3
--	Delete Tbl_AFFamilia
	Update Tbl_AFFamilia set Estado = 0
	Where
	Idfamilia = @Idfamilia
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_Tbl_AFGrupo]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_Tbl_AFGrupo]
		   @IdGrupo int,
		   @Descripcion char(100),
			@Cuenta_Contable nchar(10),
			@IdEmpresa int,
			@Estado bit,
			@modo int
		   
 AS

Declare @AVISO as TINYINT

If @Modo = 1
	Insert into Tbl_AFGrupo
		  (	Descripcion,
			Cuenta_Contable,
			IdEmpresa,
			Estado)
	Values
		  (	@Descripcion,
			@Cuenta_Contable,
			@IdEmpresa,
			@Estado)

If @Modo = 2 

	Update Tbl_AFGrupo
	Set
		  	Descripcion =@Descripcion,
			Cuenta_Contable=@Cuenta_Contable,
			IdEmpresa = @IdEmpresa,
			estado = @Estado
	Where
	IdGrupo = @IdGrupo

	IF @@ERROR<>0
		SET @AVISO=2

If @Modo = 3
--	Delete Tbl_AFGrupo
	Update Tbl_AFGrupo set Estado = 0
	Where
	IdGrupo = @IdGrupo

IF @Modo=''
	BEGIN
		SET @AVISO=1			
	END

--Verificacion de respuesta de transaccion
IF @AVISO=2
	BEGIN
		RAISERROR('ERROR: EN EL INGRESO DE DATOS',1,16)
		WITH NOWAIT RETURN
	END
ELSE
	IF @AVISO=1
		BEGIN
		RAISERROR('ADVERTENCIA: YA EXISTE EL REGISTRO',1,16)
		WITH NOWAIT RETURN
		END
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_Tbl_AFHistoricoDepreciacion]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_Tbl_AFHistoricoDepreciacion]
		    @IdAFHistoricoDepreciacion int,
			@IdActivoFijo int,
			@IdEmpresa int,
			@FechaProceso varchar(6),
			@PorcentajeDeprecia decimal(18, 4),
			@Monto decimal(18, 2),
			@idTipoDocumento int,
			@Tipodepreciacion char(10),
			@Estado bit,
			@modo int
		   
 AS

Declare @AVISO as TINYINT

If @Modo = 1
	Begin
	Insert into Tbl_AFHistoricoDepreciacion
		  ( IdActivoFijo,
			IdEmpresa,
			FechaProceso,
			PorcentajeDeprecia,
			Monto,
			idTipoDocumento,
			TipoDepreciacion,
			Estado)
	Values
		  (	@IdActivoFijo,
			@IdEmpresa,
			@FechaProceso,
			@PorcentajeDeprecia,
			@Monto,
			@idTipoDocumento,@TipoDepreciacion,
			@Estado)

	IF @@ERROR<>0
		SET @AVISO=2
	End
If @Modo = 2 
	Begin
	Update Tbl_AFHistoricoDepreciacion
	Set
		  	IdActivoFijo=@IdActivoFijo,
			IdEmpresa=@IdEmpresa,
			FechaProceso=@FechaProceso,
			PorcentajeDeprecia=@PorcentajeDeprecia,
			Monto=@Monto,
			idTipoDocumento=@idTipoDocumento,TipoDepreciacion=@TipoDepreciacion,
			estado = @Estado
	Where
	IdAFHistoricoDepreciacion = @IdAFHistoricoDepreciacion
	End
If @Modo = 3
	Begin
	Update Tbl_AFHistoricoDepreciacion set Estado = 0
	Where
	IdAFHistoricoDepreciacion = @IdAFHistoricoDepreciacion
	End

IF @Modo=''
	BEGIN
		SET @AVISO=1			
	END

--Verificacion de respuesta de transaccion
IF @AVISO=2
	BEGIN
		RAISERROR('ERROR: EN EL INGRESO DE DATOS',1,16)
		WITH NOWAIT RETURN
	END
ELSE
	IF @AVISO=1
		BEGIN
		RAISERROR('ADVERTENCIA: YA EXISTE EL REGISTRO',1,16)
		WITH NOWAIT RETURN
		END
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_Tbl_AFMaestroActivoFijo]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_Tbl_AFMaestroActivoFijo]
		   @IdACtivoFijo int,
		   @IdFamilia int,
		   @IdZona int,
			@Nombre_corto varchar(50),
			@Nombre_largo text,
			@Codigo_ActivoReal nchar(15),
			@Codigo_barrasActivo nchar(15),
			@IdEstado int,
			@Fecha_ingreso datetime,
			@IdTipoIngreso int,
			@IdCentroCosto int,
			@IdUbicacion int,
			@IdMarca int,
			@Modelo varchar(50),
			@Serie varchar(50),
			@revalorizacion int,
			@Depreciable int,
			@IdTipoDepreciacion int,
			@UnidadMedida varchar(30),
			@Fecha_Baja datetime,
			@IdBaja int,
			@Valor_residual numeric(18, 2),
			@IdTipoAdquisicion int,
			@Cuenta_compra nchar(10),
			@Cuenta_Revalorizacion nchar(10),
			@Cuenta_Depreciacion nchar(10),
			@Cuenta_Readecuaciones nchar(10),
			@tipo_situacion nchar(10),
			@fecha_compraTributaria datetime,
			@Tipo_documento int,
			@Numero_Documento nchar(15),
			@Ruc nchar(13),
			@Valor_CompraTributaria numeric(18, 2),
			@Valor_CompraFinanciera numeric(18, 2),
			@Vida_UtilTributaria int,
			@Vida_UtilFinaciera int,
			@MesAnio_revalorizacion datetime,
			@MesAnio_Depreciacion datetime,
			@Revalorizacion_Acumulada numeric(18, 2),
			@Depreciacion_Acumulada numeric(18, 2),
			@Ficha_tecnica text,
			@NroAutorizacion nchar(20),
			@PorcentaDeprecia numeric(6, 2),
			@IdEmpresa int,
			@estado bit,
			@IdRevaluacion int,
			@MontoRevaluacion numeric(18, 2),
			@VidaRevaluacion int,
			@IdComponenteActivo int,
		   @modo int
 AS

Declare @AVISO as TINYINT

If @Modo = 1
	Insert into Tbl_AFMaestroActivoFijo
		  (	IdFamilia, idZona,
			Nombre_corto,
			Nombre_largo,
			Codigo_ActivoReal,
			Codigo_barrasActivo,
			IdEstado,
			Fecha_ingreso,
			IdTipoIngreso,
			IdCentroCosto,
			IdUbicacion,
			IdMarca,
			Modelo,
			Serie,
			revalorizacion,
			Depreciable,
			IdTipoDepreciacion,
			UnidadMedida,
			Fecha_Baja,
			IdBaja,
			Valor_residual,
			IdTipoAdquisicion,
			Cuenta_compra,
			Cuenta_Revalorizacion,
			Cuenta_Depreciacion,
			Cuenta_Readecuaciones,
			tipo_situacion,
			fecha_compraTributaria,
			Tipo_documento,
			Numero_Documento,
			Ruc,
			Valor_CompraTributaria,
			Valor_CompraFinanciera,
			Vida_UtilTributaria,
			Vida_UtilFinaciera,
			MesAnio_revalorizacion,
			MesAnio_Depreciacion,
			Revalorizacion_Acumulada,
			Depreciacion_Acumulada,
			Ficha_tecnica,
			NroAutorizacion,
			PorcentaDeprecia,
			IdEmpresa,
           Estado,IdRevaluacion,
			MontoRevaluacion,
			VidaRevaluacion,IdComponenteActivo)
	Values
		  (@IdFamilia, @idZona,
			@Nombre_corto,
			@Nombre_largo,
			@Codigo_ActivoReal,
			@Codigo_barrasActivo,
			@IdEstado,
			@Fecha_ingreso,
			@IdTipoIngreso,
			@IdCentroCosto,
			@IdUbicacion,
			@IdMarca,
			@Modelo,
			@Serie,
			@revalorizacion,
			@Depreciable,
			@IdTipoDepreciacion,
			@UnidadMedida,
			@Fecha_Baja,
			@IdBaja,
			@Valor_residual,
			@IdTipoAdquisicion,
			@Cuenta_compra,
			@Cuenta_Revalorizacion,
			@Cuenta_Depreciacion,
			@Cuenta_Readecuaciones,
			@tipo_situacion,
			@fecha_compraTributaria,
			@Tipo_documento,
			@Numero_Documento,
			@Ruc,
			@Valor_CompraTributaria,
			@Valor_CompraFinanciera,
			@Vida_UtilTributaria,
			@Vida_UtilFinaciera,
			@MesAnio_revalorizacion,
			@MesAnio_Depreciacion,
			@Revalorizacion_Acumulada,
			@Depreciacion_Acumulada,
			@Ficha_tecnica,
			@NroAutorizacion,
			@PorcentaDeprecia,
			@IdEmpresa,
			@Estado,@IdRevaluacion,
			@MontoRevaluacion,
			@VidaRevaluacion,@IdComponenteActivo)

	IF @@ERROR<>0
		SET @AVISO=2

If @Modo = 2 

	Update Tbl_AFMaestroActivoFijo
	Set
		   IdFamilia=@IdFamilia, idZona=@idZona,
			Nombre_corto=@Nombre_corto,
			Nombre_largo=@Nombre_largo,
			Codigo_ActivoReal=@Codigo_ActivoReal,
			Codigo_barrasActivo=@Codigo_barrasActivo,
			IdEstado=@IdEstado,
			Fecha_ingreso=@Fecha_ingreso,
			IdTipoIngreso=@IdTipoIngreso,
			IdCentroCosto=@IdCentroCosto,
			IdUbicacion=@IdUbicacion,
			IdMarca=@IdMarca,
			Modelo=@Modelo,
			Serie=@Serie,
			revalorizacion=@revalorizacion,
			Depreciable=@Depreciable,
			IdTipoDepreciacion=@IdTipoDepreciacion,
			UnidadMedida=@UnidadMedida,
			Fecha_Baja=@Fecha_Baja,
			IdBaja=@IdBaja,
			Valor_residual=@Valor_residual,
			IdTipoAdquisicion=@IdTipoAdquisicion,
			Cuenta_compra=@Cuenta_compra,
			Cuenta_Revalorizacion=@Cuenta_Revalorizacion,
			Cuenta_Depreciacion=@Cuenta_Depreciacion,
			Cuenta_Readecuaciones=@Cuenta_Readecuaciones,
			tipo_situacion=@tipo_situacion,
			fecha_compraTributaria=@fecha_compraTributaria,
			Tipo_documento=@Tipo_documento,
			Numero_Documento=@Numero_Documento,
			Ruc=@Ruc,
			Valor_CompraTributaria=@Valor_CompraTributaria,
			Valor_CompraFinanciera=@Valor_CompraFinanciera,
			Vida_UtilTributaria=@Vida_UtilTributaria,
			Vida_UtilFinaciera=@Vida_UtilFinaciera,
			MesAnio_revalorizacion=@MesAnio_revalorizacion,
			MesAnio_Depreciacion=@MesAnio_Depreciacion,
			Revalorizacion_Acumulada=@Revalorizacion_Acumulada,
			Depreciacion_Acumulada=@Depreciacion_Acumulada,
			Ficha_tecnica=@Ficha_tecnica,
			NroAutorizacion=@NroAutorizacion,
			PorcentaDeprecia=@PorcentaDeprecia,
			IdEmpresa=@IdEmpresa,
           estado = @Estado,IdRevaluacion=@IdRevaluacion,
			MontoRevaluacion=@MontoRevaluacion,
			VidaRevaluacion=@VidaRevaluacion,
			IdComponenteActivo=@IdComponenteActivo
	Where
	IdACtivoFijo = @IdACtivoFijo

If @Modo = 3
--	Delete Tbl_AFMaestroActivoFijo
	Update Tbl_AFMaestroActivoFijo set Estado = 0
	Where
	IdACtivoFijo = @IdACtivoFijo
 
IF @Modo=''
	BEGIN
		SET @AVISO=1			
	END

--Verificacion de respuesta de transaccion
IF @AVISO=2
	BEGIN
		RAISERROR('ERROR: EN EL INGRESO DE DATOS',1,16)
		WITH NOWAIT RETURN
	END
ELSE
	IF @AVISO=1
		BEGIN
		RAISERROR('ADVERTENCIA: YA EXISTE EL REGISTRO',1,16)
		WITH NOWAIT RETURN
		END
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_Tbl_AFModificacion]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_Tbl_AFModificacion]
		    @IdModificacion int,
			@IdActivoFijo int,
			@Fecha datetime,
			@Monto_Invertido numeric(18, 2),
			@Monto_Agregado numeric(18, 2),
			@Vida_UTilTributaria int,
			@Vida_UtilFinanciera int,
			@Documento nchar(100),
			@Descripcion char(250),
			@Estado bit,
			@modo int
		   
 AS
If @Modo = 1
	Insert into Tbl_AFModificacion
		  (	IdActivoFijo,
			Fecha,
			Monto_Invertido,
			Monto_Agregado,
			Vida_UTilTributaria,
			Vida_UtilFinanciera,
			Documento,
			Descripcion,
			Estado)
	Values
		  (	@IdActivoFijo,
			@Fecha,
			@Monto_Invertido,
			@Monto_Agregado,
			@Vida_UTilTributaria,
			@Vida_UtilFinanciera,
			@Documento,
			@Descripcion,
			@Estado)

If @Modo = 2 

	Update Tbl_AFModificacion
	Set
		  	IdActivoFijo = @IdActivoFijo,
			Fecha = @Fecha,
			Monto_Invertido = @Monto_Invertido,
			Monto_Agregado = @Monto_Agregado,
			Vida_UTilTributaria = @Vida_UTilTributaria,
			Vida_UtilFinanciera = @Vida_UtilFinanciera,
			Documento = @Documento,
			Descripcion =@Descripcion,
			estado = @Estado
	Where
	IdModificacion = @IdModificacion

If @Modo = 3
--	Delete Tbl_AFModificacion
	Update Tbl_AFModificacion set Estado = 0
	Where
	IdModificacion = @IdModificacion
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_tbl_AFocatRegistroCat]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_tbl_AFocatRegistroCat]
		   @IdRegistroCat bigint,
		   @IdMovcontables_d int,
           @NroCat nchar(10),
           @RUC nchar(14),
           @TitularCat varchar(100),
           @DNIPasciente nchar(10),
           @NombrePasciente varchar(100),
           @NroPlaca nchar(10),
           @TipoVehiculo nchar(10),
           @FechaCat nchar(10),
           @FechaOcuerrencia nchar(10),
		   @Estado bit,
		   @modo int
 AS
If @Modo = 1
	INSERT INTO tbl_AfocatRegistroCat
           (IdMovcontables_d
           ,NroCat
           ,RUC
           ,TitularCat
           ,DNIPasciente
           ,NombrePasciente
           ,NroPlaca
           ,TipoVehiculo
           ,FechaCat
           ,FechaOcuerrencia
           ,Estado)
     VALUES
           (@IdMovcontables_d,
           @NroCat,
           @RUC,
           @TitularCat, 
           @DNIPasciente, 
           @NombrePasciente,
           @NroPlaca, 
           @TipoVehiculo, 
           @FechaCat, 
           @FechaOcuerrencia, 
		   @Estado)

If @Modo = 2 

	Update tbl_AfocatRegistroCat
	Set
		   IdMovcontables_d=@IdMovcontables_d,
           NroCat=@NroCat,
           RUC=@RUC,
           TitularCat=@TitularCat,
           DNIPasciente=@DNIPasciente,
           NombrePasciente=@NombrePasciente,
           NroPlaca=@NroPlaca,
           TipoVehiculo=@TipoVehiculo,
           FechaCat=@FechaCat,
           FechaOcuerrencia=@FechaOcuerrencia,
           estado = @Estado
	Where
	IdRegistroCat = @IdRegistroCat

If @Modo = 3
	Update tbl_AfocatRegistroCat set Estado = 0
	Where
	IdRegistroCat = @IdRegistroCat
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_Tbl_AFProceso]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_Tbl_AFProceso]
			@IdProceso int,
			@IdActivoFijo int,
			@MesProceso nchar(10),
			@ValorAjustado numeric(18, 2),
			@ValorHistorico numeric(18, 2),
			@DepreciacionInicial numeric(18, 2),
			@DepreciacionHistorica numeric(18, 2),
			@DepreciacionAjustada numeric(18, 2),
			@DepreciacionMensual numeric (18, 2),
			@VidaUtilMesProceso int,
			@IdEmpresa int,
			@Estado bit,
			@modo int
		   
 AS

Declare @AVISO as TINYINT

If @Modo = 1
	Insert into Tbl_AFProceso
		  (	IdActivoFijo,
			MesProceso,
			ValorAjustado,
			ValorHistorico,
			DepreciacionInicial,
			DepreciacionHistorica,
			DepreciacionAjustada,
			DepreciacionMensual,
			VidaUtilMesProceso,
			IdEmpresa,
			Estado)
	Values
		  (	@IdActivoFijo,
			@MesProceso,
			@ValorAjustado,
			@ValorHistorico,
			@DepreciacionInicial,
			@DepreciacionHistorica,
			@DepreciacionAjustada,
			@DepreciacionMensual,
			@VidaUtilMesProceso,
			@IdEmpresa,
			@Estado)

	IF @@ERROR<>0
		SET @AVISO=2

If @Modo = 2 

	Update Tbl_AFProceso
	Set
		  	IdActivoFijo = @IdActivoFijo,
			MesProceso = @MesProceso,
			ValorAjustado = @ValorAjustado,
			ValorHistorico = @ValorHistorico,
			DepreciacionInicial = @DepreciacionInicial,
			DepreciacionHistorica = @DepreciacionHistorica,
			DepreciacionAjustada = @DepreciacionAjustada,
			DepreciacionMensual = @DepreciacionMensual,
			VidaUtilMesProceso = @VidaUtilMesProceso,
			IdEmpresa=@IdEmpresa,
			estado = @Estado
	Where
	IdProceso = @IdProceso

If @Modo = 3
--	Delete Tbl_AFProceso
	Update Tbl_AFProceso set Estado = 0
	Where
	IdProceso = @IdProceso

IF @Modo=''
	BEGIN
		SET @AVISO=1			
	END

--Verificacion de respuesta de transaccion
IF @AVISO=2
	BEGIN
		RAISERROR('ERROR: EN EL INGRESO DE DATOS',1,16)
		WITH NOWAIT RETURN
	END
ELSE
	IF @AVISO=1
		BEGIN
		RAISERROR('ADVERTENCIA: YA EXISTE EL REGISTRO',1,16)
		WITH NOWAIT RETURN
		END
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_Tbl_AFResponsable]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_Tbl_AFResponsable]
		   @IdResponsable int,
		   @NDocIdentidad nchar(12),
		   @Nombres varchar(70),
		   @IdCargo int,
		   @Grado varchar(50),
		   @IdEmpresa int,
		   @Estado bit,
			@modo int
		   
 AS

declare @AVISO TINYINT

If @Modo = 1
	Begin 
		Insert into Tbl_AFResponsable
		  (	NDocIdentidad, Nombres,
			IdCargo,
			Grado,Idempresa,
			Estado)
		Values
		  (	@NDocIdentidad, @Nombres,
			@IdCargo,
			@Grado,@IdEmpresa,
			@Estado)

		IF @@ERROR<>0
				SET @AVISO=2	
	End

If @Modo = 2 
	Begin
		Update Tbl_AFResponsable
		Set
		  	NDocIdentidad = @NDocIdentidad,
		  	Nombres = @Nombres,
			IdCargo = @IdCargo,
			Grado = @Grado,
			IdEmpresa=@IdEmpresa,
			estado = @Estado
		Where
		IdResponsable = @IdResponsable
	End

If @Modo = 3
	Begin
	--	Delete Tbl_AFResponsable
		Update Tbl_AFResponsable set Estado = 0
		Where
		IdResponsable = @IdResponsable
	End

--Verificacion de respuesta de transaccion
IF @AVISO=2
	BEGIN
		RAISERROR('ERROR: EN EL INGRESO DE DATOS',1,16)
		WITH NOWAIT RETURN
	END
ELSE
	IF @AVISO=1
		BEGIN
		RAISERROR('ADVERTENCIA: YA EXISTE EL REGISTRO',1,16)
		WITH NOWAIT RETURN
		END
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_Tbl_AFReUbicacion]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_Tbl_AFReUbicacion]
		   @IdReUbicacion int,
			@IdActivoFijo int,
			@Fecha_Reubicacion datetime,
			@Descripcion nvarchar(250),
			@IdUbicacion int,
			@IdCentroCosto int,
			@Estado bit,
			@modo int
		   
 AS

Declare @AVISO as TINYINT

If @Modo = 1
	Begin
	Insert into Tbl_AFReUbicacion
		  ( IdActivoFijo,
			Fecha_Reubicacion, Descripcion,
			IdUbicacion, IdCentroCosto,
			Estado)
	Values
		  (	@IdActivoFijo,
			@Fecha_Reubicacion,@Descripcion,
			@IdUbicacion, @IdCentroCosto,
			@Estado)

	IF @@ERROR<>0
		SET @AVISO=2
	End
If @Modo = 2 
	Begin
	Update Tbl_AFReUbicacion
	Set
		  	IdActivoFijo=@IdActivoFijo,
			Fecha_Reubicacion=@Fecha_Reubicacion, 
			Descripcion=@Descripcion,
			IdUbicacion=@IdUbicacion, 
			IdCentroCosto=@IdCentroCosto,
			estado = @Estado
	Where
	IdReUbicacion = @IdReUbicacion
	End
If @Modo = 3
	Begin
--	Delete Tbl_AFReUbicacion
	Update Tbl_AFReUbicacion set Estado = 0
	Where
	IdReUbicacion = @IdReUbicacion
	End

IF @Modo=''
	BEGIN
		SET @AVISO=1			
	END

--Verificacion de respuesta de transaccion
IF @AVISO=2
	BEGIN
		RAISERROR('ERROR: EN EL INGRESO DE DATOS',1,16)
		WITH NOWAIT RETURN
	END
ELSE
	IF @AVISO=1
		BEGIN
		RAISERROR('ADVERTENCIA: YA EXISTE EL REGISTRO',1,16)
		WITH NOWAIT RETURN
		END
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_Tbl_AFTablas]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_Tbl_AFTablas]
		   @IdTabla int,
		   @Descripcion Varchar(100),
           @Estado bit,
		   @IDENTTABLA char(3),@IdEmpresa int, @modo int
		  
 AS

declare @AVISO TINYINT

IF @IDENTTABLA='TI' --tabla AFTipoIngreso (por compra, traslado, reparado, etc)
	BEGIN
	If @Modo = 1
		begin
		Insert into Tbl_AFTipoIngreso
			  (Descripcion, Estado)
		Values
			  (@Descripcion, @Estado)

		IF @@ERROR<>0
				SET @AVISO=2	
		End

	If @Modo = 2 
		begin
		Update Tbl_AFTipoIngreso
		Set
			   Descripcion= @Descripcion,
			   estado = @Estado
		Where
		IdTipoIngreso = @IdTabla
		End

	If @Modo = 3
		begin
		Update Tbl_AFTipoIngreso set Estado = 0
		Where
		IdTipoIngreso = @IdTabla
		End
	END

IF @IDENTTABLA='ES' --Tabla AFEstado (Activo o Retirado)
	BEGIN
	If @Modo = 1
		begin
		Insert into Tbl_AFEstado
			  (Descripcion, Estado)
		Values
			  (@Descripcion, @Estado)

		IF @@ERROR<>0
				SET @AVISO=2	
		End

	If @Modo = 2 
		begin
		Update Tbl_AFEstado
		Set
			   Descripcion= @Descripcion,
			   estado = @Estado
		Where
		IdEstado = @IdTabla
		End

	If @Modo = 3
		begin
		Update Tbl_AFEstado set Estado = 0
		Where
		IdEstado = @IdTabla
		End
	END

IF @IDENTTABLA='BAJ' --Tabla AFBaja (Desuso, Malogrado)
	BEGIN
	If @Modo = 1
		begin
		Insert into Tbl_AFBaja
			  (Descripcion, Estado)
		Values
			  (@Descripcion, @Estado)

		IF @@ERROR<>0
				SET @AVISO=2	
		End

	If @Modo = 2 
		begin
		Update Tbl_AFBaja
		Set
			   Descripcion= @Descripcion,
			   estado = @Estado
		Where
		IdBaja = @IdTabla
		End

	If @Modo = 3
		begin
		Update Tbl_AFBaja set Estado = 0
		Where
		IdBaja = @IdTabla
		End
	END
IF @IDENTTABLA='CAR' --Tabla AFCargo (Gerente, Administrador, Operaciones)
	BEGIN
	If @Modo = 1
		Begin
		Insert into Tbl_AFCargo
			  (Descripcion,
			   IdEmpresa,
			   Estado)
		Values
			  (@Descripcion,
				@IdEmpresa,
			   @Estado)

		IF @@ERROR<>0
			SET @AVISO=2
		End
	If @Modo = 2 
		Begin
		Update Tbl_AFCargo
		Set
			   Descripcion= @Descripcion,
			   IdEmpresa= @IdEmpresa,
			   estado = @Estado
		Where
		IdCargo = @IdTabla
		End
	If @Modo = 3
		Begin
		Update Tbl_AFCargo set Estado = 0
		Where
		IdCargo = @IdTabla
		End
	END
------------------
IF @IDENTTABLA='TAD' --Tabla AFTipo Adquisicion (Compra, Donacion, Prestamo)
	BEGIN
		If @Modo = 1
			Begin
			Insert into Tbl_AFTipoAdquisicion
				  (	Descripcion,
					Estado)
			Values
				  (	@Descripcion,
					@Estado)

			IF @@ERROR<>0
				SET @AVISO=2
			End
		If @Modo = 2 
			Begin
			Update Tbl_AFTipoAdquisicion
			Set
		  			Descripcion =@Descripcion,
					estado = @Estado
			Where
			IdTipoAdquisicion = @IdTabla
			End

		If @Modo = 3
			Begin
			Update Tbl_AFTipoAdquisicion set Estado = 0
			Where
			IdTipoAdquisicion = @IdTabla
		End
	END

IF @IDENTTABLA='TDE' --Tabla AFTipo Depresiacion (MAL USO,)
	BEGIN
		If @Modo = 1
			Begin
			Insert into Tbl_AFTipoDepreciacion
				  (	Descripcion,
					Estado)
			Values
				  (	@Descripcion,
					@Estado)

			IF @@ERROR<>0
				SET @AVISO=2
			End
		If @Modo = 2 
			Begin
			Update Tbl_AFTipoDepreciacion
			Set
		  			Descripcion =@Descripcion,
					estado = @Estado
			Where
			IdTipoDepreciacion = @IdTabla
			End
		If @Modo = 3
			Begin
			Update Tbl_AFTipoDepreciacion set Estado = 0
			Where
			IdTipoDepreciacion = @IdTabla
		End
	END

IF @IDENTTABLA='TMA' --Tabla AFMarca (HP, Toshiba, Dell, etc)
	BEGIN
		If @Modo = 1
			Begin
			Insert into Tbl_AFMarca
				  (	Descripcion,
					Estado)
			Values
				  (	@Descripcion,
					@Estado)

			IF @@ERROR<>0
				SET @AVISO=2
			End
		If @Modo = 2 
			Begin
			Update Tbl_AFMarca
			Set
		  			Descripcion =@Descripcion,
					estado = @Estado
			Where
			IdMarca = @IdTabla
			End

		If @Modo = 3
			Begin
			Update Tbl_AFMarca set Estado = 0
			Where
			IdMarca = @IdTabla
		End
	END

IF @IDENTTABLA='TRE' --Tabla AFReadecuacion
	BEGIN
		If @Modo = 1
			Begin
			Insert into Tbl_AFTipoReadecuacion
				  (	Descripcion,
					Estado)
			Values
				  (	@Descripcion,
					@Estado)

			IF @@ERROR<>0
				SET @AVISO=2
			End
		If @Modo = 2 
			Begin
			Update Tbl_AFTipoReadecuacion
			Set
		  			Descripcion =@Descripcion,
					estado = @Estado
			Where
			IdTipoReadecuacion = @IdTabla
			End

		If @Modo = 3
			Begin
			Update Tbl_AFTipoReadecuacion set Estado = 0
			Where
			IdTipoReadecuacion = @IdTabla
		End
	END
------------------

--Verificacion de respuesta de transaccion
IF @AVISO=2
	BEGIN
		RAISERROR('ERROR: EN EL INGRESO DE DATOS',1,16)
		WITH NOWAIT RETURN
	END
ELSE
	IF @AVISO=1
		BEGIN
		RAISERROR('ADVERTENCIA: YA EXISTE EL REGISTRO',1,16)
		WITH NOWAIT RETURN
		END
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_Tbl_AFTipoAdquisicion]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_Tbl_AFTipoAdquisicion]
		   @IdTipoAdquisicion int,
		   @Descripcion char(20),
			@Estado bit,
			@modo int
		   
 AS
If @Modo = 1
	Insert into Tbl_AFTipoAdquisicion
		  (	Descripcion,
			Estado)
	Values
		  (	@Descripcion,
			@Estado)

If @Modo = 2 

	Update Tbl_AFTipoAdquisicion
	Set
		  	Descripcion =@Descripcion,
			estado = @Estado
	Where
	IdTipoAdquisicion = @IdTipoAdquisicion

If @Modo = 3
--	Delete Tbl_AFTipoAdquisicion
	Update Tbl_AFTipoAdquisicion set Estado = 0
	Where
	IdTipoAdquisicion = @IdTipoAdquisicion
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_Tbl_AFTipoDepreciacion]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_Tbl_AFTipoDepreciacion]
		   @IdTipoDepreciacion int,
		   @Descripcion char(20),
			@Estado bit,
			@modo int
		   
 AS
If @Modo = 1
	Insert into Tbl_AFTipoDepreciacion
		  (	Descripcion,
			Estado)
	Values
		  (	@Descripcion,
			@Estado)

If @Modo = 2 

	Update Tbl_AFTipoDepreciacion
	Set
		  	Descripcion =@Descripcion,
			estado = @Estado
	Where
	IdTipoDepreciacion = @IdTipoDepreciacion

If @Modo = 3
--	Delete Tbl_AFTipoDepreciacion
	Update Tbl_AFTipoDepreciacion set Estado = 0
	Where
	IdTipoDepreciacion = @IdTipoDepreciacion
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_Tbl_AFUbicacion]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_Tbl_AFUbicacion]
		   @IdUbicacion int,
			@IdResponsable int,
			@Descripcion char(100),
			@IdEmpresa int,
			@Estado bit,
			@modo int
		   
 AS

Declare @AVISO as TINYINT

If @Modo = 1
	Begin
	Insert into Tbl_AFUbicacion
		  ( IdResponsable,
			Descripcion,
			IdEmpresa,
			Estado)
	Values
		  (	@IdResponsable,
			@Descripcion,
			@IdEmpresa,
			@Estado)

	IF @@ERROR<>0
		SET @AVISO=2
	End
If @Modo = 2 
	Begin
	Update Tbl_AFUbicacion
	Set
		  	IdResponsable=@IdResponsable,
			Descripcion=@Descripcion,
			IdEmpresa=@IdEmpresa,
			estado = @Estado
	Where
	IdUbicacion = @IdUbicacion
	End
If @Modo = 3
	Begin
--	Delete Tbl_AFUbicacion
	Update Tbl_AFUbicacion set Estado = 0
	Where
	IdUbicacion = @IdUbicacion
	End

IF @Modo=''
	BEGIN
		SET @AVISO=1			
	END

--Verificacion de respuesta de transaccion
IF @AVISO=2
	BEGIN
		RAISERROR('ERROR: EN EL INGRESO DE DATOS',1,16)
		WITH NOWAIT RETURN
	END
ELSE
	IF @AVISO=1
		BEGIN
		RAISERROR('ADVERTENCIA: YA EXISTE EL REGISTRO',1,16)
		WITH NOWAIT RETURN
		END
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_Tbl_AFUnidadMedida]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_Tbl_AFUnidadMedida]
		   @IdUnidadMedida int,
		   @Descripcion char(20),
			@Abreviatura nchar(20),
			@Estado bit,
			@modo int
		   
 AS
If @Modo = 1
	Insert into Tbl_AFUnidadMedida
		  (	Descripcion,
			Abreviatura,
			Estado)
	Values
		  (	@Descripcion,
			@Abreviatura,
			@Estado)

If @Modo = 2 

	Update Tbl_AFUnidadMedida
	Set
		  	Descripcion =@Descripcion,
			Abreviatura=@Abreviatura,
			estado = @Estado
	Where
	IdUnidadMedida = @IdUnidadMedida

If @Modo = 3
--	Delete Tbl_AFUnidadMedida
	Update Tbl_AFUnidadMedida set Estado = 0
	Where
	IdUnidadMedida = @IdUnidadMedida
/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_tbl_MaestroEstadosIntegrales]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_tbl_MaestroEstadosIntegrales]
		    @idEstadosIntegrales int,
			@Orden int,
			@rpt Varchar(11),
			@Tipo varchar(30),
			@cpto varchar(50),
			@cta varchar(2),
			@formula varchar(60),
			@ctagral varchar(2),
			@multiplica int,
			@Estado bit,
		   @modo int
 AS
 
  Declare @lcExiste int

  set @lcExiste= (select orden from tbl_MaestroEstadosIntegrales where rpt=@rpt and tipo=@tipo and cpto=@cpto and cta=@cta)
  if @lcExiste is not Null 
   Begin
      set @Modo=2
      set @orden = @lcExiste
   End

If @Modo = 1

	Insert into tbl_MaestroEstadosIntegrales
		  (orden,
           rpt,
           tipo,
           cpto,
		   cta,
		   formula, 
           ctaGral,
           multiplica,   
		   Estado)
	Values
		  (@orden,
           @rpt,
           @tipo,
           @cpto,
		   @cta,
		   @formula, 
           @ctaGral,
           @multiplica,   
		   @Estado)

If @Modo = 2 

	Update tbl_MaestroEstadosIntegrales
	Set
		  orden=@orden,
          rpt= @rpt,
          tipo= @tipo,
          cpto= @cpto,
		  cta= @cta,
		  formula= @formula, 
          ctagral= @ctaGral,
          multiplica= @multiplica,   
		  estado = @Estado
	Where
	idEstadosIntegrales=@idEstadosIntegrales --rpt=@rpt and tipo=@tipo and cpto=@cpto and cta=@cta and orden=@orden

If @Modo = 3
	Update tbl_MaestroEstadosIntegrales set Estado = 0
	Where
	idEstadosIntegrales=@idEstadosIntegrales --rpt=@rpt and tipo=@tipo and cpto=@cpto and cta=@cta and orden=@orden
/****** Object:  StoredProcedure [dbo].[spp_mantenimiento_tbl_Tipo_Empresa]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque

CREATE PROCEDURE [dbo].[spp_mantenimiento_tbl_Tipo_Empresa]
	@Codigo_Tipo_Empresa int,
	@Descripcion char(30),
	@Estado int, 
	@Modo int -- 1 Insert, 2 Update, 3 Delete
AS
BEGIN
	SET NOCOUNT ON;

	If @Modo = 1  -- Insert
	Insert Into tbl_Tipo_Empresa
		(Descripcion, estado)
		values
		(@Descripcion, @estado)
	If @Modo = 2 -- Update
		Update tbl_Tipo_Empresa
		set
		Descripcion = @Descripcion
		Where Codigo_Tipo_Empresa = @Codigo_Tipo_Empresa
	If @Modo = 3 -- delete cambio de estado
		Update tbl_Tipo_Empresa
		set
		estado = 0
		Where Codigo_Tipo_Empresa = @Codigo_Tipo_Empresa
END



/****** Object:  StoredProcedure [dbo].[spp_Mantenimiento_tbl_UtilidadImpuesto]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Mantenimiento_tbl_UtilidadImpuesto]
		   @idUtilidadImpuesto int,
			@codzona char(10),
			@codUnidad char(10),
			@Mes1 char(2),
			@Mes2 char(2),
			@Anio char(4),
			@UtilidadContable numeric(18, 2),
			@Reparo numeric(18, 2),
			@PorParticipa char(3),
			@MontoParticipa numeric(18, 2),
			@PorRenta char(3),
			@MontoRenta numeric(18, 2),
			@TotalRenta numeric(18, 2),
			@TotalUNeta numeric(18, 2),
			@TotalUtilidad numeric(18, 2),
		   @Estado bit,
		   @modo int
 AS
 
  Declare @lcExiste int

  set @lcExiste= (select idutilidadimpuesto from tbl_UtilidadImpuesto where codzona=@codzona and codUnidad=@codUnidad and Mes1=@Mes1 and Mes2=@Mes2 and Anio=@Anio)
  if @lcExiste is not Null 
   Begin
      set @Modo=2
      set @idUtilidadImpuesto = @lcExiste
   End

If @Modo = 1

	Insert into tbl_UtilidadImpuesto
		  (codzona,
           codUnidad,
           Mes1,
           Mes2,
		   Anio,
		   UtilidadContable, 
           Reparo,
           PorParticipa,
           MontoParticipa,  
           PorRenta,
           MontoRenta,
           TotalRenta,   
           TotalUNeta,   
           TotalUtilidad,   
		   Estado)
	Values
		  (@codzona,
           @codUnidad,
           @Mes1,
           @Mes2,
		   @Anio,
		   @UtilidadContable, 
           @Reparo,
           @PorParticipa,
           @MontoParticipa,  
           @PorRenta,
           @MontoRenta,
           @TotalRenta,   
           @TotalUNeta,   
           @TotalUtilidad,   
		   @Estado)

If @Modo = 2 

	Update tbl_UtilidadImpuesto
	Set
		  codzona=@codzona,
           codUnidad=@codUnidad,
           Mes1=@Mes1,
           Mes2=@Mes2,
		   Anio=@Anio,
		   UtilidadContable=@UtilidadContable, 
           Reparo=@Reparo,
           PorParticipa=@PorParticipa,
           MontoParticipa=@MontoParticipa,  
           PorRenta=@PorRenta,
           MontoRenta=@MontoRenta,
           TotalRenta=@TotalRenta,   
           TotalUNeta=@TotalUNeta,   
           TotalUtilidad=@TotalUtilidad,   
           estado = @Estado
	Where
	idUtilidadImpuesto = @idUtilidadImpuesto

If @Modo = 3
--	Delete tbl_UtilidadImpuesto
	Update tbl_UtilidadImpuesto set Estado = 0
	Where
	idUtilidadImpuesto = @idUtilidadImpuesto
/****** Object:  StoredProcedure [dbo].[spp_MigrarCobranzaISCOM]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_MigrarCobranzaISCOM]
@zonaA varchar(6),
--@zonaB varchar(6),
@CodUnidadA varchar(10),
--@CodUnidadB varchar(10),
@MesA char(2),
--@MesB char(2),
@Anio1 char(4),
@IdEmpresa int,
@CodMGC as char(2),
@Tipo as char(10),
@RucCaja as char(20),
@NroCap as char(2)
as

-- exec spp_MigrarCobranzaISCOM '000012','000012','07','2019',5,'31','TIPO1','20100030595','22'

-- creando cabecera de Tbl_MovimientoCajaC
DECLARE @CorreCont CHAR(10),@Valor	char(5),@CorreContAnual CHAR(10),@ValorAnual char(5), @idMovimientoCajaC char(10)
	set @CorreCont=dbo.CorrelativoMes(@zonaA ,@CodUnidadA,@CodMGC, @Anio1 ,@MesA )
	set @CorreContAnual=dbo.CorrelativoMes(@zonaA ,@CodUnidadA,@CodMGC ,@Anio1 ,'AN' )

	set @Valor=right(@CorreCont,5)
	set @ValorAnual=right(@CorreContAnual,5)

	EXEC cont_ActualizaCorrelaGrupoContable @Valor,@zonaA,@CodUnidadA,@CodMGC,@Anio1 ,@MesA
	EXEC cont_ActualizaCorrelaGrupoContable @ValorAnual,@zonaA,@CodUnidadA,@CodMGC,@Anio1 ,'AN' --

If left(@Tipo,5)='TIPO1'
Begin
	-- insertando cabecera
	INSERT INTO tbl_MovimientoCajaC
	select	@Anio1,@MesA,@zonaA,@CodUnidadA,@CorreCont,Fecha_registro,@CodMGC,(Case When @Tipo='TIPO1' Then 'INGRESOS DIARIOS ' Else 'COBRANZA COMERCIAL ' End)+'DEL '+upper(convert(varchar(12),fecha_registro,113))+' DE '+ max(banco),
			@RucCaja,'','',@NroCap,sum(importe_debe),'',right(@CorreContAnual,5),'',''
	from tmpExportaVentasCob1a where cuenta_contable<>''
	group by Fecha_registro

	-- Fin Cabecera

	--Creando Detalle de Tbl_MovimientoCajaD
	-----------------------------------------------TOMANDO CORRELATIVO
	print @CorreCont
	print @CodUnidadA
	set @idMovimientoCajaC=(select max(idMovimientoCajaC) from tbl_MovimientoCajaC where NroDoc=@CorreCont and CodUnidadEconomica=@CodUnidadA)
	
	INSERT INTO tbl_MovimientoCajaD
	select @IdMovimientoCajaC,@CodUnidadA,@CorreCont,Fecha_Registro,'001',Proveedor,
						detalle_venta,FlujoEfectivo=(Case When left(cuenta_contable,3)='104' Then 'O101' Else '' End),Tipo_documento,Nro_Documento,Fecha_Documento,Fecha_Documento,
						CodigoCtaBancaria='',CodCuenta=ltrim(rtrim(cuenta_contable+cuenta_abono)),Importe_Debe,Importe_Haber,NroOperacion='-',NroCheque='-',Estado='',reparo='',
						TipoDoc='',TipoOper='0',MontoIgv=0,MontoIsc=0,MontoRetencion4=0,RIgv=0,Afecto='0',CostearIgv='0',Direccion=''
	from tmpExportaVentasCob1a
	--order by adicional2,cuenta_abono
End
-- fin Detalle

/****** Object:  StoredProcedure [dbo].[spp_MigrarCobranzaISCOM0]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_MigrarCobranzaISCOM0]
@zonaA varchar(6),
@CodUnidadA varchar(10),
@MesA char(2),
@Anio1 char(4),
@IdEmpresa int,
@CodMGC as char(2),
@Tipo as char(10),
@NewNroDoc as char(20),@fechaFac0 as varchar(10)

as

-- exec spp_MigrarCobranzaISCOM0 '000012','000012','02','2020',5,'31','TIPO1','0001-ENERO2020','30/01/2020'

-- Creando Tablas Temporales
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpNroDoc') AND type in (N'U'))
BEGIN 
	drop table tmpNroDoc 
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tempito') AND type in (N'U'))
BEGIN 
	drop table tempito 
END

Create Table tmpNroDoc([NroDoc] [varchar](20) NULL,[Banco] [varchar](10) NULL) ON [PRIMARY]

CREATE TABLE [dbo].[tempito]([GRUPO] [varchar](2) NULL, [ZONA] [nvarchar](255) NULL,[UNIDAD_ECONOMICA] [nvarchar](255) NULL, [AÑO] [float] NULL,
		[MES] [nvarchar](255) NULL, [FECHA_REGISTRO] [datetime] NULL,[CUENTA_CONTABLE] [varchar](7) NULL, [CUENTA_ABONO] [varchar](10) NULL,
		[AUTOMATICO] [varchar](1) NULL, [PROVEEDOR] [varchar](14) NULL,[Razon_Social] [varchar](100) NULL, [Direccion] [varchar](100) NULL,
		[TIPO_DOCUMENTO] [varchar](2) NULL, [NRO_DOCUMENTO] [nvarchar](255) NULL,[NRO_DOCUMENTO2] [nvarchar](255) NULL, [FECHA_DOCUMENTO] [datetime] NULL,
		[DETALLE_VENTA] [nvarchar](300) NULL, [TIPO_MONEDA] [int] NULL,[TIPO_CAMBIO] [int] NULL, [TIPO_OPERACION] [int] NULL,
		[IMPORTE_DEBE] [decimal](21, 2) NULL, [IMPORTE_HABER] [decimal](21, 2) NULL,[AFECTO] [int] NULL, [MONTO_IGV] [int] NULL, [ISC] [int] NULL, [MONTO_ISC] [int] NULL,
		[CANCELADO] [int] NULL, [PERCEPCION] [int] NULL,[MONTO_PERCEPCION] [int] NULL, [fechanc] [datetime] NULL,[tipo_docnc] [varchar](1) NULL, [nro_docnc] [varchar](1) NULL,
		[voucher] [bigint] NULL, [glosa] [nvarchar](300) NULL,[ccosto] [varchar](1) NULL, [fefec] [varchar](1) NULL,[Banco] [varchar](30) NULL
	) ON [PRIMARY]
-- Fin Creando Tables Temporales

Declare @FechaFac as datetime, @RucCaja as char(20),@NroCap as char(2)

set @FechaFac= convert(datetime,@fechaFac0,103)

	select @RucCaja=c.RUC,@NroCap=e.cap from exportaventasCOB e inner join (select codigo Cap,ruc_Cpto Ruc,Descripcion RazonSocial from tbl_CapCptoComercial where Tipo='CAP' and Estado=1) c on rtrim(e.cap)=rtrim(c.cap) where tipo='DE'
	group by e.cap,c.RUC

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaVentasCob0') AND type in (N'U'))
BEGIN 
	drop table tmpExportaVentasCob0 
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaVentasCob1') AND type in (N'U'))
BEGIN 
	drop table tmpExportaVentasCob1 
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaVentasCob2') AND type in (N'U'))
BEGIN 
	drop table tmpExportaVentasCob2 
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaVentasCob3') AND type in (N'U'))
BEGIN 
	drop table tmpExportaVentasCob3 
End 


-- REGVTA
-- registro provision de ventas de Comprobantes de Pago
select *, Adicional2=ROW_NUMBER() OVER(ORDER BY zona,nro_Documento,CUENTA_ABONO),Adicional3='' 
into tmpExportaVentasCob0
from (
select GRUPO='18', ZONA=@zonaA,UNIDAD_ECONOMICA=@zonaA,AÑO=year(fechap),MES=@MesA,
	FECHA_REGISTRO=fechap, CUENTA_CONTABLE= '1212102',
	CUENTA_ABONO='',
	AUTOMATICO='N', PROVEEDOR= rtrim(ruc),Razon_Social= rtrim(nombres),Direccion='',
	TIPO_DOCUMENTO=(Case When Comprob='BV' Then '03' Else (Case When Comprob='FA' Then '01' Else (Case When Comprob='NC' Then '07' Else '08' End)End)End), 
	NRO_DOCUMENTO=rtrim(sercomprob)+'-'+dbo.PADL(rtrim(nrocomprob),9,'0'),NRO_DOCUMENTO2=left(comprob,1)+rtrim(sercomprob)+'-'+dbo.PADL(rtrim(nrocomprob),9,'0'),
	FECHA_DOCUMENTO=fechacomp, DETALLE_VENTA='COMPROBANTE DE VENTA - '+upper(convert(varchar(12),fechacomp,113))+' **',TIPO_MONEDA=1,TIPO_CAMBIO=0,
	TIPO_OPERACION=0,IMPORTE_DEBE=total,IMPORTE_HABER=0,AFECTO=0,MONTO_IGV=0,ISC=0,MONTO_ISC=0,CANCELADO=0,PERCEPCION=0,MONTO_PERCEPCION=0,
	fechanc=convert(datetime,'01/01/1900',103),tipo_docnc='',nro_docnc='',voucher=ROW_NUMBER() OVER(ORDER BY nrocomprob),glosa='INGRESOS DIARIOS DEL '+upper(convert(varchar(12),fechacomp,113))+' **',
	ccosto='', fefec=''
	from exportaventas
	where ruc <> 'NULL'
union all
select GRUPO='18', ZONA=@zonaA,UNIDAD_ECONOMICA=@zonaA,AÑO=year(fechap),MES=@MesA,
	FECHA_REGISTRO=fechap, CUENTA_CONTABLE='',
	CUENTA_ABONO= (Case When Rtrim(upper(Detalle))='INSTALACION NUEVA' Then '7032111' Else 
						(Case When Rtrim(upper(Detalle))='REINSTALAR SUMINISTR' or Rtrim(upper(Detalle))='CORTE DEFINIT/TEMPOR' Then '7032112' Else     
						(Case When Rtrim(upper(Detalle))='SERVICIOS VARIOS' Then '7012100' Else 
						(Case When Rtrim(upper(Detalle))='SERVICIO EXTRAORDINA' Then '7032118' Else 
						(Case When Rtrim(upper(Detalle))='REUBICAR SUMINISTRO' Then '7032113' Else 
						(Case When Rtrim(upper(Detalle))='OTROS SERVICIOS VARIOS' Then '7032120' Else 
						(Case When Rtrim(upper(Detalle))='FISE' Then '7032110' Else 
						(Case When Rtrim(upper(Detalle))='ALQUILER DE POSTE' Then '7032116' Else 
						(Case When Rtrim(upper(Detalle))='RECUPERO DE ENERGÍA' Then '7032105' Else '' End) End) End) End) End) End)End)End)End),
	 AUTOMATICO='N', PROVEEDOR= rtrim(ruc),Razon_Social= rtrim(nombres),Direccion='',
	TIPO_DOCUMENTO=(Case When Comprob='BV' Then '03' Else (Case When Comprob='FA' Then '01' Else (Case When Comprob='NC' Then '07' Else '08' End)End)End), 
	NRO_DOCUMENTO=rtrim(sercomprob)+'-'+dbo.PADL(rtrim(nrocomprob),9,'0'),NRO_DOCUMENTO2=rtrim(sercomprob)+'-'+dbo.PADL(rtrim(nrocomprob),9,'0'),
	FECHA_DOCUMENTO=fechacomp, DETALLE_VENTA='COMPROBANTE DE VENTA - '+upper(convert(varchar(12),fechacomp,113))+' **',TIPO_MONEDA=1,TIPO_CAMBIO=0,
	TIPO_OPERACION=0,IMPORTE_DEBE=0,IMPORTE_HABER=total,AFECTO=0,MONTO_IGV=0,ISC=0,MONTO_ISC=0,CANCELADO=0,PERCEPCION=0,MONTO_PERCEPCION=0,
	fechanc=convert(datetime,'01/01/1900',103),tipo_docnc='',nro_docnc='',voucher=ROW_NUMBER() OVER(ORDER BY nrocomprob),glosa='INGRESOS DIARIOS DEL '+upper(convert(varchar(12),fechacomp,113))+' **',
	ccosto='', fefec=''
	from exportaventas
	where ruc <> 'NULL'
) Todos order by voucher,CUENTA_ABONO

update tmpExportaVentasCob0 set voucher=1

-- Fin REGVTA

declare @montomax as decimal(18,2),@SumaBoletas as decimal(18,2),@SumaBoletasMenor1 as decimal(18,2),@TipoBanco as varchar(30), 
@ConEECC as int, @NroBancos as int,@totalDeposito as decimal(18,2)

select @ConEECC= count(montoc) from exportaventasCOB where nrodoc like '%EECC%' 
select @NroBancos= count(banco) from (select count(banco) banco from exportaventasCOB where nrodoc <>'' group by Banco )bb group by banco

select @montomax= montoc,@totalDeposito=TotalD from exportaventasCOB where DESCRIP='FACTURAS/BOLETAS'
--select @SumaBoletas= max(total) from (select total=sum(montoc) from exportaventasCOB where tipo='DE' and left(nrodoc,4)<>'EECC' group by CAP,nrodoc) aa
Select @SumaBoletas=max(montoc), @TipoBanco=max(tipoBanco) from (
		--select total=sum(montoc), TipoBanco=max(tipoBanco) from (
			select *,TipoBanco= (Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
					(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
					(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
					(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
					(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
					(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
					(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
					(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
					'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)
			from exportaventasCOB where tipo='DE' and left(nrodoc,4)<>'EECC' 
			And banco like '%'+(select banco from exportaventascobB)+'%'
		--) buscar 
		--group by CAP,nrodoc
	) aa
select @SumaBoletasMenor1= sum(montoc) from exportaventasCOBB where tipo='DE' and left(nrodoc,4)<>'EECC' group by CAP,nrodoc
--print '@montomax ' + str(@montomax)
--print '@SumaBoletas '+str(@SumaBoletas)
--print '@SumaBoletasMenor1 ' + str(@SumaBoletasMenor1) 
--print '@TipoBanco ' + @TipoBanco
---- si @SumaBoletas= 0 y @TipoBanco esta en blanco tonces 
if isnull(@SumaBoletas,0)<>0 and isnull(@TipoBanco,'')<>''
Begin 
--print 'hola1'
	insert into tempito
	select top 1 GRUPO='31', ZONA=@zonaA,UNIDAD_ECONOMICA=@zonaA,AÑO=year(fechai),MES=@MesA,
		FECHA_REGISTRO=fechai, CUENTA_CONTABLE=(Case When left(e.nrodoc,2)='EE' Then '4699110' else 
		(Case When Rtrim(upper(descrip)) like '%PIURA%' Then '1041103' Else 
		(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then '1041103' Else 
		(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then '1041101' Else     
		(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then '1041109' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then '1041102' Else 
		(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then '1041104' Else 
		(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then '1041106' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then '1010101' Else 
		'1041105' End)End)End)End)End)End)End)End)End),
		CUENTA_ABONO= '', AUTOMATICO='N', PROVEEDOR= rtrim(c.ruc),Razon_Social= rtrim(c.RazonSocial),Direccion='',
		TIPO_DOCUMENTO='00', 
		NRO_DOCUMENTO=(Case When left(e.nrodoc,2) in ('EE','DE') Then e.NRODOC Else (Case When Charindex('-',e.nrodoc,1)=4 Then '0'+left(e.nrodoc,4)+'0'+substring(e.nrodoc,5,8) 
		Else  (Case When Charindex('-',e.nrodoc,1)=9 Then left(e.nrodoc,4)+'-'+substring(e.nrodoc,4,9)
				Else (Case When len(rtrim(e.nrodoc))<8 Then 'DEPO-'+dbo.padl(rtrim(e.nrodoc),9,'0') Else rtrim(e.nrodoc) End) End) End) End),
		NRO_DOCUMENTO2=(Case When left(e.nrodoc,2) in ('EE','DE') Then e.NRODOC Else (Case When Charindex('-',e.nrodoc,1)=4 Then '0'+left(e.nrodoc,4)+'0'+substring(e.nrodoc,5,8) 
		Else  (Case When Charindex('-',e.nrodoc,1)=9 Then left(e.nrodoc,4)+'-'+substring(e.nrodoc,4,9)
				Else (Case When len(rtrim(e.nrodoc))<8 Then 'DEPO-'+dbo.padl(rtrim(e.nrodoc),9,'0') Else rtrim(e.nrodoc) End) End) End) End),
		FECHA_DOCUMENTO=e.FECHADOC, 
		DETALLE_VENTA=(Case When left(e.nrodoc,2)='EE' Then 'PAGO DEL DOCUMENTO ** '+RTRIM(e.NRODOC)+' **' Else 'INGRESOS DIARIOS DEL '+upper(convert(varchar(12),e.fechadoc,113))+' ** DE '+
		(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
		(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
		(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
		(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
		(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
		'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)End),
		TIPO_MONEDA=0,TIPO_CAMBIO=0,
		TIPO_OPERACION=1,IMPORTE_DEBE=@SumaBoletas+ISNULL(@SumaBoletasMenor1,0)*0,IMPORTE_HABER=0,AFECTO=0,MONTO_IGV=0,ISC=0,MONTO_ISC=0,CANCELADO=0,PERCEPCION=0,MONTO_PERCEPCION=0,
		fechanc=convert(datetime,'01/01/1900',103),tipo_docnc='',nro_docnc='',voucher=ROW_NUMBER() OVER(ORDER BY nroDOC),
		glosa=(Case When left(e.nrodoc,2)='EE' Then 'DEPOSITO POR IDENTIFICAR ** '+RTRIM(e.NRODOC)+' **' Else 'INGRESOS DIARIOS DEL '+upper(convert(varchar(12),e.fechai,113))+' ** DE '+
		(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
		(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
		(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
		(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
		(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
		'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)End),
		ccosto='', fefec='',
		Banco=(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
		(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
		(Case When Rtrim(upper(Descrip)) like '%NACION%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(Descrip)) like '%BN DEP%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
		(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
		(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
		'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)End)End)
	from exportaventasCOBA e inner join (select codigo Cap,ruc_Cpto Ruc,Descripcion RazonSocial from tbl_CapCptoComercial where Tipo='CAP' and Estado=1) c on rtrim(e.cap)=rtrim(c.cap) where tipo='DE' and left(e.NRODOC,4)<>'EECC'
			And banco like '%'+(select banco from exportaventascobB)+'%'
	order by e.MONTOC desc

--creando nrodoc en el temporal
	insert into tmpNroDoc
	select top 1 nrodoc,Banco from exportaventasCOBA 
							where tipo='DE' and left(NRODOC,4)<>'EECC'
									And banco like '%'+(select banco from exportaventascobB)+'%'
							order by MONTOC desc

End

if isnull(@SumaBoletas,0)=0 and isnull(@TipoBanco,'')=''
Begin 
	--print 'new2'
		select @SumaBoletas= montoc, @TipoBanco= (Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
							(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
							(Case When Rtrim(upper(Descrip)) like '%NACION%' Then 'BANCO DE LA NACION' Else     
							(Case When Rtrim(upper(Descrip)) like '%BN DEP%' Then 'BANCO DE LA NACION' Else     
							(Case When Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
							(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
							(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
							(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
							(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
							(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
							'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)End)End)
		from (
				select * from exportaventasCOB where tipo='DE' and left(nrodoc,4)<>'EECC' 
			) aaa where not montoc< (select max(montoc) from (select * from exportaventasCOB where tipo='DE' and left(nrodoc,4)<>'EECC') aa)

--print '2. @SumaBoletas '+str(@SumaBoletas)
--print '2. @TipoBanco ' + @TipoBanco

	--Select @SumaBoletas=max(montoc), @TipoBanco=max(tipoBanco) from (
	--	--select total=sum(montoc), TipoBanco=max(tipoBanco) from (
	--		select *,TipoBanco= (Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else (Case When Rtrim(upper(Descrip)) like '%NACION%' Then 'BANCO DE LA NACION' Else     
	--				(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else (Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
	--				(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 'BANCO CONTINENTAL' End)End)End)End)End)
	--		from exportaventasCOB where tipo='DE' and left(nrodoc,4)<>'EECC' 
	--	--) buscar 
	--	--group by CAP,nrodoc
	--) aa
-- seleccionando solo el 1er registro 
	insert into tempito
	select top 1 GRUPO='31', ZONA=@zonaA,UNIDAD_ECONOMICA=@zonaA,AÑO=year(fechai),MES=@MesA,
		FECHA_REGISTRO=fechai, CUENTA_CONTABLE=(Case When left(e.nrodoc,2)='EE' Then '4699110' else 
		(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then '1041103' Else 
		(Case When Rtrim(upper(descrip)) like '%PIURA%' Then '1041103' Else 
		(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then '1041101' Else     
		(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then '1041102' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then '1041109' Else 
		(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then '1041108' Else 
		(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then '1041106' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then '1010101' Else 
		'1041105' End)End)End)End)End)End)End)End)End),
		CUENTA_ABONO= '', AUTOMATICO='N', PROVEEDOR= rtrim(c.ruc),Razon_Social= rtrim(c.RazonSocial),Direccion='',
		TIPO_DOCUMENTO='00', 
		NRO_DOCUMENTO=(Case When left(e.nrodoc,2) in ('EE','DE') Then e.NRODOC Else (Case When Charindex('-',e.nrodoc,1)=4 Then '0'+left(e.nrodoc,4)+'0'+substring(e.nrodoc,5,8) 
		Else  (Case When Charindex('-',e.nrodoc,1)=9 Then left(e.nrodoc,4)+'-'+substring(e.nrodoc,4,9)
				Else (Case When len(rtrim(e.nrodoc))<9 Then 'DEPO-'+dbo.padl(rtrim(e.nrodoc),9,'0') Else rtrim(e.nrodoc) End) End) End) End),
		NRO_DOCUMENTO2=(Case When left(e.nrodoc,2) in ('EE','DE') Then e.NRODOC Else (Case When Charindex('-',e.nrodoc,1)=4 Then '0'+left(e.nrodoc,4)+'0'+substring(e.nrodoc,5,8) 
		Else  (Case When Charindex('-',e.nrodoc,1)=9 Then left(e.nrodoc,4)+'-'+substring(e.nrodoc,4,9)
				Else (Case When len(rtrim(e.nrodoc))<9 Then 'DEPO-'+dbo.padl(rtrim(e.nrodoc),9,'0') Else rtrim(e.nrodoc) End) End) End) End),
		FECHA_DOCUMENTO=e.FECHADOC, 
		DETALLE_VENTA=(Case When left(e.nrodoc,2)='EE' Then 'PAGO DEL DOCUMENTO ** '+RTRIM(e.NRODOC)+' **' Else 'INGRESOS DIARIOS DEL '+upper(convert(varchar(12),e.fechadoc,113))+' ** DE '+
		(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
		(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
		(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
		(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
		(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
		'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)End),
		TIPO_MONEDA=0,TIPO_CAMBIO=0,
		TIPO_OPERACION=1,IMPORTE_DEBE=@SumaBoletas+ISNULL(@SumaBoletasMenor1,0)*0,IMPORTE_HABER=0,AFECTO=0,MONTO_IGV=0,ISC=0,MONTO_ISC=0,CANCELADO=0,PERCEPCION=0,MONTO_PERCEPCION=0,
		fechanc=convert(datetime,'01/01/1900',103),tipo_docnc='',nro_docnc='',voucher=ROW_NUMBER() OVER(ORDER BY nroDOC),
		glosa=(Case When left(e.nrodoc,2)='EE' Then 'DEPOSITO POR IDENTIFICAR ** '+RTRIM(e.NRODOC)+' **' Else 'INGRESOS DIARIOS DEL '+upper(convert(varchar(12),e.fechai,113))+' ** DE '+
		(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
		(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
		(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
		(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
		(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
		'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)End),
		ccosto='', fefec='',
		Banco=(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
		(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
		(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
		(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
		(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
		'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)
	from exportaventasCOBA e inner join (select codigo Cap,ruc_Cpto Ruc,Descripcion RazonSocial from tbl_CapCptoComercial where Tipo='CAP' and Estado=1) c on rtrim(e.cap)=rtrim(c.cap) where tipo='DE' and left(e.NRODOC,4)<>'EECC'
	order by e.MONTOC desc
	--print 'new3'
--creando nrodoc en el temporal
	insert into tmpNroDoc
	select top 1 nrodoc,Banco from exportaventasCOBA 
							where tipo='DE' and left(NRODOC,4)<>'EECC'
--									And banco like '%'+(select banco from exportaventascobB)+'%'
							order by MONTOC desc

End

-- REGCJA
-- registro en caja liquidacion de cobranzas

Select *,Adicional2=voucher into tmpExportaVentasCob1 
from (
select GRUPO='31', ZONA=@zonaA,UNIDAD_ECONOMICA=@zonaA,AÑO=year(fechai),MES=@MesA,
	FECHA_REGISTRO=fechai, CUENTA_CONTABLE=(Case When left(e.nrodoc,2)='EE' Then '4699110' else 
	(Case When Rtrim(upper(descrip)) like '%PIURA%' Then '1041103' Else 
	(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then '1041103' Else 
	(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then '1041101' Else     
	(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then '1041102' Else 
	(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then '1041109' Else 
	(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then '1041108' Else 
	(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then '1041106' Else 
	(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then '1010101' Else 
	'1041105' End)End)End)End)End)End)End)End)End),
	CUENTA_ABONO= '', AUTOMATICO='N', 
	PROVEEDOR= (Case When Rtrim(upper(descrip)) like '%PIURA%' Then '20113604248' Else 
	(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then '20382036655' Else 
	(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then '20100030595' Else     
	(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then '20104139311' Else 
	(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then '20103845328' Else 
	(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then '20100047218' Else 
	(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then '20130200789' Else 
	(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then '000000101' Else 
	'20100130204' End)End)End)End)End)End)End)End),
	Razon_Social= '',Direccion='',
	TIPO_DOCUMENTO='00', 
	NRO_DOCUMENTO=(Case When left(e.nrodoc,2) in ('EE','DE') Then e.NRODOC Else (Case When Charindex('-',e.nrodoc,1)=4 Then '0'+left(e.nrodoc,4)+'0'+substring(e.nrodoc,5,8) 
		Else  (Case When Charindex('-',e.nrodoc,1)=9 Then left(e.nrodoc,4)+'-'+substring(e.nrodoc,4,9)
				Else (Case When len(rtrim(e.nrodoc))<9 Then 'DEPO-'+dbo.padl(rtrim(e.nrodoc),9,'0') Else rtrim(e.nrodoc) End) End) End) End),
	NRO_DOCUMENTO2=(Case When left(e.nrodoc,2) in ('EE','DE') Then e.NRODOC Else (Case When Charindex('-',e.nrodoc,1)=4 Then '0'+left(e.nrodoc,4)+'0'+substring(e.nrodoc,5,8) 
		Else  (Case When Charindex('-',e.nrodoc,1)=9 Then left(e.nrodoc,4)+'-'+substring(e.nrodoc,4,9)
				Else (Case When len(rtrim(e.nrodoc))<9 Then 'DEPO-'+dbo.padl(rtrim(e.nrodoc),9,'0') Else rtrim(e.nrodoc) End) End) End) End),
	FECHA_DOCUMENTO=e.FECHADOC, 
	DETALLE_VENTA=(Case When left(e.nrodoc,2)='EE' Then 'PAGO DEL DOCUMENTO ** '+RTRIM(e.NRODOC)+' **' Else 'INGRESOS DIARIOS DEL '+upper(convert(varchar(12),e.fechai,113))+' ** DE '+
	(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
	(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
	(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
	(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
	(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
	(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
	(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
	(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
	'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)End),
	TIPO_MONEDA=0,TIPO_CAMBIO=0,
	TIPO_OPERACION=1,IMPORTE_DEBE=MONTOC,IMPORTE_HABER=0,AFECTO=0,MONTO_IGV=0,ISC=0,MONTO_ISC=0,CANCELADO=0,PERCEPCION=0,MONTO_PERCEPCION=0,
	fechanc=convert(datetime,'01/01/1900',103),tipo_docnc='',nro_docnc='',voucher=ROW_NUMBER() OVER(ORDER BY nroDOC),
	glosa=(Case When left(e.nrodoc,2)='EE' Then 'DEPOSITO POR IDENTIFICAR ** '+RTRIM(e.NRODOC)+' **' Else 'INGRESOS DIARIOS DEL '+upper(convert(varchar(12),e.fechai,113))+' ** DE '+
	(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
	(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
	(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
	(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
	(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
	(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
	(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
	(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
	'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)End),
	ccosto='', fefec='',
	Banco=(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
	(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
	(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
	(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
	(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
	(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
	(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
	(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
	'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)
	from exportaventasCOBA e inner join (select codigo Cap,ruc_Cpto Ruc,Descripcion RazonSocial from tbl_CapCptoComercial where Tipo='CAP' and Estado=1) c on rtrim(e.cap)=rtrim(c.cap) where tipo='DE'
	and left(e.nrodoc,4)='EECC'

union all
select GRUPO='31', ZONA=@zonaA,UNIDAD_ECONOMICA=@zonaA,AÑO=year(fechai),MES=@MesA,
	FECHA_REGISTRO=fechai, CUENTA_CONTABLE='',
	CUENTA_ABONO= '1212101', AUTOMATICO='N', 
	PROVEEDOR= '99999999997',
	Razon_Social= '',Direccion='',
	TIPO_DOCUMENTO='14', NRO_DOCUMENTO='S001-'+substring(@NewNroDoc,6,9), --@NewNroDoc,
	NRO_DOCUMENTO2='S001-'+substring(@NewNroDoc,6,9),FECHA_DOCUMENTO=@fechaFac, 
	DETALLE_VENTA=(Case When left(e.nrodoc,2)='EE' Then 'PAGO DEL DOCUMENTO ** '+@NewNroDoc+' **' Else 'INGRESOS DIARIOS DEL '+upper(convert(varchar(12),e.fechai,113))+' ** DE '+
	(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
	(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
	(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
	(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
	(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
	(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
	(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
	(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
	'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)End),
	TIPO_MONEDA=0,TIPO_CAMBIO=0,
	TIPO_OPERACION=1,IMPORTE_DEBE=0,IMPORTE_HABER=MONTOC,AFECTO=0,MONTO_IGV=0,ISC=0,MONTO_ISC=0,CANCELADO=0,PERCEPCION=0,MONTO_PERCEPCION=0,
	fechanc=convert(datetime,'01/01/1900',103),tipo_docnc='',nro_docnc='',voucher=ROW_NUMBER() OVER(ORDER BY nroDOC),
	glosa=(Case When left(e.nrodoc,2)='EE' Then 'PAGO DEL DOCUMENTO ** '+@NewNroDoc+' **' Else 'INGRESOS DIARIOS DEL '+upper(convert(varchar(12),e.fechai,113))+' ** DE '+
	(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
	(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
	(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
	(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
	(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
	(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
	(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
	(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
	'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)End),
	ccosto='', fefec='',
	Banco=(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
	(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
	(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
	(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
	(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
	(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
	(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
	(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
	'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)
	from exportaventasCOBA e inner join (select codigo Cap,ruc_Cpto Ruc,Descripcion RazonSocial from tbl_CapCptoComercial where Tipo='CAP' and Estado=1) c on rtrim(e.cap)=rtrim(c.cap) where tipo='DE'
	and left(e.nrodoc,4)='EECC'
) primero	
Order by NRO_DOCUMENTO,CUENTA_ABONO
--print 'new4'
update tmpExportaVentasCob1 set voucher=1
--print 'new5'
-- Fin REGCJA

select * into tmpExportaVentasCob2a from (
	select * from tempito
	) todos 
	union all --Agregando los valores <0.1 positivo o negativo
select * from (
	select top 1 GRUPO='31', ZONA=@zonaA,UNIDAD_ECONOMICA=@zonaA,AÑO=year(fechai),MES=@MesA,
		FECHA_REGISTRO=fechai, CUENTA_CONTABLE=(Case When e.MONTOC<0 Then '7760102' else '' End),
		CUENTA_ABONO= (Case When e.MONTOC<0 Then '' else '4212101' End), AUTOMATICO='N', PROVEEDOR= rtrim(c.ruc),Razon_Social= rtrim(c.RazonSocial),Direccion='',
		TIPO_DOCUMENTO='00', NRO_DOCUMENTO=(Case When left(e.nrodoc,2)='EE' Then e.NRODOC Else (Case When left(e.nrodoc,2)='DE' Then rtrim(e.nrodoc) Else 'DEPO-'+dbo.padl(rtrim(e.nrodoc),9,'0') End) End),
		NRO_DOCUMENTO2=(Case When left(e.nrodoc,2)='EE' Then e.NRODOC Else (Case When left(e.nrodoc,2)='DE' Then rtrim(e.nrodoc) Else 'DEPO-'+dbo.padl(rtrim(e.nrodoc),9,'0') End) End),FECHA_DOCUMENTO=e.FECHADOC, 
		DETALLE_VENTA=(Case When left(e.nrodoc,2)='EE' Then 'PAGO DEL DOCUMENTO ** '+RTRIM(e.NRODOC)+' **' Else 'INGRESOS DIARIOS DEL '+upper(convert(varchar(12),e.fechadoc,113))+' ** DE '+
		(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
		(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
		(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
		(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
		(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
		'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)End),
		TIPO_MONEDA=0,TIPO_CAMBIO=0,
		TIPO_OPERACION=1,IMPORTE_DEBE=(Case When e.MONTOC<0 Then 0 else abs(MONTOC) End),IMPORTE_HABER=(Case When e.MONTOC<0 Then abs(MONTOC) else 0 End),AFECTO=0,MONTO_IGV=0,ISC=0,MONTO_ISC=0,CANCELADO=0,PERCEPCION=0,MONTO_PERCEPCION=0,
		fechanc=convert(datetime,'01/01/1900',103),tipo_docnc='',nro_docnc='',voucher=ROW_NUMBER() OVER(ORDER BY nroDOC),
		glosa=(Case When left(e.nrodoc,2)='EE' Then 'DEPOSITO POR IDENTIFICAR ** '+RTRIM(e.NRODOC)+' **' Else 'INGRESOS DIARIOS DEL '+upper(convert(varchar(12),e.fechai,113))+' ** DE '+
		(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
		(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
		(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
		(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
		(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
		'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)End),
		ccosto='', fefec='',
		Banco=(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
		(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
		(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
		(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
		(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
		'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)
	from exportaventasCOBB e inner join (select codigo Cap,ruc_Cpto Ruc,Descripcion RazonSocial from tbl_CapCptoComercial where Tipo='CAP' and Estado=1) c on rtrim(e.cap)=rtrim(c.cap) where tipo='DE' and left(e.NRODOC,4)<>'EECC'
	order by e.MONTOC desc
	) todosB 
	union all
select GRUPO='31', ZONA=@zonaA,UNIDAD_ECONOMICA=@zonaA,AÑO=year(fechap),MES=@MesA,
	FECHA_REGISTRO=fechap, CUENTA_CONTABLE='',CUENTA_ABONO= '1212102',
	 AUTOMATICO='N', PROVEEDOR= rtrim(ruc),Razon_Social= rtrim(nombres),Direccion='',
	TIPO_DOCUMENTO=(Case When Comprob='BV' Then '03' Else (Case When Comprob='FA' Then '01' Else (Case When Comprob='NC' Then '07' Else '08' End)End)End), 
	NRO_DOCUMENTO=rtrim(sercomprob)+'-'+dbo.PADL(rtrim(nrocomprob),9,'0'),NRO_DOCUMENTO2=rtrim(sercomprob)+'-'+dbo.PADL(rtrim(nrocomprob),9,'0'),
	FECHA_DOCUMENTO=fechacomp, DETALLE_VENTA='COMPROBANTE DE VENTA - '+upper(convert(varchar(12),fechacomp,113))+' **',TIPO_MONEDA=0,TIPO_CAMBIO=0,
	TIPO_OPERACION=1,IMPORTE_DEBE=0,IMPORTE_HABER=MONTOP,AFECTO=0,MONTO_IGV=0,ISC=0,MONTO_ISC=0,CANCELADO=0,PERCEPCION=0,MONTO_PERCEPCION=0,
	fechanc=convert(datetime,'01/01/1900',103),tipo_docnc='',nro_docnc='',voucher=ROW_NUMBER() OVER(ORDER BY nrocomprob),glosa='INGRESOS DIARIOS DEL '+upper(convert(varchar(12),fechacomp,113))+' **',
	ccosto='', fefec='',
	Banco=@TipoBanco
	from exportaventas
	where ruc <> 'NULL' 
union all 
select GRUPO='31', ZONA=@zonaA,UNIDAD_ECONOMICA=@zonaA,AÑO=year(@fechaFac),MES=@MesA,
	FECHA_REGISTRO=@fechaFac, CUENTA_CONTABLE='',CUENTA_ABONO= '1212101',
	 AUTOMATICO='N', PROVEEDOR= '99999999997',Razon_Social= '',Direccion='',
	TIPO_DOCUMENTO='14', 
	NRO_DOCUMENTO='S001-'+substring(@NewNroDoc,6,9),NRO_DOCUMENTO2='S001-'+substring(@NewNroDoc,6,9),
	FECHA_DOCUMENTO=@fechaFac, 
	DETALLE_VENTA='COMPROBANTE DE VENTA - '+upper(convert(varchar(12),@fechaFac,113))+' **',TIPO_MONEDA=0,TIPO_CAMBIO=0,
	TIPO_OPERACION=1,IMPORTE_DEBE=0,IMPORTE_HABER=isnull(@sumaboletas,0)+isnull(@SumaBoletasMenor1,0)*(Case When isnull(@SumaBoletasMenor1,0)<0 Then 1 Else 1 End)-isnull(@montomax,0),AFECTO=0,MONTO_IGV=0,ISC=0,MONTO_ISC=0,CANCELADO=0,PERCEPCION=0,MONTO_PERCEPCION=0,
	fechanc=convert(datetime,'01/01/1900',103),tipo_docnc='',nro_docnc='',voucher=999999,glosa='PAGO DE ENERGIA',
	ccosto='', fefec='',Banco=@TipoBanco
--print 'new6'
select *,Adicional2=ROW_NUMBER() OVER(ORDER BY zona,tipo_documento,CUENTA_ABONO) into tmpExportaVentasCob2 from tmpExportaVentasCob2a 
--print 'new7'
drop table tmpExportaVentasCob2a
update tmpExportaVentasCob2 set voucher=1
--print 'new7A'
--delete from tmpExportaVentasCob2 where IMPORTE_HABER<0
--print 'new8'
if(select count(zona) from tmpExportaVentasCob2)=1
Begin
--print 'new9'
	delete from tmpExportaVentasCob2
End
--print 'new10'
delete from tempito
--print 'new11'
--if isnull(@montomax,0)>0
--Begin
	-- añandiendo los depositos totales de cobranza
	select GRUPO='31', ZONA=@zonaA,UNIDAD_ECONOMICA=@zonaA,AÑO=year(fechai),MES=@MesA,
		FECHA_REGISTRO=fechai, CUENTA_CONTABLE=(Case When left(e.nrodoc,2)='EE' Then '4699110' else 
		(Case When Rtrim(upper(descrip)) like '%PIURA%' Then '1041103' Else 
		(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then '1041103' Else 
		(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then '1041101' Else     
		(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then '1041102' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then '1041109' Else 
		(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then '1041108' Else 
		(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then '1041106' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then '1010101' Else 
		'1041105' End)End)End)End)End)End)End)End)End),
		CUENTA_ABONO= '', AUTOMATICO='N', PROVEEDOR= rtrim(c.ruc),Razon_Social= rtrim(c.RazonSocial),Direccion='',
		TIPO_DOCUMENTO='00', 
		NRO_DOCUMENTO=(Case When left(e.nrodoc,2) in ('EE','DE') Then e.NRODOC Else (Case When Charindex('-',e.nrodoc,1)=4 Then '0'+left(e.nrodoc,4)+'0'+substring(e.nrodoc,5,8) 
			Else  (Case When Charindex('-',e.nrodoc,1)=9 Then left(e.nrodoc,4)+'-'+substring(e.nrodoc,4,9)
				Else (Case When len(rtrim(e.nrodoc))<9 Then 'DEPO-'+dbo.padl(rtrim(e.nrodoc),9,'0') Else rtrim(e.nrodoc) End) End) End) End),
		NRO_DOCUMENTO2=(Case When left(e.nrodoc,2) in ('EE','DE') Then e.NRODOC Else (Case When Charindex('-',e.nrodoc,1)=4 Then '0'+left(e.nrodoc,4)+'0'+substring(e.nrodoc,5,8) 
			Else  (Case When Charindex('-',e.nrodoc,1)=9 Then left(e.nrodoc,4)+'-'+substring(e.nrodoc,4,9)
				Else (Case When len(rtrim(e.nrodoc))<9 Then 'DEPO-'+dbo.padl(rtrim(e.nrodoc),9,'0') Else rtrim(e.nrodoc) End) End) End) End),FECHA_DOCUMENTO=e.FECHADOC, 
		DETALLE_VENTA=(Case When left(e.nrodoc,2)='EE' Then 'PAGO DEL DOCUMENTO ** '+RTRIM(e.NRODOC)+' **' Else 'INGRESOS DIARIOS DEL '+upper(convert(varchar(12),e.fechai,113))+' ** DE '+
		(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
		(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
		(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
		(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
		(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
		'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)End),
		TIPO_MONEDA=0,TIPO_CAMBIO=0,
		TIPO_OPERACION=1,IMPORTE_DEBE=MONTOC,IMPORTE_HABER=0,AFECTO=0,MONTO_IGV=0,ISC=0,MONTO_ISC=0,CANCELADO=0,PERCEPCION=0,MONTO_PERCEPCION=0,
		fechanc=convert(datetime,'01/01/1900',103),tipo_docnc='',nro_docnc='',voucher=ROW_NUMBER() OVER(ORDER BY nroDOC),
		glosa=(Case When left(e.nrodoc,2)='EE' Then 'DEPOSITO POR IDENTIFICAR ** '+RTRIM(e.NRODOC)+' **' Else 'INGRESOS DIARIOS DEL '+upper(convert(varchar(12),e.fechadoc,113))+' ** DE '+
		(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
		(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
		(Case When Rtrim(upper(Descrip)) like '%NACION%' or Rtrim(upper(Descrip)) like '%BN DEP%' or Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
		(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
		(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
		'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)End),
		ccosto='', fefec='',
		Banco=(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
		(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
		(Case When Rtrim(upper(Descrip)) like '%NACION%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(Descrip)) like '%BN DEP%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
		(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
		(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
		'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)End)End)
	into tmpExportaVentasCob3a 
		from exportaventasCOBA e inner join (select codigo Cap,ruc_Cpto Ruc,Descripcion RazonSocial from tbl_CapCptoComercial where Tipo='CAP' and Estado=1) c on rtrim(e.cap)=rtrim(c.cap) where tipo='DE' and left(e.NRODOC,4)<>'EECC'
		and rtrim(e.nrodoc)+e.Banco not in (
							select rtrim(nrodoc)+Banco from tmpNroDoc
							)
		union all

	select GRUPO='31', ZONA=@zonaA,UNIDAD_ECONOMICA=@zonaA,AÑO=year(fechai),MES=@MesA,
		FECHA_REGISTRO=fechai, CUENTA_CONTABLE='',
		CUENTA_ABONO= '1212101', AUTOMATICO='N', PROVEEDOR= '99999999997',Razon_Social= '',Direccion='',
		TIPO_DOCUMENTO='14', NRO_DOCUMENTO='S001-'+substring(@NewNroDoc,6,9),
		NRO_DOCUMENTO2='S001-'+substring(@NewNroDoc,6,9),FECHA_DOCUMENTO=@fechaFac, 
		DETALLE_VENTA='COMPROBANTE DE VENTA - '+upper(convert(varchar(12),@fechaFac,113))+' **',
		TIPO_MONEDA=0,TIPO_CAMBIO=0,
		TIPO_OPERACION=1,IMPORTE_DEBE=0,IMPORTE_HABER=MONTOC,AFECTO=0,MONTO_IGV=0,ISC=0,MONTO_ISC=0,CANCELADO=0,PERCEPCION=0,MONTO_PERCEPCION=0,
		fechanc=convert(datetime,'01/01/1900',103),tipo_docnc='',nro_docnc='',voucher=ROW_NUMBER() OVER(ORDER BY nroDOC),
		glosa='PAGO DE ENERGIA',
		ccosto='', fefec='',
		Banco=(Case When Rtrim(upper(descrip)) like '%PIURA%' Then 'CMAC PIURA' Else 
		(Case When Rtrim(upper(descrip)) like '%MIBANCO%' Then 'MIBANCO' Else 
		(Case When Rtrim(upper(Descrip)) like '%NACION%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(Descrip)) like '%BN DEP%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(Descrip)) like '%BN (DE%' Then 'BANCO DE LA NACION' Else     
		(Case When Rtrim(upper(DESCRIP)) like '%COOP%' Then 'COOPACT TOCACHE' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%MAYNAS%' Then 'CMAC MAYNAS' Else 
		(Case When Rtrim(upper(Descrip)) like '%CREDITO%' or Rtrim(upper(Descrip)) like '%BCP%' Then 'BANCO DE CREDITO' Else 
		(Case When Rtrim(upper(Descrip)) like '%HUANCAYO%' Then 'CMAC HUANCAYO' Else 
		(Case When Rtrim(upper(DESCRIP)) like '%EFECTIVO%' Then 'EFECTIVO' Else 
		'BANCO CONTINENTAL' End)End)End)End)End)End)End)End)End)End)
		from exportaventasCOBA e inner join (select codigo Cap,ruc_Cpto Ruc,Descripcion RazonSocial from tbl_CapCptoComercial where Tipo='CAP' and Estado=1) c on rtrim(e.cap)=rtrim(c.cap) where tipo='DE' and left(e.NRODOC,4)<>'EECC'
		and rtrim(e.nrodoc)+e.Banco not in (
							select rtrim(nrodoc)+Banco from tmpNroDoc
							)
		order by voucher,CUENTA_ABONO
--print 'new12'
	select *,Adicional2=ROW_NUMBER() OVER(ORDER BY zona,voucher,CUENTA_ABONO) into tmpExportaVentasCob3
	from tmpExportaVentasCob3a
	drop table tmpExportaVentasCob3a
--print 'new13'
	update tmpExportaVentasCob3 set voucher=1

if @ConEECC=0 and @NroBancos=1 and @montomax=@totalDeposito
Begin
	insert into tmpExportaVentasCob2
	select * from tmpExportaVentasCob3
	
	delete from tmpExportaVentasCob2 where NRO_DOCUMENTO= @NewNroDoc
	delete from tmpExportaVentasCob3
End 

if @ConEECC=0 and @NroBancos=2 and @montomax=@totalDeposito
Begin
print 'fff'
	insert into tmpExportaVentasCob3
	select * from tmpExportaVentasCob2 where IMPORTE_HABER = (select importe_haber from tmpExportaVentasCob3 where IMPORTE_haber>0 and left(CUENTA_ABONO,5)='12121') 
print 'hhh'
	update tmpExportaVentasCob3 set banco = (select banco from tmpExportaVentasCob3 where left(cuenta_contable,4)='1041' group by banco)
	where  left(cuenta_abono,4)='1212'

	delete from tmpExportaVentasCob2 where NRO_DOCUMENTO= @NewNroDoc
	delete from tmpExportaVentasCob3 where NRO_DOCUMENTO= @NewNroDoc
	delete from tmpExportaVentasCob2 where 
	importe_haber = (select importe_haber from tmpExportaVentasCob3 where importe_haber>0 and left(CUENTA_ABONO,5)='12121') 
print 'ggg'

End 

--End
--Else 
--	Begin 
--		select * into tmpExportaVentasCob3 from tmpExportaVentasCob2 where adicional2=999999999
--	End
-- fin de añandiendo los depositos totales de cobranza
--falta la provision de Ventas de fac t bvt 

drop table tempito
drop table tmpNroDoc

DECLARE @Descripcion AS nvarchar(100)

if (select count(zona) from tmpExportaVentasCob0)>1 --solo para FAC / BVT provicion de Ventas
Begin
	drop table exportaventas
	select * into exportaventas from tmpExportaVentasCob0 
	exec spp_MigrarComprasVentas1C '',@zonaA,@zonaA,@CodUnidadA,@CodUnidadA,@MesA,@MesA,@Anio1,@IdEmpresa,'COBRAN','PORDIA'
print 'hola00'
End
Else 
Begin
	print 'Hola11'
End 

if (select count(zona) from tmpExportaVentasCob1)>1
Begin
	--select * from tmpExportaVentasCob1 

	-- verificando si existe mas bancos
	If (select count(veces) from (select 1 veces,banco from tmpExportaVentasCob1 group by banco) a group by veces)>1
	Begin

		Declare vcRegistros cursor 
			For Select banco from tmpExportaVentasCob1 Group by banco
								
		Open vcRegistros
		Fetch Next from vcRegistros into @Descripcion
		While @@FETCH_STATUS=0
		Begin 
			
			select * into tmpExportaVentasCob1a from tmpExportaVentasCob1 where rtrim(banco)= rtrim(@Descripcion) 
			
			exec spp_MigrarCobranzaISCOM @zonaA,@CodUnidadA,@MesA,@Anio1,@IdEmpresa,@CodMGC,@Tipo,@RucCaja,@NroCap
			drop table tmpExportaVentasCob1a 
	
			Fetch Next from vcRegistros into @Descripcion
		End
		Close vcRegistros
		Deallocate vcRegistros
		print 'Hola22'
	End
	Else
	Begin
			IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaVentasCob1a') AND type in (N'U'))
			BEGIN 
				drop table tmpExportaVentasCob1a 
			END
			select * into tmpExportaVentasCob1a from tmpExportaVentasCob1 
			exec spp_MigrarCobranzaISCOM @zonaA,@CodUnidadA,@MesA,@Anio1,@IdEmpresa,@CodMGC,@Tipo,@RucCaja,@NroCap
			drop table tmpExportaVentasCob1a 
			print 'hola33'
	End

print 'hola-0'
End
Else 
Begin
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaVentasCob1a') AND type in (N'U'))
	BEGIN 
		drop table tmpExportaVentasCob1a 
	END
	print 'cob1'
End 
--
if (select count(zona) from tmpExportaVentasCob0)>1 --and (select count(zona) from tmpExportaVentasCob1)>1
	Begin
	If (select count(veces) from (select 1 veces,banco from tmpExportaVentasCob3 group by banco) a group by veces)>1
	Begin

		Declare vcRegistros cursor 
			For Select banco from (select banco from tmpExportaVentasCob2 union all select banco from tmpExportaVentasCob3
								) todos Group by banco
								
		Open vcRegistros
		Fetch Next from vcRegistros into @Descripcion
		While @@FETCH_STATUS=0
		Begin 
			
			select * into tmpExportaVentasCob1a from tmpExportaVentasCob2 where rtrim(banco)= rtrim(@Descripcion) 
			union all select * from tmpExportaVentasCob3 where rtrim(banco) = rtrim(@Descripcion)

			exec spp_MigrarCobranzaISCOM @zonaA,@CodUnidadA,@MesA,@Anio1,@IdEmpresa,@CodMGC,@Tipo,@RucCaja,@NroCap
			drop table tmpExportaVentasCob1a 
	
			Fetch Next from vcRegistros into @Descripcion
		End
		Close vcRegistros
		Deallocate vcRegistros
		print 'Cob2'
	End
	Else
	Begin
		if (select banco from tmpExportaVentasCob2 where banco<>'' and importe_debe<>0 group by banco) =(select banco from tmpExportaVentasCob3 where banco<>'' group by banco) 
			begin
				print 'cccc11a'

				select * into tmpExportaVentasCob1a from tmpExportaVentasCob2 union all select * from tmpExportaVentasCob3
				exec spp_MigrarCobranzaISCOM @zonaA,@CodUnidadA,@MesA,@Anio1,@IdEmpresa,@CodMGC,@Tipo,@RucCaja,@NroCap
				drop table tmpExportaVentasCob1a 
				print 'cccc11b'
			End
		Else
			begin
				print 'aaaa11'
				select * into tmpExportaVentasCob1a from tmpExportaVentasCob2 
				exec spp_MigrarCobranzaISCOM @zonaA,@CodUnidadA,@MesA,@Anio1,@IdEmpresa,@CodMGC,@Tipo,@RucCaja,@NroCap
				drop table tmpExportaVentasCob1a 
				print 'aaa11-a'
				if (select count(zona) from tmpExportaVentasCob3)>1 --and (select count(zona) from tmpExportaVentasCob1)>1
					Begin
						select * into tmpExportaVentasCob1a from tmpExportaVentasCob3 
						exec spp_MigrarCobranzaISCOM @zonaA,@CodUnidadA,@MesA,@Anio1,@IdEmpresa,@CodMGC,@Tipo,@RucCaja,@NroCap
						drop table tmpExportaVentasCob1a
					print 'hola2'
					End 
				print 'aaaa'
			End
		End 
	End
else 
	Begin
	If (select count(veces) from (select 1 veces,banco from tmpExportaVentasCob3 group by banco) a group by veces)>1
	Begin

		Declare vcRegistros cursor 
			For Select banco from (select banco from tmpExportaVentasCob2 union all select banco from tmpExportaVentasCob3
								) todos Group by banco
								
		Open vcRegistros
		Fetch Next from vcRegistros into @Descripcion
		While @@FETCH_STATUS=0
		Begin 
			
			select * into tmpExportaVentasCob1a from tmpExportaVentasCob2 where rtrim(banco)= rtrim(@Descripcion) 
			union all select * from tmpExportaVentasCob3 where rtrim(banco) = rtrim(@Descripcion)

			exec spp_MigrarCobranzaISCOM @zonaA,@CodUnidadA,@MesA,@Anio1,@IdEmpresa,@CodMGC,@Tipo,@RucCaja,@NroCap
			drop table tmpExportaVentasCob1a 
	
			Fetch Next from vcRegistros into @Descripcion
		End
		Close vcRegistros
		Deallocate vcRegistros
		print 'dd1'
	End
	Else
	Begin

		print 'bbbb'
        if (select banco from tmpExportaVentasCob2 where banco<>'' group by banco) =(select banco from tmpExportaVentasCob3 where banco<>'' group by banco) 
		begin
			select * into tmpExportaVentasCob1a from tmpExportaVentasCob2 union all select * from tmpExportaVentasCob3
			exec spp_MigrarCobranzaISCOM @zonaA,@CodUnidadA,@MesA,@Anio1,@IdEmpresa,@CodMGC,@Tipo,@RucCaja,@NroCap
			drop table tmpExportaVentasCob1a 
		Print 'cob23a'
		end
		else
		begin
			if (select count(zona) from tmpExportaVentasCob2)>1
			Begin
				select * into tmpExportaVentasCob1a from tmpExportaVentasCob2 
				exec spp_MigrarCobranzaISCOM @zonaA,@CodUnidadA,@MesA,@Anio1,@IdEmpresa,@CodMGC,@Tipo,@RucCaja,@NroCap
				drop table tmpExportaVentasCob1a 
		Print 'cob23a-1'
			End
			if (select count(zona) from tmpExportaVentasCob3)>1
			Begin
				select * into tmpExportaVentasCob1a from tmpExportaVentasCob3
				exec spp_MigrarCobranzaISCOM @zonaA,@CodUnidadA,@MesA,@Anio1,@IdEmpresa,@CodMGC,@Tipo,@RucCaja,@NroCap
				drop table tmpExportaVentasCob1a 
		Print 'cob23b'
			End
		end

	End	
	End

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'exportaventas') AND type in (N'U'))
BEGIN 
	drop table exportaventas
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'exportaventas0') AND type in (N'U'))
BEGIN 
	drop table exportaventas0
END

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmp') AND type in (N'U'))
BEGIN 
	drop table tmp
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmp1') AND type in (N'U'))
BEGIN 
	drop table tmp1
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmp4') AND type in (N'U'))
BEGIN 
	drop table tmp4

END

exec spp_BorrarTemporales



/****** Object:  StoredProcedure [dbo].[spp_MigrarComprasVentas0]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_MigrarComprasVentas0]
@Direccion VARCHAR(350),
@HojaMigrar varchar(30)

as
-- Borrar y crea la tabla exportaventas
-- spp_MigrarComprasVentas0 'C:\miguel.xls', 'COMPRA'

-- select * from exportaventas
--Solicitar variables @direccion
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[exportaventas]') AND type in (N'U'))
BEGIN 
	DROP TABLE exportaventas
END
-------------------------------------

SET NOCOUNT ON

Begin Try 
	declare @path1 nvarchar(350), @parmsdeclare NVARCHAR ( 2 )
	--, @dir varchar(250)
	--set @dir = 'c:\miguel.xls'
	set @HojaMigrar = (CASE When ltrim(rtrim(@HojaMigrar))= 'VENTAS' then ltrim(rtrim(@HojaMigrar)) else ltrim(rtrim(@HojaMigrar))+'S' end)
--	-- solo para 64 bits (sql2008)
--	set @path1 = 'SELECT * INTO exportaventas FROM '+ 'OPENROWSET('''+
--	'Microsoft.ACE.OLEDB.12.0'''+','+
--	'''Excel 12.0;HDR=YES;Database='+@Direccion +''', REGISTRO_'+@HojaMigrar+'$)'

	-- solo para 32 bits (sql2005)
	set @path1 = 'SELECT * INTO exportaventas FROM '+ 'OPENROWSET('''+
	'Microsoft.Jet.OLEDB.4.0'''+','+
	'''Excel 8.0;Database='+@Direccion +''', REGISTRO_'+@HojaMigrar+'$)'

	--print @path1
	SET @parmsdeclare = ' '

	EXEC sp_executesql @stmt = @path1
	, @params = @parmsdeclare

End Try
Begin Catch
	-- Codigo de error 7303
	-- No se puede inicializar el objeto de origen de datos del proveedor OLE DB "Microsoft.Jet.OLEDB.4.0" para el servidor vinculado "(null)".
	IF ERROR_NUMBER() = 7303  
	Begin
		Print 'Archivo ' +@Direccion + ' se ecuentra Abierto o NO Existente ...'
    end

	-- Codigo de error 7314
	-- El proveedor OLE DB "Microsoft.Jet.OLEDB.4.0" para el servidor vinculado "(null)" no contiene 
	-- la tabla "REGISTRO_COMPRAS$". O bien no existe la tabla o bien el usuario actual no tiene permisos en la tabla.

	IF ERROR_NUMBER() = 7314  
	Begin
		Print 'No existe la Hoja  REGISTRO_'+@HojaMigrar+' ...!'
    end
--	PRINT ERROR_NUMBER() 
--     PRINT ERROR_SEVERITY()    
--     PRINT ERROR_STATE()  
--     PRINT ERROR_PROCEDURE()   
--     PRINT ERROR_LINE()   
--	Print Error_Message()
End Catch

/****** Object:  StoredProcedure [dbo].[spp_MigrarComprasVentas1]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_MigrarComprasVentas1]
@lcdireccion varchar(250), 
@ZonaA varchar(6),
@ZonaB varchar(6),
@CodUnidadA varchar(10),
@CodUnidadB varchar(10),
@MesA char(2),
@MesB char(2),
@Anio1 char(4),
@IdEmpresa int ,
@tMovimiento Char(8),  
@pordiaDoc char(6)

as
--Solicitar variables 

-- spp_MigrarComprasVentas1 '','000043','000043','00004301','00004301','11','11','2019',10,'VENTAS','PORDOC'
--exec spp_MigrarComprasVentas1 '','000012','000012','000012','000012','04','04','2019',5,'VENTAS','PORDOC'
--DECLARE @CodUnidadEconomica char(10), @Anio char(4), @mes char(2), @Zona char(10),
--	@FechContable datetime, @CodMGC char(3), @CodMGC2 char(3), @Glosa varchar(250),
--	@Fechdocumento DATETIME, @Fechdocumento2 DATETIME, @CodigoDocumentoReferencia char(2),
--	@Nrodoc nchar(14), @Nrodoc2 nchar(14), @Nrodoc3 nchar(14), @CodCuenta char(12),
--	@TipoMov char(1), @Afecto bit, @Moneda bigint, @TipoCambio decimal(7, 3),
--	@impDebe decimal(15, 2), @impDebe1 decimal(15, 2), @impDebeDolar decimal(15, 2),
--	@impHaber decimal(15, 2), @impHaber1 decimal(15, 2), @impHaberDolar decimal(15, 2),
--	@codPro char(11), @Cancelado char(1), @tipoOper int, @CuentaAbono varchar(50),
--	@CuentaAbono2 varchar(50), @CuentaAbono3 varchar(50), @CuentaAbono4 varchar(50),
--	@MontoIGV decimal(12, 3), @MontoIGVCompras decimal(12, 3), @MontoIGVVentas decimal(12, 3),
--	@GlosaCancelacion varchar(28), @TipoMedioPago nchar(3), @imptotal as decimal(15,2),
--	@imptotal1 as decimal(15,2), @imptotal2 as decimal(15,2), @tmpPorDiaDoc as Char(2),
--	@ctaigv as char(10), @lcCorrela int,@lcCorrelcA CHAR(10), -----Creando Correl
--	@lcfechanc as datetime,  -- definimos variables para las notas de credito
--	@lcCodDocRefnc char(2), @lcserienc nchar(4), @lcNrodocnc nchar(8), 
--    @lccCosto nchar(15), @lcVoucher as nchar(5), @ctaPercepcion as char(10), @Percepcion varchar(5), 
--    @MontoPercepcion decimal(15,2), @automatico nchar(3), @fefec nchar(10), @ctabancaria varchar(50),
--	@CuentaAux varchar(50), @Adicional2 decimal(12, 3), @Adicional3 decimal(12, 3),
--	@p41 char(10)  --- parametro de input output

Declare @correl as nchar(10),@correl3 as char(10),
	@movc int, @movc3 int, @nrodocumento as char(14),@nrodocumento2 as char(14), @hoy as datetime

---- acepta crear la 1ra vez el asiento
--set @tmpPorDiadoc ='SI'

--migra datos de excel
if @lcdireccion<>''
begin
	exec spp_MigrarComprasVentas0  @lcdireccion, @TMovimiento
end
	set @hoy = getdate()

-- actualizar clientes 
---seleccionando clientes nuevos
insert into tbl_msto_ClienteProveedor
select (case when len(rtrim(proveedor))=8 then '1' else '6' end) codclipro,left(razon_social,100) razon_social,proveedor, '' nombre,'' apellido,'-' telefono,4 tipoClienteproveedor,left(direccion,100) direccion,
		'1' codzona,'' cobrador,'@' correo,'.com' PaginaWeb,'' RepreLegal,'' CodAval,'' Aval,'' DirAval,'' TelAval,1 estado
 from (
		select * from (
			select proveedor, isnull(rtrim(razon_social),'') razon_social,isnull(rtrim(direccion),'') direccion 
			from exportaventas where proveedor is not null and LEN(rtrim(proveedor))>6 and rtrim(razon_social)<>'ANULADO'  
			group by proveedor, razon_social,direccion 
			) prove 
			left outer join 
			(select ruc from tbl_msto_ClienteProveedor WHERE Estado=1) clie 
			on rtrim(prove.proveedor) = rtrim(clie.ruc)
			) clientesnuevos 
	where ruc is null 

---- fin actualiza clientes
--Buscando solo los registros sin subir
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaventas') AND type in (N'U'))
BEGIN 
	drop table tmp
	drop table tmp1
	drop table tmp4
	--drop table tmpexporta1
	drop table tmpExportaventas
	--drop table tmpExportaventas1
	Drop table exportaventas0
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'exportaVta1') AND type in (N'U'))
BEGIN 
	Drop table exportaVta1
	Drop Table ExportaVta2
END
-------------------------------------
--select @CodMGC =grupo from exportaventas where grupo is not null group by grupo
--select * from tmpexportaventas

declare @CtaCancelado as varchar(15),@CtaISC as varchar(15),@ctaigv as char(10),@ctaPercepcion as char(10),@CtaAUX as varchar(15), @lcCorrela int

select @CtaCancelado = valor from Parametros where clave ='CuentaAutoCVentas'and idempresa = @IdEmpresa and estado='1' group by valor
select @CtaPercepcion = valor from Parametros where clave ='CuentaPercepcion'and idempresa = @IdEmpresa and estado='1' group by valor
select @CtaIGV = valor from Parametros where clave ='CuentaIGV'and idempresa = @IdEmpresa and estado='1' group by valor
select @CtaISC = valor from Parametros where clave ='CuentaISC'and idempresa = @IdEmpresa and estado='1' group by valor
select @CtaAUX = valor from Parametros where clave ='CuentaAuxiliar'and idempresa = @IdEmpresa and estado='1' group by valor

print @CtaAUX
select *,
		CtaCancelado=(case When cancelado=1 then @CtaCancelado Else '' end),
		CtaPercepcion=(case When Percepcion<>0 then @CtaPercepcion Else '' end),
		CtaIGV=(case When monto_igv<>0 then @CtaIGV Else '' end),
		CtaISC=(case When monto_isc<>0 then @CtaISC Else '' end),
		CtaAUX=(case When Automatico='S2' then (case when @CtaAUX='-' then '' else @CtaAUX end) Else '' end)
 into exportaventas0 
from exportaventas
print '1'

-- Seleccionando la cta_debe
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'D' tipmov 
into tmp 
from plancuentascontables
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@Anio1)<'2020' then '2009' else rtrim(@Anio1) end) and codcuentacontable in 
	(select cuenta_contable from exportaventas0 where cuenta_contable<>'' group by cuenta_contable)
-- Seleccionando la cta_haber
union all
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov from plancuentascontables
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@Anio1)<'2020' then '2009' else rtrim(@Anio1) end) and codcuentacontable in (select cuenta_abono from exportaventas0 where cuenta_abono<>'' group by cuenta_abono)
union all
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov from plancuentascontables
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@Anio1)<'2020' then '2009' else rtrim(@Anio1) end) and codcuentacontable in (select ctacancelado from exportaventas0 where CtaCancelado<>'' group by CtaCancelado)
union all
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov from plancuentascontables
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@Anio1)<'2020' then '2009' else rtrim(@Anio1) end) and codcuentacontable in (select ctaPercepcion from exportaventas0 where ctaPercepcion<>'' group by ctaPercepcion)
union all
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov from plancuentascontables
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@Anio1)<'2020' then '2009' else rtrim(@Anio1) end) and codcuentacontable in (select ctaIGV from exportaventas0 where ctaIGV<>'' group by ctaIGV)
union all
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov from plancuentascontables
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@Anio1)<'2020' then '2009' else rtrim(@Anio1) end) and codcuentacontable in (select CtaISC from exportaventas0 where ctaISC<>'' group by ctaISC)
union all --si tiene Automatico S2 caso Afocat y CCSM
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov from plancuentascontables
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@Anio1)<'2020' then '2009' else rtrim(@Anio1) end) and codcuentacontable in (select ctaAux from exportaventas0 where ctaAux<>'' group by ctaAux)

print '2'
-- seleccionando los porcentajes por cuenta
select cta,convert(nchar(10),'100') codcuentacontable,convert(nchar(10),'100') ctahaber,convert(nchar(10),porcenta )ctadebe,
		convert(nchar(10),porcenta2) ctadebe2,convert(nchar(10),porcenta3) ctadebe3,convert(nchar(10),porcenta4) ctadebe4, tipmov 
into tmp4 from tmp
print '3'
-- seleccionando ctas automaticas con sus porcentajes
select a.cta,a.tipmov,a.cuentas,a.codcuentacontable2,b.codcuentacontable2 porcenta
into tmp1 
from (
		select cta,tipmov,cuentas,codcuentacontable2 
		from tmp
		unpivot
		( codcuentacontable2
			for cuentas in (codcuentacontable,ctadebe,ctadebe2,ctadebe3,ctadebe4,ctahaber,ctacierre)
		) 
		as unpvTTable
		where codcuentacontable2<>''
		and cuentas<>'ctacierre'
	) a inner join 
	(
		select cta,tipmov,cuentas,codcuentacontable2 
		from tmp4
		unpivot
		( codcuentacontable2
			for cuentas in (codcuentacontable,ctadebe,ctadebe2,ctadebe3,ctadebe4,ctahaber)
		) 
		as unpvTTable
		where codcuentacontable2 not in ('','0')
	) b on a.cta+a.cuentas=b.cta+b.cuentas 

Select @lcCorrela=e_corr from empresa where idempresa = @IdEmpresa
print @lcCorrela
select *,
	left(dbo.padl(@lcCorrela+ROW_NUMBER() OVER(PARTITION BY zona ORDER BY LEFT(nro_documento, 7),fecha_documento)-1,10,'0'),10) correlA,
	left(grupo,2)+right(año,1)+left(mes,2)+dbo.padl(convert(varchar(5),substring(dbo.CorrelativoMes(Zona,Unidad_Economica,grupo ,año,mes),6,5)*1-1+voucher),5,'0') Nrodocumento,
		(case when cancelado='1' then '1010001' else '' end) ctaefec,
		TotDebe = (Case When tipo_documento='07' Then importe_haber+monto_percepcion+(Case When grupo='02' Then monto_igv*-1 Else 0 End) else 0 End),
		TotHaber=(Case When tipo_documento='07' Then 0 Else importe_debe+monto_percepcion+(Case When grupo='02' Then monto_igv*-1 Else monto_igv End) End) 
into exportaVta1 
from exportaventas0 
--Actualiza el correlativo en empresa
if @lcCorrela=null 
Begin
	UPDATE Empresa SET E_CORR = (select MAX(correla) from exportaVta1)*1 where idempresa=@idempresa
End

Select @lcCorrela=e_corr from empresa where idempresa = @IdEmpresa
--Agregando los cancelados
select Grupo=(Case When grupo='18' Then '02' when grupo='04' Then '20' End),Zona,Unidad_Economica,Año,Mes,Fecha_Registro,
		Cuenta_Contable=(Case When grupo='18' Then @CtaCancelado when grupo='04' Then Cuenta_Abono End),Cuenta_Abono=(Case When grupo='18' Then Cuenta_Contable when grupo='04' Then @CtaCancelado End),  
		Automatico='N',Proveedor,Razon_social,Direccion,Tipo_documento,Nro_Documento,Nro_Documento2,Fecha_documento,
		Detalle_venta='PAGO DEL DOCUMENTO ** '+Nro_documento + ' **', tipo_moneda='1',tipo_cambio=0,Tipo_operacion,
		Importe_Debe=(Case When importe_debe=0 Then 0 Else importe_debe+Monto_igv+Monto_percepcion End),
		Importe_Haber=(Case When importe_Haber=0 Then 0 Else importe_Haber+Monto_igv+Monto_percepcion End),Afecto='0',Monto_igv=0,isc,Monto_isc=0,Cancelado='0',Percepcion=0,Monto_percepcion=0,
		Fechanc,Tipo_Docnc,Nro_docnc,Voucher,Glosa=(Case When Grupo='04' Then 'PAGO A PROVEEDORES M*' Else 'CANCELACION EN EFECTIVO M*' End),CCosto,Fefec,Adicional1=0,Adicional2=0,Adicional3=0,OtrosMontos=0,
		CtaCancelado='',CtaPercepcion='',CtaIGV='',CtaISC='',CtaAux='',
		left(dbo.padl(@lcCorrela+ROW_NUMBER() OVER(PARTITION BY zona ORDER BY LEFT(nro_documento, 7),fecha_documento)-1,10,'0'),10) correlA,
		(Case When grupo='18' Then '02' when grupo='04' Then '20' End)+right(año,1)+left(mes,2)+dbo.padl(convert(varchar(5),substring(dbo.CorrelativoMes(Zona,Unidad_Economica,(Case When grupo='18' Then '02' when grupo='04' Then '20' End) ,año,mes),6,5)*1-1+voucher),5,'0') Nrodocumento,
		ctaefec='',
		TotDebe = 0,
		TotHaber=0 
into exportaVta2 
from exportaventas0 where cancelado='1'

if @lcCorrela=null 

Begin
	UPDATE Empresa SET E_CORR = (select MAX(correla) from exportaVta2)*1 where idempresa=@idempresa
End

Select * 
into tmpexportaVentas
from exportavta1 union all Select * from exportavta2 
order by Adicional2

print 'ok1'
--actualiza registros de movcontables_C
insert into MovContables_C
select año,mes,Zona,Unidad_Economica,
	Nrodocumento,
	fecha_registro,grupo,max(glosa),''
from tmpexportaVentas
group by año,mes,Zona,Unidad_Economica,fecha_registro,grupo,voucher,Nrodocumento
order by grupo desc,voucher

print 'ok2'
--------- actualizar el detalle de movcontables_D
insert into MovContables_D
select IdMovContables_C,
tmpExportaventas.unidad_economica, 
	Nrodocumento,
	(case When tmpexportaVentas.GRUPO in ('02','20') Then isnull(tmpexportaVentas.fefec,'') Else '' end) crp,'-' codactividad,'-' codpar,'-' codsubactividad,
	fecha_registro,left(tmpExportaventas.grupo,2) codmgc,'-' clasmovimiento,'-' ctaDestino,tipo_documento,tmpExportaventas.nro_documento,
	fecha_documento, --DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,convert(datetime,fecha_documento,103))+1,0)) fecha_documento,
	fecha_documento fecha_vencimiento, --DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,convert(datetime,fecha_documento,103))+1,0)) fecha_vencimiento,
	tipo_documento coddocfuente,tmpExportaventas.nro_documento docref,fecha_documento fechref,
	codigoCtaBancaria=(case when left(cuenta_abono,3)='104' then cuenta_abono else '-' end), '-' NroOperacion,'-' Nrocheque,'' CuentaNaturaleza,
	codcuentacontable2,isnull(ccosto,'') centrocosto,
	tipmov,left(detalle_venta,19) glosa,'-' orden,isnull(afecto,0) afecto,left(tipo_moneda,1) tipo_moneda,isnull(Tipo_Cambio,0) TipoCambio,
	todos.importe_debe,todos.importe_haber,0 impDebeDolar,0 impHaberDolar,'-' TipoAnexo,'-' CodAnexo, rtrim(left(proveedor,11)) codpro, '-' u_codi,fecha_registro datUsu,
	tmpExportaventas.CorrelA correlativo,todos.estado,'-' destino,'-' anexo,0 gastoIntPersonal,'-' cocach,'-' nomanx,'-' codln,tipo_documento tipodca,left(tmpExportaventas.nro_documento,10) otrodoc,0 reten,0 rigv,'-' corrigv,
	'' CodAduana,'1900-01-01 00:00:00.000' FechDua,'' CodDua,0 ISC,isnull(tipo_operacion,0) tipo_operacion,'' NroDetrac,
	'1990-01-01 00:00:00.000' fechaDetrac,'' CodigoDetraccion, 
	fechanc = isnull(convert(datetime,fechanc,103),'1900-01-01 00:00:00.000'), 
	coddocrefnc = isnull(tipo_docnc,''),
	serienc = isnull(left(nro_docnc,4),''),
	nrodocnc = isnull(right(nro_docnc,9),''),
	ltrim(case when percepcion='0' then '' else convert(varchar(5),isnull(percepcion,'')) end) percepcion, 
	(case when monto_percepcion=0 then 0 else isnull(monto_percepcion,0) end) montopercepcion,
	cuenta_abono cuentaabono,isnull(monto_igv,0) montoigv,'' numeropercepcion,'1990-01-01 00:00:00.000' fechaPercepcion,0 MontoRetencion4,
	TipoMedioPago='008',isnull(monto_isc,0) montoIsc,0 montodetraccionIvap, 0 MontoCuentaAuxiliar,0 MontoIcbPer,0 MontoRetencionIGV,'' CuentaCCosto
from tmpExportaventas inner join 
	( --CtaDebe
		select grupo,rtrim(unidad_economica) unidad_economica,nro_documento,substring(cuentas,4,2) tipo,cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) in ('de','cu') then importe_debe*(convert(numeric(4),porcenta)/100) else 
		(Case when substring(cuentas,4,2) in ('ha') then importe_haber*(convert(numeric(4),porcenta)/100) else 0 end) end) importe_debe, 
		(Case when substring(cuentas,4,2)='ha' then importe_debe else (Case When substring(cuentas,4,2) in ('de','cu') Then importe_haber Else 0 End) end) importe_haber,(Case when cta=codcuentacontable2 then '-' else 'D' end) estado,tipmov,correlA,
		orden='1'
		from tmpExportaventas a inner join tmp1
			on a.cuenta_contable=tmp1.cta
		union all -- cta haber
		select grupo,rtrim(unidad_economica) unidad_economica,nro_documento,substring(cuentas,4,2),cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) in ('de','cu') then (Case When importe_debe=0 Then (Case when Automatico='S2' then Adicional2 else importe_haber+monto_igv end) Else 0 End) else (Case when Automatico='S2' then Adicional2 else importe_debe+monto_igv end) end) importe_debe, 
		(Case when substring(cuentas,4,2)='ha' then (Case When importe_debe=0 Then (Case when Automatico='S2' then Adicional2 else importe_haber+monto_igv end) Else 0 End) else (Case when Automatico='S2' then Adicional2 else importe_debe+monto_igv end) end) importe_haber,'D' Estado,tipmov,correlA,

		orden='4'
		from tmpExportaventas a inner join tmp1
			on a.cuenta_abono=tmp1.cta
		union all --agregando el ISC
		select grupo,rtrim(unidad_economica) unidad_economica,nro_documento,substring(cuentas,4,2),cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) in ('de','cu') then (Case When importe_debe=0 Then importe_haber Else 0 End) else importe_debe end) importe_debe, 
		(Case when substring(cuentas,4,2)='ha' then (Case When importe_debe=0 Then importe_haber Else 0 End) else importe_debe end) importe_haber,'D' Estado,tipmov,correlA,
		orden='2'
		from tmpExportaventas a inner join tmp1
			on a.CtaISC=tmp1.cta
		union all -- agregando el IGV
		select grupo,rtrim(unidad_economica) unidad_economica,nro_documento,substring(cuentas,4,2),cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) in ('de','cu') then (Case When monto_igv=0 Then 0 Else monto_igv End) else monto_igv end) importe_debe, 
		(Case when substring(cuentas,4,2)='ha' then (Case When monto_igv=0 Then 0 Else monto_igv End) else 0 end) importe_haber,'D' Estado,tipmov,correlA,
		orden='3'
		from tmpExportaventas a inner join tmp1
			on a.CtaIGV=tmp1.cta
		union all  --agregando las percepciones
		select grupo,rtrim(unidad_economica) unidad_economica,nro_documento,substring(cuentas,4,2),cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) in ('de','cu') then (Case When importe_debe=0 Then importe_haber Else 0 End) else importe_debe end) importe_debe, 
		(Case when substring(cuentas,4,2)='ha' then (Case When importe_debe=0 Then importe_haber Else 0 End) else importe_debe end) importe_haber,'D' Estado,tipmov,correlA,
		orden='6'
		from tmpExportaventas a inner join tmp1
			on a.CtaPercepcion=tmp1.cta
		union all  --agregando las Automaticas con S2 solo par aAfocat y CCSM
		select grupo,rtrim(unidad_economica) unidad_economica,nro_documento,substring(cuentas,4,2),cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) in ('de','cu') then (Case When importe_debe=0 Then (Case when Automatico='S2' then Adicional3 else importe_haber end) Else 0 End) else (Case when Automatico='S2' then Adicional3 else importe_debe end) end) importe_debe, 
		(Case when substring(cuentas,4,2)='ha' then (Case When importe_debe=0 Then (Case when Automatico='S2' then Adicional3 else importe_haber end) Else 0 End) else (Case when Automatico='S2' then Adicional3 else importe_debe end) end) importe_haber,'D' Estado,tipmov,correlA,
		orden='7'
		from tmpExportaventas a inner join tmp1
			on a.CtaAux=tmp1.cta
		--		order by correlA,grupo desc,cta
	) todos 
	on rtrim(tmpexportaVentas.unidad_economica)+tmpexportaVentas.grupo+tmpexportaVentas.correlA+tmpExportaventas.nro_documento=todos.unidad_economica+todos.grupo+todos.correlA+todos.nro_documento
	Inner join MovContables_C c on 
	rtrim(tmpexportaVentas.unidad_economica)+Nrodocumento=rtrim(c.codunidadeconomica)+c.NroDoc
order by c.NroDoc desc,tmpexportaVentas.correlA,todos.orden

--Actualiza correlativo de GrupoContable
Declare @mgc as varchar(2), @valor as int
DECLARE actualizaMGC CURSOR FOR 
select grupo,max(substring(nrodocumento,9,2))
from tmpexportaventas
group by grupo

OPEN actualizaMGC  
FETCH NEXT FROM actualizaMGC INTO @mgc,@valor  

WHILE @@FETCH_STATUS = 0  
BEGIN  
	EXEC cont_ActualizaCorrelaGrupoContable @Valor,@ZonaA,@CodUnidadA,@mgc,@Anio1 ,@MesA

    FETCH NEXT FROM actualizaMGC INTO @mgc,@valor
END 

CLOSE actualizaMGC  
DEALLOCATE actualizaMGC
/****** Object:  StoredProcedure [dbo].[spp_MigrarComprasVentas1_Old]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
Create PROCEDURE [dbo].[spp_MigrarComprasVentas1_Old]
@lcdireccion varchar(250), 
@ZonaA varchar(6),
@ZonaB varchar(6),
@CodUnidadA varchar(10),
@CodUnidadB varchar(10),
@MesA char(2),
@MesB char(2),
@Anio1 char(4),
@IdEmpresa int ,
@tMovimiento Char(8),  
@pordiaDoc char(6)

as
--Solicitar variables 
--@IdEmpresa
-- spp_MigrarComprasVentas1 '','000009','000009','000009','000009','01','01','2016',9,'VENTAS','PORDOC'

DECLARE @CodUnidadEconomica char(10), @Anio char(4), @mes char(2), @Zona char(10),
	@FechContable datetime, @CodMGC char(3), @CodMGC2 char(3), @Glosa varchar(250),
	@Fechdocumento DATETIME, @Fechdocumento2 DATETIME, @CodigoDocumentoReferencia char(2),
	@Nrodoc nchar(14), @Nrodoc2 nchar(14), @Nrodoc3 nchar(14), @CodCuenta char(12),
	@TipoMov char(1), @Afecto bit, @Moneda bigint, @TipoCambio decimal(7, 3),
	@impDebe decimal(15, 2), @impDebe1 decimal(15, 2), @impDebeDolar decimal(15, 2),
	@impHaber decimal(15, 2), @impHaber1 decimal(15, 2), @impHaberDolar decimal(15, 2),
	@codPro char(11), @Cancelado char(1), @tipoOper int, @CuentaAbono varchar(50),
	@CuentaAbono2 varchar(50), @CuentaAbono3 varchar(50), @CuentaAbono4 varchar(50),
	@MontoIGV decimal(12, 3), @MontoIGVCompras decimal(12, 3), @MontoIGVVentas decimal(12, 3),
	@GlosaCancelacion varchar(28), @TipoMedioPago nchar(3), @imptotal as decimal(15,2),
	@imptotal1 as decimal(15,2), @imptotal2 as decimal(15,2), @tmpPorDiaDoc as Char(2),
	@ctaigv as char(10), @lcCorrela int,@lcCorrelcA CHAR(10), -----Creando Correl
	@lcfechanc as datetime,  -- definimos variables para las notas de credito
	@lcCodDocRefnc char(2), @lcserienc nchar(4), @lcNrodocnc nchar(8), 
    @lccCosto nchar(15), @lcVoucher as nchar(5), @ctaPercepcion as char(10), @Percepcion varchar(5), 
    @MontoPercepcion decimal(15,2), @automatico nchar(3), @fefec nchar(10), @ctabancaria varchar(50),
	@CuentaAux varchar(50), @Adicional2 decimal(12, 3), @Adicional3 decimal(12, 3),
	@p41 char(10)  --- parametro de input output

Declare @correl as nchar(10),@correl3 as char(10),
	@movc int, @movc3 int, @nrodocumento as char(14),@nrodocumento2 as char(14), @hoy as datetime

---- acepta crear la 1ra vez el asiento
set @tmpPorDiadoc ='SI'

--migra datos de excel
if @lcdireccion<>''
begin
	exec spp_MigrarComprasVentas0  @lcdireccion, @TMovimiento
end
	set @hoy = getdate()

-- actualizar clientes 
-------seleccionando clientes nuevos
declare @ruc as char(11), @razon_social as char(100),@direccion as char(100),@codclipro as char(2)

declare nuevosclientes cursor 
	LOCAL STATIC READ_ONLY FORWARD_ONLY
	for
	select (case when len(rtrim(proveedor))=8 then '1' else '6' end) codclipro,proveedor, razon_social,direccion from (
		select * from (
			select proveedor, razon_social,isnull(rtrim(direccion),'') direccion from exportaventas where proveedor is not null 
			group by proveedor, razon_social,direccion 
			) prove left outer join 
			(select ruc from tbl_msto_ClienteProveedor WHERE Estado=1) clie 
			on prove.proveedor = clie.ruc
			) clientesnuevos 
	where ruc is null 

open nuevosclientes
fetch next from nuevosclientes
into @codclipro,@ruc, @razon_social,@direccion
WHILE @@FETCH_STATUS = 0
BEGIN
	exec spp_instup_tablagen @codclipro,@razon_social,@ruc,
	'-','-',0,0,0,0,0,0,0,0,0,0,0,0,0,0,'1','0','-','-','-',
	'-','-','0','-','0','-','0','-','0','-','-','-','-','-',0,'','','',4,
	@direccion,'','@','.com',
	'','','','','',1,'','','','',0,0,'CP','',0,@idempresa

	fetch next from nuevosclientes
	into @codclipro,@ruc, @razon_social,@direccion
end 

CLOSE nuevosclientes
DEALLOCATE nuevosclientes
---- fin actualiza clientes
--Buscando solo los registros sin subir
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaventas') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpExportaventas
END
-------------------------------------
select @CodMGC =grupo from exportaventas where grupo is not null group by grupo

SELECT * into tmpExportaventas
FROM exportaventas
-- las tres siguiente lineas bloquear para el colegio contadores permite varias 12 con una sola 70
WHERE rtrim(Proveedor)+tipo_documento+nro_documento not in (select rtrim(codpro)+codigodocumentoreferencia+nrodocreferencia from movcontables_d  --solo registros no subidos
				where codunidadeconomica BETWEEN @codUnidadA AND @codUnidadB and left(nrodocumento,3) = rtrim(@CodMGC)+right(rtrim(@anio1),1) and estado in ('-','D') 
				group by rtrim(codpro)+codigodocumentoreferencia+nrodocreferencia)

--fin de buscar solo los registros sin subir

-- asigna variables a los campos de cada registro 
-- filtra registros que no tienen movimientos (solo los no subidos) select Proveedor+tipo_documento+nro_documento ,* from tmpexportaventas
DECLARE vistasubir CURSOR  
	LOCAL STATIC READ_ONLY FORWARD_ONLY
	FOR
SELECT año, mes, zona, unidad_economica,fecha_registro=min(fecha_registro), fecha_Documento=min(fecha_documento), grupo, 
	   glosa = min(rtrim(glosa)), --+' '+ proveedor, 
	   nro_documento=min(nro_documento),nro_documento2=min(nro_documento2), cancelado=min(cancelado),
		voucher
FROM tmpExportaventas
WHERE Año = @anio1
		AND mes between @mesA and @mesB --cancelado = '1' --and right(rtrim(asociado),2)<=2
		AND zona BETWEEN @ZonaA AND @ZonaB
		AND UNIDAD_ECONOMICA BETWEEN @codUnidadA AND @codUnidadB
group by año, mes, zona, unidad_economica,grupo, voucher
ORDER BY zona, unidad_economica

OPEN vistasubir
FETCH NEXT FROM vistasubir
INTO @Anio, @mes, @Zona, @CodUnidadEconomica, @FechContable,
	 @FechDocumento, @CodMGC, @Glosa, @nrodocumento, @nrodocumento2, @cancelado, 
	@lcVoucher
WHILE @@FETCH_STATUS = 0 
BEGIN

--crea el asiento por dia o por documento
IF @tmpPorDiaDoc = 'SI' 
BEGIN
	set @correl = '' 

	--- Crear cabecera para un nuevo asiento contable COMPRAS
	exec spp_instup_MovContables_C @idMovContable_c=0,@anio=@Anio,@mes=@mes, @zona=@Zona, @CodUnidadEconomica=@CodUnidadEconomica,@NroDoc=@correl output,
		@FechCo=@FechDocumento,@CodMGC= @CodMGC, @Glosa=@Glosa,@Estado='',@OPER=''

	--verifica si el asiento es por dia o por documento
	set @tmpPorDiaDoc = (Case When @porDiaDoc= 'PORDIA' Then 'SI' Else 'NO' End)
END
-------- obtener el nro de cabecera creada para el registro
select @movc = idmovcontables_c from movcontables_c where nrodoc=@correl and codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC and anio= @Anio and mes= @mes
set @nrodoc = @correl 

--crea el cursor detalle movimientos
DECLARE vistadetalle CURSOR   
	LOCAL STATIC READ_ONLY FORWARD_ONLY
	FOR
SELECT unidad_economica, fecha_documento, tipo_documento,
	nro_documento, nro_documento2,isnull(rtrim(cuenta_contable),'') cuenta_contable, detalle_venta, TipoMov = 'D', Afecto, tipo_Moneda, TipoCambio = isnull(tipo_cambio,0.00), 
	importe_debe, importe_haber,
	Proveedor,  tipo_Operacion, isnull(rtrim(Cuenta_Abono),'') Cuenta_Abono, Monto_IGV, TipoMedioPago='008',
	fechanc = isnull(convert(datetime,fechanc,103),'1900-01-01 00:00:00.000'), 
	coddocrefnc = isnull(tipo_docnc,''),
	serienc = isnull(left(nro_docnc,4),''),
	nrodocnc = isnull(right(nro_docnc,7),''),
	ccosto= isnull(ccosto,''),ltrim(case when percepcion=0 then '' else convert(varchar(5),percepcion) end) percepcion, 
	(case when monto_percepcion=0 then 0 else monto_percepcion end) montopercepcion,
	fecha_documento fechdoc2, --+convert(int,(case when detalle_venta like '%CREDITO%' then substring(detalle_venta,28,len(detalle_venta)-27)+30 else 0 end)) fechdoc2,
	(case when isnull(automatico,'') in ('','N') then '-' when isnull(automatico,'') in ('S2') then 'S2' else 'D' end) automatico, isnull(fefec,'') fefec,Adicional2,adicional3
FROM tmpExportaventas
WHERE voucher=@lcVoucher and --nro_documento = @nrodocumento and
		Año = @anio1
		AND mes between @mesA and @mesB --cancelado = '1' --and right(rtrim(asociado),2)<=2
		AND zona BETWEEN @ZonaA AND @ZonaB
		AND UNIDAD_ECONOMICA BETWEEN @codUnidadA AND @codUnidadB
---- las dos siguiente lineas bloquear para el colegio contadores permite varias 12 con una sola 70
--		and Proveedor+tipo_documento+nro_documento not in (select codpro+codigodocumentoreferencia+nrodocreferencia from movcontables_d  --solo registros no subidos
--				where codunidadeconomica BETWEEN @codUnidadA AND @codUnidadB and left(nrodocumento,3) = grupo+right(rtrim(@anio),1) and estado in ('-','D') 
--				group by codpro+codigodocumentoreferencia+nrodocreferencia)
OPEN vistadetalle
FETCH NEXT FROM vistadetalle INTO @CodUnidadEconomica, @FechDocumento, @CodigoDocumentoReferencia,
	@Nrodoc, @Nrodoc2,@CodCuenta,@glosa, @TipoMov, @Afecto, @Moneda, @TipoCambio, @impDebe, @impHaber, 
	@codPro, @tipoOper, @CuentaAbono, @MontoIGV, @TipoMedioPago, @lcfechanc,
	@lcCodDocRefnc,@lcserienc,
	@lcNrodocnc,@lccCosto,@percepcion,@montopercepcion,@FechDocumento2,@automatico, @fefec,@Adicional2,@Adicional3

	WHILE @@FETCH_STATUS = 0
	BEGIN
	--------------------
	Select @lcCorrela=e_corr from empresa where idempresa = @IdEmpresa

	UPDATE Empresa SET E_CORR = E_CORR + 1 where idempresa=@idempresa
	SET @lcCorrelcA =Replicate('0',10-LEN(@lcCorrela+1))+ CONVERT(CHAR,@lcCorrela+1)

----------------------- registra las cuentas 6011, 1211 y su dinamica 2011 y 6111 segun plan contable
---Define parametros de acuerdo al tipo de cambio
	Set @impDebe  = (Case When @Moneda = 1 Then @impDebe Else @impDebe*@tipocambio End) 
	Set @impHaber  = (Case When @Moneda = 1 Then @impHaber Else @impHaber*@tipocambio End) 
	Set @montoIGV = (Case When @Moneda = 1 Then @MontoIGV Else @impDebe*@tipocambio*(select valor from parametros where clave ='porcentajeIGV' and idempresa = @idempresa)/100 End) 
	SET @ImpDebe1 = @impDebe + (case When ltrim(rtrim(@TMovimiento))= 'VENTAS' then @montoIGV else 0.00 end)
	SET @ImpHaber1 = @impHaber --+ (case When ltrim(rtrim(@TMovimiento))= 'VENTAS' then @montoIGV else 0.00 end)
	set @impDebeDolar = (Case When @Moneda = 1 Then 0.00 Else @impDebe*@tipocambio End) 
	set @impHaberDolar = (Case When @Moneda = 1 Then 0.00 Else @impHaber*@tipocambio End) 
	set @imptotal = (Case When @Moneda = 1 Then @impDebe+@impHaber+@montoigv Else (@impDebe+@impHaber+@montoigv)*@tipocambio End)
	select @ctaigv = valor from parametros where clave ='CuentaIGV' and idempresa = @IdEmpresa

---fin define parametros
	exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
	@correl, ' ','-','-','-',
	@hoy,@CodMGC, '-','-',@CodigoDocumentoReferencia,
	@NroDoc,@FechDocumento, @FechDocumento2,@CodigoDocumentoReferencia,
	@NroDoc2,'1900-01-01 00:00:00.000','-','-','-','',@CodCuenta,@lccCosto,
	@TipoMov,@Glosa,'-',@Afecto,@Moneda,@TipoCambio,@impDebe1,@impHaber1,0,0,'-','-',
	@codPro,'-',@hoy, @lcCorrelcA ,'-','-','-',0,'- ','-',	'0',
	@CodigoDocumentoReferencia,@NroDoc,0,0,'-',
	'','','1900-01-01 00:00:00.000','',0,@TipoOper,'',
	'1990-01-01 00:00:00.000','',@lcfechanc,
	@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@percepcion,
	@montopercepcion,@CuentaAbono,@MontoIGV,'',
	'1900-01-01 00:00:00.000',0,'008',
	0,0,@Adicional3

	set @CuentaAbono3 = @cuentaAbono

	set @lccCosto=''

	IF @montoIGV <> 0 
	BEGIN  
	----------------------- registra la cuenta 4011 igv
		-- Creando variables de IGV para las compras y ventas D-H
		SET @montoIGVCompras = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then @montoIGV Else 0.00 End) 
		SET @montoIGVVentas  = (Case When ltrim(rtrim(@TMovimiento))= 'VENTAS' Then @montoIGV Else 0.00 End) 
		
		if @CodigoDocumentoReferencia='07' and @montoIGVCompras>0 
		Begin 
			SET @montoIGVVentas  = @montoIGVCompras	
			SET @montoIGVCompras = 0.00
		End

		if @CodigoDocumentoReferencia='07' and @montoIGVVentas>0 
		Begin 
			SET @montoIGVCompras = 0.00
			SET @montoIGVVentas  = @montoIGVVentas
		End

		--- Actualizando asientos de Compras
		exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
		@correl,'','-','-','-',
		@hoy,@CodMGC,'- ','-',@CodigoDocumentoReferencia,
		@NroDoc,@FechDocumento, @FechDocumento2,@CodigoDocumentoReferencia,
		@NroDoc2,'1900-01-01 00:00:00:000','-','-','-','',@ctaIgv,@lccCosto,
		'D',@Glosa,'-',@Afecto,@Moneda,@TipoCambio,@montoIGVcompras,@montoIGVVentas,0,0,'- ','-',
		@codPro,'-', @hoy, @lcCorrelcA,'D','-','-',0,'- ','-','0',
		@CodigoDocumentoReferencia,@NroDoc,0,0,'-',
		'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
		'1990-01-01 00:00:00:000','',@lcfechanc,
	@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@percepcion,@montopercepcion,
		@CuentaAbono3,@MontoIGV,'','1900-01-01 00:00:00:000',0,
		'008',0,0,@Adicional3

	END
--------------------------
	IF @montopercepcion <> 0 
	BEGIN  
	----------------------- registra la cuenta 4013 percepcion
		-- Creando variables de IGV para las compras y ventas D-H
		SET @CtaPercepcion=(select valor from parametros where clave ='CuentaPercepcion' and idempresa = @IdEmpresa)

		--- Actualizando asientos de Compras
		exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
		@correl,'','-','-','-',
		@hoy,@CodMGC,'- ','-',@CodigoDocumentoReferencia,
		@NroDoc,@FechDocumento, @FechDocumento2,@CodigoDocumentoReferencia,
		@NroDoc2,'1900-01-01 00:00:00:000','-','-','-','',@ctaPercepcion,@lccCosto,
		'D',@Glosa,'-',@Afecto,@Moneda,@TipoCambio,@montoPercepcion,0,0,0,'- ','-',
		@codPro,'-', @hoy, @lcCorrelcA,'D','-','-',0,'- ','-','0',
		@CodigoDocumentoReferencia,@NroDoc,0,0,'-',
		'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
		'1990-01-01 00:00:00:000','',@lcfechanc,
	@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@percepcion,@montopercepcion,
		@CuentaAbono3,@MontoIGV,'','1900-01-01 00:00:00:000',0,
		'008',0,0,@Adicional3

	END
-----------------------registra la cuenta 4211 total y 7011 total
if @automatico='S2'
	begin -- solo para afosecat xk tiene el auomatico = S2, el costo lo distribuye en un 80%
		declare @automatic2 as char(2)
		set @automatic2 = @automatico
		set @automatico='D'
		set @imptotal1 = (Case When @CodigoDocumentoReferencia='07' Then 0.0 else @Adicional2 end)
		set @imptotal2 = (Case When @CodigoDocumentoReferencia='07' Then @Adicional3 else 0.0 end)
	End
else --para el resto no distribuye el monto
	begin 
		set @imptotal1 = (Case When @CodigoDocumentoReferencia='07' Then 0.0 else @imptotal + (case When ltrim(rtrim(@TMovimiento))= 'VENTAS' then @montoIGV*(-1) else 0.00 end)+@montopercepcion end)
		set @imptotal2 = (Case When @CodigoDocumentoReferencia='07' Then @imptotal + (case When ltrim(rtrim(@TMovimiento))= 'VENTAS' then @montoIGV*(-1) else 0.00 end)+@montopercepcion else 0.0 end)
	End

-- aumenta correlativo si no e automatico la cuenta abono
if @automatico='-' and (left(@CodCuenta,3) in ('104','103') or left(@CuentaAbono,3) in ('104','103'))
	begin 
	Select @lcCorrela= (select e_corr from empresa where idempresa = @IdEmpresa)

	UPDATE Empresa SET E_CORR = E_CORR + 1 where idempresa=@idempresa
	SET @lcCorrelcA =Replicate('0',10-LEN(@lcCorrela+1))+ CONVERT(CHAR,@lcCorrela+1)
	
	end
	set @ctabancaria= (case when left(@CuentaAbono,3)='104' then @CuentaAbono else '-' end)
-- fin aumenta correlativo si no e automatico la cuenta abono

exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
@correl,'','-','-','-',
@hoy,@CodMGC,'- ','-',@CodigoDocumentoReferencia,
@NroDoc,@FechDocumento,@FechDocumento2,@CodigoDocumentoReferencia,
@NroDoc2,'1900-01-01 00:00:00:000',@ctabancaria,'-','-','',@CuentaAbono,@lccCosto,
'D',@Glosa,'-',@Afecto,@Moneda,@TipoCambio,@imptotal2,@imptotal1,0,0,'-','-',
@codPro,'-',@hoy,@lcCorrelcA,@automatico,'-','-',0,'-','-','0',
@CodigoDocumentoReferencia,@NroDoc,0,0,'-',
'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
'1990-01-01 00:00:00:000','',@lcfechanc,
@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@percepcion,@montopercepcion,
@CuentaAbono3,@MontoIGV,'','1900-01-01 00:00:00:000',0,
'008',0,0,@Adicional3

set @automatico=@automatic2
-- los que usen en parametros las ctas Aux como fijos (solo para el caso AFOSECAT), deben definir en excel el campo Automatico='S2' 
if @automatico='S2'
	begin 
		SET @CuentaAux=(select valor from parametros where idempresa = @IdEmpresa and clave ='CuentaAuxiliar' )
		SET @automatico = 'D'
		-- solo para afosecat xk tiene el auomatico = S2, el costo lo distribuye en un 20%
		set @imptotal1 = (Case When @CodigoDocumentoReferencia='07' Then 0.0 else @Adicional3 end)
		set @imptotal2 = (Case When @CodigoDocumentoReferencia='07' Then @Adicional2 else 0.0 end)

		exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
		@correl,'','-','-','-',
		@hoy,@CodMGC,'- ','-',@CodigoDocumentoReferencia,
		@NroDoc,@FechDocumento,@FechDocumento2,@CodigoDocumentoReferencia,
		@NroDoc2,'1900-01-01 00:00:00:000',@ctabancaria,'-','-','',@CuentaAux,@lccCosto,
		@TipoMov,@Glosa,'-',@Afecto,@Moneda,@TipoCambio,@imptotal2,@imptotal1,0,0,'-','-',
		@codPro,'-',@hoy,@lcCorrelcA,@automatico,'-','-',0,'-','-','0',
		@CodigoDocumentoReferencia,@NroDoc,0,0,'-',
		'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
		'1990-01-01 00:00:00:000','',@lcfechanc,
		@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@percepcion,@montopercepcion,
		@CuentaAbono3,@MontoIGV,'','1900-01-01 00:00:00:000',0,
		'008',0,0,@Adicional3

	end

	------ registrar cancelaciones de facturas
	IF @cancelado ='1' and @glosa<>'ANULADO'
	BEGIN
		--Asignando glosa de compra y venta
Print 'cancelado?'
		SET @GlosaCancelacion = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then 'PAGO A PROVEEDORES M*' Else 'CANCELACION EN EFECTIVO M*' End) 
		set @CodMGC2 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then '20' Else '02' End)
		--crea cabecera pago efectivo
		exec spp_instup_MovContables_C @idMovContable_c=0,@anio=@Anio,@mes=@mes, @zona=@Zona, @CodUnidadEconomica=@CodUnidadEconomica,@NroDoc=@correl3 output,
		@FechCo=@FechDocumento,@CodMGC= @CodMGC2, @Glosa=@GlosaCancelacion,@Estado='',@OPER=''

		-------- obtener el nro de cabecera creada para el registro
		--set @correl3 = (select max(nrodoc) from movcontables_c where codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC2 and anio= @Anio and mes= @mes)
		select @movc3 = idmovcontables_c, @nrodoc3 = nrodoc from movcontables_c where codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC2 and anio= @Anio and mes= @mes and nrodoc=@correl3
		
		--- Crea detalle pago efectivo cta 4211 y 1011
		set @CuentaAbono4 = (select valor from parametros where idempresa = @idEmpresa and clave = 'CuentaAutoCCompras')
		set @CuentaAbono2 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then @CuentaAbono Else @CuentaAbono4 End)

		set @imptotal2 = (Case When @CodigoDocumentoReferencia='07' Then @imptotal else 0.0 end)
		set @imptotal1  = (Case When @CodigoDocumentoReferencia='07' Then 0.0 else @imptotal end)
		
		set @p41='0         '
		exec spp_inst_MovContables_D 0,@MovC3,@CodUnidadEconomica,
		@correl3,'','-','-','-',
		@hoy,@CodMGC2,'- ','-',@CodigoDocumentoReferencia,
		@NroDoc,@FechDocumento,@FechDocumento,@CodigoDocumentoReferencia,
		@NroDoc2,'1900-01-01 00:00:00:000','-','-','-','',@CuentaAbono2,@lccCosto,
		'D',@Glosa,'a',0,@Moneda,@TipoCambio,@impTotal1,@imptotal2,0,0,'- ',@codPro,
		@codPro,'-',@hoy,@lcCorrelcA,'-','-','-',0,'-','-','0',
		@CodigoDocumentoReferencia,@nrodoc,0,0,'-',
		'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
		'1990-01-01 00:00:00:000','',@lcfechanc,
		@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@percepcion,@montopercepcion,
		@CuentaAbono3,0,'','1900-01-01 00:00:00:000',0,
		'008',0,0,0

	--- detalle pago efectivo cta 1011 y 1211
		set @CuentaAbono2 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then @CuentaAbono4 Else @codCuenta End)

		set @imptotal2 = (Case When @CodigoDocumentoReferencia='07' Then @imptotal else 0.0 end)
		set @imptotal1  = (Case When @CodigoDocumentoReferencia='07' Then 0.0 else @imptotal end)

		exec spp_inst_MovContables_D 0,@MovC3,@CodUnidadEconomica,
		@correl3,'','-','-','-',
		@hoy,@CodMGC2,'-','-',@CodigoDocumentoReferencia,
		@NroDoc,@FechDocumento,@FechDocumento,@CodigoDocumentoReferencia,
		@NroDoc2,'1900-01-01 00:00:00:000','-','-','-','',@CuentaAbono2,@lccCosto,
		'D',@Glosa,'b',0,@Moneda,@TipoCambio,@imptotal2,@impTotal1,0,0,'-',@codPro,
		@codPro,'-',@hoy,@lcCorrelcA,'-','-','-',	0,'-','-','0',
		@CodigoDocumentoReferencia,@nrodoc,0,0,'-',
		'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
		'1990-01-01 00:00:00:000','',@lcfechanc,
		@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@percepcion,@montopercepcion,
		@CuentaAbono3,0,'','1900-01-01 00:00:00:000',0,
		'008',0,0,0

	END

	FETCH NEXT FROM vistadetalle INTO @CodUnidadEconomica, @FechDocumento, @CodigoDocumentoReferencia,
		@Nrodoc, @Nrodoc2,@CodCuenta,@glosa, @TipoMov, @Afecto, @Moneda, @TipoCambio, @impDebe, @impHaber,
		@codPro, @tipoOper, @CuentaAbono, @MontoIGV, @TipoMedioPago,@lcfechanc,
		@lcCodDocRefnc,@lcserienc,
		@lcNrodocnc,@lccCosto,@percepcion,@montopercepcion, @FechDocumento2,@automatico, @fefec,@Adicional2,@Adicional3
END

CLOSE vistadetalle
DEALLOCATE vistadetalle

--------
FETCH NEXT FROM vistasubir
INTO @Anio, @mes, @Zona, @CodUnidadEconomica, @FechContable,
	 @FechDocumento, @CodMGC, @Glosa, @nrodocumento, @nrodocumento2, @cancelado, @lcVoucher
end 

CLOSE vistasubir
DEALLOCATE vistasubir

----------------------------------------------
---- Inicia proceso para registros existentes los que amortizan su deuda o cancelacion de la misma
----------------------------------------------
---- asigna variables a los campos de cada registro y filtra registros que TIENEN movimientos 
--
--DECLARE vistasubir CURSOR 
--	LOCAL STATIC READ_ONLY FORWARD_ONLY
--	FOR
--SELECT año, mes, zona, unidad_economica, fecha_registro, fecha_documento, grupo, 
--	   glosa = rtrim(detalle_venta), -- +' '+ proveedor, 
--	   nro_documento, nro_documento2,cancelado, voucher
--FROM exportaventas
--WHERE Año = @anio1
--		AND mes between @mesA and @mesB and cancelado = '1' --and right(rtrim(asociado),2)<=2
--		AND zona BETWEEN @ZonaA AND @ZonaB
--		AND UNIDAD_ECONOMICA BETWEEN @codUnidadA AND @codUnidadB
--		and tipo_documento+nro_documento in (select codigodocumentoreferencia+nrodocreferencia from vDocumentosPendientes(@anio1+'-'+@codUnidadA)   --filtra solo SUBIDOS
--				where codunidadeconomica BETWEEN @codUnidadA AND @codUnidadB and estado <> '4' group by codigodocumentoreferencia,nrodocreferencia having sum(impdebe)<>0)
--				ORDER BY zona, unidad_economica
--
--OPEN vistasubir
--
--FETCH NEXT FROM vistasubir
--INTO @Anio, @mes, @Zona, @CodUnidadEconomica, @FechContable,
--	 @FechDocumento, @CodMGC, @Glosa, @nrodocumento,@nrodocumento2, @cancelado, @lcVoucher
--WHILE @@FETCH_STATUS = 0
--BEGIN
--
--	-- obtener el ultimo nro del registro cabecera
--	set @correl = (select max(nrodoc) from movcontables_c 
--					where codunidadeconomica = @CodUnidadEconomica 
--						and codmgc= @CodMGC and anio= @Anio and mes= @mes)
--	set @hoy = getdate()
--
--	--Asignando glosa de compra y venta
--	SET @GlosaCancelacion = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then 'PAGO A PROVEEDORES M*' Else 'CANCELACION EN EFECTIVO M*' End) 
--	set @CodMGC2 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then '20' Else '02' End)
--	--crea cabecera pago efectivo
--	exec spp_instup_MovContables_C 0,@Anio,@mes, @Zona, @CodUnidadEconomica,@correl,
--	@FechDocumento,@CodMGC2,@GlosaCancelacion,'',''
--
-------------------------------------
--	--crea el cursor detalle movimientos
--	DECLARE vistadetalle CURSOR 
--	LOCAL STATIC READ_ONLY FORWARD_ONLY
--	FOR
--	SELECT unidad_economica, fecha_Documento, tipo_documento,
--		nro_documento, nro_documento2,cuenta_contable, detalle_venta, TipoMov = 'D', Afecto, tipo_Moneda, TipoCambio = isnull(tipo_cambio,0.00), 
--		importe_debe, 
--		Proveedor,  tipo_Operacion, Cuenta_Abono, Monto_IGV, TipoMedioPago='008',fechanc = isnull(fechanc,''),
--		CodDocRefnc=isnull(tipo_docnc,''),serienc=isnull(left(nro_docnc,4),''),Nrodocnc=isnull(right(nro_docnc,7),''),
--		ccosto=isnull(ccosto,''),ltrim(case when percepcion='0' then '213' else convert(varchar(5),percepcion) end) percepcion, 
--	(case when monto_percepcion=0 then 0 else monto_percepcion end) montopercepcion,
--	fecha_documento+convert(int,(case when detalle_venta like '%CREDITO%' then substring(detalle_venta,28,len(detalle_venta)-27)+30 else 0 end)) fechdoc2,
--	(case when isnull(automatico,'') in ('','N') then '-' when isnull(automatico,'') in ('S2') then 'S2' else 'D' end) automatico, isnull(fefec,'') fefec,Adicional2,adicional3  
--	FROM exportaventas
--	WHERE nro_documento = @nrodocumento and
--			Año = @anio1
--			AND mes between @mesA and @mesB and cancelado = '1' --and right(rtrim(asociado),2)<=2
--			AND zona BETWEEN @ZonaA AND @ZonaB
--			AND UNIDAD_ECONOMICA BETWEEN @codUnidadA AND @codUnidadB
--			and Proveedor+tipo_documento+nro_documento in (select codpro+codigodocumentoreferencia+nrodocreferencia from movcontables_d  --solo registros no subidos
--					where codunidadeconomica BETWEEN @codUnidadA AND @codUnidadB and left(nrodocumento,3) = grupo+right(rtrim(@anio),1) and estado in ('-','D') group by codpro+codigodocumentoreferencia,nrodocreferencia)
--	OPEN vistadetalle
--	FETCH NEXT FROM vistadetalle INTO @CodUnidadEconomica, @FechDocumento, @CodigoDocumentoReferencia,
--		@Nrodoc, @Nrodoc2,@CodCuenta,@glosa, @TipoMov, @Afecto, @Moneda, @TipoCambio, @impDebe, 
--		@codPro, @tipoOper, @CuentaAbono, @MontoIGV, @TipoMedioPago,@lcfechanc,
--	@lcCodDocRefnc,@lcserienc,@lcNrodocnc, @lccCosto,@percepcion,@montopercepcion, @FechDocumento2,
--	@automatico, @fefec,@Adicional2,@Adicional3
--
--	WHILE @@FETCH_STATUS = 0
--	BEGIN
--		--------------------
--		Select @lcCorrela= (select e_corr from empresa where idempresa = @IdEmpresa)
--
--		UPDATE Empresa SET E_CORR = E_CORR + 1 where idempresa=@idempresa
--		SET @lcCorrelcA =Replicate('0',10-LEN(@lcCorrela+1))+ CONVERT(CHAR,@lcCorrela+1)
--
--	----------------------- registra las cuentas 6011, 1211 y su dinamica 2011 y 6111 segun plan contable
--	---Define parametros de acuerdo al tipo de cambio
--		Set @impDebe  = (Case When @Moneda = 1 Then @impDebe Else @impDebe*@tipocambio End) 
--		Set @montoIGV = (Case When @Moneda = 1 Then @MontoIGV Else @impDebe*@tipocambio*(select valor from parametros where clave ='porcentajeIGV' and idempresa = @idempresa)/100 End) 
--		SET @ImpDebe1 = @impDebe + (case When ltrim(rtrim(@TMovimiento))= 'VENTAS' then @montoIGV else 0.00 end)
--		set @impDebeDolar = (Case When @Moneda = 1 Then 0.00 Else @impDebe*@tipocambio End) 
--		set @imptotal = (Case When @Moneda = 1 Then @impDebe+@montoigv+@montopercepcion Else (@impDebe+@montoigv+@montopercepcion)*@tipocambio End) 
--		set @ctaigv   = (select valor from parametros where clave ='CuentaIGV' and idempresa = @IdEmpresa)
--	---fin define parametros
--
----------------------------------------
--		-------- obtener el nro de cabecera creada para el registro
--		set @correl = (select max(nrodoc) from movcontables_c where codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC2 and anio= @Anio and mes= @mes)
--		select @movc = idmovcontables_c,@nrodoc = nrodoc from movcontables_c where codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC2 and anio= @Anio and mes= @mes and nrodoc=@correl
--		
--		--- Crea detalle pago efectivo cta 4211 y 1011 
--		set @CuentaAbono4 = (select valor from parametros where idempresa = @IdEmpresa and clave = 'CuentaAutoCCompras')
--		set @CuentaAbono2 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then @CuentaAbono Else @CuentaAbono4 End)
--
--		set @p41='0         '
--		exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
--		@correl,'','-','-','-',
--		@hoy,@CodMGC2,'- ','-',@CodigoDocumentoReferencia,
--		@NroDocumento,@FechDocumento,@FechDocumento2,@CodigoDocumentoReferencia,
--		@NroDoc,'1900-01-01 00:00:00:000','-','-','-','',@CuentaAbono2,@lccCosto,
--		'D',@Glosa,'-',0,@Moneda,@TipoCambio,@impTotal,0,0,0,'- ',@codPro,
--		@codPro,'-',@hoy,@lcCorrelcA,'-','-','-',0,'-','-','-',
--		@CodigoDocumentoReferencia,@nrodoc,0,0,'-',
--		'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
--		'1990-01-01 00:00:00:000','',@lcfechanc,
--	@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@percepcion,@montopercepcion,
--		@CuentaAbono3,0,'','1900-01-01 00:00:00:000',0,
--		'008',0,0,0
--
--	--- detalle pago efectivo cta 1011 y 1211
--		set @CuentaAbono2 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then @CuentaAbono4 Else @codCuenta End)
--
--		exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
--		@correl,'','-','-','-',
--		@hoy,@CodMGC2,'-','-',@CodigoDocumentoReferencia,
--		@NroDocumento,@FechDocumento,@FechDocumento2,@CodigoDocumentoReferencia,
--		@NroDoc,'1900-01-01 00:00:00:000','-','-','-','',@CuentaAbono2,@lccCosto,
--		'D',@Glosa,'-',0,@Moneda,@TipoCambio,0,@impTotal,0,0,'-',@codPro,
--		@codPro,'-',@hoy,@lcCorrelcA,'-','-','-',	0,'-','-','-',
--		@CodigoDocumentoReferencia,@nrodoc,0,0,'-',
--		'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
--		'1990-01-01 00:00:00:000','',@lcfechanc,
--	@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@percepcion,@montopercepcion,
--		@CuentaAbono3,0,'','1900-01-01 00:00:00:000',0,
--		'008',0,0,0
--
----	END
--	FETCH NEXT FROM vistadetalle INTO @CodUnidadEconomica, @FechDocumento, @CodigoDocumentoReferencia,
--		@Nrodoc, @Nrodoc2,@CodCuenta,@glosa, @TipoMov, @Afecto, @Moneda, @TipoCambio, @impDebe, 
--		@codPro, @tipoOper, @CuentaAbono, @MontoIGV, @TipoMedioPago,@lcfechanc,
--		@lcCodDocRefnc,@lcserienc,@lcNrodocnc, @lccCosto,@percepcion,@montopercepcion, @FechDocumento2,
--		@automatico, @fefec,@Adicional2,@Adicional3
--END
--
--CLOSE vistadetalle
--DEALLOCATE vistadetalle
--
----------
--FETCH NEXT FROM vistasubir
--INTO @Anio, @mes, @Zona, @CodUnidadEconomica, @FechDocumento,
--	 @FechContable, @CodMGC, @Glosa, @nrodocumento,@nrodocumento2, @cancelado, @lcVoucher
--end 
--
--CLOSE vistasubir
--DEALLOCATE vistasubir
	DROP TABLE tmpExportaventas
/****** Object:  StoredProcedure [dbo].[spp_MigrarComprasVentas1C]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_MigrarComprasVentas1C]
@lcdireccion varchar(250), 
@ZonaA varchar(6),
@ZonaB varchar(6),
@CodUnidadA varchar(10),
@CodUnidadB varchar(10),
@MesA char(2),
@MesB char(2),
@Anio1 char(4),
@IdEmpresa int ,
@tMovimiento Char(8),  
@pordiaDoc char(6)

as
--Solicitar variables 
-- exec spp_MigrarComprasVentas1C '','000012','000012','000012','000012','05','05','2019',5,'COBRAN','PORDIA'

--Declare @correl as nchar(10),@correl3 as char(10),
--	@movc int, @movc3 int, @nrodocumento as char(14),@nrodocumento2 as char(14) , @hoy as datetime

--migra datos de excel
if @lcdireccion<>''
begin
	exec spp_MigrarComprasVentas0  @lcdireccion, @TMovimiento
end
	--set @hoy = getdate()

-- actualizar clientes 
---seleccionando clientes nuevos
insert into tbl_msto_ClienteProveedor
select (case when len(rtrim(proveedor))=8 then '1' else '6' end) codclipro,left(razon_social,100) razon_social,proveedor, '' nombre,'' apellido,'-' telefono,4 tipoClienteproveedor,left(direccion,100) direccion,
		'1' codzona,'' cobrador,'@' correo,'.com' PaginaWeb,'' RepreLegal,'' CodAval,'' Aval,'' DirAval,'' TelAval,1 estado
 from (
		select * from (
			select proveedor, isnull(rtrim(razon_social),'') razon_social,isnull(rtrim(direccion),'') direccion from exportaventas where proveedor is not null 
			group by proveedor, razon_social,direccion 
			) prove 
			left outer join 
			(select ruc from tbl_msto_ClienteProveedor WHERE Estado=1) clie 
			on prove.proveedor = clie.ruc
			) clientesnuevos 
	where ruc is null 

---- fin actualiza clientes
--Buscando solo los registros sin subir
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmp') AND type in (N'U'))
BEGIN 
	drop table tmp
	drop table tmp1
	drop table tmp4
	--drop table tmpexporta1
	--drop table tmpExportaventas1
	Drop table exportaventas0
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'exportaventas0') AND type in (N'U'))
BEGIN 
	Drop table exportaventas0
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaventas') AND type in (N'U'))
BEGIN 
	Drop table tmpExportaventas
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'exportaVta1') AND type in (N'U'))
BEGIN 
	Drop table exportaVta1
	Drop Table ExportaVta2
END
-------------------------------------
--select @CodMGC =grupo from exportaventas where grupo is not null group by grupo
--select * from tmpexportaventas
declare @CtaCancelado as varchar(15),@CtaISC as varchar(15),@ctaPercepcion as char(10),@ctaigv as char(10),@lcCorrela int

select @CtaCancelado = valor from Parametros where clave ='CuentaAutoCVentas'and idempresa = @IdEmpresa and estado='1' group by valor
select @CtaPercepcion = valor from Parametros where clave ='CuentaPercepcion'and idempresa = @IdEmpresa and estado='1' group by valor
select @CtaIGV = valor from Parametros where clave ='CuentaIGV'and idempresa = @IdEmpresa and estado='1' group by valor
select @CtaISC = valor from Parametros where clave ='CuentaISC'and idempresa = @IdEmpresa and estado='1' group by valor

select *,
		CtaCancelado=(case When cancelado=1 then @CtaCancelado Else '' end),
		CtaPercepcion=(case When Percepcion<>0 then @CtaPercepcion Else '' end),
		CtaIGV=(case When monto_igv<>0 then @CtaIGV Else '' end),
		CtaISC=(case When monto_isc<>0 then @CtaISC Else '' end)
 into exportaventas0 
from exportaventas

print '1'
-- Seleccionando la cta_debe
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'D' tipmov 
into tmp 
from plancuentascontables
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@anio1)<'2020' then '2009' else rtrim(@anio1) end) and codcuentacontable in 
	(select cuenta_contable from exportaventas0 where cuenta_contable<>'' group by cuenta_contable)
-- Seleccionando la cta_haber
union all
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov from plancuentascontables
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@anio1)<'2020' then '2009' else rtrim(@anio1) end) and codcuentacontable in (select cuenta_abono from exportaventas0 where cuenta_abono<>'' group by cuenta_abono)
union all
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov from plancuentascontables
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@anio1)<'2020' then '2009' else rtrim(@anio1) end) and codcuentacontable in (select ctacancelado from exportaventas0 where CtaCancelado<>'' group by CtaCancelado)
union all
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov from plancuentascontables
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@anio1)<'2020' then '2009' else rtrim(@anio1) end) and codcuentacontable in (select ctaPercepcion from exportaventas0 where ctaPercepcion<>'' group by ctaPercepcion)
union all
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov from plancuentascontables
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@anio1)<'2020' then '2009' else rtrim(@anio1) end) and codcuentacontable in (select ctaIGV from exportaventas0 where ctaIGV<>'' group by ctaIGV)
union all
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov from plancuentascontables
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@anio1)<'2020' then '2009' else rtrim(@anio1) end) and codcuentacontable in (select CtaISC from exportaventas0 where ctaISC<>'' group by ctaISC)


print '2'
-- seleccionando los porcentajes por cuenta
select cta,convert(nchar(10),'100') codcuentacontable,convert(nchar(10),'100') ctahaber,convert(nchar(10),porcenta )ctadebe,
		convert(nchar(10),porcenta2) ctadebe2,convert(nchar(10),porcenta3) ctadebe3,convert(nchar(10),porcenta4) ctadebe4, tipmov 
into tmp4 from tmp
print '3'
-- seleccionando ctas automaticas con sus porcentajes
select a.cta,a.tipmov,a.cuentas,a.codcuentacontable2,b.codcuentacontable2 porcenta
into tmp1 
from (
		select cta,tipmov,cuentas,codcuentacontable2 
		from tmp
		unpivot
		( codcuentacontable2
			for cuentas in (codcuentacontable,ctadebe,ctadebe2,ctadebe3,ctadebe4,ctahaber,ctacierre)
		) 
		as unpvTTable
		where codcuentacontable2<>''
		and cuentas<>'ctacierre'
	) a inner join 
	(
		select cta,tipmov,cuentas,codcuentacontable2 
		from tmp4
		unpivot
		( codcuentacontable2
			for cuentas in (codcuentacontable,ctadebe,ctadebe2,ctadebe3,ctadebe4,ctahaber)
		) 
		as unpvTTable
		where codcuentacontable2 not in ('','0')
	) b on a.cta+a.cuentas=b.cta+b.cuentas 

Select @lcCorrela=e_corr from empresa where idempresa = @IdEmpresa
print @lcCorrela
select *,
	left(dbo.padl(@lcCorrela+ROW_NUMBER() OVER(PARTITION BY zona ORDER BY Adicional2,fecha_documento)-1,10,'0'),10) correlA,
	left(grupo,2)+right(año,1)+left(mes,2)+dbo.padl(convert(varchar(5),substring(dbo.CorrelativoMes(Zona,Unidad_Economica,grupo ,año,mes),6,5)*1-1+voucher),5,'0') Nrodocumento,
		(case when cancelado='1' then '1010001' else '' end) ctaefec,
		TotDebe = (Case When tipo_documento='07' Then importe_haber+monto_percepcion+(Case When grupo='02' Then monto_igv*-1 Else 0 End) else 0 End),
		TotHaber=(Case When tipo_documento='07' Then 0 Else importe_debe+monto_percepcion+(Case When grupo='02' Then monto_igv*-1 Else monto_igv End) End) 
into exportaVta1 
from exportaventas0 

if @lcCorrela=null 
Begin
	UPDATE Empresa SET E_CORR = (select MAX(correla) from exportaVta2)*1 where idempresa=@idempresa
End

-- Agregando los cancelados
Select @lcCorrela=e_corr from empresa where idempresa = @IdEmpresa

select Grupo=(Case When grupo='18' Then '02' when grupo='04' Then '20' End),Zona,Unidad_Economica,Año,Mes,Fecha_Registro,
		Cuenta_Contable=(Case When grupo='18' Then @CtaCancelado when grupo='04' Then Cuenta_Abono End),Cuenta_Abono=(Case When grupo='18' Then Cuenta_Contable when grupo='04' Then @CtaCancelado End),  
		Automatico='N',Proveedor,Razon_social,Direccion,Tipo_documento,Nro_Documento,Nro_Documento2,Fecha_documento,
		Detalle_venta='PAGO DEL DOCUMENTO ** '+Nro_documento + ' **', tipo_moneda='1',tipo_cambio=0,Tipo_operacion,
		Importe_Debe=(Case When importe_debe=0 Then 0 Else importe_debe+Monto_igv+Monto_percepcion End),
		Importe_Haber=(Case When importe_Haber=0 Then 0 Else importe_Haber+Monto_igv+Monto_percepcion End),Afecto='0',Monto_igv=0,isc,Monto_isc=0,Cancelado='0',Percepcion=0,Monto_percepcion=0,
		Fechanc,Tipo_Docnc,Nro_docnc,Voucher,Glosa=(Case When Grupo='04' Then 'PAGO A PROVEEDORES M*' Else 'CANCELACION EN EFECTIVO M*' End),CCosto,Fefec,Adicional2=0,Adicional3=0,
		CtaCancelado='',CtaPercepcion='',CtaIGV='',CtaISC='',
		left(dbo.padl(@lcCorrela+ROW_NUMBER() OVER(PARTITION BY zona ORDER BY LEFT(nro_documento, 7),fecha_documento)-1,10,'0'),10) correlA,
		(Case When grupo='18' Then '02' when grupo='04' Then '20' End)+right(año,1)+left(mes,2)+dbo.padl(convert(varchar(5),substring(dbo.CorrelativoMes(Zona,Unidad_Economica,(Case When grupo='18' Then '02' when grupo='04' Then '20' End) ,año,mes),6,5)*1-1+voucher),5,'0') Nrodocumento,
		ctaefec='',
		TotDebe = 0,
		TotHaber=0 
into exportaVta2 
from exportaventas0 where cancelado='1'

if @lcCorrela=null 
Begin
	UPDATE Empresa SET E_CORR = (select MAX(correla) from exportaVta2)*1 where idempresa=@idempresa
End

Select * 
into tmpexportaVentas
from exportavta1 union all Select * from exportavta2 
order by Adicional2

print 'ok1'
--actualiza registros de movcontables_C
insert into MovContables_C
select año,mes,Zona,Unidad_Economica,
	Nrodocumento,
	fecha_registro,grupo,max(glosa),''
from tmpexportaVentas
group by año,mes,Zona,Unidad_Economica,fecha_registro,grupo,voucher,Nrodocumento
order by grupo desc,voucher

print 'ok2'
--------- actualizar el detalle de movcontables_D
insert into MovContables_D
select IdMovContables_C,
tmpExportaventas.zona, 
	Nrodocumento,
	'' crp,'-' codactividad,'-' codpar,'-' codsubactividad,
	fecha_registro,left(tmpExportaventas.grupo,2) codmgc,'-' clasmovimiento,'-' ctaDestino,tipo_documento,tmpExportaventas.nro_documento,
	--DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,convert(datetime,fecha_documento,103))+1,0)) fecha_documento,
	--DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,convert(datetime,fecha_documento,103))+1,0)) fecha_vencimiento,tipo_documento coddocfuente,tmpExportaventas.nro_documento docref,fecha_documento fechref,
	fecha_documento fecha_documento,
	fecha_documento fecha_vencimiento,tipo_documento coddocfuente,tmpExportaventas.nro_documento docref,fecha_documento fechref,
	codigoCtaBancaria=(case when left(cuenta_abono,3)='104' then cuenta_abono else '-' end), '-' NroOperacion,'-' Nrocheque,'' CuentaNaturaleza,
	codcuentacontable2,isnull(ccosto,'') centrocosto,
	tipmov,rtrim(left(detalle_venta,190)) glosa,'-' orden,isnull(afecto,0) afecto,left(tipo_moneda,1) tipo_moneda,isnull(Tipo_Cambio,0) TipoCambio,
	todos.importe_debe,todos.importe_haber,0 impDebeDolar,0 impHaberDolar,'-' TipoAnexo,'-' CodAnexo, rtrim(left(proveedor,11)) codpro, '-' u_codi,fecha_registro datUsu,
	tmpExportaventas.CorrelA correlativo,todos.estado,'-' destino,'-' anexo,0 gastoIntPersonal,'-' cocach,'-' nomanx,'-' codln,tipo_documento tipodca,left(tmpExportaventas.nro_documento,10) otrodoc,0 reten,0 rigv,'-' corrigv,
	'' CodAduana,'1900-01-01 00:00:00.000' FechDua,'' CodDua,0 ISC,isnull(tipo_operacion,0) tipo_operacion,'' NroDetrac,
	'1990-01-01 00:00:00.000' fechaDetrac,'' CodigoDetraccion, 
	fechanc = isnull(convert(datetime,fechanc,103),'1900-01-01 00:00:00.000'), 
	coddocrefnc = isnull(tipo_docnc,''),
	serienc = isnull(left(nro_docnc,4),''),
	nrodocnc = isnull(right(nro_docnc,7),''),
	ltrim(case when percepcion='0' then '' else convert(varchar(5),isnull(percepcion,'')) end) percepcion, 
	(case when monto_percepcion=0 then 0 else isnull(monto_percepcion,0) end) montopercepcion,
	isnull(cuenta_abono,'-') cuentaabono,isnull(monto_igv,0) montoigv,'' numeropercepcion,'1990-01-01 00:00:00.000' fechaPercepcion,0 MontoRetencion4,
	TipoMedioPago='008',isnull(monto_isc,0) montoIsc,0 montodetraccionIvap, 0 MontoCuentaAuxiliar,0 MontoIcbPer,0 MontoRetencionIGV,'' CuentaCCosto
from tmpExportaventas inner join 
	( --CtaDebe
		select grupo,rtrim(unidad_economica) unidad_economica,nro_documento,substring(cuentas,4,2) tipo,cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) in ('de','cu') then importe_debe*(convert(numeric(4),porcenta)/100) else 0 end) importe_debe, 
		(Case when substring(cuentas,4,2)='ha' then importe_debe else (Case When substring(cuentas,4,2) in ('de','cu') Then importe_haber Else 0 End) end) importe_haber,(Case when cta=codcuentacontable2 then '-' else 'D' end) estado,tipmov,correlA,
		orden='1'
		from tmpExportaventas a inner join tmp1
			on a.cuenta_contable=tmp1.cta
		union all -- cta haber
		select grupo,rtrim(unidad_economica) unidad_economica,nro_documento,substring(cuentas,4,2),cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) ='ha' then (Case When importe_debe=0 Then importe_haber+monto_igv Else 0 End) else importe_debe+monto_igv end) importe_debe, 
		(Case when substring(cuentas,4,2) in ('de','cu') then (Case When importe_debe=0 Then importe_haber+monto_igv Else 0 End) else importe_debe+monto_igv end) importe_haber,'D' Estado,tipmov,correlA,
		orden='4'
		from tmpExportaventas a inner join tmp1
			on a.cuenta_abono=tmp1.cta
		union all --agregando el ISC
		select grupo,rtrim(unidad_economica) unidad_economica,nro_documento,substring(cuentas,4,2),cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) ='ha' then (Case When importe_debe=0 Then importe_haber Else 0 End) else importe_debe end) importe_debe, 
		(Case when substring(cuentas,4,2) in ('de','cu') then (Case When importe_debe=0 Then importe_haber Else 0 End) else importe_debe end) importe_haber,'D' Estado,tipmov,correlA,
		orden='2'
		from tmpExportaventas a inner join tmp1
			on a.CtaISC=tmp1.cta
		union all -- agregando el IGV
		select grupo,rtrim(unidad_economica) unidad_economica,nro_documento,substring(cuentas,4,2),cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) ='ha' then (Case When monto_igv=0 Then 0 Else monto_igv End) else monto_igv end) importe_debe, 
		(Case when substring(cuentas,4,2)in ('de','cu') then (Case When monto_igv=0 Then 0 Else monto_igv End) else 0 end) importe_haber,'D' Estado,tipmov,correlA,
		orden='3'
		from tmpExportaventas a inner join tmp1
			on a.CtaIGV=tmp1.cta
		union all  --agregando las percepciones
		select grupo,rtrim(unidad_economica) unidad_economica,nro_documento,substring(cuentas,4,2),cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) ='ha' then (Case When importe_debe=0 Then importe_haber Else 0 End) else importe_debe end) importe_debe, 
		(Case when substring(cuentas,4,2) in ('de','cu') then (Case When importe_debe=0 Then importe_haber Else 0 End) else importe_debe end) importe_haber,'D' Estado,tipmov,correlA,
		orden='6'
		from tmpExportaventas a inner join tmp1
			on a.CtaPercepcion=tmp1.cta
		--		order by correlA,grupo desc,cta
	) todos 
	on rtrim(tmpexportaVentas.unidad_economica)+tmpexportaVentas.grupo+tmpexportaVentas.correlA+tmpExportaventas.nro_documento=todos.unidad_economica+todos.grupo+todos.correlA+todos.nro_documento
	Inner join MovContables_C c on 
	rtrim(tmpexportaVentas.unidad_economica)+Nrodocumento=rtrim(c.codunidadeconomica)+c.NroDoc
order by c.NroDoc desc,tmpexportaVentas.Adicional2,tmpexportaVentas.correlA,todos.orden

--Actualiza correlativo de GrupoContable
Declare @mgc as varchar(2), @valor as int
DECLARE actualizaMGC CURSOR FOR 
select grupo,max(substring(nrodocumento,9,2))
from tmpexportaventas
group by grupo

OPEN actualizaMGC  
FETCH NEXT FROM actualizaMGC INTO @mgc,@valor  

WHILE @@FETCH_STATUS = 0  
BEGIN  
	EXEC cont_ActualizaCorrelaGrupoContable @Valor,@ZonaA,@CodUnidadA,@mgc,@Anio1 ,@MesA

    FETCH NEXT FROM actualizaMGC INTO @mgc,@valor
END 

CLOSE actualizaMGC  
DEALLOCATE actualizaMGC 
print 'ok3'

--IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaventas') AND type in (N'U'))
--BEGIN 
--	drop table tmp
--	drop table tmp1
--	drop table tmp4
--	--drop table tmpexporta1
--	drop table tmpExportaventas
--	--drop table tmpExportaventas1
--	Drop table exportaventas0
--	Drop table exportaVta1
--	Drop Table ExportaVta2
--END

----Actualizando registros de Tesoreria
--exec spp_MigrarComprasVentas1T '',@ZonaA,@ZonaB,@CodUnidadA,@CodUnidadB,@MesA,@MesB,@Anio1,@IdEmpresa,'TESORE','PORDIA'

--IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaventas') AND type in (N'U'))
--BEGIN 
--	drop table tmp
--	drop table tmp1
--	drop table tmp4
--	--drop table tmpexporta1
--	drop table tmpExportaventas
--	--drop table tmpExportaventas1
--	Drop table exportaventas0
--	Drop table exportaVta1
--	Drop Table ExportaVta2
--END

---- Agregando las BVT y FAC al Reg de Ventas en el grupo 18 select * from exportaventas where tipo_documento in ('03','01')
--declare @CtaCierreVtas as varchar(15)

--set @CtaCierreVtas = '7011101'
--print 'ok4'
--select Grupo='18',Zona,Unidad_Economica,Año,Mes,Fecha_Registro,
--		Cuenta_Contable=Cuenta_Abono,Cuenta_Abono=@CtaCierreVtas,  
--		Automatico='S',Proveedor,Razon_social,Direccion,Tipo_documento,Nro_Documento,Nro_Documento2,Fecha_documento,
--		Detalle_venta='VENTAS EN - '+rtrim(dbo.[traeNombreMes] (@MesA))+' '+@Anio1+' **', tipo_moneda='1',tipo_cambio=0,Tipo_operacion,
--		Importe_Debe=importe_Haber+isnull(Adicional3,0),
--		Importe_Haber=0,Afecto='0',Monto_igv=0,isc,Monto_isc=0,Cancelado='0',Percepcion=0,Monto_percepcion=0,
--		Fechanc,Tipo_Docnc,Nro_docnc,Voucher,Glosa='VENTAS EN - '+rtrim(dbo.[traeNombreMes] (@MesA))+' '+@Anio1+' **',CCosto,Fefec,Adicional2=0,Adicional3=0
--into tmpexportando
--from exportaventas where tipo_documento in ('03','01')

--drop table exportaVentas
--select * into exportaVentas from tmpexportando

--drop table tmpexportando

--exec spp_MigrarComprasVentas1 '',@ZonaA,@ZonaB,@CodUnidadA,@CodUnidadB,@MesA,@MesB,@Anio1,@IdEmpresa,'VENTAS','PORDOC'

/****** Object:  StoredProcedure [dbo].[spp_MigrarComprasVentas2]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_MigrarComprasVentas2]
@lcdireccion varchar(250), 
@ZonaA varchar(6),
@ZonaB varchar(6),
@CodUnidadA varchar(10),
@CodUnidadB varchar(10),
@MesA char(2),
@MesB char(2),
@Anio1 char(4),
@IdEmpresa int ,
@tMovimiento Char(8),  
@pordiaDoc char(6)

as
--Solicitar variables 
--@IdEmpresa
-- spp_MigrarComprasVentas1 '','000029','000029','000029','000029','11','11','2013',20,'VENTAS','PORDIA'

DECLARE
	@CodUnidadEconomica char(10),
	@Anio char(4),
	@mes char(2),
	@Zona char(10),
	@FechContable datetime,
	@CodMGC char(3), 
	@CodMGC2 char(3), 
	@Glosa varchar(250),
	@Fechdocumento DATETIME,
	@CodigoDocumentoReferencia char(2),
	@Nrodoc nchar(14), 
	@Nrodoc2 nchar(14), 
	@Nrodoc3 nchar(14), 
	@CodCuenta char(12),
	@TipoMov char(1),
	@Afecto bit,
	@Moneda bigint,
	@TipoCambio decimal(7, 3),
	@impDebe decimal(15, 2),
	@impDebe1 decimal(15, 2),
	@impDebeDolar decimal(15, 2),
	@impHaber decimal(15, 2),
	@impHaber1 decimal(15, 2),
	@impHaberDolar decimal(15, 2),
	@codPro char(11),
	@Cancelado char(1),
	@tipoOper int,
	@CuentaAbono varchar(50) ,
	@CuentaAbono2 varchar(50) ,
	@CuentaAbono3 varchar(50) ,
	@CuentaAbono4 varchar(50) ,
	@MontoIGV decimal(12, 3),
	@MontoIGVCompras decimal(12, 3),
	@MontoIGVVentas decimal(12, 3),
	@GlosaCancelacion varchar(28),
	@TipoMedioPago nchar(3), 
	@imptotal as decimal(15,2),
	@imptotal1 as decimal(15,2),
	@imptotal2 as decimal(15,2),
	@tmpPorDiaDoc as Char(2),
	@ctaigv as char(10),
	@lcCorrela int,@lcCorrelcA CHAR(10), -----Creando Correl
	@lcfechanc as datetime,  -- definimos variables para las notas de credito
	@lcCodDocRefnc char(2),
	@lcserienc nchar(4),
    @lcNrodocnc nchar(8), 
    @lccCosto nchar(15), 
	@lcVoucher as nchar(5),
	@ctaPercepcion as char(10),
    @Percepcion nchar(8), 
    @MontoPercepcion decimal(15,2), 
	@p41 char(10),  --- parametro de input output
	@lcfechaReg as datetime

IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'exportaventas2') AND type in (N'U'))
BEGIN 
	DROP TABLE exportaventas2
END
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'tmpexporta') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpexporta
END
---- acepta crear la 1ra vez el asiento
set @tmpPorDiadoc ='SI'

Declare @correl as char(10),@correl3 as char(10),
	@movc int, @movc3 int, @nrodocumento as char(14),@nrodocumento2 as char(14), @hoy as datetime

--migra datos de excel
if @lcdireccion<>''
begin
	exec spp_MigrarComprasVentas0  @lcdireccion, @TMovimiento
end
	set @hoy = convert(datetime,convert(varchar(10),getdate(),103),103)

-- creando estructura sin nulos
select * into tmpexporta from exportaventas where desde is not null 
--select * into exportaventas1 from exportaventas where desde is not null 
print '1'
drop table exportaventas

set @lcfechaReg = (select DATEADD(dd,-(DAY(DATEADD(mm,1,min(fecha)))),DATEADD(mm,1,min(fecha))) fecha_registro from tmpexporta)


select '18' grupo,@ZonaA zona, @CodUnidadA unidad_economica,@Anio1 año,@MesA mes,
	 @lcfechaReg fecha_registro,
	(case when [razón social]='ANULADO' then '1211' else '1212' end) cuenta_contable,'7011' cuenta_abono, 
	(Case When [razón social]='PUBLICO GENERAL' Then '9999' Else (Case When [razón social]='ANULADO' Then '000001' Else Ruc End) End) proveedor,
	(Case When [razón social]='PUBLICO GENERAL' Then 'CLIENTES VARIOS' Else [razón social] End) Razon_social,
	dirección direccion, '12' tipo_documento, 
	'12'+substring(desde,6,1)+(Case When left(desde,3)='BVT' Then '3' Else '1' End)+substring(desde,7,14) nro_documento,
	'12'+substring(hasta,6,1)+(Case When left(hasta,3)='BVT' Then '3' Else '1' End)+substring(hasta,7,14) nro_documento2,
	fecha fecha_documento,'VENTAS DEL MES '+dbo.traenombremes(month(fecha)) detalle_venta,
	(Case When moneda in ('S/.','S/') Then 1 Else 2 End) tipo_moneda,0 tipo_cambio, 1 tipo_operacion, [Sub Total] importe_debe, 0 importe_haber,
	(Case When Igv<>0 Then 1 Else 0 End) Afecto, (Case When Igv<>0 Then igv Else 0 End) monto_igv, 0 isc,0 monto_isc,
	1 cancelado, 0 percepcion, 0 monto_percepcion,Null fechanc,'' tipo_docnc,'' nro_docnc,1 voucher,
	'VENTAS '+(Case When Desde<>Hasta Then 'CON TICKET CONSOLIDADA ' Else '' End)+'DE '+ +dbo.traenombremes(month(fecha)) glosa,'' ccosto
into exportaventas2
from tmpexporta

drop table tmpexporta

-- actualizar clientes 
-------seleccionando clientes nuevos
declare @ruc as char(11), @razon_social as char(100),@direccion as char(100)

declare nuevosclientes cursor 
		LOCAL STATIC READ_ONLY FORWARD_ONLY
		for
	select proveedor, razon_social,direccion from (
		select * from (
			select proveedor, razon_social,direccion from exportaventas2 where proveedor is not null 
			group by proveedor, razon_social,direccion 
			) prove left outer join 
			(select ruc from tbl_msto_ClienteProveedor WHERE Estado=1) clie 
			on prove.proveedor = clie.ruc
			) clientesnuevos 
	where ruc is null 

open nuevosclientes
fetch next from nuevosclientes
into @ruc, @razon_social,@direccion
WHILE @@FETCH_STATUS = 0
BEGIN
	exec spp_instup_tablagen '6',@razon_social,@ruc,
	'-','-',0,0,0,0,0,0,0,0,0,0,0,0,0,0,'1','0','-','-','-',
	'-','-','0','-','0','-','0','-','0','-','-','-','-','-',0,'','','',4,
	@direccion,'','@','.com',
	'','','','','',1,'','','','',0,0,'CP','',0,@idempresa

	fetch next from nuevosclientes
	into @ruc, @razon_social,@direccion
end 

CLOSE nuevosclientes
DEALLOCATE nuevosclientes
---- fin actualiza clientes

-- asigna variables a los campos de cada registro 
-- filtra registros que no tienen movimientos (solo los no subidos)
DECLARE vistasubir CURSOR  
		LOCAL STATIC READ_ONLY FORWARD_ONLY
		for
SELECT año, mes, zona, unidad_economica,fecha_registro=min(fecha_registro), fecha_Documento=min(fecha_documento), grupo, 
	   glosa = min(rtrim(detalle_venta)), --+' '+ proveedor, 
	   nro_documento=min(nro_documento),nro_documento2=min(nro_documento2), cancelado=min(cancelado),
		voucher
FROM exportaventas2
WHERE Año = @anio1
		AND mes between @mesA and @mesB --cancelado = '1' --and right(rtrim(asociado),2)<=2
		AND zona BETWEEN @ZonaA AND @ZonaB
		AND UNIDAD_ECONOMICA BETWEEN @codUnidadA AND @codUnidadB
		and tipo_documento+nro_documento not in (select codigodocumentoreferencia+nrodocreferencia from vDocumentosPendientes(@codUnidadA)   --filtra solo los no subidos
				where codunidadeconomica BETWEEN @codUnidadA AND @codUnidadB and estado <> '4' group by codigodocumentoreferencia,nrodocreferencia having sum(impdebe)<>0)
		and UNIDAD_ECONOMICA is not null 
group by año, mes, zona, unidad_economica,grupo, voucher
ORDER BY zona, unidad_economica

OPEN vistasubir
FETCH NEXT FROM vistasubir
INTO @Anio, @mes, @Zona, @CodUnidadEconomica, @FechContable,
	 @FechDocumento, @CodMGC, @Glosa, @nrodocumento, @nrodocumento2, @cancelado, 
	@lcVoucher
WHILE @@FETCH_STATUS = 0 
BEGIN
--crea el asiento por dia o por documento
IF @tmpPorDiaDoc = 'SI' 
BEGIN
	-- obtener el ultimo nro del registro cabecera
	set @correl = '' -- (select max(nrodoc) from movcontables_c 
--					where codunidadeconomica = @CodUnidadEconomica 
--						and codmgc= @CodMGC and anio= @Anio and mes= @mes)

	--- Crear cabecera para un nuevo asiento contable COMPRAS
	exec spp_instup_MovContables_C @idMovContable_c=0,@anio=@Anio,@mes=@mes, @zona=@Zona, @CodUnidadEconomica=@CodUnidadEconomica,@NroDoc=@correl output,@FechCo=@FechDocumento,@CodMGC= @CodMGC, @Glosa=@Glosa,@Estado='',@OPER=''

	--verifica si el asiento es por dia o por documento
	set @tmpPorDiaDoc = (Case When @porDiaDoc= 'PORDOC' Then 'SI' Else 'NO' End)
END
-------- obtener el nro de cabecera creada para el registro
--set @correl = (select max(nrodoc) from movcontables_c 
--				where codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC and anio= @Anio and mes= @mes)
set @movc = (select idmovcontables_c from movcontables_c where nrodoc=@correl and codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC and anio= @Anio and mes= @mes)
set @nrodoc = @correl --(select nrodoc from movcontables_c where nrodoc=@correl and codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC and anio= @Anio and mes= @mes)

--crea el cursor detalle movimientos
DECLARE vistadetalle CURSOR  
		LOCAL STATIC READ_ONLY FORWARD_ONLY
		for
SELECT unidad_economica, fecha_documento, tipo_documento,
	nro_documento, nro_documento2,cuenta_contable, detalle_venta, TipoMov = 'D', Afecto, tipo_Moneda, TipoCambio = isnull(tipo_cambio,0.00), 
	importe_debe, importe_haber,
	Proveedor,  tipo_Operacion, Cuenta_Abono, Monto_IGV, TipoMedioPago='008',
	fechanc = isnull(convert(datetime,fechanc,103),'1900-01-01 00:00:00.000'), 
	coddocrefnc = isnull(tipo_docnc,''),
	serienc = isnull(left(nro_docnc,4),''),
	nrodocnc = isnull(right(nro_docnc,7),''),
	ccosto= isnull(ccosto,''),(case when percepcion='0' then '' else convert(varchar(5),percepcion) end) percepcion, 
	(case when monto_percepcion=0 then 0 else monto_percepcion end) montopercepcion 
FROM exportaventas2
WHERE voucher=@lcVoucher and --nro_documento = @nrodocumento and
		Año = @anio1
		AND mes between @mesA and @mesB --cancelado = '1' --and right(rtrim(asociado),2)<=2
		AND zona BETWEEN @ZonaA AND @ZonaB
		AND UNIDAD_ECONOMICA BETWEEN @codUnidadA AND @codUnidadB
		and Proveedor+tipo_documento+nro_documento not in (select codpro+codigodocumentoreferencia+nrodocreferencia from movcontables_d  --solo registros no subidos
				where codunidadeconomica BETWEEN @codUnidadA AND @codUnidadB and codmgc = grupo and estado <> '4' group by codpro+codigodocumentoreferencia+nrodocreferencia)
OPEN vistadetalle
FETCH NEXT FROM vistadetalle INTO @CodUnidadEconomica, @FechDocumento, @CodigoDocumentoReferencia,
	@Nrodoc, @Nrodoc2,@CodCuenta,@glosa, @TipoMov, @Afecto, @Moneda, @TipoCambio, @impDebe, @impHaber, 
	@codPro, @tipoOper, @CuentaAbono, @MontoIGV, @TipoMedioPago, @lcfechanc,
	@lcCodDocRefnc,@lcserienc,
	@lcNrodocnc,@lccCosto,@percepcion,@montopercepcion

	WHILE @@FETCH_STATUS = 0
	BEGIN
	--------------------
	Select @lcCorrela= (select e_corr from empresa a inner join zona b on a.idEmpresa=b.idEmpresa inner join unidad_economica c on c.codZona=b.codZona where c.codUnidadEconomica=@CodUnidadEconomica )

	UPDATE Empresa SET E_CORR = E_CORR + 1 where idempresa=@idempresa
	SET @lcCorrelcA =Replicate('0',10-LEN(@lcCorrela+1))+ CONVERT(CHAR,@lcCorrela+1)

----------------------- registra las cuentas 6011, 1211 y su dinamica 2011 y 6111 segun plan contable
---Define parametros de acuerdo al tipo de cambio
	Set @impDebe  = (Case When @Moneda = 1 Then @impDebe Else @impDebe*@tipocambio End) 
	Set @impHaber  = (Case When @Moneda = 1 Then @impHaber Else @impHaber*@tipocambio End) 
	Set @montoIGV = (Case When @Moneda = 1 Then @MontoIGV Else @impDebe*@tipocambio*(select valor from parametros where clave ='porcentajeIGV' and idempresa = @idempresa)/100 End) 
	SET @ImpDebe1 = @impDebe + (case When ltrim(rtrim(@TMovimiento))= 'VENTAS' then @montoIGV else 0.00 end)
	SET @ImpHaber1 = @impHaber + (case When ltrim(rtrim(@TMovimiento))= 'VENTAS' then @montoIGV else 0.00 end)
	set @impDebeDolar = (Case When @Moneda = 1 Then 0.00 Else @impDebe*@tipocambio End) 
	set @impHaberDolar = (Case When @Moneda = 1 Then 0.00 Else @impHaber*@tipocambio End) 
	set @imptotal = (Case When @Moneda = 1 Then @impDebe+@impHaber+@montoigv Else (@impDebe+@impHaber+@montoigv)*@tipocambio End)
	set @ctaigv   = (select valor from parametros where clave ='CuentaIGV' and idempresa = @IdEmpresa)
---fin define parametros

	exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
	@correl, ' ','-','-','-',
	@hoy,@CodMGC, '-','-',@CodigoDocumentoReferencia,
	@NroDoc,@FechDocumento, @FechDocumento,@CodigoDocumentoReferencia,
	@NroDoc2,'1900-01-01 00:00:00.000','-','-','-','',@CodCuenta,@lccCosto,
	@TipoMov,@Glosa,'-',@Afecto,@Moneda,@TipoCambio,@impDebe1,@impHaber1,0,0,'-','-',
	@codPro,'-',@hoy, @lcCorrelcA ,'-','-','-',0,'- ','-',	'-',
	@CodigoDocumentoReferencia,@NroDoc,0,0,'-',
	'','','1900-01-01 00:00:00.000','',0,@TipoOper,'',
	'1990-01-01 00:00:00.000','',@lcfechanc,
	@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@percepcion,
	@montopercepcion,@CuentaAbono,@MontoIGV,'',
	'1900-01-01 00:00:00.000',0,'008',
	0,0,0,0,0,''

	set @CuentaAbono3 = @cuentaAbono

	set @lccCosto=''

	IF @montoIGV <> 0 
	BEGIN  
	----------------------- registra la cuenta 4011 igv
		-- Creando variables de IGV para las compras y ventas D-H
		SET @montoIGVCompras = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then @montoIGV Else 0.00 End) 
		SET @montoIGVVentas  = (Case When ltrim(rtrim(@TMovimiento))= 'VENTAS' Then @montoIGV Else 0.00 End) 
		
		if @CodigoDocumentoReferencia='07' and @montoIGVCompras>0 
		Begin 
			SET @montoIGVVentas  = @montoIGVCompras	
			SET @montoIGVCompras = 0.00
		End

		if @CodigoDocumentoReferencia='07' and @montoIGVVentas>0 
		Begin 
			SET @montoIGVCompras = 0.00
			SET @montoIGVVentas  = @montoIGVVentas
		End

		--- Actualizando asientos de Compras
		exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
		@correl,'','-','-','-',
		@hoy,@CodMGC,'- ','-',@CodigoDocumentoReferencia,
		@NroDoc,@FechDocumento, @FechDocumento,@CodigoDocumentoReferencia,
		@NroDoc2,'1900-01-01 00:00:00:000','-','-','-','',@ctaIgv,@lccCosto,
		'D',@Glosa,'-',@Afecto,@Moneda,@TipoCambio,@montoIGVcompras,@montoIGVVentas,0,0,'- ','-',
		@codPro,'-', @hoy, @lcCorrelcA,'D','-','-',0,'- ','-','-',
		@CodigoDocumentoReferencia,@NroDoc,0,0,'-',
		'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
		'1990-01-01 00:00:00:000','',@lcfechanc,
	@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@percepcion,@montopercepcion,
		@CuentaAbono3,@MontoIGV,'','1900-01-01 00:00:00:000',0,
		'008',0,0,0,0,0,''
	END
--------------------------
	IF @montopercepcion <> 0 
	BEGIN  
	----------------------- registra la cuenta 4013 percepcion
		-- Creando variables de IGV para las compras y ventas D-H
		SET @CtaPercepcion=(select valor from parametros where clave ='CuentaPercepcion' and idempresa = @IdEmpresa)

		--- Actualizando asientos de Compras
		exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
		@correl,'','-','-','-',
		@hoy,@CodMGC,'- ','-',@CodigoDocumentoReferencia,
		@NroDoc,@FechDocumento, @FechDocumento,@CodigoDocumentoReferencia,
		@NroDoc2,'1900-01-01 00:00:00:000','-','-','-','',@ctaPercepcion,@lccCosto,
		'D',@Glosa,'-',@Afecto,@Moneda,@TipoCambio,@montoPercepcion,0,0,0,'- ','-',
		@codPro,'-', @hoy, @lcCorrelcA,'D','-','-',0,'- ','-','-',
		@CodigoDocumentoReferencia,@NroDoc,0,0,'-',
		'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
		'1990-01-01 00:00:00:000','',@lcfechanc,
	@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@percepcion,@montopercepcion,
		@CuentaAbono3,@MontoIGV,'','1900-01-01 00:00:00:000',0,
		'008',0,0,0,0,0,''
	END
-----------------------registra la cuenta 4211 total y 7011 total
set @imptotal1 = (Case When @CodigoDocumentoReferencia='07' Then 0.0 else @imptotal + (case When ltrim(rtrim(@TMovimiento))= 'VENTAS' then @montoIGV*(-1) else 0.00 end)+@montopercepcion end)
set @imptotal2 = (Case When @CodigoDocumentoReferencia='07' Then @imptotal + (case When ltrim(rtrim(@TMovimiento))= 'VENTAS' then @montoIGV*(-1) else 0.00 end)+@montopercepcion else 0.0 end)

exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
@correl,'','-','-','-',
@hoy,@CodMGC,'- ','-',@CodigoDocumentoReferencia,
@NroDoc,@FechDocumento,@FechDocumento,@CodigoDocumentoReferencia,
@NroDoc2,'1900-01-01 00:00:00:000','-','-','-','',@CuentaAbono,@lccCosto,
'D',@Glosa,'-',@Afecto,@Moneda,@TipoCambio,@imptotal2,@imptotal1,0,0,'-','-',
@codPro,'-',@hoy,@lcCorrelcA,'D','-','-',0,'-','-','-',
@CodigoDocumentoReferencia,@NroDoc,0,0,'-',
'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
'1990-01-01 00:00:00:000','',@lcfechanc,
@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@percepcion,@montopercepcion,
@CuentaAbono3,@MontoIGV,'','1900-01-01 00:00:00:000',0,
'008',0,0,0,0,0,''

	------ registrar cancelaciones de facturas
	IF @cancelado ='1'
	BEGIN
		--Asignando glosa de compra y venta
Print 'cancelado?'
		SET @GlosaCancelacion = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then 'PAGO A PROVEEDORES M*' Else 'CANCELACION EN EFECTIVO M*' End) 
		set @CodMGC2 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then '20' Else '02' End)
		--crea cabecera pago efectivo
		exec spp_instup_MovContables_C 0,@Anio,@mes, @Zona, @CodUnidadEconomica,@correl,
		@FechDocumento,@CodMGC2,@GlosaCancelacion,'',''

		-------- obtener el nro de cabecera creada para el registro
		set @correl3 = (select max(nrodoc) from movcontables_c where codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC2 and anio= @Anio and mes= @mes)
		set @movc3 = (select idmovcontables_c from movcontables_c where nrodoc=@correl3 and codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC2 and anio= @Anio and mes= @mes)
		set @nrodoc3 = (select nrodoc from movcontables_c where nrodoc=@correl3 and codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC2 and anio= @Anio and mes= @mes)

		--- Crea detalle pago efectivo cta 4211 y 1011
		set @CuentaAbono4 = (select valor from parametros where idempresa = (select idempresa from zona where  codzona = (select zona from exportaventas2 Where mes between @mesA and @mesB group by zona)) and clave = 'CuentaAutoCCompras')
		set @CuentaAbono2 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then @CuentaAbono Else @CuentaAbono4 End)

		set @imptotal2 = (Case When @CodigoDocumentoReferencia='07' Then @imptotal else 0.0 end)
		set @imptotal1  = (Case When @CodigoDocumentoReferencia='07' Then 0.0 else @imptotal end)
		
		set @p41='0         '
		exec spp_inst_MovContables_D 0,@MovC3,@CodUnidadEconomica,
		@correl3,'','-','-','-',
		@hoy,@CodMGC2,'- ','-',@CodigoDocumentoReferencia,
		@NroDoc,@FechDocumento,@FechDocumento,@CodigoDocumentoReferencia,
		@NroDoc2,'1900-01-01 00:00:00:000','-','-','-','',@CuentaAbono2,@lccCosto,
		'D',@Glosa,'a',0,@Moneda,@TipoCambio,@impTotal1,@imptotal2,0,0,'- ',@codPro,
		@codPro,'-',@hoy,@lcCorrelcA,'-','-','-',0,'-','-','-',
		@CodigoDocumentoReferencia,@nrodoc,0,0,'-',
		'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
		'1990-01-01 00:00:00:000','',@lcfechanc,
		@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@percepcion,@montopercepcion,
		@CuentaAbono3,0,'','1900-01-01 00:00:00:000',0,
		'008',0,0,0,0,0,''

	--- detalle pago efectivo cta 1011 y 1211
		set @CuentaAbono2 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then @CuentaAbono4 Else @codCuenta End)

		set @imptotal2 = (Case When @CodigoDocumentoReferencia='07' Then @imptotal else 0.0 end)
		set @imptotal1  = (Case When @CodigoDocumentoReferencia='07' Then 0.0 else @imptotal end)

		exec spp_inst_MovContables_D 0,@MovC3,@CodUnidadEconomica,
		@correl3,'','-','-','-',
		@hoy,@CodMGC2,'-','-',@CodigoDocumentoReferencia,
		@NroDoc,@FechDocumento,@FechDocumento,@CodigoDocumentoReferencia,
		@NroDoc2,'1900-01-01 00:00:00:000','-','-','-','',@CuentaAbono2,@lccCosto,
		'D',@Glosa,'b',0,@Moneda,@TipoCambio,@imptotal2,@impTotal1,0,0,'-',@codPro,
		@codPro,'-',@hoy,@lcCorrelcA,'-','-','-',	0,'-','-','-',
		@CodigoDocumentoReferencia,@nrodoc,0,0,'-',
		'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
		'1990-01-01 00:00:00:000','',@lcfechanc,
		@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@percepcion,@montopercepcion,
		@CuentaAbono3,0,'','1900-01-01 00:00:00:000',0,
		'008',0,0,0,0,0,''

	END
	FETCH NEXT FROM vistadetalle INTO @CodUnidadEconomica, @FechDocumento, @CodigoDocumentoReferencia,
		@Nrodoc, @Nrodoc2,@CodCuenta,@glosa, @TipoMov, @Afecto, @Moneda, @TipoCambio, @impDebe, @impHaber,
		@codPro, @tipoOper, @CuentaAbono, @MontoIGV, @TipoMedioPago,@lcfechanc,
		@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@lccCosto,@percepcion,@montopercepcion
END

CLOSE vistadetalle
DEALLOCATE vistadetalle

--------
FETCH NEXT FROM vistasubir
INTO @Anio, @mes, @Zona, @CodUnidadEconomica, @FechContable,
	 @FechDocumento, @CodMGC, @Glosa, @nrodocumento, @nrodocumento2, @cancelado, @lcVoucher
end 

CLOSE vistasubir
DEALLOCATE vistasubir

--------------------------------------------
-- Inicia proceso para registros existentes 
-- los que amortizan su deuda o cancelacion de la misma
--------------------------------------------
-- asigna variables a los campos de cada registro 
-- filtra registros que TIENEN movimientos 

DECLARE vistasubir CURSOR  
		LOCAL STATIC READ_ONLY FORWARD_ONLY
		for
SELECT año, mes, zona, unidad_economica, fecha_registro, fecha_documento, grupo, 
	   glosa = rtrim(detalle_venta), -- +' '+ proveedor, 
	   nro_documento, nro_documento2,cancelado, voucher
FROM exportaventas2
WHERE Año = @anio1
		AND mes between @mesA and @mesB and cancelado = '1' --and right(rtrim(asociado),2)<=2
		AND zona BETWEEN @ZonaA AND @ZonaB
		AND UNIDAD_ECONOMICA BETWEEN @codUnidadA AND @codUnidadB
		and tipo_documento+nro_documento in (select codigodocumentoreferencia+nrodocreferencia from vDocumentosPendientes(@codUnidadA)   --filtra solo SUBIDOS
				where codunidadeconomica BETWEEN @codUnidadA AND @codUnidadB and estado <> '4' group by codigodocumentoreferencia,nrodocreferencia having sum(impdebe)<>0)
				ORDER BY zona, unidad_economica

OPEN vistasubir

FETCH NEXT FROM vistasubir
INTO @Anio, @mes, @Zona, @CodUnidadEconomica, @FechContable,
	 @FechDocumento, @CodMGC, @Glosa, @nrodocumento,@nrodocumento2, @cancelado, @lcVoucher
WHILE @@FETCH_STATUS = 0
BEGIN

	-- obtener el ultimo nro del registro cabecera
	set @correl = (select max(nrodoc) from movcontables_c 
					where codunidadeconomica = @CodUnidadEconomica 
						and codmgc= @CodMGC and anio= @Anio and mes= @mes)
	set @hoy = convert(datetime,convert(varchar(10),getdate(),103),103)

	--Asignando glosa de compra y venta
	SET @GlosaCancelacion = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then 'PAGO A PROVEEDORES M*' Else 'CANCELACION EN EFECTIVO M*' End) 
	set @CodMGC2 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then '20' Else '02' End)
	--crea cabecera pago efectivo
	exec spp_instup_MovContables_C 0,@Anio,@mes, @Zona, @CodUnidadEconomica,@correl,
	@FechDocumento,@CodMGC2,@GlosaCancelacion,'',''

-----------------------------------
	--crea el cursor detalle movimientos
	DECLARE vistadetalle CURSOR  
		LOCAL STATIC READ_ONLY FORWARD_ONLY
		for
	SELECT unidad_economica, fecha_Documento, tipo_documento,
		nro_documento, nro_documento2,cuenta_contable, detalle_venta, TipoMov = 'D', Afecto, tipo_Moneda, TipoCambio = isnull(tipo_cambio,0.00), 
		importe_debe, 
		Proveedor,  tipo_Operacion, Cuenta_Abono, Monto_IGV, TipoMedioPago='008',fechanc = isnull(fechanc,''),
		CodDocRefnc=isnull(tipo_docnc,''),serienc=isnull(left(nro_docnc,4),''),Nrodocnc=isnull(right(nro_docnc,7),''),
		ccosto=isnull(ccosto,''),(case when percepcion='0' then '' else convert(varchar(5),percepcion) end) percepcion, 
	(case when monto_percepcion=0 then 0 else monto_percepcion end) montopercepcion 
	FROM exportaventas2
	WHERE nro_documento = @nrodocumento and
			Año = @anio1
			AND mes between @mesA and @mesB and cancelado = '1' --and right(rtrim(asociado),2)<=2
			AND zona BETWEEN @ZonaA AND @ZonaB
			AND UNIDAD_ECONOMICA BETWEEN @codUnidadA AND @codUnidadB
			and Proveedor+tipo_documento+nro_documento in (select codpro+codigodocumentoreferencia+nrodocreferencia from movcontables_d  --solo registros no subidos
					where codunidadeconomica BETWEEN @codUnidadA AND @codUnidadB and codmgc = grupo and estado <> '4' group by codpro+codigodocumentoreferencia,nrodocreferencia)
	OPEN vistadetalle
	FETCH NEXT FROM vistadetalle INTO @CodUnidadEconomica, @FechDocumento, @CodigoDocumentoReferencia,
		@Nrodoc, @Nrodoc2,@CodCuenta,@glosa, @TipoMov, @Afecto, @Moneda, @TipoCambio, @impDebe, 
		@codPro, @tipoOper, @CuentaAbono, @MontoIGV, @TipoMedioPago,@lcfechanc,
	@lcCodDocRefnc,@lcserienc,@lcNrodocnc, @lccCosto,@percepcion,@montopercepcion

	WHILE @@FETCH_STATUS = 0
	BEGIN
		--------------------
		Select @lcCorrela= (select e_corr from empresa a inner join zona b on a.idEmpresa=b.idEmpresa inner join unidad_economica c on c.codZona=b.codZona where c.codUnidadEconomica=@CodUnidadEconomica )

		UPDATE Empresa SET E_CORR = E_CORR + 1
		SET @lcCorrelcA =Replicate('0',10-LEN(@lcCorrela+1))+ CONVERT(CHAR,@lcCorrela+1)

	----------------------- registra las cuentas 6011, 1211 y su dinamica 2011 y 6111 segun plan contable
	---Define parametros de acuerdo al tipo de cambio
		Set @impDebe  = (Case When @Moneda = 1 Then @impDebe Else @impDebe*@tipocambio End) 
		Set @montoIGV = (Case When @Moneda = 1 Then @MontoIGV Else @impDebe*@tipocambio*(select valor from parametros where clave ='porcentajeIGV' and idempresa = @idempresa)/100 End) 
		SET @ImpDebe1 = @impDebe + (case When ltrim(rtrim(@TMovimiento))= 'VENTAS' then @montoIGV else 0.00 end)
		set @impDebeDolar = (Case When @Moneda = 1 Then 0.00 Else @impDebe*@tipocambio End) 
		set @imptotal = (Case When @Moneda = 1 Then @impDebe+@montoigv+@montopercepcion Else (@impDebe+@montoigv+@montopercepcion)*@tipocambio End) 
		set @ctaigv   = (select valor from parametros where clave ='CuentaIGV' and idempresa = @IdEmpresa)
	---fin define parametros

--------------------------------------
		-------- obtener el nro de cabecera creada para el registro
		set @correl = (select max(nrodoc) from movcontables_c where codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC2 and anio= @Anio and mes= @mes)
		set @movc = (select idmovcontables_c from movcontables_c where nrodoc=@correl and codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC2 and anio= @Anio and mes= @mes)
		set @nrodoc = (select nrodoc from movcontables_c where nrodoc=@correl and codunidadeconomica = @CodUnidadEconomica and codmgc= @CodMGC2 and anio= @Anio and mes= @mes)

		--- Crea detalle pago efectivo cta 4211 y 1011
		set @CuentaAbono4 = (select valor from parametros where idempresa = (select idempresa from zona where  codzona = (select zona from exportaventas2 Where mes between @mesA and @mesB group by zona)) and clave = 'CuentaAutoCCompras')
		set @CuentaAbono2 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then @CuentaAbono Else @CuentaAbono4 End)

		set @p41='0         '
		exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
		@correl,'','-','-','-',
		@hoy,@CodMGC2,'- ','-',@CodigoDocumentoReferencia,
		@NroDocumento,@FechDocumento,@FechDocumento,@CodigoDocumentoReferencia,
		@NroDoc,'1900-01-01 00:00:00:000','-','-','-','',@CuentaAbono2,@lccCosto,
		'D',@Glosa,'-',0,@Moneda,@TipoCambio,@impTotal,0,0,0,'- ',@codPro,
		@codPro,'-',@hoy,@lcCorrelcA,'-','-','-',0,'-','-','-',
		@CodigoDocumentoReferencia,@nrodoc,0,0,'-',
		'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
		'1990-01-01 00:00:00:000','',@lcfechanc,
	@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@percepcion,@montopercepcion,
		@CuentaAbono3,0,'','1900-01-01 00:00:00:000',0,
		'008',0,0,0,0,0,''

	--- detalle pago efectivo cta 1011 y 1211
		set @CuentaAbono2 = (Case When ltrim(rtrim(@TMovimiento))= 'COMPRA' Then @CuentaAbono4 Else @codCuenta End)

		exec spp_inst_MovContables_D 0,@MovC,@CodUnidadEconomica,
		@correl,'','-','-','-',
		@hoy,@CodMGC2,'-','-',@CodigoDocumentoReferencia,
		@NroDocumento,@FechDocumento,@FechDocumento,@CodigoDocumentoReferencia,
		@NroDoc,'1900-01-01 00:00:00:000','-','-','-','',@CuentaAbono2,@lccCosto,
		'D',@Glosa,'-',0,@Moneda,@TipoCambio,0,@impTotal,0,0,'-',@codPro,
		@codPro,'-',@hoy,@lcCorrelcA,'-','-','-',	0,'-','-','-',
		@CodigoDocumentoReferencia,@nrodoc,0,0,'-',
		'','','1900-01-01 00:00:00:000','',0,@TipoOper,'',
		'1990-01-01 00:00:00:000','',@lcfechanc,
	@lcCodDocRefnc,@lcserienc,@lcNrodocnc,@percepcion,@montopercepcion,
		@CuentaAbono3,0,'','1900-01-01 00:00:00:000',0,
		'008',0,0,0,0,0,''

--	END
	FETCH NEXT FROM vistadetalle INTO @CodUnidadEconomica, @FechDocumento, @CodigoDocumentoReferencia,
		@Nrodoc, @Nrodoc2,@CodCuenta,@glosa, @TipoMov, @Afecto, @Moneda, @TipoCambio, @impDebe, 
		@codPro, @tipoOper, @CuentaAbono, @MontoIGV, @TipoMedioPago,@lcfechanc,
	@lcCodDocRefnc,@lcserienc,@lcNrodocnc, @lccCosto,@percepcion,@montopercepcion
END

CLOSE vistadetalle
DEALLOCATE vistadetalle

--------
FETCH NEXT FROM vistasubir
INTO @Anio, @mes, @Zona, @CodUnidadEconomica, @FechDocumento,
	 @FechContable, @CodMGC, @Glosa, @nrodocumento,@nrodocumento2, @cancelado, @lcVoucher
end 

CLOSE vistasubir
DEALLOCATE vistasubir
/****** Object:  StoredProcedure [dbo].[spp_MigrarComprasVentas3]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_MigrarComprasVentas3]
@lcdireccion varchar(250), 
@ZonaA varchar(6),
@ZonaB varchar(6),
@CodUnidadA varchar(10),
@CodUnidadB varchar(10),
@MesA char(2),
@MesB char(2),
@Anio1 char(4),
@IdEmpresa int ,
@tMovimiento varChar(8),  
@pordiaDoc varchar(9)

as
--Solicitar variables 

-- spp_MigrarComprasVentas1 '','000041','000041','000041','000041','11','11','2019',33,'VENTAS','PORDIA'
--exec spp_MigrarComprasVentas1 '','000012','000012','000012','000012','04','04','2019',5,'VENTAS','PORDOC'

Declare @correl as nchar(10),@correl3 as char(10),
	@movc int, @movc3 int, @nrodocumento as char(14),@nrodocumento2 as char(14), @hoy as datetime,@BienServicio as varchar(3)

---- acepta crear la 1ra vez el asiento
--set @tmpPorDiadoc ='SI'
set @BienServicio= (case when len(rtrim(@pordiaDoc))=9 then right(rtrim(@pordiaDoc),3) else '' end)
set @pordiaDoc= left(rtrim(@pordiaDoc),6)

--migra datos de excel
if @lcdireccion<>''
begin
	exec spp_MigrarComprasVentas0  @lcdireccion, @TMovimiento
end
	set @hoy = convert(datetime,convert(varchar(10),getdate(),103),103)

-- actualizar clientes 
---seleccionando clientes nuevos
insert into tbl_msto_ClienteProveedor
select (case when len(rtrim(proveedor))=8 then '1' else '6' end) codclipro,left(razon_social,100) razon_social,proveedor, '' nombre,'' apellido,'-' telefono,4 tipoClienteproveedor,left(direccion,100) direccion,
		'1' codzona,'' cobrador,'@' correo,'.com' PaginaWeb,'' RepreLegal,'' CodAval,'' Aval,'' DirAval,'' TelAval,1 estado
 from (
		select * from (
			select proveedor, isnull(rtrim(razon_social),'') razon_social,isnull(rtrim(direccion),'') direccion 
			from exportaventas where proveedor is not null and LEN(rtrim(proveedor))>6 and rtrim(razon_social)<>'ANULADO' 
			group by proveedor, razon_social,direccion 
			) prove 
			left outer join 
			(select ruc from tbl_msto_ClienteProveedor WHERE Estado=1) clie 
			on rtrim(prove.proveedor) = rtrim(clie.ruc)
			) clientesnuevos 
	where ruc is null 

---- fin actualiza clientes
--Buscando solo los registros sin subir
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaventas') AND type in (N'U'))
BEGIN 
	drop table tmpExportaventas	
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmp') AND type in (N'U'))
BEGIN 
	Drop table tmp
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmp1') AND type in (N'U'))
BEGIN 
	Drop table tmp1
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmp4') AND type in (N'U'))
BEGIN 
	Drop table tmp4
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'exportaventas0') AND type in (N'U'))
BEGIN 
	Drop table exportaventas0
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'exportaVta1') AND type in (N'U'))
BEGIN 
	Drop table exportaVta1
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'exportaVta2') AND type in (N'U'))
BEGIN 
	Drop table exportaVta2
END
-------------------------------------
--select @CodMGC =grupo from exportaventas where grupo is not null group by grupo
--select * from tmpexportaventas

declare @CtaCancelado as varchar(15),@CtaISC as varchar(15),@ctaigv as char(10),@ctaPercepcion as char(10),@CtaAUX as varchar(15), @lcCorrela int

select @CtaCancelado = valor from Parametros where clave ='CuentaAutoCVentas'and idempresa = @IdEmpresa and estado='1' group by valor
select @CtaPercepcion = valor from Parametros where clave ='CuentaPercepcion'and idempresa = @IdEmpresa and estado='1' group by valor
select @CtaIGV = valor from Parametros where clave ='CuentaIGV'and idempresa = @IdEmpresa and estado='1' group by valor
select @CtaISC = valor from Parametros where clave ='CuentaISC'and idempresa = @IdEmpresa and estado='1' group by valor
select @CtaAUX = valor from Parametros where clave ='CuentaAuxiliar'and idempresa = @IdEmpresa and estado='1' group by valor

print @CtaAUX
select *,
		CtaCancelado=(case When cancelado=1 then @CtaCancelado Else '' end),
		CtaPercepcion=(case When Percepcion<>0 then @CtaPercepcion Else '' end),
		CtaIGV=(case When monto_igv<>0 then @CtaIGV Else '' end),
		CtaISC=(case When monto_isc<>0 then @CtaISC Else '' end),
		CtaAUX=(case When Automatico='S2' then (case when @CtaAUX='-' then '' else @CtaAUX end) Else '' end)
 into exportaventas0 
from exportaventas
print '1'

-- Seleccionando la cta_debe
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),(case when porcenta='0' then '100' else porcenta end)) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'D' tipmov, expor.ccosto 
into tmp 
from plancuentascontables pc inner join (select cuenta_contable,CCosto from exportaventas group by cuenta_contable,CCosto) expor
on pc.CodCuentaContable= expor.cuenta_contable
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@Anio1)<'2020' then '2009' else rtrim(@Anio1) end) and codcuentacontable in 
	(select cuenta_contable from exportaventas0 where cuenta_contable<>'' group by cuenta_contable)
-- Seleccionando la cta_haber
union all
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov, expor.ccosto  
from plancuentascontables pc inner join (select cuenta_abono,'' CCosto from exportaventas group by cuenta_abono) expor
on pc.CodCuentaContable= expor.cuenta_abono
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@Anio1)<'2020' then '2009' else rtrim(@Anio1) end) and codcuentacontable in (select cuenta_abono from exportaventas0 where cuenta_abono<>'' group by cuenta_abono)
union all
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov, expor.ccosto 
from plancuentascontables pc inner join (select ctacancelado cuenta_contable,CCosto from exportaventas0 group by ctacancelado,CCosto) expor
on pc.CodCuentaContable= expor.cuenta_contable 
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@Anio1)<'2020' then '2009' else rtrim(@Anio1) end) and codcuentacontable in (select ctacancelado from exportaventas0 where CtaCancelado<>'' group by CtaCancelado)
union all
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov, expor.ccosto 
from plancuentascontables pc inner join (select ctaPercepcion cuenta_contable,CCosto from exportaventas0 group by ctaPercepcion,CCosto) expor
on pc.CodCuentaContable= expor.cuenta_contable
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@Anio1)<'2020' then '2009' else rtrim(@Anio1) end) and codcuentacontable in (select ctaPercepcion from exportaventas0 where ctaPercepcion<>'' group by ctaPercepcion)
union all
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov, expor.ccosto 
from plancuentascontables pc inner join (select ctaIGV cuenta_contable,CCosto from exportaventas0 group by ctaIGV,CCosto) expor
on pc.CodCuentaContable= expor.cuenta_contable
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@Anio1)<'2020' then '2009' else rtrim(@Anio1) end) and codcuentacontable in (select ctaIGV from exportaventas0 where ctaIGV<>'' group by ctaIGV)
union all
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov, expor.ccosto 
from plancuentascontables pc inner join (select ctaISC cuenta_contable,CCosto from exportaventas0 group by ctaISC,CCosto) expor
on pc.CodCuentaContable= expor.cuenta_contable
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@Anio1)<'2020' then '2009' else rtrim(@Anio1) end) and codcuentacontable in (select CtaISC from exportaventas0 where ctaISC<>'' group by ctaISC)
union all --si tiene Automatico S2 caso Afocat y CCSM
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov, expor.ccosto 
from plancuentascontables pc inner join (select ctaAux cuenta_contable,CCosto from exportaventas0 group by ctaAux,CCosto) expor
on pc.CodCuentaContable= expor.cuenta_contable
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@Anio1)<'2020' then '2009' else rtrim(@Anio1) end) and codcuentacontable in (select ctaAux from exportaventas0 where ctaAux<>'' group by ctaAux)

if (select count(ccosto) veces from (select ccosto from tmp where ccosto not in ('','-') group by ccosto) a) <>0
begin
	update tmp
	set tmp.ctadebe=cc.ctadebe,tmp.ctahaber=cc.ctahaber,tmp.ctadebe2=cc.ctadebe2,tmp.ctadebe3=cc.ctadebe3, tmp.ctadebe4=cc.ctadebe4, 
		tmp.porcenta=cc.porcenta, tmp.porcenta2=cc.porcenta2,tmp.porcenta3=cc.porcenta3,tmp.porcenta4=cc.porcenta4
	from tmp inner join 
	(select codcentrocosto,ctadebe,ctahaber,porcenta,porcenta2,porcenta3,porcenta4,ctadebe2,ctadebe3,ctadebe4 from CentroCosto where idempresa=@IdEmpresa) cc on tmp.ccosto=cc.CodCentroCosto
End

print '2'
-- seleccionando los porcentajes por cuenta
select cta,convert(nchar(10),'100') codcuentacontable,convert(nchar(10),'100') ctahaber,convert(nchar(10),porcenta )ctadebe,
		convert(nchar(10),porcenta2) ctadebe2,convert(nchar(10),porcenta3) ctadebe3,convert(nchar(10),porcenta4) ctadebe4, tipmov 
into tmp4 from tmp
print '3'
-- seleccionando ctas automaticas con sus porcentajes
select cta,tipmov,cuentas,codcuentacontable2,porcenta,ccosto into tmp1 from (
select a.cta,a.tipmov,a.cuentas,a.codcuentacontable2,b.codcuentacontable2 porcenta, ccosto
from (
		select cta,tipmov,cuentas,codcuentacontable2,ccosto 
		from tmp
		unpivot
		( codcuentacontable2
			for cuentas in (codcuentacontable,ctadebe,ctadebe2,ctadebe3,ctadebe4,ctahaber,ctacierre)
		) 
		as unpvTTable
		where codcuentacontable2<>''
		and cuentas<>'ctacierre'
	) a inner join 
	(
		select cta,tipmov,cuentas,codcuentacontable2 
		from tmp4
		unpivot
		( codcuentacontable2
			for cuentas in (codcuentacontable,ctadebe,ctadebe2,ctadebe3,ctadebe4,ctahaber)
		) 
		as unpvTTable
		where codcuentacontable2 not in ('','0')
	) b on a.cta+a.cuentas=b.cta+b.cuentas 
	) cc group by cta,tipmov,cuentas,codcuentacontable2,porcenta,ccosto 

Select @lcCorrela=e_corr from empresa where idempresa = @IdEmpresa
print @lcCorrela
select *,
	left(dbo.padl(@lcCorrela+ROW_NUMBER() OVER(PARTITION BY zona ORDER BY LEFT(nro_documento, 7),fecha_documento)-1,10,'0'),10) correlA,
	left(grupo,2)+right(año,1)+left(mes,2)+dbo.padl(convert(varchar(5),substring(dbo.CorrelativoMes(Zona,Unidad_Economica,grupo ,año,mes),6,5)*1-1+voucher),5,'0') Nrodocumento,
		(case when cancelado='1' then '1010001' else '' end) ctaefec,
		TotDebe = (Case When tipo_documento='07' Then importe_haber+monto_percepcion+(Case When grupo='02' Then monto_igv*-1 Else 0 End) else 0 End),
		TotHaber=(Case When tipo_documento='07' Then 0 Else importe_debe+monto_percepcion+(Case When grupo='02' Then monto_igv*-1 Else monto_igv End) End) 
into exportaVta1 
from exportaventas0 
--Actualiza el correlativo en empresa
if @lcCorrela=null 
Begin
	UPDATE Empresa SET E_CORR = (select MAX(correla) from exportaVta1)*1 where idempresa=@idempresa
End

Select @lcCorrela=e_corr from empresa where idempresa = @IdEmpresa
--Agregando los cancelados
select Grupo=(Case When grupo='18' Then '02' when grupo='04' Then '20' End),Zona,Unidad_Economica,Año,Mes,Fecha_Registro,
		Cuenta_Contable=(Case When grupo='18' Then @CtaCancelado when grupo='04' Then Cuenta_Abono End),Cuenta_Abono=(Case When grupo='18' Then Cuenta_Contable when grupo='04' Then @CtaCancelado End),  
		Automatico='N',Proveedor,Razon_social,Direccion,Tipo_documento,Nro_Documento,Nro_Documento2,Fecha_documento,
		Detalle_venta='PAGO DEL DOCUMENTO ** '+Nro_documento + ' **', tipo_moneda='1',tipo_cambio=0,Tipo_operacion,
		Importe_Debe=(Case When importe_debe=0 Then 0 Else importe_debe+Monto_igv+Monto_percepcion End),
		Importe_Haber=(Case When importe_Haber=0 Then 0 Else importe_Haber+Monto_igv+Monto_percepcion End),Afecto='0',Monto_igv=0,isc,Monto_isc=0,Cancelado='0',Percepcion=0,Monto_percepcion=0,
		Fechanc,Tipo_Docnc,Nro_docnc,Voucher,Glosa=(Case When Grupo='04' Then 'PAGO A PROVEEDORES M*' Else 'CANCELACION EN EFECTIVO M*' End),CCosto,Fefec,Adicional1=0,Adicional2=0,Adicional3=0,OtrosMontos=0,
		CtaCancelado='',CtaPercepcion='',CtaIGV='',CtaISC='',CtaAux='',
		left(dbo.padl(@lcCorrela+ROW_NUMBER() OVER(PARTITION BY zona ORDER BY LEFT(nro_documento, 7),fecha_documento)-1,10,'0'),10) correlA,
		(Case When grupo='18' Then '02' when grupo='04' Then '20' End)+right(año,1)+left(mes,2)+dbo.padl(convert(varchar(5),substring(dbo.CorrelativoMes(Zona,Unidad_Economica,(Case When grupo='18' Then '02' when grupo='04' Then '20' End) ,año,mes),6,5)*1-1+voucher),5,'0') Nrodocumento,
		ctaefec='',
		TotDebe = 0,
		TotHaber=0 
into exportaVta2 
from exportaventas0 where cancelado='1'

if @lcCorrela=null 

Begin
	UPDATE Empresa SET E_CORR = (select MAX(correla) from exportaVta2)*1 where idempresa=@idempresa
End

Select * 
into tmpexportaVentas
from exportavta1 union all Select * from exportavta2 
order by Adicional2

print 'ok1'
--actualiza registros de movcontables_C
insert into MovContables_C
select año,mes,Zona,Unidad_Economica,
	Nrodocumento,
	fecha_registro,grupo,max(glosa),''
from tmpexportaVentas
group by año,mes,Zona,Unidad_Economica,fecha_registro,grupo,voucher,Nrodocumento
order by grupo desc,voucher

print 'ok2'
--------- actualizar el detalle de movcontables_D
insert into MovContables_D
select IdMovContables_C,
tmpExportaventas.unidad_economica, 
	Nrodocumento,
	(case When tmpexportaVentas.GRUPO in ('02','20') Then isnull(tmpexportaVentas.fefec,'') Else '' end) crp,'-' codactividad,'-' codpar,'-' codsubactividad,
	fecha_registro,left(tmpExportaventas.grupo,2) codmgc,'-' clasmovimiento,'-' ctaDestino,tipo_documento,tmpExportaventas.nro_documento,
	fecha_documento, --DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,convert(datetime,fecha_documento,103))+1,0)) fecha_documento,
	fecha_documento fecha_vencimiento, --DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,convert(datetime,fecha_documento,103))+1,0)) fecha_vencimiento,
	tipo_documento coddocfuente,tmpExportaventas.nro_documento docref,fecha_documento fechref,
	codigoCtaBancaria=(case when left(cuenta_abono,3)='104' then cuenta_abono else '-' end), '-' NroOperacion,'-' Nrocheque,'' CuentaNaturaleza,
	codcuentacontable2,(case when left(codcuentacontable2,1)='6' then isnull(ccosto,'') else '' end) centrocosto,
	tipmov,rtrim(detalle_venta) glosa,'-' orden,isnull(afecto,0) afecto,left(tipo_moneda,1) tipo_moneda,isnull(Tipo_Cambio,0) TipoCambio,
	todos.importe_debe,todos.importe_haber,
	importe_debeD impDebeDolar,
	importe_haberD impHaberDolar,
	'-' TipoAnexo,'-' CodAnexo, rtrim(left(proveedor,11)) codpro, '-' u_codi,fecha_registro datUsu,
	tmpExportaventas.CorrelA correlativo,todos.estado,'-' destino,'-' anexo,0 gastoIntPersonal,'-' cocach,'-' nomanx,@BienServicio codln,tipo_documento tipodca,left(tmpExportaventas.nro_documento,10) otrodoc,0 reten,0 rigv,'-' corrigv,
	'' CodAduana,'1900-01-01 00:00:00.000' FechDua,'' CodDua,0 ISC,isnull(tipo_operacion,0) tipo_operacion,'' NroDetrac,
	'1990-01-01 00:00:00.000' fechaDetrac,'' CodigoDetraccion, 
	fechanc = isnull(convert(datetime,fechanc,103),'1900-01-01 00:00:00.000'), 
	coddocrefnc = isnull(tipo_docnc,''),
	serienc = isnull(left(nro_docnc,4),''),
	nrodocnc = isnull(right(nro_docnc,7),''),
	ltrim(case when percepcion='0' then '' else convert(varchar(5),isnull(percepcion,'')) end) percepcion, 
	(case when monto_percepcion=0 then 0 else isnull(monto_percepcion,0) end) montopercepcion,
	cuenta_abono cuentaabono,isnull(monto_igv,0) montoigv,'' numeropercepcion,'1990-01-01 00:00:00.000' fechaPercepcion,0 MontoRetencion4,
	TipoMedioPago='008',isnull(monto_isc,0) montoIsc,0 montodetraccionIvap, 0 MontoCuentaAuxiliar,0 MontoIcbPer,0 MontoRetencionIGV,'' CuentaCCosto
from tmpExportaventas inner join 
	( --CtaDebe
		select grupo,rtrim(unidad_economica) unidad_economica,nro_documento,substring(cuentas,4,2) tipo,cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) in ('de','cu') then round(importe_debe*(case when left(tipo_moneda,1)=1 then 1 else isnull(Tipo_Cambio,0) end)*(convert(numeric(4),porcenta)/100),2) else 
		(Case when substring(cuentas,4,2) in ('ha') then round(importe_haber*(case when left(tipo_moneda,1)=1 then 1 else isnull(Tipo_Cambio,0) end)*(convert(numeric(4),porcenta)/100),2) else 0 end) end) importe_debe, 
		(Case when substring(cuentas,4,2)='ha' then round(importe_debe*(case when left(tipo_moneda,1)=1 then 1 else isnull(Tipo_Cambio,0) end),2) else 
		(Case When substring(cuentas,4,2) in ('de','cu') Then round(importe_haber*(case when left(tipo_moneda,1)=1 then 1 else isnull(Tipo_Cambio,0) end),2) Else 0 End) end) importe_haber,
		importe_Debe*(case when left(tipo_moneda,1)=1 then 0 else 1 end) importe_debeD,
		importe_haber*(case when left(tipo_moneda,1)=1 then 0 else 1 end) importe_HaberD,
		(Case when cta=codcuentacontable2 then '-' else 'D' end) estado,tipmov,correlA,
		orden='1'
		from tmpExportaventas a inner join tmp1
			on a.cuenta_contable=tmp1.cta and a.ccosto= tmp1.ccosto
		union all -- cta haber
		select grupo,rtrim(unidad_economica) unidad_economica,nro_documento,substring(cuentas,4,2),cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) in ('de','cu') then (Case When importe_debe=0 Then 
		(Case when Automatico='S2' then round(Adicional2*(case when left(tipo_moneda,1)=1 then 1 else isnull(Tipo_Cambio,0) end),2) else round((importe_haber+monto_igv)*(case when left(tipo_moneda,1)=1 then 1 else isnull(Tipo_Cambio,0) end),2) end) Else 0 End) else 
		(Case when Automatico='S2' then round(Adicional2*(case when left(tipo_moneda,1)=1 then 1 else isnull(Tipo_Cambio,0) end),2) else round((importe_debe+monto_igv)*(case when left(tipo_moneda,1)=1 then 1 else isnull(Tipo_Cambio,0) end),2) end) end) importe_debe, 

		(Case when substring(cuentas,4,2)='ha' then (Case When importe_debe=0 Then 
			(Case when Automatico='S2' then round(Adicional2*(case when left(tipo_moneda,1)=1 then 1 else isnull(Tipo_Cambio,0) end),2) 
			else round((importe_haber+monto_igv)*(case when left(tipo_moneda,1)=1 then 1 else isnull(Tipo_Cambio,0) end),2) end) Else 0 End) 
		else 
			(Case when Automatico='S2' then round(Adicional2*(case when left(tipo_moneda,1)=1 then 1 else isnull(Tipo_Cambio,0) end),2) 
			else round((importe_debe+monto_igv*(case when tipo_documento='07' then 0 else 1 end))*(case when left(tipo_moneda,1)=1 then 1 else isnull(Tipo_Cambio,0) end),2) end) 
		end) importe_haber,
		(Case when substring(cuentas,4,2) in ('de','cu') then (Case When importe_debe=0 Then 
		(Case when Automatico='S2' then round(Adicional2*(case when left(tipo_moneda,1)=1 then 0 else 1 end),2) else round((importe_haber+monto_igv)*(case when left(tipo_moneda,1)=1 then 0 else 1 end),2) end) Else 0 End) else 
		(Case when Automatico='S2' then round(Adicional2*(case when left(tipo_moneda,1)=1 then 0 else 1 end),2) else round((importe_debe+monto_igv)*(case when left(tipo_moneda,1)=1 then 0 else 1 end),2) end) end) importe_debeD, 
		(Case when substring(cuentas,4,2)='ha' then (Case When importe_debe=0 Then 
		(Case when Automatico='S2' then round(Adicional2*(case when left(tipo_moneda,1)=1 then 0 else 1 end),2) else round((importe_haber+monto_igv)*(case when left(tipo_moneda,1)=1 then 0 else 1 end),2) end) Else 0 End) else 
		(Case when Automatico='S2' then round(Adicional2*(case when left(tipo_moneda,1)=1 then 0 else 1 end),2) else round((importe_debe+monto_igv)*(case when left(tipo_moneda,1)=1 then 0 else 1 end),2) end) end) importe_haberD,

		(case when a.automatico='S' then 'D' else '-' end) Estado,tipmov,correlA,

		orden='4'
		from tmpExportaventas a inner join tmp1
			on a.cuenta_abono=tmp1.cta and a.ccosto= tmp1.ccosto
		union all --agregando el ISC
		select grupo,rtrim(unidad_economica) unidad_economica,nro_documento,substring(cuentas,4,2),cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) in ('de','cu') then (Case When importe_debe=0 Then importe_haber Else 0 End) else importe_debe end) importe_debe, 
		(Case when substring(cuentas,4,2)='ha' then (Case When importe_debe=0 Then importe_haber Else 0 End) else importe_debe end) importe_haber,
		0 importe_debeD,
		0 importe_haberD,
		'D' Estado,tipmov,correlA,
		orden='2'
		from tmpExportaventas a inner join tmp1
			on a.CtaISC=tmp1.cta and a.ccosto= tmp1.ccosto
		union all -- agregando el IGV
		select grupo,rtrim(unidad_economica) unidad_economica,nro_documento,substring(cuentas,4,2),cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) in ('de','cu') then (Case When monto_igv=0 Then 0 Else 
			(case when tipo_documento='07' then 0 else monto_igv end) End) else monto_igv end) importe_debe, 
		(Case when substring(cuentas,4,2)='ha' then (Case When monto_igv=0 Then 0 Else monto_igv End) else 
			(case when tipo_documento='07' then monto_igv else 0 end) end) importe_haber,
		0 importe_debeD,
		0 importe_haberD,
		'D' Estado,tipmov,correlA,
		orden='3'
		from tmpExportaventas a inner join tmp1
			on a.CtaIGV=tmp1.cta and a.ccosto= tmp1.ccosto
		union all  --agregando las percepciones
		select grupo,rtrim(unidad_economica) unidad_economica,nro_documento,substring(cuentas,4,2),cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) in ('de','cu') then (Case When importe_debe=0 Then importe_haber Else 0 End) else importe_debe end) importe_debe, 
		(Case when substring(cuentas,4,2)='ha' then (Case When importe_debe=0 Then importe_haber Else 0 End) else importe_debe end) importe_haber,
		0 importe_debeD,
		0 importe_haberD,
		'D' Estado,tipmov,correlA,
		orden='6'
		from tmpExportaventas a inner join tmp1
			on a.CtaPercepcion=tmp1.cta and a.ccosto= tmp1.ccosto
		union all  --agregando las Automaticas con S2 solo par aAfocat y CCSM
		select grupo,rtrim(unidad_economica) unidad_economica,nro_documento,substring(cuentas,4,2),cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) in ('de','cu') then (Case When importe_debe=0 Then (Case when Automatico='S2' then Adicional3 else importe_haber end) Else 0 End) else (Case when Automatico='S2' then Adicional3 else importe_debe end) end) importe_debe, 
		(Case when substring(cuentas,4,2)='ha' then (Case When importe_debe=0 Then (Case when Automatico='S2' then Adicional3 else importe_haber end) Else 0 End) else (Case when Automatico='S2' then Adicional3 else importe_debe end) end) importe_haber,
		0 importe_debeD,
		0 importe_haberD,
		'D' Estado,tipmov,correlA,
		orden='7'
		from tmpExportaventas a inner join tmp1
			on a.CtaAux=tmp1.cta and a.ccosto= tmp1.ccosto
		--		order by correlA,grupo desc,cta
	) todos 
	on rtrim(tmpexportaVentas.unidad_economica)+tmpexportaVentas.grupo+tmpexportaVentas.correlA+tmpExportaventas.nro_documento=todos.unidad_economica+todos.grupo+todos.correlA+todos.nro_documento
	Inner join MovContables_C c on 
	rtrim(tmpexportaVentas.unidad_economica)+Nrodocumento=rtrim(c.codunidadeconomica)+c.NroDoc
order by c.NroDoc desc,tmpexportaVentas.correlA,todos.estado,todos.orden,todos.codcuentacontable2

--Actualiza correlativo de GrupoContable 
Declare @mgc as varchar(2), @valor as int
DECLARE actualizaMGC CURSOR FOR 
select grupo,max(substring(nrodocumento,6,6))
from tmpexportaventas
group by grupo

OPEN actualizaMGC  
FETCH NEXT FROM actualizaMGC INTO @mgc,@valor  

WHILE @@FETCH_STATUS = 0  
BEGIN  
	EXEC cont_ActualizaCorrelaGrupoContable @Valor,@ZonaA,@CodUnidadA,@mgc,@Anio1 ,@MesA

    FETCH NEXT FROM actualizaMGC INTO @mgc,@valor
END 

CLOSE actualizaMGC  
DEALLOCATE actualizaMGC

/****** Object:  StoredProcedure [dbo].[spp_MigrarComprasVentas4]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_MigrarComprasVentas4]
@lcdireccion varchar(250), 
@ZonaA varchar(6),
@ZonaB varchar(6),
@CodUnidadA varchar(10),
@CodUnidadB varchar(10),
@MesA char(2),
@MesB char(2),
@Anio1 char(4),
@IdEmpresa int ,
@tMovimiento Char(8),  
@pordiaDoc char(6)

 as
---------------------------
---- borrando tabla exportada exec spp_MigrarComprasVentas4 '', '000012','000012','000012','000012','04','04','2019',5,'FACTUR','PORDIA'
-------------------------------------- select * from tmphp
--exec spp_BorrarTemporales
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpexporta1') AND type in (N'U'))
BEGIN 
	drop table tmpexporta1
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaventas1') AND type in (N'U'))
BEGIN 
	drop table tmpexportaVentas1
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpexportaVentas') AND type in (N'U'))
BEGIN 
	drop table tmpexportaVentas
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmp') AND type in (N'U'))
BEGIN 
	drop table tmp
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmp1') AND type in (N'U'))
BEGIN 
	drop table tmp1
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmp4') AND type in (N'U'))
BEGIN 
	drop table tmp4

END
-------------------------------------
declare @cf as decimal(18,2),@v1 as decimal(18,2),@v4 as decimal(18,2),@v5 as decimal(18,2),@v6 as decimal(18,2),@v7 as decimal(18,2)

select @cf=SUM(cf),@v1=SUM(v1),@v4=SUM(v4),@v5=SUM(v5),@v6=SUM(v6),@v7=SUM(v7)
from exportaventas
where mes=@anio1+@MesA and tipor='RC'
group by tipor

--consolidando iscom y ceaconta
Select grupo,formula,min(orden) orden,cuentacontable,sum(monto) monto 
into tmpexporta1 
from (
	Select a.concepto,b.abreviatura grupo,b.formula,b.codigosbs CuentaContable,max(b.orden) orden,sum(a.monto) monto 
	from (select 'CF' Concepto,@cf monto union all
		select 'V1',@v1 union all
		select 'V4',@v4 union all
		select 'V5',@v5+@v6 union all
		select isnull(conc,left(tarifa,1)+(Case When tarifa='REDO' Then (Case When monto<0 Then '-' Else '+'End) Else right(rtrim(tarifa),1) End)) conc ,monto 
		from exportaventas where mes=@anio1+@MesA and tipor in ('RP','RS')  
	) a inner join tbl_FlujoEfectivo b on rtrim(a.Concepto)=rtrim(b.CodigoFlujoEfectivo)
	where b.CodigoOrden='FACISCOM' and b.codigoSbs<>'-'
	group by a.concepto,b.abreviatura,b.formula,b.codigosbs,b.orden
	) todos 
group by grupo,formula,cuentacontable
order by grupo desc,formula,orden,cuentacontable
-- fin consolidando iscom y ceaconta

--creando el exportaventas solicitado por ceaconta
	select grupo,@ZonaA as zona, @CodUnidadA as unidad_economica,
	@anio1 as año,
	@MesA as mes,
	convert(datetime,convert(varchar(10),getdate(),103),103) as fecha_registro,
	--cuando es Facturacion
	(Case When @tMovimiento='FACTUR' Then 
		'1212101' 
	else  -- cuando es Cobranza
		'1220101' 
	end) as cuenta_contable,
	CuentaContable as cuenta_abono,(Case When grupo='18' Then 'S' Else 'N' End) automatico,
	'99999999997' AS proveedor, 
	'RECIBOS DE ENERGIA' as razon_social,
	'' direccion,
	'14' AS tipo_documento, 
		'0001-'+left(dbo.[traeNombreMes] (@MesA),5)+@anio1 AS nro_documento, 
		'0001-'+left(dbo.[traeNombreMes] (@MesA),5)+@anio1 AS nro_documento2, 
		Convert(datetime,convert(varchar(10),DATEADD(s,-1,DATEADD(mm, 
		DATEDIFF(m,0,convert(datetime,'01/'+@MesA+'/'+@anio1,103))+1,0)),103),103) AS fecha_documento, 
		(Case When @tMovimiento='FACTUR' Then 
			(Case When grupo+left(formula,1) ='181' Then 'VENTAS DE '+rtrim(dbo.[traeNombreMes] (@MesA))+' '+@anio1+' - RESUMEN COMERCIAL' Else 
			(Case When grupo+left(formula,1) ='111' Then 'POR LAS DEDUCCIONES NO APLICABLES AL MES '+rtrim(dbo.[traeNombreMes] (@MesA))+' '+@anio1 Else 
			(Case When grupo+left(formula,1) ='112' Then 'INFORMACION DE VENTAS '+rtrim(dbo.[traeNombreMes] (@MesA))+' '+@anio1+' APORTE LEY N°28749' Else 
			(Case When grupo+left(formula,1) ='113' Then 'POR LA GANANCIA O PERDIDA POR REDONDEO DEL RESUMEN DE COMERCIAL' Else '' End)End) End) End)
		Else 'COBRANZA ENERGIA ' End) AS detalle_venta, 
		1 AS tipo_moneda, 0 AS tipo_cambio, 
		0 AS tipo_operacion, 
		(CASE WHEN monto < 0 THEN 0.0 ELSE monto END) importe_debe, 	
		(CASE WHEN monto < 0 THEN monto*-1 ELSE 0.0 END) importe_haber, 	
		0 AS afecto, 
		0 AS monto_igv, '' AS isc, 
		0.00 AS monto_isc, 0 AS cancelado,
		0 percepcion, 0 monto_percepcion,
		'' fechanc, 
		'' tipo_docnc, 
		'' nro_docnc, 
		left(formula,1) voucher, 
		(Case When grupo+left(formula,1) ='181' Then 'VENTAS DE '+rtrim(dbo.[traeNombreMes] (@MesA))+' '+@anio1+' - RESUMEN COMERCIAL' Else 
		(Case When grupo+left(formula,1) ='111' Then 'POR LAS DEDUCCIONES NO APLICABLES AL MES '+rtrim(dbo.[traeNombreMes] (@MesA))+' '+@anio1 Else 
		(Case When grupo+left(formula,1) ='112' Then 'INFORMACION DE VENTAS '+rtrim(dbo.[traeNombreMes] (@MesA))+' '+@anio1+' APORTE LEY N°28749' Else 
		(Case When grupo+left(formula,1) ='113' Then 'POR LA GANANCIA O PERDIDA POR REDONDEO DEL RESUMEN DE COMERCIAL' Else '' End)End) End) End) GLOSA,'' ccosto,
		'' fefec,0 Adicional1, 0 Adicional2, 0 Adicional3
	into tmpexportaventas1 
	from tmpexporta1
-------------------------------------

-- Seleccionando la cta_debe
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'D' tipmov 
into tmp 
from plancuentascontables
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@anio1)<'2020' then '2009' else rtrim(@anio1) end) and codcuentacontable in 
	(select cuenta_contable from tmpexportaventas1 group by cuenta_contable)
-- Seleccionando la cta_haber
union all
select codcuentacontable cta,codcuentacontable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
	convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
	convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'H' tipmov from plancuentascontables
where idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@anio1)<'2020' then '2009' else rtrim(@anio1) end) and codcuentacontable in (select cuenta_abono from tmpexportaventas1 group by cuenta_abono)

-- seleccionando los porcentajes por cuenta
select cta,convert(nchar(10),'100') codcuentacontable,convert(nchar(10),'100') ctahaber,convert(nchar(10),porcenta )ctadebe,
		convert(nchar(10),porcenta2) ctadebe2,convert(nchar(10),porcenta3) ctadebe3,convert(nchar(10),porcenta4) ctadebe4, tipmov 
into tmp4 from tmp

-- seleccionando ctas automaticas con sus porcentajes
select a.cta,a.tipmov,a.cuentas,a.codcuentacontable2,b.codcuentacontable2 porcenta
into tmp1 
from (
		select cta,tipmov,cuentas,codcuentacontable2 
		from tmp
		unpivot
		( codcuentacontable2
			for cuentas in (codcuentacontable,ctadebe,ctadebe2,ctadebe3,ctadebe4,ctahaber,ctacierre)
		) 
		as unpvTTable
		where codcuentacontable2<>''
		and cuentas<>'ctacierre'
	) a inner join 
	(
		select cta,tipmov,cuentas,codcuentacontable2 
		from tmp4
		unpivot
		( codcuentacontable2
			for cuentas in (codcuentacontable,ctadebe,ctadebe2,ctadebe3,ctadebe4,ctahaber)
		) 
		as unpvTTable
		where codcuentacontable2 not in ('','0')
	) b on a.cta+a.cuentas=b.cta+b.cuentas 

--agregando ctas de caja efectivo
insert into tmp1
select valor cta,'D' tipomov,'codcuentacontable' cuentas,Valor codcuentacontable2,100 porcenta from Parametros where Clave ='CuentaAutoCVentas' and estado='1' group by valor


Declare @lcCorrela int --,@lcCorrel int, @Valor int

Select @lcCorrela=e_corr from empresa where idempresa = @IdEmpresa

select *,left(dbo.padl(@lcCorrela+ROW_NUMBER() OVER(PARTITION BY zona ORDER BY LEFT(nro_documento, 7),fecha_documento)-1,10,'0'),10) correlA,
	left(grupo,2)+right(año,1)+left(mes,2)+dbo.padl(convert(varchar(5),substring(dbo.CorrelativoMes(Zona,Unidad_Economica,grupo ,año,mes),6,5)*1-1+voucher),5,'0') Nrodocumento,
		(case when cancelado='1' then '1010001' else '' end) ctaefec
into tmpexportaVentas 
from tmpexportaventas1

UPDATE Empresa SET E_CORR = (select MAX(correla) from tmpexportaVentas)*1 where idempresa=@idempresa

--actualiza registros de movcontables_C
insert into MovContables_C
select año,mes,Zona,Unidad_Economica,
	Nrodocumento,
	fecha_registro,grupo,max(glosa),''
from tmpexportaVentas
group by año,mes,Zona,Unidad_Economica,fecha_registro,grupo,voucher,Nrodocumento
order by grupo desc,voucher

--actualiza registros de movcontables_D
insert into MovContables_D
select IdMovContables_C,tmpExportaventas.zona, 
	Nrodocumento,
	(case When tmpexportaVentas.GRUPO in ('02','20') Then isnull(tmpexportaVentas.fefec,'') Else '' end) crp,'-' codactividad,'-' codpar,'-' codsubactividad,
	fecha_registro,left(tmpExportaventas.grupo,2) codmgc,'-' clasmovimiento,'-' ctaDestino,tipo_documento,tmpExportaventas.nro_documento,
	Convert(datetime,convert(varchar(10),DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,convert(datetime,fecha_documento,103))+1,0)),103),103) fecha_documento,
	Convert(datetime,convert(varchar(10),DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,convert(datetime,fecha_documento,103))+1,0)),103),103) fecha_vencimiento,tipo_documento coddocfuente,tmpExportaventas.nro_documento docref,fecha_documento fechref,
	codigoCtaBancaria=(case when left(cuenta_abono,3)='104' then cuenta_abono else '-' end), '-' NroOperacion,'-' Nrocheque,'' CuentaNaturaleza,
	codcuentacontable2,isnull(ccosto,'') centrocosto,
	tipmov,left(detalle_venta,19) glosa,'-' orden,isnull(afecto,0) afecto,left(tipo_moneda,1) tipo_moneda,isnull(Tipo_Cambio,0) TipoCambio,
	todos.importe_debe,todos.importe_haber,0 impDebeDolar,0 impHaberDolar,'-' TipoAnexo,'-' CodAnexo, rtrim(left(proveedor,11)) codpro, '-' u_codi,fecha_registro datUsu,
	tmpExportaventas.CorrelA correlativo,todos.estado,'-' destino,'-' anexo,0 gastoIntPersonal,'-' cocach,'-' nomanx,'-' codln,tipo_documento tipodca,left(tmpExportaventas.nro_documento,10) otrodoc,0 reten,0 rigv,'-' corrigv,
	'' CodAduana,'1900-01-01 00:00:00.000' FechDua,'' CodDua,0 ISC,isnull(tipo_operacion,0) tipo_operacion,'' NroDetrac,
	'1990-01-01 00:00:00.000' fechaDetrac,'' CodigoDetraccion, 
	fechanc = isnull(convert(datetime,fechanc,103),'1900-01-01 00:00:00.000'), 
	coddocrefnc = isnull(tipo_docnc,''),
	serienc = isnull(left(nro_docnc,4),''),
	nrodocnc = isnull(right(nro_docnc,7),''),
	ltrim(case when percepcion='0' then '' else convert(varchar(5),isnull(percepcion,'')) end) percepcion, 
	(case when monto_percepcion=0 then 0 else isnull(monto_percepcion,0) end) montopercepcion,
	cuenta_abono cuentaabono,isnull(monto_igv,0) montoigv,'' numeropercepcion,'1990-01-01 00:00:00.000' fechaPercepcion,0 MontoRetencion4,
	TipoMedioPago='008',isnull(monto_isc,0) montoIsc,0 montodetraccionIvap, 0 MontoCuentaAuxiliar,0 MontoIcbPer,0 MontoRetencionIGV,'' CuentaCCosto
from tmpExportaventas inner join 
	(
		select nro_documento,substring(cuentas,4,2) tipo,cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) in ('de','cu') then importe_debe*(convert(numeric(4),porcenta)/100) else 0 end) importe_debe, 
		(Case when substring(cuentas,4,2)='ha' then importe_debe else (Case When substring(cuentas,4,2) in ('de','cu') Then importe_haber Else 0 End) end) importe_haber,(Case when cta=codcuentacontable2 then '-' else 'D' end) estado,tipmov,correlA
		from tmpExportaventas a inner join tmp1
			on a.cuenta_contable=tmp1.cta
		union all
		select nro_documento,substring(cuentas,4,2),cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) in ('de','cu') then (Case When importe_debe=0 Then importe_haber Else 0 End) else importe_debe end) importe_debe, 
		(Case when substring(cuentas,4,2)='ha' then (Case When importe_debe=0 Then importe_haber Else 0 End) else importe_debe end) importe_haber,(case when left(codcuentacontable2,1) in ('4','5','6') then '-' else 'D' end) Estado,tipmov,correlA
		from tmpExportaventas a inner join tmp1
			on a.cuenta_abono=tmp1.cta
--		order by correlA,grupo desc,cta
	) todos 
	on tmpexportaVentas.correlA+tmpExportaventas.nro_documento=todos.correlA+todos.nro_documento
	Inner join MovContables_C c on 
	Nrodocumento=c.NroDoc
order by c.NroDoc desc,tmpexportaVentas.correlA,tipmov 

--Actualiza correlativo de GrupoContable
Declare @mgc as varchar(2), @valor as int
DECLARE actualizaMGC CURSOR FOR 
select grupo,max(substring(nrodocumento,9,2))
from tmpexportaventas
group by grupo

OPEN actualizaMGC  
FETCH NEXT FROM actualizaMGC INTO @mgc,@valor  

WHILE @@FETCH_STATUS = 0  
BEGIN  
	EXEC cont_ActualizaCorrelaGrupoContable @Valor,@ZonaA,@CodUnidadA,@mgc,@Anio1 ,@MesA

    FETCH NEXT FROM actualizaMGC INTO @mgc,@valor
END 

CLOSE actualizaMGC  
DEALLOCATE actualizaMGC 


-- asiento cancelados
--drop table tmpexportaVentas

--declare @lcCancelado as int
--select @lcCancelado=cancelado from exportaventas where cancelado='1' group by cancelado

--select @lcCorrel= substring(dbo.CorrelativoMes(@ZonaA,@CodUnidadA,'02' ,@Anio1 ,@MesA ),6,5)*1-1
--Select @lcCorrela=e_corr from empresa where idempresa = @IdEmpresa

--select *,left(dbo.padl(@lcCorrela+ROW_NUMBER() OVER(PARTITION BY zona ORDER BY LEFT(nro_documento, 7),fecha_documento)-1,10,'0'),10) correlA,
--		(case when cancelado='1' then '1010001' else '' end) ctaefec
--into tmpexportaVentas 
--from exportaventas

--if @lcCancelado=1
--Begin  --creando la cancelacion de las 12
--UPDATE Empresa SET E_CORR = (select MAX(correla) from tmpexportaVentas)*1 where idempresa=@idempresa

--insert into MovContables_C
--select año,mes,Zona,Unidad_Economica,left('02'+right(año,1)+left(mes,2)+dbo.padl(convert(varchar(5),@lcCorrel+voucher),5,'0'),10) Nrodocumento,
--	fecha_registro,'02','CANCELACION VENTAS COMERCIALES*',''
--from tmpexportaVentas
--group by año,mes,Zona,Unidad_Economica,fecha_registro,grupo,voucher
--order by voucher

--select @Valor=@lcCorrel+ MAX(voucher) from tmpexportaVentas
--	EXEC cont_ActualizaCorrelaGrupoContable @Valor,@ZonaA,@CodUnidadA,'02',@Anio1 ,@MesA

--insert into MovContables_D
--select IdMovContables_C,tmpExportaventas.zona, left('02'+rtrim(right(año,1)+left(tmpExportaventas.mes,2)+dbo.padl(convert(varchar(5),@lcCorrel+voucher),5,'0')),10) Nrodocumento,'' crp,'-' codactividad,'-' codpar,'-' codsubactividad,
--	fecha_registro,'02' codmgc,'-' clasmovimiento,'-' ctaDestino,tipo_documento,tmpExportaventas.nro_documento,todos.fecha_documento,todos.fecha_documento fecdoc2,
--	tipo_documento tipodoc2,tmpExportaventas.nro_documento nrodoc2,todos.fecha_documento fechdoc3,codigoCtaBancaria=(case when left(cuenta_abono,3)='104' then cuenta_abono else '-' end), 
--	'-' NroOperacion,'-' Nrocheque,'' CuentaNaturaleza,codcuentacontable2,isnull(ccosto,'') centrocosto,tipmov,left(detalle_venta,50) glosa,'-' orden,
--	isnull(afecto,0) afecto,left(tipo_moneda,1) tipo_moneda,isnull(Tipo_Cambio,0) TipoCambio,todos.importe_debe,todos.importe_haber,0 impDebeDolar,0 impHaberDolar,
--	'-' TipoAnexo,'-' CodAnexo, rtrim(left(proveedor,11)) codpro, '-' u_codi,fecha_registro datUsu,
--	rtrim(CorrelA) correlativo,todos.estado,'-' destino,'-' anexo,
--	0 gastoIntPersonal,'-' cocach,'-' nomanx,'-' codln,tipo_documento tipodoc3,left(tmpExportaventas.nro_documento,10) nrodoc3,0 reten,0 rigv,'-' corrigv,
--	'' CodAduana,'1900-01-01 00:00:00.000' FechDua,'' CodDua,0 ISC,isnull(tipo_operacion,0) tipo_operacion,'' NroDetrac,
--	'1990-01-01 00:00:00.000' fechaDetrac,'' CodigoDetraccion,fechanc = isnull(convert(datetime,fechanc,103),'1900-01-01 00:00:00.000'), 
--	coddocrefnc = isnull(tipo_docnc,''),serienc = isnull(left(nro_docnc,4),''),nrodocnc = isnull(right(nro_docnc,7),''),
--	ltrim(case when percepcion='0' then '' else convert(varchar(5),isnull(percepcion,'')) end) percepcion, 
--	(case when monto_percepcion=0 then 0 else isnull(monto_percepcion,0) end) montopercepcion,
--	cuenta_abono cuentaabono,0 montoigv,'' numeropercepcion,'1990-01-01 00:00:00.000' fechaPercepcion,0 MontoRetencion4,
--	TipoMedioPago='008',isnull(monto_isc,0) montoIsc,0 montodetraccionIvap, 0 MontoCuentaAuxiliar
--from tmpExportaventas inner join 
--( 
--	select nro_documento,substring(cuentas,4,2) tipo,cta,cuentas,codcuentacontable2,
--	(Case when substring(cuentas,4,2)='ha' then importe_debe else 0 end) importe_Debe,
--	(Case when substring(cuentas,4,2) in ('de','cu') then importe_debe*(convert(numeric(4),porcenta)/100) else 0 end) importe_Haber, 
--	(Case when cta=codcuentacontable2 then '-' else 'D' end) estado,'H' tipmov,a.fecha_documento
--	from tmpExportaventas a inner join tmp1
--	on a.cuenta_contable=tmp1.cta
--	where a.cancelado=1 
--) todos 
--on tmpExportaventas.nro_documento=todos.nro_documento
--Inner join MovContables_C c on '02'+right(año,1)+left(tmpExportaventas.mes,2)+dbo.padl(convert(varchar(5),@lcCorrel+voucher),5,'0')=c.NroDoc
--union all --creando la cancelacion con la 101
--select IdMovContables_C,a.zona, left('02'+right(max(año),1)+left(max(a.mes),2)+dbo.padl(convert(varchar(5),@lcCorrel+voucher),5,'0'),10) Nrodocumento,'' crp,'-' codactividad,'-' codpar,'-' codsubactividad,
--		fecha_registro,'02' codmgc,'-' clasmovimiento,'-' ctaDestino,'00' tipo_documento,convert(varchar(10),a.fecha_documento,112) nro_documento,fecha_documento,fecha_documento,
--		'00' tipo_documento,convert(varchar(10),a.fecha_documento,112) nro_documento,fecha_documento,codigoCtaBancaria='-', 
--		'-' NroOperacion,'-' Nrocheque,'' CuentaNaturaleza,ctaefec codcuentacontable2,'' centrocosto,tipmov,'CANCELACION INGRESOS DEL DIA ***' glosa,'-' orden,
--		0 afecto,1 tipo_moneda,0 TipoCambio,
--		(Case when substring(cuentas,4,2) in ('de','cu') then sum(importe_debe)*(convert(numeric(4),porcenta)/100) else 0 end) importe_Debe, 
--		(Case when substring(cuentas,4,2)='ha' then sum(importe_debe) else 0 end) importe_Haber,0 impDebeDolar,0 impHaberDolar,
--		'-' TipoAnexo,'-' CodAnexo, '205555555' codpro, '-' u_codi,fecha_documento datUsu,
--		rtrim(max(CorrelA)) correlativo,'-' estado,'-' destino,'-' anexo,
--		0 gastoIntPersonal,'-' cocach,'-' nomanx,'-' codln,'00' tipo_documento,convert(varchar(10),a.fecha_documento,112) nro_documento,0 reten,0 rigv,'-' corrigv,
--		'' CodAduana,'1900-01-01 00:00:00.000' FechDua,'' CodDua,0 ISC,0 tipo_operacion,'' NroDetrac,
--		'1990-01-01 00:00:00.000' fechaDetrac,'' CodigoDetraccion, fechanc = '1900-01-01 00:00:00.000', 
--		coddocrefnc = '',serienc = '',nrodocnc = '','' percepcion,0 montopercepcion,
--		ctaefec cuentaabono,0 montoigv,'' numeropercepcion,'1990-01-01 00:00:00.000' fechaPercepcion,0 MontoRetencion4,
--		TipoMedioPago='008',0 montoIsc,0 montodetraccionIvap, 0 MontoCuentaAuxiliar
--	from tmpExportaventas a inner join tmp1
--	on a.ctaefec=tmp1.cta
--	Inner join MovContables_C c on '02'+right(año,1)+left(a.mes,2)+dbo.padl(convert(varchar(5),@lcCorrel+voucher),5,'0')=c.NroDoc
--	where a.cancelado=1
--	group by a.zona,a.fecha_registro,a.fecha_documento,substring(cuentas,4,2),a.ctaefec,cuentas,porcenta,tipmov, a.voucher,c.IdMovContables_C
--order by 2,24 desc

--End

---------------------------

/****** Object:  StoredProcedure [dbo].[spp_MigrarComprasVentas4COBCOM]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_MigrarComprasVentas4COBCOM]
@zonaA varchar(6),
@CodUnidadA varchar(10),
@MesA char(2),
@Anio1 char(4),
@IdEmpresa int,
@CodMGC as char(2),
@Tipo as char(10),
@NewNroDoc as char(20),@fechaFac0 as varchar(10)

as

-- exec spp_MigrarComprasVentas4COBCOM '000012','000012','07','2019',5,'31','TIPO1','0001-JUNIO2019','30/06/2019'
-- exec spp_MigrarComprasVentas4COBCOM '000012','000012','09','2022',5,'31','COBOFAPE','S001-SETIE2022','30/09/2022'

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaVentasCob3') AND type in (N'U'))
BEGIN 
	drop table tmpExportaVentasCob3 
End 

If @Tipo='TIPO1'
BEGIN

	Declare @FechaFac as datetime, @RucCaja as char(20),@NroCap as char(3),@RazonSocial as char(100),@FechaReg as datetime
	declare @SumaBoletas as decimal(18,2)

	select @NroCap=left(ltrim(cap),3),@SumaBoletas=sum(total)+sum(dif) from exportaventas group by cap

	set @FechaFac= convert(datetime,@fechaFac0,103)

	select @RucCaja=RUC,@RazonSocial=RazonSocial from (select codigo Cap,ruc_Cpto Ruc,Descripcion RazonSocial from tbl_CapCptoComercial where Tipo='CAP' and Estado=1) c where cap=@NroCap

	SELECT @FechaReg = convert(datetime,convert(varchar(10),DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,convert(datetime,min(fechai),103))+1,0)),103),103)
	from exportaventas 

	select GRUPO='31', ZONA=@zonaA,UNIDAD_ECONOMICA=@zonaA,AÑO=@Anio1,MES=@MesA,
		FECHA_REGISTRO=@FechaReg, CUENTA_CONTABLE=
		(Case When codcap ='33' Then '1041103' Else 
		(Case When codcap ='22' Then '1041101' Else     
		(Case When codcap ='35' Then '1041102' Else 
		(Case When codcap ='32' Then '1041109' Else 
		(Case When codcap ='34' Then '1041106' Else 
		(Case When codcap  in ('714','716') Then '1041108' Else 
		(Case When codcap = '01' Then '1010101' Else '' End)End)End)End)End)End)End),
		CUENTA_ABONO= '', AUTOMATICO='N', PROVEEDOR= @RucCaja,Razon_Social=@RazonSocial,Direccion='',
		TIPO_DOCUMENTO='00', 
		NRO_DOCUMENTO='EECC-'+substring(@NewNroDoc,6,9),
		NRO_DOCUMENTO2='EECC-'+substring(@NewNroDoc,6,9),FECHA_DOCUMENTO=FECHAI, 
		DETALLE_VENTA='COBRANZA COMERCIAL DEL '+upper(convert(varchar(12),fechai,113))+' EN '+@RazonSocial,
		TIPO_MONEDA=0,TIPO_CAMBIO=0,
		TIPO_OPERACION=1,IMPORTE_DEBE=total+dif,IMPORTE_HABER=0,AFECTO=0,MONTO_IGV=0,ISC=0,MONTO_ISC=0,CANCELADO=0,PERCEPCION=0,MONTO_PERCEPCION=0,
		fechanc=convert(datetime,'01/01/1900',103),tipo_docnc='',nro_docnc='',voucher=ROW_NUMBER() OVER(ORDER BY codcap),
		glosa='COBRANZA COMERCIAL DEL '+upper(convert(varchar(12),fechai,113))+' EN '+@RazonSocial,
		ccosto='', fefec='',
		Banco=@RazonSocial
	into tmpExportaVentasCob3 
		from (select fechai,left(ltrim(cap),3) codcap,cap,sum(total) total,sum(dif) dif
				from exportaventas
				group by fechai,left(ltrim(cap),3),cap
			) aa
		union all
		----- para el caso de comision de cobranza cambiar cuentas de banco toda la 104 por (preguntar a contabilidad a que cuenta se cargara esa comision)
		----en tabla tbl_CAPComercial aumentar a 3 dig el campo de CAP y crear el CAP de CULQUI (715 CULQUI)
		--select GRUPO='31', ZONA=@zonaA,UNIDAD_ECONOMICA=@zonaA,AÑO=@Anio1,MES=@MesA,
		--FECHA_REGISTRO=@FechaReg, CUENTA_CONTABLE=
		--(Case When codcap ='33' Then '1041103' Else 
		--(Case When codcap ='22' Then '1041101' Else     
		--(Case When codcap ='35' Then '1041102' Else 
		--(Case When codcap ='32' Then '1041109' Else 
		--(Case When codcap ='34' Then '1041106' Else '' End)End)End)End)End),
		--CUENTA_ABONO= '', AUTOMATICO='N', PROVEEDOR= @RucCaja,Razon_Social=@RazonSocial,Direccion='',
		--TIPO_DOCUMENTO='00', 
		--NRO_DOCUMENTO='EECC-'+substring(@NewNroDoc,6,9),
		--NRO_DOCUMENTO2='EECC-'+substring(@NewNroDoc,6,9),FECHA_DOCUMENTO=FECHAI, 
		--DETALLE_VENTA='COBRANZA COMERCIAL DEL '+upper(convert(varchar(12),fechai,113))+' EN '+@RazonSocial,
		--TIPO_MONEDA=0,TIPO_CAMBIO=0,
		--TIPO_OPERACION=1,IMPORTE_DEBE=comision,IMPORTE_HABER=0,AFECTO=0,MONTO_IGV=0,ISC=0,MONTO_ISC=0,CANCELADO=0,PERCEPCION=0,MONTO_PERCEPCION=0,
		--fechanc=convert(datetime,'01/01/1900',103),tipo_docnc='',nro_docnc='',voucher=ROW_NUMBER() OVER(ORDER BY codcap),
		--glosa='COBRANZA COMERCIAL DEL '+upper(convert(varchar(12),fechai,113))+' EN '+@RazonSocial,
		--ccosto='', fefec='',
		--Banco=@RazonSocial
		--from (select fechai,left(ltrim(cap),2) codcap,cap,sum(total) total,sum(dif) dif
		--		from exportaventas
		--		group by fechai,left(ltrim(cap),2),cap
		--	) aa
		---- fin comision
		--union all
--agregando haber detallado por cada cobranza en la 12
	select GRUPO='31', ZONA=@zonaA,UNIDAD_ECONOMICA=@zonaA,AÑO=@Anio1,MES=@MesA,
		FECHA_REGISTRO=@FechaReg, CUENTA_CONTABLE='',
		CUENTA_ABONO= '1212101', AUTOMATICO='N', PROVEEDOR= '99999999997',Razon_Social='',Direccion='',
		TIPO_DOCUMENTO='14', 
		NRO_DOCUMENTO='S001-'+substring(@NewNroDoc,6,9),
		NRO_DOCUMENTO2='S001-'+substring(@NewNroDoc,6,9),FECHA_DOCUMENTO=@fechaFac, 
		DETALLE_VENTA='COMPROBANTE DE VENTA - '+upper(convert(varchar(12),@fechaFac,113))+' **',
		TIPO_MONEDA=0,TIPO_CAMBIO=0,
		TIPO_OPERACION=1,IMPORTE_DEBE=0,IMPORTE_HABER=total+dif,AFECTO=0,MONTO_IGV=0,ISC=0,MONTO_ISC=0,CANCELADO=0,PERCEPCION=0,MONTO_PERCEPCION=0,
		fechanc=convert(datetime,'01/01/1900',103),tipo_docnc='',nro_docnc='',voucher=ROW_NUMBER() OVER(ORDER BY codcap),
		glosa='PAGO DE ENERGIA',
		ccosto='', fefec='',
		Banco=@RazonSocial
		from (select fechai,left(ltrim(cap),3) codcap,cap,sum(total) total,sum(dif) dif
				from exportaventas
				group by fechai,left(ltrim(cap),3),cap
			) aa
		order by voucher,CUENTA_ABONO desc

-- agregando haber totalizado en una 12
	--select GRUPO='31', ZONA=@zonaA,UNIDAD_ECONOMICA=@zonaA,AÑO=@Anio1,MES=@MesA,
	--	FECHA_REGISTRO=@FechaReg, CUENTA_CONTABLE='',
	--	CUENTA_ABONO= '1212101', AUTOMATICO='N', PROVEEDOR= '99999999997',Razon_Social= '',Direccion='',
	--	TIPO_DOCUMENTO='14', NRO_DOCUMENTO='S001-'+substring(@NewNroDoc,6,9),
	--	NRO_DOCUMENTO2='S001-'+substring(@NewNroDoc,6,9),FECHA_DOCUMENTO=@fechaFac, 
	--	DETALLE_VENTA='COMPROBANTE DE VENTA - '+upper(convert(varchar(12),@fechaFac,113))+' **',
	--	TIPO_MONEDA=0,TIPO_CAMBIO=0,
	--	TIPO_OPERACION=1,IMPORTE_DEBE=0,IMPORTE_HABER=@SumaBoletas,AFECTO=0,MONTO_IGV=0,ISC=0,MONTO_ISC=0,CANCELADO=0,PERCEPCION=0,MONTO_PERCEPCION=0,
	--	fechanc=convert(datetime,'01/01/1900',103),tipo_docnc='',nro_docnc='',voucher=999999,
	--	glosa='PAGO DE ENERGIA',
	--	ccosto='', fefec='',
	--	Banco=@RazonSocial		

	update tmpExportaVentasCob3 set voucher=1

	if (select count(zona) from tmpExportaVentasCob3)>1
	Begin
		IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpExportaVentasCob1a') AND type in (N'U'))
		BEGIN 
			drop table tmpExportaVentasCob1a 
		END
		set @Tipo='TIPO1CC'
		select * into tmpExportaVentasCob1a from tmpExportaVentasCob3 
		exec spp_MigrarCobranzaISCOM @zonaA,@CodUnidadA,@MesA,@Anio1,@IdEmpresa,@CodMGC,@Tipo,@RucCaja,@NroCap
		drop table tmpExportaVentasCob1a 
	End

End

If @Tipo='COBOFAPE'
Begin
-- exec spp_BorrarTemporales

 exec spp_MigrarComprasVentas4COBPEN @ZonaA,@CodUnidadA,@MesA,@Anio1,@IdEmpresa,'11',@Tipo,@NewNroDoc,@fechaFac0
End

/****** Object:  StoredProcedure [dbo].[spp_MigrarPlanilla]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_MigrarPlanilla]
@Anio char(4),@Mes char(2),@Zona VARchar(10),@CodUnidadEconomica char(10),@CodMGC char(2),@Tipo char(2)

as
--pasos para migrar planilla
-- 1-- spp_MigrarComprasVentas0 'd:\gestion\Plani0716m.xls', 'VENTAS'
--select * from exportaventas
-- 2-- spp_MigrarPlanilla '2020','04','000012','000012','05','03' -- 01 vaca, 02 grati, 03 mensual

--borrando y creando tabla temporal
drop table tempo
select * into tempo from exportaventas
	------------------------------------
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpCajaC') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpCajaC
	END
	-------------------------------------
	-----------------------------------------------TOMANDO y ACTUALIZANDO CORRELATIVO
	DECLARE @CorreCont CHAR(10),@Valor	char(5), --@CodMGC1 char(2), @CodMGC2 char(2),
			@RegMigrados int
	set @CorreCont=dbo.CorrelativoMes(@Zona ,@CodUnidadEconomica,@CodMGC ,@Anio ,@Mes )
	set @Valor=right(@CorreCont,5)
	
	select @Anio anio,@Mes mes, @Zona zona, @CodUnidadEconomica codunidadeconomica,
		left(@CorreCont,5)+dbo.padl(( ROW_NUMBER() OVER(PARTITION BY mes ORDER BY e_des1))-1+@valor,5,'0') nrodoc,
	convert(datetime,dbo.padl(day(getdate()),2,'0')+'/'+dbo.padl(month(getdate()),2,'0')+'/'+str(year(getdate())),103) fechco,'05' codmgc,
	e_des1 glosa,'' estado,'' NroDocCaja,'' correlativo,' ' TransferidoAnt,m1_empl
	into tmpCajaC
--	from (select m1_empl,e_des1,mes from gestionrrhhetocache..tempo group by m1_empl,e_des1,mes) bb
	from (select m1_empl,e_des1,mes from tempo group by m1_empl,e_des1,mes) bb



	set @Valor=(select right(rtrim(max(nrodoc)),5) from tmpCajaC where rtrim(TransferidoAnt)='')
	set @RegMigrados =(select count(transferidoAnt) from tmpCajaC where rtrim(TransferidoAnt)<>'' group by zona)

	if @RegMigrados >0
		begin
			-- actualiza cab contable con cab tesoreria
			Declare @TransferidoAnt varchar(10),  @fechaco datetime, @glosa varchar(200)
					--anio,mes,zona,codunidadeconomica,nrodoc,fechco, codmgc,glosa, estado
			declare nCab cursor for 
			-- select * from movcontables_C
			select Zona,TransferidoAnt,fechco, glosa 
			from tmpCajaC where rtrim(TransferidoAnt)<>'' order by nrodoc

			open nCab 
			Fetch nCab into @Zona,@TransferidoAnt,@fechaco, @glosa 

			While @@Fetch_Status =0
			Begin
			-- actualizando cab conta
			update movContables_C set fechco= @fechaco, glosa= @glosa
			where nrodoc=@TransferidoAnt and zona= @zona

			Fetch Next from nCab into @Zona,@TransferidoAnt,@fechaco, @glosa 
			End
			Close nCab
			Deallocate nCab

		end
	if @Valor<>'' or @Valor<>'NULL'
		begin 
			EXEC cont_ActualizaCorrelaGrupoContable @Valor,@zona,@CodUnidadEconomica,@CodMGC,@Anio ,@Mes
		end 
	insert into movcontables_c 
	select anio,mes,zona,codunidadeconomica,nrodoc,fechco, codmgc,glosa, estado
	from tmpCajaC where rtrim(transferidoAnt)=''

-- calculando los correlativos para el detalle
Declare @lcCorrel int,@lcCorrelc CHAR(10), @idEmpresa int 
--------------------
Select @lcCorrel= (select e_corr from empresa a inner join zona b on a.idEmpresa=b.idEmpresa inner join unidad_economica c on c.codZona=b.codZona where c.codUnidadEconomica=@CodUnidadEconomica and b.estado<>0 and c.estado <>0)
Select @idEmpresa= (select a.idEmpresa from empresa a inner join zona b on a.idEmpresa=b.idEmpresa inner join unidad_economica c on c.codZona=b.codZona where c.codUnidadEconomica=@CodUnidadEconomica and b.estado<>0 and c.estado <>0)

-- detalle
--transf. detalle a conta 
declare @IdMovContables_C int,@CodigoDocumento char(18),@NroDocumento char(10),
@CRP char(10),@CodActividad char(10),@CodPar char(10),@CodSubActividad char(10),
@FechContable datetime,--@CodMGC char(3),
@ClaseMovimiento char(2),@CtaDestino nchar(10),
@CodigoDocumentoReferencia nchar(10),@NroDocReferencia nchar(14),@FechaDocReferencia datetime,@FechaVencimiento datetime,
@CodigoDocumentoFuente nchar(10),@NroDocumentoFuente nchar(14),@FechaDocumentoFuente datetime,@CodigoCtaBancaria nchar(10),
@NroOperacion nchar(10),@NroCheque nchar(10),@CuentaNaturaleza char(12),@CodCuenta nchar(10),
@CentroCosto char(15),@TipoMov char(1), --@Glosa varchar(250),
@Orden varchar(250),
@Afecto bit,@Moneda char(2),@TipoCambio decimal(5,3),@impDebe decimal(15,2),
@impHaber decimal(15,2),@impDebeDolar decimal(15,2),@impHaberDolar decimal(15,2),@TipoAnexo char(2),
@CodAnexo char(11),@codPro char(11),@u_codi char(6),@datUsu datetime,
@Correlativo char(10),@estado char(1),@Destino char(1),@Anexo char(11),
@GastoIntPersonal bit,@cocach char(10),@nomanx varchar(250),@codIn char(11),
@tipdca char(2),@nrodca char(10),@reten bit,@rigv bit,
@corrigv char(10),@OPER VARCHAR(3),@CodAduana nchar(3),@FechDUA smalldatetime,@CodDUA nchar(30),
@ISC bit, @TipoOper int,@NroDetrac varchar(10),@FechaDetrac datetime,@CodigoDetraccion varchar(3),
@Fecha_RefComprobModi smalldatetime,@Tipo_RefComprobModi char(2),@Serie_RefComprobModi char(4),@Nro_RefComprobModi nchar(10),
@CodigoPercepcion varchar(5),@PorcentajePercepcion decimal(10,2),@CuentaAbono varchar(10),@MontoIGV decimal(12,3),
@NumeroPercepcion varchar(11),@FechaPercepcion datetime,@MontoRetencion4 decimal(18,2),
@TipoMedioPago nchar(3),@MontoISC decimal(10,2),@MontoDetraccionIvap decimal(10,2),@MontoCuentaAuxiliar decimal(10,2)

declare nMigrar cursor for 
--select * from tmmprueba
select sub.idmovcontables_c,@CodUnidadEconomica codunidadeconomica,sub.nrodoc nrodocumento,
(case when left(nomcc,1) in ('1','2','3','4','5','6','7','8','9','0') then '' else left(nomcc,5) end) CRP,
'-' codactividad,'-' codpar,'-' codsubactividad,sub.fechco fechcontable,
@CodMGC codmgc, '-' clasemovimiento,'-' ctadestino,(Case when d.tdoc='' Then '00' Else d.tdoc end) codigoDocumentoReferencia,

--(Case When  @Tipo='02' Then 'GRATI'+@Mes+right(@Anio,2) Else (case when len(d.mes)>=6 then left(d.mes,5) else REPLICATE( '0', 5 - LEN( RTRIM( d.mes ) ) )+rtrim(d.mes) end)+right(@Anio,4) End)
(Case When d.ndoc='' Then 'PLLA-'+(Case When  @Tipo='02' Then 'GRATI'+@Mes+right(@Anio,2) Else (case when len(d.mes)>=6 then left(d.mes,5) else REPLICATE( '0', 5 - LEN( RTRIM( d.mes ) ) )+rtrim(d.mes) end)+right(@Anio,4) End) Else d.ndoc end) nrodocreferencia, (Case when d.tdoc='' Then sub.fechco Else d.fechdoc end) fechadocReferencia, 
(Case when d.tdoc='' Then sub.fechco Else d.fechdoc end) fechavencimiento, (Case when d.tdoc='' Then '00' Else d.tdoc end) codigodocumentofuente,
(Case When d.ndoc='' Then 'PLLA-'+(Case When  @Tipo='02' Then 'GRATI'+@Mes+right(@Anio,2) Else (case when len(d.mes)>=6 then left(d.mes,5) else REPLICATE( '0', 5 - LEN( RTRIM( d.mes ) ) )+rtrim(d.mes) end)+right(@Anio,4) End) Else d.ndoc end) nrodocumentofuente,(Case when d.tdoc='' Then sub.fechco Else d.fechdoc end) fechadocumentofuente, 
'' codigoCtaBancaria,'-' nrooperacion,'-' nrocheque,'' cuentanaturaleza, codcuenta,
(case when left(nomcc,1) in ('1','2','3','4','5','6','7','8','9','0') then left(nomcc,5) else '' end) centrocosto,
tipo tipomov,'REMUNERACION '+(Case When @Tipo='01' Then 'VACACIONES ' Else (Case When @Tipo='02' Then 'GRATI ' Else 'MENSUAL ' End) End)+mes glosa , '-' orden,'0' afecto,1 moneda, 0.0 tipocambio,
(Case When tipo='D' Then importe Else 0 End) impdebe, (Case When tipo='H' Then importe Else 0 End) imphaber, 0.0 impdebeDolar, 0.0 impHaberDolar,
'-' tipoanexo,sub.m1_empl codanexo, sub.m1_empl codpro, '-' u_codi, (Case when d.tdoc='' Then sub.fechco Else d.fechdoc end) datusu,
--dbo.padl(( ROW_NUMBER() OVER(PARTITION BY m1_empl ORDER BY m1_empl,cpto,tipo))-1+@lcCorrel,10,'0') correlativo,
dbo.padl(( ROW_NUMBER() OVER(PARTITION BY d.m1_empl ORDER BY d.m1_empl,cpto,tipo))-1+@lcCorrel,10,'0') correlativo,
'-' estado, '-' destino, '-' anexo, '0' gastoIntPersonal,
nrodoc cocach,'-' nomaux,'-' codln,'-' tipca,'-' nrodca, 0 reten, 0 rigv, '-' corrigv, '' codaduana,Convert(datetime,'01/01/1900',103) fechdua,'-' codDua, 0 ISC, '1' tipooper,
'' nroDetrac, Convert(datetime,'01/01/1900',103) FechaDetrac, '' CodigoDetraccion,Convert(datetime,'01/01/1900',103) Fecha_RefComprobModi, '' tipo_RefComprobModi, ''Serie_RefComprobModi,
'' Nro_RefComprobModi,'' CodigoPErcepcion,0.0 PorcentajePercepcion,'' cuentaAbono,0.0 montoigv, '' NumeroPercepcion,Convert(datetime,'01/01/1900',103) FechaPercepcion,
0.0 montoRetencion, 
'008' TipoMedioPago, 0.0 montoISC, 0.0 MontoDetraccionIvap, 0.0 MontoCuentaAuxiliar
from 
	(
	select codcc,(case when left(debe,1)='6' then nomcc else '    '+substring(nomcc,5,len(rtrim(nomcc))-5) end) nomcc,m1_empl,e_des1,max(cpto) cpto, max(c_des1) c_des1,sum(cantidad) cantidad, sum(importe) importe,
		debe codcuenta, 'D' tipo, e_carg,cargo, e_area, area, afp, mes,
		(Case When tdoc='20' Then (Case When ccta='' Then '' Else '00' End) Else tdoc End)	tdoc,
		(Case When tdoc='20' Then (Case When ccta='' Then '' Else 'CHEQ-'+ccta End) Else ndoc End)	ndoc,
		convert(datetime,(Case When tdoc='20' Then (Case When ccta='' Then '' Else isnull(max(fechdoc),'') End) Else '' End),103)	FechDoc
--	from gestionrrhhetocache..tempo
	from tempo
	where debe<>'' and importe<>0 --and m1_empl='44241627'
  	group by codcc,nomcc,m1_empl,e_des1, 
		debe, e_carg,cargo, e_area, area, afp, mes,tdoc,ndoc,ccta
	union all
	select codcc,(case when left(haber,1)='6' then nomcc else '    '+substring(nomcc,5,len(rtrim(nomcc))-5) end) nomcc,m1_empl,e_des1,max(cpto) cpto, max(c_des1) c_des1,sum(cantidad) cantidad, sum(importe) importe,
		haber codcuenta, 'H' Tipo, e_carg,cargo, e_area, area, afp, mes, 
		(Case When tdoc='20' Then (Case When ccta='' Then '' Else '00' End) Else tdoc End)	tdoc,
		(Case When tdoc='20' Then (Case When ccta='' Then '' Else 'CHEQ-'+ccta End) Else ndoc End)	ndoc,
		convert(datetime,(Case When tdoc='20' Then (Case When ccta='' Then '' Else isnull(max(fechdoc),'') End) Else '' End),103)	FechDoc
--	from gestionrrhhetocache..tempo
	from tempo
	where haber<>'' and importe<>0 --and m1_empl='44241627'
	group by codcc,nomcc,m1_empl,e_des1, 
		haber, e_carg,cargo, e_area, area, afp, mes,tdoc,ndoc,ccta
	) d
	left outer join (
	select c.idmovcontables_c,caja.nrodoc,caja.NroDocCaja,caja.fechco, caja.mes+'-'+caja.anio mesproceso ,caja.m1_empl
	from movcontables_c c inner join tmpCajaC caja on caja.nrodoc= c.nrodoc where rtrim(caja.glosa)=rtrim(c.glosa)
	) sub on rtrim(sub.m1_empl)= rtrim(d.m1_empl)
--where c.transferido='' and codmgc between @CodMGC1 and @CodMGC2 and c.anio=@Anio and c.mes=@Mes and c.zona=@Zona order by correlativo*1
order by sub.nrodoc,d.cpto

open nMigrar
Fetch  nMigrar into @IdMovContables_C,@CodigoDocumento,@NroDocumento,
					@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,
					@CodMGC,@ClaseMovimiento,@CtaDestino,@CodigoDocumentoReferencia,@NroDocReferencia,
					@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,
					@NroDocumentoFuente,@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
					@NroCheque,@CuentaNaturaleza,@CodCuenta,@CentroCosto,@TipoMov,@Glosa,
					@Orden,@Afecto,@Moneda,@TipoCambio,@impDebe,@impHaber,@impDebeDolar,@impHaberDolar,@TipoAnexo,@CodAnexo,
					@codPro,@u_codi,@datUsu,@Correlativo,@estado,@Destino,@Anexo,
					@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@reten,@rigv,@corrigv,
					@CodAduana,@FechDUA,@CodDua,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
					@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,
					@CodigoPercepcion,@PorcentajePercepcion,@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,
					@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar

while  @@Fetch_Status =0
	Begin
	-- actualizando Detalle contable
		exec spp_inst_MovContables_D 0,@IdMovContables_C,@CodigoDocumento,@NroDocumento,
			@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,
			@CodMGC,@ClaseMovimiento,@CtaDestino,@CodigoDocumentoReferencia,@NroDocReferencia,
			@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,
			@NroDocumentoFuente,@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
			@NroCheque,@CuentaNaturaleza,@CodCuenta,@CentroCosto,@TipoMov,@Glosa,
			@Orden,@Afecto,@Moneda,@TipoCambio,@impDebe,@impHaber,@impDebeDolar,@impHaberDolar,@TipoAnexo,@CodAnexo,
			@codPro,@u_codi,@datUsu,@Correlativo,@estado,@Destino,@Anexo,
			@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@reten,@rigv,@corrigv,
			'',@CodAduana,@FechDUA,@CodDua,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
			@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,
			@CodigoPercepcion,@PorcentajePercepcion,@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,
			@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,0.0,0.0,'' 


	Fetch Next from nMigrar into @IdMovContables_C,@CodigoDocumento,@NroDocumento,
				@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,
				@CodMGC,@ClaseMovimiento,@CtaDestino,@CodigoDocumentoReferencia,@NroDocReferencia,
				@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,
				@NroDocumentoFuente,@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
				@NroCheque,@CuentaNaturaleza,@CodCuenta,@CentroCosto,@TipoMov,@Glosa,
				@Orden,@Afecto,@Moneda,@TipoCambio,@impDebe,@impHaber,@impDebeDolar,@impHaberDolar,@TipoAnexo,@CodAnexo,
				@codPro,@u_codi,@datUsu,@Correlativo,@estado,@Destino,@Anexo,
				@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@reten,@rigv,@corrigv,
				@CodAduana,@FechDUA,@CodDua,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
				@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,
				@CodigoPercepcion,@PorcentajePercepcion,@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,
				@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar

	End
	Close nMigrar
	Deallocate nMigrar

--esto falta revisar

--fin trans. detalle a conta
----------------------------
set @Valor =(
--			select count(d.nrodocumento) from tbl_movimientocajac c inner join tbl_movimientocajaD d on d.idmovimientoCajaC=c.idMovimientoCajaC 
--			 where left(nrodocumento,2) between @CodMGC1 and @CodMGC2 and c.anio=@Anio and c.mes=@Mes and c.zona=@Zona
			select count(nrodoc) from tmpCajaC c
			where left(nrodoc,2) between @CodMGC and @CodMGC and c.anio=@Anio and c.mes=@Mes and c.zona=@Zona	
			) 

UPDATE Empresa SET E_CORR = E_CORR + @Valor*1 where idempresa=@idempresa
-- confirmando la migracion a tesoreria en cab
--Declare @nrodocCont char(10), @nrodocCaja char(10)
--
--	declare nConfirma cursor for 
--	--
--	select nrodoc,NroDocCaja 
--	from tmpCajaC order by nrodoc
--
--	open nConfirma 
--	Fetch nConfirma into @nrodocCont,@nrodocCaja
--
--	While @@Fetch_Status =0
--	Begin
--	-- actualizando cab tesoreria
--	update tbl_movimientocajaC set transferido = @nrodocCont where nrodoc = @nrodocCaja and transferido='' 
--
--	Fetch Next from nConfirma into @nrodocCont,@nrodocCaja
--	End
--	Close nConfirma
--	Deallocate nConfirma

delete from movcontables_d where codcuenta='0'

drop table tmpCajaC




/****** Object:  StoredProcedure [dbo].[spp_MigrarTesoreria]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_MigrarTesoreria]
@Anio char(4),@Mes char(2),@Zona VARchar(10),@CodUnidadEconomica char(10),@CodMGC char(2)

as
-- spp_MigrarTesoreria '2020','04','000012','000012','02'
	------------------------------------
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpCajaC') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpCajaC
	END
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmp') AND type in (N'U'))
	BEGIN 
		drop table tmp
	END
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmp1') AND type in (N'U'))
	BEGIN 
		drop table tmp1
	END
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmp4') AND type in (N'U'))
	BEGIN 
		drop table tmp4
	END
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'TMPEXPORTAVENTAS2') AND type in (N'U'))
	BEGIN 
		drop table TMPEXPORTAVENTAS2
	END
	-------------------------------------
	-----------------------------------------------TOMANDO y ACTUALIZANDO CORRELATIVO
	DECLARE @CorreCont CHAR(10),@Valor	char(5), @CodMGC1 char(2), @CodMGC2 char(2),@RegMigrados int
	set @CorreCont=dbo.CorrelativoMes(@Zona ,@CodUnidadEconomica,@CodMGC ,@Anio ,@Mes )
	set @Valor=right(@CorreCont,5)
	
	If @CodMGC='02'
	Begin 
		set @CodMGC1 ='30'
		set @CodMGC2 ='31'
	End
	If @CodMGC='20'
	Begin 
		set @CodMGC1 ='32'
		set @CodMGC2 ='33'
	End
	If @CodMGC='08'
	Begin 
		set @CodMGC1 ='34'
		set @CodMGC2 ='34'
	End

	-- cabecera
	select anio, mes,zona,codunidadeconomica,
	(case when rtrim(transferidoAnt)='' then 
	left(@CorreCont,5)+dbo.padl(( ROW_NUMBER() OVER(PARTITION BY codunidadeconomica ORDER BY transferidoAnt,correlativo))-1+@valor,5,'0') else 
	rtrim(transferidoAnt) end) nrodoc,
	fechacontable fechco, @CodMGC codmgc, glosa, '' estado,nrodoc NroDocCaja,correlativo, TransferidoAnt
	into tmpCajaC
	from tbl_movimientocajac 
	where transferido='' and codmgc between @CodMGC1 and @CodMGC2 and anio=@Anio and mes=@Mes and zona=@Zona --and idmovimientocajac<4
		and nrodoc in (select nrodocumento from tbl_movimientocajaD 
						where left(nroDocumento,2) between @CodMGC1 and @CodMGC2 
							and substring(nrodocumento,4,2)=@Mes and codunidadeconomica=@CodUnidadEconomica group by nrodocumento )
	order by correlativo*1
	
	set @Valor=(select right(rtrim(max(nrodoc)),5) from tmpCajaC where rtrim(TransferidoAnt)='')
	set @RegMigrados =(select count(transferidoAnt) from tmpCajaC where rtrim(TransferidoAnt)<>'' group by zona)

	if @RegMigrados >0
		begin
			-- actualiza cab contable con cab tesoreria
			Declare @TransferidoAnt varchar(10),  @fechaco datetime, @glosa varchar(200)

			declare nCab cursor for 
			select Zona,TransferidoAnt,fechco, glosa 
			from tmpCajaC where rtrim(TransferidoAnt)<>'' order by nrodoc

			open nCab 
			Fetch nCab into @Zona,@TransferidoAnt,@fechaco, @glosa 

			While @@Fetch_Status =0
			Begin
			-- actualizando cab conta
			update movContables_C set fechco= @fechaco, glosa= @glosa
			where nrodoc=@TransferidoAnt and zona= @zona

			Fetch Next from nCab into @Zona,@TransferidoAnt,@fechaco, @glosa 
			End
			Close nCab
			Deallocate nCab

		end
	if @Valor<>'' or @Valor<>'NULL'
		begin 
			EXEC cont_ActualizaCorrelaGrupoContable @Valor,@zona,@CodUnidadEconomica,@CodMGC,@Anio ,@Mes
		end 
	insert into movcontables_c 
	select anio,mes,zona,codunidadeconomica,nrodoc,fechco, codmgc,glosa, estado
	from tmpCajaC where rtrim(transferidoAnt)=''

	-- calculando los correlativos para el detalle
	Declare @lcCorrel int,@lcCorrelc CHAR(10), @idEmpresa int 
	--------------------
	Select @lcCorrel= (select e_corr from empresa a inner join zona b on a.idEmpresa=b.idEmpresa inner join unidad_economica c on c.codZona=b.codZona where c.codUnidadEconomica=@CodUnidadEconomica and b.estado<>0 and c.estado <>0)
	Select @idEmpresa= (select a.idEmpresa from empresa a inner join zona b on a.idEmpresa=b.idEmpresa inner join unidad_economica c on c.codZona=b.codZona where c.codUnidadEconomica=@CodUnidadEconomica and b.estado<>0 and c.estado <>0)

	-- detalle
 
	--creando table principal 
	select sub.idmovcontables_c,d.codunidadeconomica,sub.nrodoc nrodocumento,
		(case when left(flujoefectivo,1) in ('1','2','3','4','5','6','7','8','9','0') then '' else flujoefectivo end) CRP,
		'-' codactividad,'-' codpar,'-' codsubactividad,d.fechacontable fechcontable,
		@CodMGC codmgc, '-' clasemovimiento,'-' ctadestino,codigodocumentofuente codigoDocumentoReferencia,nrodocumentofuente nrodocreferencia, fechadocfuente fechadocReferencia, fechavencimiento,
		codigodocumentofuente,nrodocumentofuente,fechadocfuente fechadocumentofuente, 
		(Case when left(d.codigoCtaBancaria,1)='1' then d.codigoCtaBancaria else '' end) codigoCtaBancaria,'-' nrooperacion,'-' nrocheque,'' cuentanaturaleza,codcuenta,
		(case when left(flujoefectivo,1) in ('1','2','3','4','5','6','7','8','9','0') then flujoefectivo else '' end) centrocosto,
		(Case when left(codcuenta,2)='12' then 'H' else 'D' end) tipomov,d.glosa , '-' orden, afecto,1 moneda, 0.0 tipocambio, impdebe, imphaber, 0.0 impdebeDolar, 0.0 impHaberDolar,
		'-' tipoanexo,codpro codanexo, codpro, '-' u_codi, d.fechacontable datusu,
		dbo.padl(( ROW_NUMBER() OVER(PARTITION BY d.codunidadeconomica ORDER BY c.correlativo,d.idMovimientoCajaD))-1+@lcCorrel,10,'0') correlativo,
		'-' estado, '-' destino, '-' anexo, '0' gastoIntPersonal,
		nrodocumento cocach,'-' nomaux,'-' codln,'-' tipca,'-' nrodca, 0 reten, 0 rigv, '-' corrigv, '' codaduana,Convert(datetime,'01/10/1900',103) fechdua,'-' codDua, 0 ISC, '1' tipooper,
		'' nroDetrac, Convert(datetime,'01/10/1900',103) FechaDetrac, '' CodigoDetraccion,Convert(datetime,'01/10/1900',103) Fecha_RefComprobModi, '' tipo_RefComprobModi, ''Serie_RefComprobModi,
		'' Nro_RefComprobModi,'' CodigoPErcepcion,0.0 PorcentajePercepcion,'' cuentaAbono,0.0 montoigv, '' NumeroPercepcion,Convert(datetime,'01/10/1900',103) FechaPercepcion,
		0.0 montoRetencion, TipoMedioPago, 0.0 montoISC, 0.0 MontoDetraccionIvap, 0.0 MontoCuentaAuxiliar,0 montoicbper
	INTO TMPEXPORTAVENTAS2
	from tbl_movimientocajac c inner join tbl_movimientocajaD d on d.idmovimientoCajaC=c.idMovimientoCajaC 
		inner join (
		select c.idmovcontables_c,caja.nrodoc,caja.NroDocCaja 
		from movcontables_c c inner join tmpCajaC caja on caja.nrodoc= c.nrodoc where rtrim(caja.glosa)=rtrim(c.glosa)
		) sub on sub.nrodocCaja= d.nrodocumento
	where c.transferido='' and codmgc between @CodMGC1 and @CodMGC2 and c.anio=@Anio and c.mes=@Mes and c.zona=@Zona and d.estado=0 and d.codigoDocumentoFuente<>'' order by correlativo*1

	--creando tables con cuentas y su destino
	---- ok tmp
	select convert(nchar(10),codcuenta) cta,convert(nchar(10),codcuenta) CodCuentaContable,convert(nchar(10),ctadebe) ctadebe,convert(nchar(10),ctahaber) ctahaber,convert(nchar(10),ctacierre) ctacierre,
		convert(nchar(10),ctadebe2) ctadebe2,convert(nchar(10),ctadebe3) ctadebe3,convert(nchar(10),ctadebe4) ctadebe4,convert(nchar(10),porcenta) porcenta,
		convert(nchar(10),porcenta2) porcenta2,convert(nchar(10),porcenta3) porcenta3,convert(nchar(10),porcenta4) porcenta4,'D' tipmov, centrocosto ccosto 
	into tmp
	from plancuentascontables pc inner join (select codcuenta,CentroCosto from tmpexportaventas2 group by codcuenta,CentroCosto)  expor
		on pc.CodCuentaContable= expor.codcuenta
	where idempresa= 5 and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)

	-- ok tmp actualizado
	if (select ccosto from tmp where ccosto not in ('','-') group by ccosto)<>''
	begin
		update tmp
		set tmp.ctadebe=cc.ctadebe,tmp.ctahaber=cc.ctahaber,tmp.ctadebe2=cc.ctadebe2,tmp.ctadebe3=cc.ctadebe3, tmp.ctadebe4=cc.ctadebe4, 
			tmp.porcenta=cc.porcenta, tmp.porcenta2=cc.porcenta2,tmp.porcenta3=cc.porcenta3,tmp.porcenta4=cc.porcenta4
	--	select * 
		from tmp inner join 
		(select codcentrocosto,ctadebe,ctahaber,porcenta,porcenta2,porcenta3,porcenta4,ctadebe2,ctadebe3,ctadebe4 from CentroCosto where idempresa=5) cc on tmp.ccosto=cc.CodCentroCosto
	End

	print '2'
	-- tmp4 ok seleccionando los porcentajes por cuenta select * from tmp
	select cta,convert(nchar(10),'100') codcuentacontable,convert(nchar(10),'100') ctahaber,convert(nchar(10),porcenta )ctadebe,
			convert(nchar(10),porcenta2) ctadebe2,convert(nchar(10),porcenta3) ctadebe3,convert(nchar(10),porcenta4) ctadebe4, tipmov 
	into tmp4 
	from tmp
	print '3'

	-- tmp1 ok seleccionando ctas automaticas con sus porcentajes
	select distinct a.cta,a.tipmov,a.cuentas,a.codcuentacontable2,b.codcuentacontable2 porcenta
	into tmp1 
	from (
			select cta,tipmov,cuentas,codcuentacontable2 
			from tmp
			unpivot
			( codcuentacontable2
				for cuentas in (codcuentacontable,ctadebe,ctadebe2,ctadebe3,ctadebe4,ctahaber,ctacierre)
			) 
			as unpvTTable
			where codcuentacontable2<>''
			and cuentas<>'ctacierre'
		) a inner join 
		(
			select cta,tipmov,cuentas,codcuentacontable2 
			from tmp4
			unpivot
			( codcuentacontable2
				for cuentas in (codcuentacontable,ctadebe,ctadebe2,ctadebe3,ctadebe4,ctahaber)
			) 
			as unpvTTable
			where codcuentacontable2 not in ('','0')
		) b on a.cta+a.cuentas=b.cta+b.cuentas 


--migrando detalle
insert into movcontables_d 
select tmpExportaventas2.IdMovContables_C,
	unidad_economica, 
	Nrodocumento,crp,codactividad,codpar,codsubactividad,fechcontable,tmpExportaventas2.codmgc,clasemovimiento,ctadestino,codigoDocumentoReferencia,nrodocreferencia,fechadocReferencia,
	FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,fechadocumentofuente,codigoCtaBancaria,nrooperacion,nrocheque,cuentanaturaleza,codcuentacontable2,
	(CASE WHEN todos.estado='-' THEN centrocosto ELSE '' END) centrocosto,tipomov,
	tmpExportaventas2.glosa,tmpExportaventas2.orden, Afecto,moneda,TipoCambio,importe_debe,importe_haber,importe_debeD,importe_HaberD,tipoanexo,codanexo,codpro,u_codi,
	datusu,tmpExportaventas2.correlativo,todos.estado,destino,anexo,gastoIntPersonal,cocach,nomaux,codln,tipca,nrodca,reten,rigv,corrigv,codaduana,fechdua,codDua,isc,tipooper,
	nroDetrac,FechaDetrac,CodigoDetraccion,Fecha_RefComprobModi,tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPErcepcion,PorcentajePercepcion,cuentaAbono,montoigv,
	NumeroPercepcion,FechaPercepcion,montoRetencion,TipoMedioPago,montoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,montoicbper,0 MontoRetencionIGV,'' CuentaCCosto
from tmpExportaventas2 inner join 
	( --CtaDebe ok
		select codmgc grupo,rtrim(codunidadeconomica) unidad_economica,nrodocreferencia nro_documento,substring(cuentas,4,2) tipo,cta,cuentas,codcuentacontable2,
		(Case when substring(cuentas,4,2) in ('de','cu') then round(impdebe*(case when left(moneda,1)=1 then 1 else isnull(TipoCambio,0) end)*(convert(numeric(4),porcenta/100)),2) else 
		(Case when substring(cuentas,4,2) in ('ha') then round(imphaber*(case when left(moneda,1)=1 then 1 else isnull(TipoCambio,0) end)*(convert(numeric(4),porcenta/100)),2) else 0.00 end) end) importe_debe, 
		(Case when substring(cuentas,4,2)='ha' then round(impdebe*(case when left(moneda,1)=1 then 1 else isnull(TipoCambio,0) end),2) else 
		(Case When substring(cuentas,4,2) in ('de','cu') Then round(imphaber*(case when left(moneda,1)=1 then 1 else isnull(TipoCambio,0) end),2) Else 0 End) end) importe_haber,
		impDebe*(case when left(moneda,1)=1 then 0 else 1 end) importe_debeD,
		imphaber*(case when left(moneda,1)=1 then 0 else 1 end) importe_HaberD,
		(Case when cta=codcuentacontable2 then '-' else 'D' end) estado,tipmov,correlativo correlA,
		orden='1'
		FROM TMPEXPORTAVENTAS2 a inner join tmp1
			on a.codcuenta=tmp1.cta
		where a.impdebe<>0		

		union all -- cta haber ok
		select codmgc grupo,rtrim(codunidadeconomica) unidad_economica,nrodocreferencia nro_documento,substring(cuentas,4,2),cta,cuentas,codcuentacontable2,
		0 importe_debe, 
		imphaber,
		0 importe_debeD, 
		0 importe_haberD,
		'D' Estado,tipmov,correlativo correlA,
		orden='4'
		from TMPEXPORTAVENTAS2 a 
		inner join tmp1
			on a.codcuenta=tmp1.cta
		where a.imphaber<>0	 --left(a.codcuenta,2)='10'		

	) todos 
	on rtrim(tmpexportaVentas2.CodunidadEconomica)+tmpexportaVentas2.codmgc+tmpexportaVentas2.correlativo+tmpExportaventas2.nrodocreferencia=todos.unidad_economica+todos.grupo+todos.correlA+todos.nro_documento
	Inner join MovContables_C c on 
	rtrim(tmpexportaVentas2.codunidadeconomica)+Nrodocumento=rtrim(c.codunidadeconomica)+c.NroDoc
order by c.NroDoc,tmpexportaVentas2.correlativo,todos.orden


--drop table tmp
--drop table tmp1
--drop table tmp4

--fin trans. detalle a conta
----------------------------
set @Valor =(select count(d.nrodocumento) from tbl_movimientocajac c inner join tbl_movimientocajaD d on d.idmovimientoCajaC=c.idMovimientoCajaC 
			 where left(nrodocumento,2) between @CodMGC1 and @CodMGC2 and c.anio=@Anio and c.mes=@Mes and c.zona=@Zona) 

UPDATE Empresa SET E_CORR = E_CORR + @Valor*1 where idempresa=@idempresa

-- confirmando la migracion a tesoreria en cab
Declare @nrodocCont char(10), @nrodocCaja char(10)

	declare nConfirma cursor for 
	--
	select nrodoc,NroDocCaja 
	from tmpCajaC order by nrodoc

	open nConfirma 
	Fetch nConfirma into @nrodocCont,@nrodocCaja

	While @@Fetch_Status =0
	Begin
	-- actualizando cab tesoreria
	update tbl_movimientocajaC set transferido = @nrodocCont where nrodoc = @nrodocCaja and transferido='' 

	Fetch Next from nConfirma into @nrodocCont,@nrodocCaja
	End
	Close nConfirma
	Deallocate nConfirma

delete from movcontables_d where codcuenta='0'

drop table tmpCajaC

/****** Object:  StoredProcedure [dbo].[spp_MigrarTesoreriaFF]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_MigrarTesoreriaFF]
@Anio char(4),@Mes char(2),@Zona VARchar(10),@CodUnidadEconomica char(10),@CodMGC char(2),@TipDoc char(22)

as
-- spp_MigrarTesoreriaFF '2013','10','000012','000012','04','3431000001FH'
-- spp_MigrarTesoreriaFF '2013','10','000012','000012','11','3431000001OT'
-- exec spp_MigrarTesoreriaFF @anio='2014',@mes='02',@zona='000012',@codUnidadEconomica='000012',@codMGC='11',@TipDoc='3440200001CI'
	------------------------------------
	IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpCajaC') AND type in (N'U'))
	BEGIN 
		DROP TABLE tmpCajaC
	END
	-------------------------------------
	if right(rtrim(@TipDoc),2)='OT' or right(rtrim(@TipDoc),2)='CI'
		Begin
		set @CodMGC = '11'
		End 
	if right(rtrim(@TipDoc),2)='FH'
		Begin
		set @CodMGC = '04'
		End 
	-----------------------------------------------TOMANDO y ACTUALIZANDO CORRELATIVO
	DECLARE @CorreCont CHAR(10),@Valor char(5), @CodMGC1 char(2), @CodMGC2 char(2),@RegMigrados int,@TipoDocNew char(10),@CorreContCostearIgv CHAR(10),@ValorCostearIgv char(5)
	set @CorreCont=dbo.CorrelativoMes(@Zona ,@CodUnidadEconomica,@CodMGC ,@Anio ,@Mes )
	set @Valor=right(@CorreCont,5)
	
	set @TipoDocNew = left(rtrim(@TipDoc),10)

	If @CodMGC='11' or @CodMGC='04'
	Begin 
		set @CodMGC1 ='34'
		set @CodMGC2 ='34'
	End

	-- cabecera
	if right(rtrim(@TipDoc),2)='CI'  
	Begin
		select anio, mes,zona,codunidadeconomica,
		(case when rtrim(transferidoAnt)='' then 
		left(@CorreCont,5)+dbo.padl(( ROW_NUMBER() OVER(PARTITION BY codunidadeconomica ORDER BY transferidoAnt,correlativo))-1+@valor,5,'0') else 
		(case when @CodMGC= '11' then substring(transferidoAnt,11,10) else left(transferidoAnt,10) end) end) nrodoc,--rtrim(transferidoAnt) end) nrodoc,
		fechacontable fechco, @CodMGC codmgc, 'COSTEO DEL IGV***' glosa, '' estado,nrodoc NroDocCaja,correlativo, left(TransferidoAnt,10) TransferidoAnt,substring(TransferidoAnt,11,10) TransferidoAnt2 -- TransferidoAnt
		into tmpCajaC
		from tbl_movimientocajac 
		where codmgc between @CodMGC1 and @CodMGC2 and anio=@Anio and mes=@Mes and zona=@Zona --and idmovimientocajac<4
			and nrodoc = @TipoDocNew
		order by correlativo*1
	End
	
	if right(rtrim(@TipDoc),2)<>'CI'  
	Begin
		select anio, mes,zona,codunidadeconomica,
		(case when rtrim(transferidoAnt)='' then 
		left(@CorreCont,5)+dbo.padl(( ROW_NUMBER() OVER(PARTITION BY codunidadeconomica ORDER BY transferidoAnt,correlativo))-1+@valor,5,'0') else 
		(case when @CodMGC= '11' then substring(transferidoAnt,11,10) else left(transferidoAnt,10) end) end) nrodoc,--rtrim(transferidoAnt) end) nrodoc,
		fechacontable fechco, @CodMGC codmgc, glosa, '' estado,nrodoc NroDocCaja,correlativo, left(TransferidoAnt,10) TransferidoAnt,substring(TransferidoAnt,11,10) TransferidoAnt2 -- TransferidoAnt
		into tmpCajaC
		from tbl_movimientocajac 
		where len(transferido)<=10 and codmgc between @CodMGC1 and @CodMGC2 and anio=@Anio and mes=@Mes and zona=@Zona --and idmovimientocajac<4
			and nrodoc = @TipoDocNew
		order by correlativo*1
	End

	set @Valor=(select right(rtrim(max(nrodoc)),5) from tmpCajaC where rtrim(TransferidoAnt)='')
	set @RegMigrados =(select count(transferidoAnt) from tmpCajaC where rtrim(TransferidoAnt)<>'' group by zona)

	if @RegMigrados >0
		begin
			-- actualiza cab contable con cab tesoreria
			Declare @TransferidoAnt varchar(10),  @fechaco datetime, @glosa varchar(200)
			-- creando cursor para transferido 04
			if @CodMGC='04'
				begin
				declare nCab cursor for 
				select Zona,TransferidoAnt,fechco, glosa 
				from tmpCajaC where rtrim(TransferidoAnt)<>'' order by nrodoc
				end
			if @CodMGC='11'
				begin
				declare nCab cursor for 
				select Zona,TransferidoAnt2,fechco, glosa 
				from tmpCajaC where rtrim(TransferidoAnt2)<>'' order by nrodoc
				end
			open nCab 
			Fetch nCab into @Zona,@TransferidoAnt,@fechaco, @glosa 

			While @@Fetch_Status =0
			Begin
			-- actualizando cab conta
			update movContables_C set fechco= @fechaco, glosa= @glosa
			where nrodoc=@TransferidoAnt and zona= @zona

			Fetch Next from nCab into @Zona,@TransferidoAnt,@fechaco, @glosa 
			End
			Close nCab
			Deallocate nCab

		end
	if @Valor<>'' or @Valor<>'NULL'
		begin 
			EXEC cont_ActualizaCorrelaGrupoContable @Valor,@zona,@CodUnidadEconomica,@CodMGC,@Anio ,@Mes
		end 
	insert into movcontables_c 
	select anio,mes,zona,codunidadeconomica,nrodoc,fechco, codmgc,glosa, estado
	from tmpCajaC where rtrim(transferidoAnt)=''

	-- calculando los correlativos para el detalle
	Declare @lcCorrel int,@lcCorrelc CHAR(10), @idEmpresa int, @TotalRF decimal(18,2), @TotalOT decimal(18,2) 
	--------------------
	Select @lcCorrel= (select e_corr from empresa a inner join zona b on a.idEmpresa=b.idEmpresa inner join unidad_economica c on c.codZona=b.codZona where c.codUnidadEconomica=@CodUnidadEconomica and b.estado<>0 and c.estado <>0)
	Select @idEmpresa= (select a.idEmpresa from empresa a inner join zona b on a.idEmpresa=b.idEmpresa inner join unidad_economica c on c.codZona=b.codZona where c.codUnidadEconomica=@CodUnidadEconomica and b.estado<>0 and c.estado <>0)

	--calculando los totales para facturas, RXHonorarios y Otros
	set @TotalRF = (select isnull(sum(impdebe-imphaber),0) from tbl_movimientocajad where nrodocumento= @TipoDocNew --left(@TipDoc,10)
					and tipodoc<>'O' and left(codcuenta,2)<>'10'  and estado<>'1')
	set @TotalOT = (select isnull(sum(impdebe-imphaber),0) from tbl_movimientocajad where nrodocumento= @TipoDocNew --left(@TipDoc,10)
					and tipodoc ='O' and left(codcuenta,2)<>'10' and estado<>'1')

-- detalle
--transf. detalle a conta 
declare @IdMovContables_C int,@CodigoDocumento char(18),@NroDocumento char(10),
@CRP char(10),@CodActividad char(10),@CodPar char(10),@CodSubActividad char(10),
@FechContable datetime,--@CodMGC char(3),
@ClaseMovimiento char(2),@CtaDestino nchar(10),
@CodigoDocumentoReferencia nchar(10),@NroDocReferencia nchar(14),@FechaDocReferencia datetime,@FechaVencimiento datetime,
@CodigoDocumentoFuente nchar(10),@NroDocumentoFuente nchar(14),@FechaDocumentoFuente datetime,@CodigoCtaBancaria nchar(10),
@NroOperacion nchar(10),@NroCheque nchar(10),@CuentaNaturaleza char(12),@CodCuenta nchar(10),
@CentroCosto char(15),@TipoMov char(1), --@Glosa varchar(250),
@Orden varchar(250),
@Afecto bit,@Moneda char(2),@TipoCambio decimal(5,3),@impDebe decimal(15,2),
@impHaber decimal(15,2),@impDebeDolar decimal(15,2),@impHaberDolar decimal(15,2),@TipoAnexo char(2),
@CodAnexo char(11),@codPro char(11),@u_codi char(6),@datUsu datetime,
@Correlativo char(10),@estado char(1),@Destino char(1),@Anexo char(11),
@GastoIntPersonal bit,@cocach char(10),@nomanx varchar(250),@codIn char(11),
@tipdca char(2),@nrodca char(10),@reten bit,@rigv bit,
@corrigv char(10),@OPER VARCHAR(3),@CodAduana nchar(3),@FechDUA smalldatetime,@CodDUA nchar(30),
@ISC bit, @TipoOper int,@NroDetrac varchar(10),@FechaDetrac datetime,@CodigoDetraccion varchar(3),
@Fecha_RefComprobModi smalldatetime,@Tipo_RefComprobModi char(2),@Serie_RefComprobModi char(4),@Nro_RefComprobModi nchar(10),
@CodigoPercepcion varchar(5),@PorcentajePercepcion decimal(10,2),@CuentaAbono varchar(10),@MontoIGV decimal(12,3),
@NumeroPercepcion varchar(11),@FechaPercepcion datetime,@MontoRetencion4 decimal(18,2),
@TipoMedioPago nchar(3),@MontoISC decimal(10,2),@MontoDetraccionIvap decimal(10,2),@MontoCuentaAuxiliar decimal(10,2),
@costearIgv char(1)

declare @CodCuentaIgv nchar(10)
-- selecciona solo los documentos Fecturas y Recibos X Honorarios
if right(rtrim(@TipDoc),2)='FH'  
Begin
	declare nMigrar cursor for 
	select sub.idmovcontables_c,d.codunidadeconomica,sub.nrodoc nrodocumento,
	--(case when left(flujoefectivo,1) in ('1','2','3','4','5','6','7','8','9','0') then '' else flujoefectivo end) CRP,'-' codactividad,'-' codpar,
	(case when left(flujoefectivo,1) in (select LEFT(codcentrocosto,1) ccosto from CentroCosto where IdEmpresa=@idEmpresa and Estado='1' group by LEFT(codcentrocosto,1)) then '' else flujoefectivo end) CRP,'-' codactividad,'-' codpar,
	'-' codsubactividad,d.fechacontable fechcontable,@CodMGC codmgc, '-' clasemovimiento,'-' ctadestino,codigodocumentofuente codigoDocumentoReferencia,
	nrodocumentofuente nrodocreferencia, fechadocfuente fechadocReferencia, fechavencimiento,codigodocumentofuente,nrodocumentofuente,fechadocfuente fechadocumentofuente, 
	(Case when left(d.codigoCtaBancaria,1)='1' then d.codigoCtaBancaria else '' end) codigoCtaBancaria,'-' nrooperacion,'-' nrocheque,'' cuentanaturaleza,codcuenta,
	--(case when left(flujoefectivo,1) in ('1','2','3','4','5','6','7','8','9','0') then flujoefectivo else '' end) centrocosto,
	(case when left(flujoefectivo,1) in (select LEFT(codcentrocosto,1) ccosto from CentroCosto where IdEmpresa=@idEmpresa and Estado='1' group by LEFT(codcentrocosto,1)) then flujoefectivo else '' end) centrocosto,
	(Case when left(codcuenta,2)='12' then 'H' else 'D' end) tipomov,d.glosa , '-' orden, afecto,1 moneda, 0.0 tipocambio,(Case when montoigv<>0 then impdebe- montoigv else impdebe end) impdebe, isnull(imphaber,0) imphaber, 
	0.0 impdebeDolar, 0.0 impHaberDolar,'-' tipoanexo,codpro codanexo, codpro, '-' u_codi, d.fechacontable datusu,
	dbo.padl(( ROW_NUMBER() OVER(PARTITION BY d.codunidadeconomica ORDER BY c.correlativo))-1+@lcCorrel,10,'0') correlativo,'-' estado, '-' destino, 
	'-' anexo, '0' gastoIntPersonal,nrodocumento cocach,'-' nomaux,'-' codln,'-' tipca,'-' nrodca, 0 reten, 0 rigv, '-' corrigv, '' codaduana,
	Convert(datetime,'01/01/1900',103) fechdua,'' codDua, 0 ISC, --(Case when montoigv<>0 then '1' else '0' end) tipooper,
	d.tipooper,'' nroDetrac, Convert(datetime,'01/01/1990',103) FechaDetrac, '' CodigoDetraccion,
	Convert(datetime,'01/01/1900',103) Fecha_RefComprobModi, '' tipo_RefComprobModi, ''Serie_RefComprobModi,
	'' Nro_RefComprobModi,'' CodigoPErcepcion,0.0 PorcentajePercepcion,'' cuentaAbono, montoigv, '' NumeroPercepcion,Convert(datetime,'01/01/1900',103) FechaPercepcion,
	0.0 montoRetencion, TipoMedioPago, 0.0 montoISC, 0.0 MontoDetraccionIvap, 0.0 MontoCuentaAuxiliar,d.CostearIgv
	from tbl_movimientocajac c inner join tbl_movimientocajaD d on d.idmovimientoCajaC=c.idMovimientoCajaC 
		inner join (select c.idmovcontables_c,caja.nrodoc,caja.NroDocCaja 
					from movcontables_c c inner join tmpCajaC caja on caja.nrodoc= c.nrodoc where rtrim(caja.glosa)=rtrim(c.glosa) and c.zona=@Zona
					) sub on sub.nrodocCaja= d.nrodocumento
	where len(rtrim(c.transferido))<=10 and codmgc between @CodMGC1 and @CodMGC2 and c.anio=@Anio and d.estado in ('0','') and c.mes=@Mes and c.zona=@Zona 
		  and d.TipoDoc in (' ','F','H') and left(codcuenta,2)<>'10' 
		  and d.impdebe+d.imphaber<>0 and d.codigoDocumentoFuente<>''		
	--order by correlativo*1
	UNION ALL -- agregando el total como cuenta 10
	select sub.idmovcontables_c,d.codunidadeconomica,sub.nrodoc nrodocumento,
	(case when left(flujoefectivo,1) in (select LEFT(codcentrocosto,1) ccosto from CentroCosto where IdEmpresa=@idEmpresa and Estado='1' group by LEFT(codcentrocosto,1)) then '' else flujoefectivo end) CRP,'-' codactividad,'-' codpar,
	'-' codsubactividad,d.fechacontable fechcontable,@CodMGC codmgc, '-' clasemovimiento,'-' ctadestino,codigodocumentofuente codigoDocumentoReferencia,
	nrodocumentofuente nrodocreferencia, fechadocfuente fechadocReferencia, fechavencimiento,codigodocumentofuente,nrodocumentofuente,fechadocfuente fechadocumentofuente, 
	(Case when left(d.codigoCtaBancaria,1)='1' then d.codigoCtaBancaria else '' end) codigoCtaBancaria,'-' nrooperacion,'-' nrocheque,'' cuentanaturaleza,codcuenta,
	(case when left(flujoefectivo,1) in (select LEFT(codcentrocosto,1) ccosto from CentroCosto where IdEmpresa=@idEmpresa and Estado='1' group by LEFT(codcentrocosto,1)) then flujoefectivo else '' end) centrocosto,
	(Case when left(codcuenta,2)='12' then 'H' else 'D' end) tipomov,d.glosa , '-' orden, afecto,1 moneda, 0.0 tipocambio, isnull(impdebe,0) impdebe, @TotalRF imphaber, 
	0.0 impdebeDolar, 0.0 impHaberDolar,'-' tipoanexo,codpro codanexo, codpro, '-' u_codi, d.fechacontable datusu,
	dbo.padl(( ROW_NUMBER() OVER(PARTITION BY d.codunidadeconomica ORDER BY c.correlativo))-1+@lcCorrel,10,'0') correlativo,'-' estado, reparo destino, 
	'-' anexo, '0' gastoIntPersonal,nrodocumento cocach,'-' nomaux,'-' codln,'-' tipca,'-' nrodca, 0 reten, 0 rigv, '-' corrigv, '' codaduana,
	Convert(datetime,'01/01/1900',103) fechdua,'' codDua, 0 ISC, --(Case when montoigv<>0 then '1' else '0' end) tipooper,
	d.tipooper,'' nroDetrac, Convert(datetime,'01/01/1990',103) FechaDetrac, '' CodigoDetraccion,
	Convert(datetime,'01/01/1900',103) Fecha_RefComprobModi, '' tipo_RefComprobModi, ''Serie_RefComprobModi,
	'' Nro_RefComprobModi,'' CodigoPErcepcion,0.0 PorcentajePercepcion,'' cuentaAbono, montoigv, '' NumeroPercepcion,Convert(datetime,'01/01/1900',103) FechaPercepcion,
	0.0 montoRetencion, TipoMedioPago, 0.0 montoISC, 0.0 MontoDetraccionIvap, 0.0 MontoCuentaAuxiliar,d.CostearIgv
	from tbl_movimientocajac c inner join tbl_movimientocajaD d on d.idmovimientoCajaC=c.idMovimientoCajaC 
		inner join (select c.idmovcontables_c,caja.nrodoc,caja.NroDocCaja 
					from movcontables_c c inner join tmpCajaC caja on caja.nrodoc= c.nrodoc where rtrim(caja.glosa)=rtrim(c.glosa) and c.zona=@Zona
					) sub on sub.nrodocCaja= d.nrodocumento
	where len(rtrim(c.transferido))<=10 and codmgc between @CodMGC1 and @CodMGC2 and c.anio=@Anio and c.mes=@Mes and d.estado in ('0','') and c.zona=@Zona 
		  and left(codcuenta,2)='10'
		  and d.impdebe+d.imphaber<>0 and d.codigoDocumentoFuente<>''		
End
-- selecciona solo los otros documentos que no son Facturas y Recibos X Honorarios
if right(rtrim(@TipDoc),2)='OT'  
Begin
	declare nMigrar cursor for 
	select sub.idmovcontables_c,d.codunidadeconomica,sub.nrodoc nrodocumento,
	(case when left(flujoefectivo,1) in (select LEFT(codcentrocosto,1) ccosto from CentroCosto where IdEmpresa=@idEmpresa and Estado='1' group by LEFT(codcentrocosto,1)) then '' else flujoefectivo end) CRP,'-' codactividad,'-' codpar,
	'-' codsubactividad,d.fechacontable fechcontable,@CodMGC codmgc, '-' clasemovimiento,'-' ctadestino,codigodocumentofuente codigoDocumentoReferencia,
	nrodocumentofuente nrodocreferencia, fechadocfuente fechadocReferencia, fechavencimiento,codigodocumentofuente,nrodocumentofuente,fechadocfuente fechadocumentofuente, 
	(Case when left(d.codigoCtaBancaria,1)='1' then d.codigoCtaBancaria else '' end) codigoCtaBancaria,'-' nrooperacion,'-' nrocheque,'' cuentanaturaleza,codcuenta,
	(case when left(flujoefectivo,1) in (select LEFT(codcentrocosto,1) ccosto from CentroCosto where IdEmpresa=@idEmpresa and Estado='1' group by LEFT(codcentrocosto,1)) then flujoefectivo else '' end) centrocosto,
	(Case when left(codcuenta,2)='12' then 'H' else 'D' end) tipomov,d.glosa , '-' orden, afecto,1 moneda, 0.0 tipocambio,(Case when montoigv<>0 then impdebe- montoigv else impdebe end) impdebe, isnull(imphaber,0) imphaber, 
	0.0 impdebeDolar, 0.0 impHaberDolar,'-' tipoanexo,codpro codanexo, codpro, '-' u_codi, d.fechacontable datusu,
	dbo.padl(( ROW_NUMBER() OVER(PARTITION BY d.codunidadeconomica ORDER BY c.correlativo))-1+@lcCorrel,10,'0') correlativo,'-' estado, reparo destino, 
	'-' anexo, '0' gastoIntPersonal,nrodocumento cocach,'-' nomaux,'-' codln,'-' tipca,'-' nrodca, 0 reten, 0 rigv, '-' corrigv, '' codaduana,
	Convert(datetime,'01/01/1900',103) fechdua,'' codDua, 0 ISC, --(Case when montoigv<>0 then '1' else '0' end) tipooper,
	d.tipooper,'' nroDetrac, Convert(datetime,'01/01/1990',103) FechaDetrac, '' CodigoDetraccion,
	Convert(datetime,'01/01/1900',103) Fecha_RefComprobModi, '' tipo_RefComprobModi, ''Serie_RefComprobModi,
	'' Nro_RefComprobModi,'' CodigoPErcepcion,0.0 PorcentajePercepcion,'' cuentaAbono, montoigv, '' NumeroPercepcion,Convert(datetime,'01/01/1900',103) FechaPercepcion,
	0.0 montoRetencion, TipoMedioPago, 0.0 montoISC, 0.0 MontoDetraccionIvap, 0.0 MontoCuentaAuxiliar, d.CostearIgv
	from tbl_movimientocajac c inner join tbl_movimientocajaD d on d.idmovimientoCajaC=c.idMovimientoCajaC 
		inner join (select c.idmovcontables_c,caja.nrodoc,caja.NroDocCaja 
					from movcontables_c c inner join tmpCajaC caja on caja.nrodoc= c.nrodoc where rtrim(caja.glosa)=rtrim(c.glosa) and c.zona=@Zona
					) sub on sub.nrodocCaja= d.nrodocumento
	where len(rtrim(c.transferido))<=10 and codmgc between @CodMGC1 and @CodMGC2 and c.anio=@Anio and c.mes=@Mes and d.estado in ('0','') and c.zona=@Zona 
		  and d.TipoDoc in ('O') and left(codcuenta,2)<>'10'
		  and d.impdebe+d.imphaber<>0 and d.codigoDocumentoFuente<>''		
	--order by correlativo*1
	UNION ALL -- agregando el total como cuenta 10
	select sub.idmovcontables_c,d.codunidadeconomica,sub.nrodoc nrodocumento,
	(case when left(flujoefectivo,1) in (select LEFT(codcentrocosto,1) ccosto from CentroCosto where IdEmpresa=@idEmpresa and Estado='1' group by LEFT(codcentrocosto,1)) then '' else flujoefectivo end) CRP,'-' codactividad,'-' codpar,
	'-' codsubactividad,d.fechacontable fechcontable,@CodMGC codmgc, '-' clasemovimiento,'-' ctadestino,codigodocumentofuente codigoDocumentoReferencia,
	nrodocumentofuente nrodocreferencia, fechadocfuente fechadocReferencia, fechavencimiento,codigodocumentofuente,nrodocumentofuente,fechadocfuente fechadocumentofuente, 
	(Case when left(d.codigoCtaBancaria,1)='1' then d.codigoCtaBancaria else '' end) codigoCtaBancaria,'-' nrooperacion,'-' nrocheque,'' cuentanaturaleza,codcuenta,
	(case when left(flujoefectivo,1) in (select LEFT(codcentrocosto,1) ccosto from CentroCosto where IdEmpresa=@idEmpresa and Estado='1' group by LEFT(codcentrocosto,1)) then flujoefectivo else '' end) centrocosto,
	(Case when left(codcuenta,2)='12' then 'H' else 'D' end) tipomov,d.glosa , '-' orden, afecto,1 moneda, 0.0 tipocambio, isnull(impdebe,0) impdebe, @TotalOT imphaber, 
	0.0 impdebeDolar, 0.0 impHaberDolar,'-' tipoanexo,codpro codanexo, codpro, '-' u_codi, d.fechacontable datusu,
	dbo.padl(( ROW_NUMBER() OVER(PARTITION BY d.codunidadeconomica ORDER BY c.correlativo))-1+@lcCorrel,10,'0') correlativo,'-' estado, '-' destino, 
	'-' anexo, '0' gastoIntPersonal,nrodocumento cocach,'-' nomaux,'-' codln,'-' tipca,'-' nrodca, 0 reten, 0 rigv, '-' corrigv, '' codaduana,
	Convert(datetime,'01/01/1900',103) fechdua,'' codDua, 0 ISC, --(Case when montoigv<>0 then '1' else '0' end) tipooper,
	d.tipooper,'' nroDetrac, Convert(datetime,'01/01/1990',103) FechaDetrac, '' CodigoDetraccion,
	Convert(datetime,'01/01/1900',103) Fecha_RefComprobModi, '' tipo_RefComprobModi, ''Serie_RefComprobModi,
	'' Nro_RefComprobModi,'' CodigoPErcepcion,0.0 PorcentajePercepcion,'' cuentaAbono, montoigv, '' NumeroPercepcion,Convert(datetime,'01/01/1900',103) FechaPercepcion,
	0.0 montoRetencion, TipoMedioPago, 0.0 montoISC, 0.0 MontoDetraccionIvap, 0.0 MontoCuentaAuxiliar,d.CostearIgv
	from tbl_movimientocajac c inner join tbl_movimientocajaD d on d.idmovimientoCajaC=c.idMovimientoCajaC 
		inner join (select c.idmovcontables_c,caja.nrodoc,caja.NroDocCaja 
					from movcontables_c c inner join tmpCajaC caja on caja.nrodoc= c.nrodoc where rtrim(caja.glosa)=rtrim(c.glosa) and c.zona=@Zona
					) sub on sub.nrodocCaja= d.nrodocumento
	where len(rtrim(c.transferido))<=10 and codmgc between @CodMGC1 and @CodMGC2 and c.anio=@Anio and c.mes=@Mes and d.estado in ('0','') and c.zona=@Zona 
		  and left(codcuenta,2)='10'
		  and d.impdebe+d.imphaber<>0 and d.codigoDocumentoFuente<>''		
End
---------Costear IGV---------------------
-- selecciona solo los otros documentos que no son Facturas y Recibos X Honorarios
if right(rtrim(@TipDoc),2)='CI'  
Begin
	declare nMigrar cursor for 
	select sub.idmovcontables_c,d.codunidadeconomica,sub.nrodoc nrodocumento,
	(case when left(flujoefectivo,1) in (select LEFT(codcentrocosto,1) ccosto from CentroCosto where IdEmpresa=@idEmpresa and Estado='1' group by LEFT(codcentrocosto,1)) then '' else flujoefectivo end) CRP,'-' codactividad,'-' codpar,
	'-' codsubactividad,d.fechacontable fechcontable,@CodMGC codmgc, '-' clasemovimiento,'-' ctadestino,codigodocumentofuente codigoDocumentoReferencia,
	nrodocumentofuente nrodocreferencia, fechadocfuente fechadocReferencia, fechavencimiento,codigodocumentofuente,nrodocumentofuente,fechadocfuente fechadocumentofuente, 
	(Case when left(d.codigoCtaBancaria,1)='1' then d.codigoCtaBancaria else '' end) codigoCtaBancaria,'-' nrooperacion,'-' nrocheque,'' cuentanaturaleza,codcuenta,
	(case when left(flujoefectivo,1) in (select LEFT(codcentrocosto,1) ccosto from CentroCosto where IdEmpresa=@idEmpresa and Estado='1' group by LEFT(codcentrocosto,1)) then flujoefectivo else '' end) centrocosto,
	(Case when left(codcuenta,2)='12' then 'H' else 'D' end) tipomov,'COSTEO DEL IGV***' glosa , '-' orden, afecto,1 moneda, 0.0 tipocambio,(Case when montoigv<>0 then montoigv else 0.0 end) impdebe, isnull(imphaber,0) imphaber, 
	0.0 impdebeDolar, 0.0 impHaberDolar,'-' tipoanexo,codpro codanexo, codpro, '-' u_codi, d.fechacontable datusu,
	dbo.padl(( ROW_NUMBER() OVER(PARTITION BY d.codunidadeconomica ORDER BY c.correlativo))-1+@lcCorrel,10,'0') correlativo,'-' estado, '-' destino, 
	'-' anexo, '0' gastoIntPersonal,nrodocumento cocach,'-' nomaux,'-' codln,'-' tipca,'-' nrodca, 0 reten, 0 rigv, '-' corrigv, '' codaduana,
	Convert(datetime,'01/01/1900',103) fechdua,'' codDua, 0 ISC, --(Case when montoigv<>0 then '1' else '0' end) tipooper,
	d.tipooper,'' nroDetrac, Convert(datetime,'01/01/1990',103) FechaDetrac, '' CodigoDetraccion,
	Convert(datetime,'01/01/1900',103) Fecha_RefComprobModi, '' tipo_RefComprobModi, ''Serie_RefComprobModi,
	'' Nro_RefComprobModi,'' CodigoPErcepcion,0.0 PorcentajePercepcion,'' cuentaAbono, montoigv, '' NumeroPercepcion,Convert(datetime,'01/01/1900',103) FechaPercepcion,
	0.0 montoRetencion, TipoMedioPago, 0.0 montoISC, 0.0 MontoDetraccionIvap, 0.0 MontoCuentaAuxiliar,d.CostearIgv
	from tbl_movimientocajac c inner join tbl_movimientocajaD d on d.idmovimientoCajaC=c.idMovimientoCajaC 
		inner join (select c.idmovcontables_c,caja.nrodoc,caja.NroDocCaja 
					from movcontables_c c inner join tmpCajaC caja on caja.nrodoc= c.nrodoc where rtrim(caja.glosa)=rtrim(c.glosa) and c.zona=@Zona
					) sub on sub.nrodocCaja= d.nrodocumento
	where --len(rtrim(c.transferido))<=10 and 
			codmgc between @CodMGC1 and @CodMGC2 and c.anio=@Anio and d.estado in ('0','') and c.mes=@Mes and c.zona=@Zona 
		  and d.TipoDoc in (' ','F','H') and left(codcuenta,2)<>'10' and costearigv='1' 
		  and d.impdebe+d.imphaber<>0 and d.codigoDocumentoFuente<>''		
	--order by correlativo*1
--	UNION ALL -- agregando el total como cuenta 10
--	select sub.idmovcontables_c,d.codunidadeconomica,sub.nrodoc nrodocumento,
--	(case when left(flujoefectivo,1) in (select LEFT(codcentrocosto,1) ccosto from CentroCosto where IdEmpresa=@idEmpresa and Estado='1' group by LEFT(codcentrocosto,1)) then '' else flujoefectivo end) CRP,'-' codactividad,'-' codpar,
--	'-' codsubactividad,d.fechacontable fechcontable,@CodMGC codmgc, '-' clasemovimiento,'-' ctadestino,codigodocumentofuente codigoDocumentoReferencia,
--	nrodocumentofuente nrodocreferencia, fechadocfuente fechadocReferencia, fechavencimiento,codigodocumentofuente,nrodocumentofuente,fechadocfuente fechadocumentofuente, 
--	(Case when left(d.codigoCtaBancaria,1)='1' then d.codigoCtaBancaria else '' end) codigoCtaBancaria,'-' nrooperacion,'-' nrocheque,'' cuentanaturaleza,codcuenta,
--	(case when left(flujoefectivo,1) in (select LEFT(codcentrocosto,1) ccosto from CentroCosto where IdEmpresa=@idEmpresa and Estado='1' group by LEFT(codcentrocosto,1)) then flujoefectivo else '' end) centrocosto,
--	(Case when left(codcuenta,2)='12' then 'H' else 'D' end) tipomov,d.glosa , '-' orden, afecto,1 moneda, 0.0 tipocambio, isnull(impdebe,0) impdebe, @TotalRF imphaber, 
--	0.0 impdebeDolar, 0.0 impHaberDolar,'-' tipoanexo,codpro codanexo, codpro, '-' u_codi, d.fechacontable datusu,
--	dbo.padl(( ROW_NUMBER() OVER(PARTITION BY d.codunidadeconomica ORDER BY c.correlativo))-1+@lcCorrel,10,'0') correlativo,'-' estado, reparo destino, 
--	'-' anexo, '0' gastoIntPersonal,nrodocumento cocach,'-' nomaux,'-' codln,'-' tipca,'-' nrodca, 0 reten, 0 rigv, '-' corrigv, '' codaduana,
--	Convert(datetime,'01/01/1900',103) fechdua,'' codDua, 0 ISC, --(Case when montoigv<>0 then '1' else '0' end) tipooper,
--	d.tipooper,'' nroDetrac, Convert(datetime,'01/01/1990',103) FechaDetrac, '' CodigoDetraccion,
--	Convert(datetime,'01/01/1900',103) Fecha_RefComprobModi, '' tipo_RefComprobModi, ''Serie_RefComprobModi,
--	'' Nro_RefComprobModi,'' CodigoPErcepcion,0.0 PorcentajePercepcion,'' cuentaAbono, montoigv, '' NumeroPercepcion,Convert(datetime,'01/01/1900',103) FechaPercepcion,
--	0.0 montoRetencion, TipoMedioPago, 0.0 montoISC, 0.0 MontoDetraccionIvap, 0.0 MontoCuentaAuxiliar,d.CostearIgv
--	from tbl_movimientocajac c inner join tbl_movimientocajaD d on d.idmovimientoCajaC=c.idMovimientoCajaC 
--		inner join (select c.idmovcontables_c,caja.nrodoc,caja.NroDocCaja 
--					from movcontables_c c inner join tmpCajaC caja on caja.nrodoc= c.nrodoc where rtrim(caja.glosa)=rtrim(c.glosa)
--					) sub on sub.nrodocCaja= d.nrodocumento
--	where --len(rtrim(c.transferido))<=10 and 
--		codmgc between @CodMGC1 and @CodMGC2 and c.anio=@Anio and c.mes=@Mes and d.estado in ('0','') and c.zona=@Zona 
--		  and left(codcuenta,2)='10' and costearigv='1'
End
---------Fin Costear IGV---------------------
open nMigrar
Fetch  nMigrar into @IdMovContables_C,@CodigoDocumento,@NroDocumento,
					@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,
					@CodMGC,@ClaseMovimiento,@CtaDestino,@CodigoDocumentoReferencia,@NroDocReferencia,
					@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,
					@NroDocumentoFuente,@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
					@NroCheque,@CuentaNaturaleza,@CodCuenta,@CentroCosto,@TipoMov,@Glosa,
					@Orden,@Afecto,@Moneda,@TipoCambio,@impDebe,@impHaber,@impDebeDolar,@impHaberDolar,@TipoAnexo,@CodAnexo,
					@codPro,@u_codi,@datUsu,@Correlativo,@estado,@Destino,@Anexo,
					@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@reten,@rigv,@corrigv,
					@CodAduana,@FechDUA,@CodDua,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
					@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,
					@CodigoPercepcion,@PorcentajePercepcion,@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,
					@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar, @CostearIgv

while  @@Fetch_Status =0
	Begin
	-- actualizando Detalle contable
		exec spp_inst_MovContables_D 0,@IdMovContables_C,@CodigoDocumento,@NroDocumento,
			@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,
			@CodMGC,@ClaseMovimiento,@CtaDestino,@CodigoDocumentoReferencia,@NroDocReferencia,
			@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,
			@NroDocumentoFuente,@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
			@NroCheque,@CuentaNaturaleza,@CodCuenta,@CentroCosto,@TipoMov,@Glosa,
			@Orden,@Afecto,@Moneda,@TipoCambio,@impDebe,@impHaber,@impDebeDolar,@impHaberDolar,@TipoAnexo,@CodAnexo,
			@codPro,@u_codi,@datUsu,@Correlativo,@estado,@Destino,@Anexo,
			@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@reten,@rigv,@corrigv,
			'',@CodAduana,@FechDUA,@CodDua,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
			@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,
			@CodigoPercepcion,@PorcentajePercepcion,@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,
			@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,0,0,''
	--si el registro tiene IGV agrega un registro	
			if @MontoIGV<>0
			begin
				set @CodCuentaIgv = (select valor from parametros where clave='CuentaIGV' and idempresa in (select idempresa from zona where codzona=@Zona))

				exec spp_inst_MovContables_D 0,@IdMovContables_C,@CodigoDocumento,@NroDocumento,
					@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,
					@CodMGC,@ClaseMovimiento,@CtaDestino,@CodigoDocumentoReferencia,@NroDocReferencia,
					@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,
					@NroDocumentoFuente,@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
					@NroCheque,@CuentaNaturaleza,@CodCuentaIgv,'',@TipoMov,@Glosa,
					@Orden,@Afecto,@Moneda,@TipoCambio,@MontoIGV,@impHaber,@impDebeDolar,@impHaberDolar,@TipoAnexo,@CodAnexo,
					@codPro,@u_codi,@datUsu,@Correlativo,'D',@Destino,@Anexo,
					@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@reten,@rigv,@corrigv,
					'',@CodAduana,@FechDUA,@CodDua,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
					@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,
					@CodigoPercepcion,@PorcentajePercepcion,@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,
					@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,0,0,''
				
--				------------REGISTRANDO EL COSTEO DEL IGV -------------
				If @CostearIgv<>'0' and @CodMGC = '11'
				Begin
					update movcontables_d set impdebe=0, imphaber=@MontoIGV where codmgc='11' and codunidadeconomica=@CodigoDocumento and nrodocumento=@NroDocumento and codcuenta=@CodCuentaIgv and impdebe=@MontoIGV and estado='D'
				End
--				set @CorreContCostearIgv=dbo.CorrelativoMes(@Zona ,@CodUnidadEconomica,'11' ,@Anio ,@Mes )
--				set @ValorCostearIgv=right(@CorreContCostearIgv,5)
--
--				if @ValorCostearIgv<>'' or @ValorCostearIgv<>'NULL'
--					begin 
--						EXEC cont_ActualizaCorrelaGrupoContable @ValorCostearIGV,@zona,@CodUnidadEconomica,'11',@Anio ,@Mes
--					end 
--					print 'hp--> '+ @CorreContCostearIgv
--					insert into movcontables_c 
--					select @Anio ,@Mes,@zona,@CodUnidadEconomica,@CorreContCostearIgv,fechco, '11',nrodoc+'COSTEO DEL IGV*'+@CorreContCostearIgv, estado
--					from tmpCajaC --where nrodoc=@CorreContCostearIgv
--
--					-- calculando los correlativos para el detalle
--					Declare @lcCorrelCosteoIgv int --,@lcCorrelc CHAR(10), @idEmpresa int, @TotalRF decimal(18,2), @TotalOT decimal(18,2) 
--					--------------------
--					Select @lcCorrelCosteoIgv= (select e_corr from empresa a inner join zona b on a.idEmpresa=b.idEmpresa inner join unidad_economica c on c.codZona=b.codZona where c.codUnidadEconomica=@CodUnidadEconomica and b.estado<>0 and c.estado <>0)
--					--Select @idEmpresa= (select a.idEmpresa from empresa a inner join zona b on a.idEmpresa=b.idEmpresa inner join unidad_economica c on c.codZona=b.codZona where c.codUnidadEconomica=@CodUnidadEconomica and b.estado<>0 and c.estado <>0)
--
--
--				--- registrando el la cuenta origen para ser costeado
--				exec spp_inst_MovContables_D 0,@IdMovContables_C,@CodigoDocumento,@CorreContCostearIgv,--@NroDocumento,
--					@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,
--					11,@ClaseMovimiento,@CtaDestino,@CodigoDocumentoReferencia,@NroDocReferencia,
--					@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,
--					@NroDocumentoFuente,@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
--					@NroCheque,@CuentaNaturaleza,@CodCuenta,'',@TipoMov,@Glosa,
--					@Orden,@Afecto,@Moneda,@TipoCambio,@MontoIGV,@impHaber,@impDebeDolar,@impHaberDolar,@TipoAnexo,@CodAnexo,
--					@codPro,@u_codi,@datUsu,@Correlativo,'',@Destino,@Anexo,
--					@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@reten,@rigv,@corrigv,
--					'',@CodAduana,@FechDUA,@CodDua,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
--					@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,
--					@CodigoPercepcion,@PorcentajePercepcion,@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,
--					@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar
--				--- registrando el igv costeado
--				exec spp_inst_MovContables_D 0,@IdMovContables_C,@CodigoDocumento,@NroDocumento,
--					@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,
--					11,@ClaseMovimiento,@CtaDestino,@CodigoDocumentoReferencia,@NroDocReferencia,
--					@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,
--					@NroDocumentoFuente,@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
--					@NroCheque,@CuentaNaturaleza,@CodCuentaIGV,'',@TipoMov,@Glosa,
--					@Orden,@Afecto,@Moneda,@TipoCambio,0.0,@MontoIGV,@impDebeDolar,@impHaberDolar,@TipoAnexo,@CodAnexo,
--					@codPro,@u_codi,@datUsu,@Correlativo,'D',@Destino,@Anexo,
--					@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@reten,@rigv,@corrigv,
--					'',@CodAduana,@FechDUA,@CodDua,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
--					@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,
--					@CodigoPercepcion,@PorcentajePercepcion,@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,
--					@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar
--				End
--				------------FIN REGISTRO DEL COSTEO DEL IGV -------------

			end

	Fetch Next from nMigrar into @IdMovContables_C,@CodigoDocumento,@NroDocumento,
				@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,
				@CodMGC,@ClaseMovimiento,@CtaDestino,@CodigoDocumentoReferencia,@NroDocReferencia,
				@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,
				@NroDocumentoFuente,@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
				@NroCheque,@CuentaNaturaleza,@CodCuenta,@CentroCosto,@TipoMov,@Glosa,
				@Orden,@Afecto,@Moneda,@TipoCambio,@impDebe,@impHaber,@impDebeDolar,@impHaberDolar,@TipoAnexo,@CodAnexo,
				@codPro,@u_codi,@datUsu,@Correlativo,@estado,@Destino,@Anexo,
				@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@reten,@rigv,@corrigv,
				@CodAduana,@FechDUA,@CodDua,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
				@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,
				@CodigoPercepcion,@PorcentajePercepcion,@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,
				@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar, @CostearIgv

	End
	Close nMigrar
	Deallocate nMigrar


--fin trans. detalle a conta
----------------------------
set @Valor =(select count(d.nrodocumento) from tbl_movimientocajac c inner join tbl_movimientocajaD d on d.idmovimientoCajaC=c.idMovimientoCajaC 
			 where left(nrodocumento,2) between @CodMGC1 and @CodMGC2 and c.anio=@Anio and c.mes=@Mes and c.zona=@Zona and d.tipodoc=@tipdoc) 

UPDATE Empresa SET E_CORR = E_CORR + @Valor*1 where idempresa=@idempresa

-- confirmando la migracion a tesoreria en cab
Declare @nrodocCont char(10), @nrodocCaja char(10)

	declare nConfirma cursor for 
	--
	select nrodoc,NroDocCaja 
	from tmpCajaC order by nrodoc

	open nConfirma 
	Fetch nConfirma into @nrodocCont,@nrodocCaja

	While @@Fetch_Status =0
	Begin
	-- actualizando cab tesoreria
	update tbl_movimientocajaC set transferido = rtrim(transferido)+@nrodocCont 
	where nrodoc = @nrodocCaja and len(rtrim(transferido))<=10 

	Fetch Next from nConfirma into @nrodocCont,@nrodocCaja
	End
	Close nConfirma
	Deallocate nConfirma

delete from movcontables_d where codcuenta='0'

drop table tmpCajaC
/****** Object:  StoredProcedure [dbo].[spp_msto_tablgen]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_msto_tablgen]
@OPERD char(10)
as
DECLARE @TELEM CHAR(10),@OPER CHAR(10),@TIPO CHAR(2)
SET @OPER=LEFT(@OPERD,1)
SET @TELEM=SUBSTRING(@OPERD,2,LEN(@OPERD)-3)
SET @TIPO=SUBSTRING(@OPERD,LEN(@OPERD)-1,LEN(@OPERD))


IF @OPER='0'
	BEGIN
		SELECT DISTINCT DOCUMENTO=T.T_DES1,ELEM=T.IDELEMENTO FROM TABLAGEN T
		INNER JOIN tablagen_cabeza TC ON T.ID=TC.ID
		WHERE TC.CABEZA_GEN=@TIPO AND T.T_DES1 NOT IN('') and T.t_elem not in('')
		ORDER BY T.T_DES1
	END
ELSE
	IF @OPER='1'
		BEGIN
					SELECT DISTINCT T.* FROM TABLAGEN T
					INNER JOIN tablagen_cabeza TC ON T.ID=TC.ID
					WHERE TC.CABEZA_GEN=@TIPO AND T.T_DES1 NOT IN('') and T.t_elem not in('') AND T.IDELEMENTO=CONVERT(INTEGER,@TELEM)
					ORDER BY T_elem
		END
/****** Object:  StoredProcedure [dbo].[spp_NroConCea]    Script Date: 18/08/2023 15:32:30 ******/



-- Bloque
CREATE procedure [dbo].[spp_remuneracionporpagar41]
as

select nrodocreferencia, d.codcuenta,p.descripcion, d.codpro, 
	Nombre = Rtrim(rtrim(cp.RazonSocial)+' '+ rtrim(cp.Nombre)+' '+rtrim(cp.Apellido)),
	tipodocumento= '1', NroDocumento = d.codpro, saldo = sum(d.imphaber) - sum(d.impdebe)
 from movcontables_d d inner join movcontables_c c 
	on d.IdMovContables_c = c.IdMovContables_c
	inner join zona z on c.zona= z.codzona 
	inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
	inner join tbl_msto_ClienteProveedor cp on cp.ruc = d.codpro 
where left(d.codcuenta,2)='41'
	and d.estado not in ('4','D','A') and c.estado not in ('4','D','A') AND cp.Estado=1 
	and d.codunidadeconomica between  '000010' and '000010'
	and c.zona between '000010' and '000010'
--	and d.impdebe>0
	and c.anio = '2009'
	AND c.mes between '01' and '12'
	and z.idempresa= 3 and p.idempresa= 3
group by d.nrodocreferencia, d.codcuenta,p.descripcion, d.codpro,cp.RazonSocial,cp.Nombre,cp.Apellido
order by nrodocreferencia
/****** Object:  StoredProcedure [dbo].[spp_rep_AnalisisCuenta]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rep_AnalisisCuenta]
@ZonaA varchar(6),
@ZonaB varchar(6),
@UnidadA varchar(10),
@UnidadB varchar(10),
@MesA char(2),
@MesB char(2),
@cuenta varchar(10),
@cuentaB varchar(10),
@Anio char(4),
@Idempresa int,
@Orden char(8)
as

declare  @Digitos int

set @Digitos = len(rtrim(@cuenta))
--exec "spp_rep_AnalisisCuenta";1 '000094', '000094', '000094    ', '000094    ', '00', '12', '4211', '4211', '2011', 57, 'MES'
--exec "spp_rep_AnalisisCuenta";1 '000012', '000012', '000012', '000012', '00', '12', '33', '33', '2013', 5, 'MES'

SELECT nmes= c.mes,mes=dbo.traenombremes(c.mes),
codcuenta = d.codcuenta + (select distinct descripcion from PlanCuentasContables where CodCuentaContable = d.CodCuenta and idempresa=@idempresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)),
nrodoc= max(d.nrodocumento),
	zona=(c.zona+' '+z.zona), d.codpro,
		proveedor=(SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=5 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=5 and razonsocial!='' then razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
	FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),
	fechadocreferencia = d.fechadocreferencia, codmgc= max(d.codmgc),   
	dr =(select DISTINCT rtrim(Descripcion)
		from tipodocumento where codigOdocumento=d.codigodocumentoreferencia )+' '+ D.nrodocreferencia,  
	identif= (case when rtrim(d.codigodocumentoreferencia)='07' then '*' else '' end),
	newdr=(case when rtrim(d.codigodocumentoreferencia)='07' then (select DISTINCT rtrim(Descripcion)
			from tipodocumento where codigOdocumento=d.tipo_refcomprobmodi ) +' '+rtrim(d.serie_refcomprobmodi)+'-'+ d.nro_refcomprobmodi else 
					(select DISTINCT rtrim(Descripcion)
						from tipodocumento where codigOdocumento=d.codigodocumentoreferencia )+' '+d.NRODOCReFERENCIA end) , 
BaseImponible	=	(Case When left(d.CodCuenta,3)='401' Then 0.00 Else
						(case when sum(impdebe)=0.00 then 
									case when codigodocumentoreferencia='07' 
									then (Case When left(d.CodCuenta,3)='421' Then sum(imphaber-MontoIGV)*-1 else sum(imphaber)*-1 end) 
									else (Case When left(d.CodCuenta,3)='421' Then sum(imphaber-MontoIGV) else sum(imphaber)*1 end) end
						 else sum(case when codigodocumentoreferencia='07' 
									then (Case When left(d.CodCuenta,3)='421' Then (impdebe-MontoIGV)*-1 else impdebe end) 
									else (Case When left(d.CodCuenta,3)='421' Then (impdebe-MontoIGV) else impdebe end) end) 
						 end)
					End),
	montoIGV	=	sum(case when codigodocumentoreferencia='07' then (Case When left(d.CodCuenta,3)='121' Then 0.00 else montoIGV*-1 end ) 
																 else (Case When left(d.CodCuenta,3)='121' Then 0.00 else MontoIGV end ) end),
	Importe		=	(Case When left(d.CodCuenta,3)='401' Then 0.00 Else 
						(case when sum(impdebe)=0.00 then 
							(case when codigodocumentoreferencia='07' 
									then (Case When left(d.CodCuenta,3)='421' Then sum(imphaber-MontoIGV)*-1 else sum(imphaber)*-1 end) 
									else (Case When left(d.CodCuenta,3)='421' Then sum(imphaber-MontoIGV)*1 else sum(imphaber) end)  
							end)
						else sum(case when codigodocumentoreferencia='07' 
							     then (Case When left(d.CodCuenta,3)='421' Then (impdebe-MontoIGV)*-1 else impdebe*1 end ) 
								 else (Case When left(d.CodCuenta,3)='421' Then (impdebe -MontoIGV)*1 else impdebe end) 
								 end) 
						end) 
					End)+ sum(case when codigodocumentoreferencia='07' 
								then (Case When left(d.CodCuenta,3)='121' Then 0.00 else montoIGV*-1 end ) 
								else (Case When left(d.CodCuenta,3)='121' Then 0.00 else MontoIGV end ) 
							  end )
					+ (Case When left(d.CodCuenta,3)='401' Then sum(impDebe) + sum(impHaber) Else 0.00 End),
--Deudor=(case when d.CodigoDocumentoReferencia='07' Then -1 else 1 end) * sum(d.impdebe),
--Acreedor=(case when d.CodigoDocumentoReferencia='07' Then (Case When left(d.CodCuenta,3)='401' THEN 1 ELSE -1 END) else 1 end) * sum(d.imphaber)
Deudor=(case when d.CodigoDocumentoReferencia='07' Then (Case When left(d.CodCuenta,3) IN ('401','201','611','241','612') THEN 1 ELSE +1 END) else 1 end) * sum(d.impdebe),
Acreedor=(case when d.CodigoDocumentoReferencia='07' Then (Case When left(d.CodCuenta,3) IN ('401','201','611','241','612') THEN 1 ELSE +1 END)  else 1 end) * sum(d.imphaber),
glosa= min(d.glosa ),D.nrodocreferencia ndoc,(case when left(d.codcuenta,2)='10' then max(d.crp) else d.centrocosto end) centrocosto
into ##Tempo
FROM MovContables_D D
	inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
	inner join ZONA Z ON C.ZONA=Z.CODZONA
	--INNER JOIN PlanCuentasContables P ON P.CodCuentaContable = d.CodCuenta 
WHERE --d.codpro='10418889824' and 
	   C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB AND 
	   C.ANIO=@Anio AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND 
		D.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND 
	   Z.IDEMPRESA=@idempresa and 
	  d.codpro!='000001' AND
	  d.estado !='4' and c.estado != '4' AND left(d.CodCuenta, @Digitos) between @cuenta and @cuentaB --('42') --and codigodocumentoreferencia='02' 
GROUP BY D.CodigoDocumentoReferencia, c.mes,c.zona, z.zona, d.codpro,d.NroDocReferencia,d.codcuenta,d.fechadocreferencia
, d.tipo_refcomprobmodi,d.serie_refcomprobmodi,d.nro_refcomprobmodi,d.centrocosto
--having (sum(D.impdebe)-sum(D.imphaber))!=0 
--ORDER BY c.zona,c.mes, d.codpro,d.NroDocReferencia,d.fechadocreferencia,codmgc --ordenado por mes
--ORDER BY c.zona, d.codpro,d.NroDocReferencia,d.fechadocreferencia,codmgc,c.mes  -- ordenado por documento

if @Orden = 'MES'
select (Case When codmgc='00' Then 'APERTURA' Else (Case When codmgc='13' then 'CIERRE' Else mes End) End) mes,codcuenta,nrodoc,Zona, codPro, proveedor= ISNULL(proveedor,''), fechadocreferencia,codmgc, dr= (case when  len(rtrim(ltrim(newdr)))<4 then '*'+(dr) else newdr end)+
		rtrim((Case when (identif)<'*' and (dr)=newdr then ' ' else rtrim((dr)) end)),
BaseImponible,montoIGV,Importe,Deudor,Acreedor,glosa,ndoc, centrocosto
from ##Tempo
ORDER BY zona,nmes, fechadocreferencia,proveedor,dr,codmgc --ordenado por mes
Else
select mes,codcuenta,nrodoc,Zona, codPro, proveedor, fechadocreferencia,codmgc, dr= (case when  len(rtrim(ltrim(newdr)))<4 then '*'+(dr) else newdr end)+
		rtrim((Case when (identif)<'*' and (dr)=newdr then ' ' else rtrim((dr)) end)),
BaseImponible,montoIGV,Importe,Deudor,Acreedor,glosa,centrocosto
from ##Tempo
ORDER BY zona, Proveedor,dr,fechadocreferencia,codmgc,mes  -- ordenado por documento

DROP TABLE ##Tempo
/****** Object:  StoredProcedure [dbo].[spp_rep_AnalisisCuentaDolar]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rep_AnalisisCuentaDolar]
@ZonaA varchar(6),
@ZonaB varchar(6),
@UnidadA varchar(10),
@UnidadB varchar(10),
@MesA char(2),
@MesB char(2),
@cuenta varchar(10),
@cuentaB varchar(10),
@Anio char(4),
@Idempresa int,
@Orden char(8)
as

declare  @Digitos int

set @Digitos = len(rtrim(@cuenta))
--exec "spp_rep_AnalisisCuentaDolar";1 '000002', '000002', '000002    ', '000002    ', '00', '12', '4212', '4212', '2014', 2, 'MES',''
--exec "spp_rep_AnalisisCuentaDolar";1 '000012', '000012', '000012', '000012', '00', '12', '33', '33', '2013', 5, 'MES'

SELECT nmes= c.mes,mes=dbo.traenombremes(c.mes),
codcuenta = d.codcuenta + (select descripcion from PlanCuentasContables where CodCuentaContable = d.CodCuenta and idempresa=@idempresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)),
nrodoc= max(d.nrodocumento),
	zona=(c.zona+' '+z.zona), d.codpro,
		proveedor=(SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=5 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=5 and razonsocial!='' then razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
	FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),
	fechadocreferencia = d.fechadocreferencia, codmgc= max(d.codmgc),   
	dr =(select DISTINCT rtrim(Descripcion)
		from tipodocumento where codigOdocumento=d.codigodocumentoreferencia )+' '+ D.nrodocreferencia,  
	identif= (case when rtrim(d.codigodocumentoreferencia)='07' then '*' else '' end),
	newdr=(case when rtrim(d.codigodocumentoreferencia)='07' then (select DISTINCT rtrim(Descripcion)
			from tipodocumento where codigOdocumento=d.tipo_refcomprobmodi ) +' '+rtrim(d.serie_refcomprobmodi)+'-'+ d.nro_refcomprobmodi else 
					(select DISTINCT rtrim(Descripcion)
						from tipodocumento where codigOdocumento=d.codigodocumentoreferencia )+' '+d.NRODOCReFERENCIA end) , 
BaseImponible	=	(Case When left(d.CodCuenta,3)='401' Then 0.00 Else
						(case when sum(impdebe)=0.00 then 
									case when codigodocumentoreferencia='07' 
									then (Case When left(d.CodCuenta,3)='421' Then sum(imphaber-MontoIGV)*-1 else sum(imphaber)*-1 end) 
									else (Case When left(d.CodCuenta,3)='421' Then sum(imphaber-MontoIGV) else sum(imphaber)*1 end) end
						 else sum(case when codigodocumentoreferencia='07' 
									then (Case When left(d.CodCuenta,3)='421' Then (impdebe-MontoIGV)*-1 else impdebe end) 
									else (Case When left(d.CodCuenta,3)='421' Then (impdebe-MontoIGV) else impdebe end) end) 
						 end)
					End),
	montoIGV	=	sum(case when codigodocumentoreferencia='07' then (Case When left(d.CodCuenta,3)='121' Then 0.00 else montoIGV*-1 end ) 
																 else (Case When left(d.CodCuenta,3)='121' Then 0.00 else MontoIGV end ) end),
	Importe		=	(Case When left(d.CodCuenta,3)='401' Then 0.00 Else 
						(case when sum(impdebe)=0.00 then 
							(case when codigodocumentoreferencia='07' 
									then (Case When left(d.CodCuenta,3)='421' Then sum(imphaber-MontoIGV)*-1 else sum(imphaber)*-1 end) 
									else (Case When left(d.CodCuenta,3)='421' Then sum(imphaber-MontoIGV)*1 else sum(imphaber) end)  
							end)
						else sum(case when codigodocumentoreferencia='07' 
							     then (Case When left(d.CodCuenta,3)='421' Then (impdebe-MontoIGV)*-1 else impdebe*1 end ) 
								 else (Case When left(d.CodCuenta,3)='421' Then (impdebe -MontoIGV)*1 else impdebe end) 
								 end) 
						end) 
					End)+ sum(case when codigodocumentoreferencia='07' 
								then (Case When left(d.CodCuenta,3)='121' Then 0.00 else montoIGV*-1 end ) 
								else (Case When left(d.CodCuenta,3)='121' Then 0.00 else MontoIGV end ) 
							  end )
					+ (Case When left(d.CodCuenta,3)='401' Then sum(impDebe) + sum(impHaber) Else 0.00 End),
--Deudor=(case when d.CodigoDocumentoReferencia='07' Then -1 else 1 end) * sum(d.impdebe),
--Acreedor=(case when d.CodigoDocumentoReferencia='07' Then (Case When left(d.CodCuenta,3)='401' THEN 1 ELSE -1 END) else 1 end) * sum(d.imphaber)
Deudor=(case when d.CodigoDocumentoReferencia='07' Then (Case When left(d.CodCuenta,3) IN ('401','201','611','241','612') THEN 1 ELSE +1 END) else 1 end) * sum(d.impdebe),
Acreedor=(case when d.CodigoDocumentoReferencia='07' Then (Case When left(d.CodCuenta,3) IN ('401','201','611','241','612') THEN 1 ELSE +1 END)  else 1 end) * sum(d.imphaber),
glosa= min(d.glosa ),D.nrodocreferencia ndoc,
DeudorD=(case when d.CodigoDocumentoReferencia='07' Then (Case When left(d.CodCuenta,3) IN ('401','201','611','241','612') THEN 1 ELSE +1 END) else 1 end) * sum(d.impdebeDolar),
AcreedorD=(case when d.CodigoDocumentoReferencia='07' Then (Case When left(d.CodCuenta,3) IN ('401','201','611','241','612') THEN 1 ELSE +1 END)  else 1 end) * sum(d.imphaberDolar),
d.Moneda, d.TipoCambio,d.centrocosto
into ##Tempo
FROM MovContables_D D
	inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
	inner join ZONA Z ON C.ZONA=Z.CODZONA
	--INNER JOIN PlanCuentasContables P ON P.CodCuentaContable = d.CodCuenta 
WHERE --d.codpro='10418889824' and 
	   C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB AND 
	   C.ANIO=@Anio AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND 
		D.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND 
	   Z.IDEMPRESA=@idempresa and 
	  d.codpro!='000001' AND
	  d.estado !='4' and c.estado != '4' AND left(d.CodCuenta, @Digitos) between @cuenta and @cuentaB --('42') --and codigodocumentoreferencia='02' 
GROUP BY D.CodigoDocumentoReferencia, c.mes,c.zona, z.zona, d.codpro,d.NroDocReferencia,d.codcuenta,d.fechadocreferencia
, d.tipo_refcomprobmodi,d.serie_refcomprobmodi,d.nro_refcomprobmodi,d.Moneda, d.TipoCambio,d.centrocosto
--having (sum(D.impdebe)-sum(D.imphaber))!=0 
--ORDER BY c.zona,c.mes, d.codpro,d.NroDocReferencia,d.fechadocreferencia,codmgc --ordenado por mes
--ORDER BY c.zona, d.codpro,d.NroDocReferencia,d.fechadocreferencia,codmgc,c.mes  -- ordenado por documento

if @Orden = 'MES'
		select (Case When codmgc='00' Then 'APERTURA' Else (Case When codmgc='13' then 'CIERRE' Else mes End) End) mes,
		codcuenta,nrodoc,Zona, codPro, proveedor= ISNULL(proveedor,''), fechadocreferencia,codmgc, 
		dr= (case when  len(rtrim(ltrim(newdr)))<4 then '*'+(dr) else newdr end)+
				rtrim((Case when (identif)<'*' and (dr)=newdr then ' ' else rtrim((dr)) end)),
		BaseImponible, montoIGV, Importe, Deudor, Acreedor,glosa,ndoc,DeudorD, AcreedorD, Moneda, TipoCambio,centrocosto
		from ##Tempo
		ORDER BY zona,nmes, fechadocreferencia,proveedor,dr,codmgc --ordenado por mes

Else
	select mes,codcuenta,nrodoc,Zona, codPro, proveedor, fechadocreferencia,codmgc, dr= (case when  len(rtrim(ltrim(newdr)))<4 then '*'+(dr) else newdr end)+
			rtrim((Case when (identif)<'*' and (dr)=newdr then ' ' else rtrim((dr)) end)),
	BaseImponible,montoIGV,Importe,Deudor,Acreedor,glosa,DeudorD,AcreedorD,Moneda, TipoCambio,centrocosto
	from ##Tempo
	ORDER BY zona, Proveedor,dr,fechadocreferencia,codmgc,mes  -- ordenado por documento

DROP TABLE ##Tempo
/****** Object:  StoredProcedure [dbo].[spp_Rep_AnalisisCuentaXproveedor]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Rep_AnalisisCuentaXproveedor]
@fechaA varchar(10),
@fechaB varchar(10),
@aCodUnidadEconomica varchar(10),
@bCodUnidadEconomica varchar(10),
@proveedor varchar(11),
@tipo char(2)
as
-- spp_Rep_AnalisisCuentaXproveedor '01/01/2009','31/12/2011','0000115','0000115','20450152111',''

select rtrim(td.Descripcion)+' '+t.nrodocreferencia doc,t.*,
(case when len(cp.razonsocial)<1 then rtrim(cp.nombre) +' '+rtrim(cp.apellido) else rtrim(cp.razonsocial) end) nombrecliPro,
isnull(tmp.TipoMedioPago,'') descMedioPAgo from (
-- solo las cuentas 42
select idmovcontable_d orden, t.nrodocumento, t.codigoDocumentoReferencia, t.nrodocreferencia, t.fechadocreferencia, t.codcuenta,t.glosa, t.moneda, 
t.tipocambio,t.impdebe, t.imphaber, (t.impdebe- t.imphaber) saldo,t.codpro,'' tipomediopago, c.fechco, c.glosa cabglosa
from movcontables_d t 
inner join movcontables_c c on t.idmovcontables_c= c.idmovcontables_c
where t.codmgc in ('04','08','11','20','18') 
and t.estado <>'4' and c.estado<>'4' and len(t.nrodocreferencia)>0 and left(codcuenta,2) in ('12','42')
and FechaDocReferencia between convert(datetime,@fechaA,103) and convert(datetime,@fechaB,103)
and t.CodUnidadEconomica between @aCodUnidadEconomica and @bCodUnidadEconomica
and codPro=@proveedor 
--order by t.codigoDocumentoReferencia, t.nrodocreferencia
union all
-- solo las cuentas 10
select idmovcontable_d orden, nrodocumento, codigoDocumentoReferencia, nrodocreferencia, fechadocreferencia, codcuenta,d.glosa, moneda, tipocambio,
impdebe, imphaber, (impdebe- imphaber) saldo,codpro,tipomediopago, c.fechco, c.glosa cabglosa
from movcontables_d d
inner join movcontables_c c on d.idmovcontables_c= c.idmovcontables_c
where d.codmgc in ('02', '20') and d.estado <>'4' and c.estado <>'4' 
and left(codcuenta,2)= '10'
and FechaDocReferencia between convert(datetime,@fechaA,103) and convert(datetime,@fechaB,103)
and d.CodUnidadEconomica between @aCodUnidadEconomica and @bCodUnidadEconomica
and codPro=@proveedor 
--order by codigoDocumentoReferencia, nrodocreferencia
) t
	left outer join tbl_Tipo_Medio_Pago tmp on tmp.codTipoMedioPago=t.tipoMedioPago
	left outer join tipodocumento td on td.codigOdocumento=t.codigodocumentoreferencia
	inner join tbl_msto_ClienteProveedor cp on cp.ruc = t.codpro
	WHERE cp.estado=1
order by codpro,nrodocreferencia,nrodocumento,orden,codcuenta
/****** Object:  StoredProcedure [dbo].[Spp_Rep_balanceComparativo]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[Spp_Rep_balanceComparativo]

@lcZonaA varchar(6),
@lcZonaB varchar(6),
@lcUnidadA char(10),
@lcUnidadB char(10),
@lcGruposA char(2),
@lcGruposB char(2),
@lcANO char(4),
@lcMesA char(2),
@lcMesB char(2),
@Espacio INT,
@idempresa int

AS
declare @lcMesA_1 char(2)
declare @lcMesB_1 char(2)

-- exec "Spp_Rep_balanceComparativo";1 '000002', '000002', '000002    ', '000002    ', '00', '99', '2020', '01', '02', 7, 2
--if @lcMesA!=@lcMesB select * from ##vDebe
--	begin
	set @lcMesA_1=replicate('0',2-len(convert(int,@lcMesA)-1))+convert(char(2),convert(int,@lcMesA)-1)
	set @lcMesB_1=replicate('0',2-len(convert(int,@lcMesB)-1))+convert(char(2),convert(int,@lcMesB)-1)
print @lcMesA_1
print @lcMesB_1
---Calculo mensual del Debe
select ok.* into ##vDebe from (
select tipocuenta, codcuenta, --descripcion, 
				  isnull([00],0.00) Inid, isnull([01],0.00) Ened, isnull([02],0.00) Febd, isnull([03],0.00) Mard, 
				  isnull([04],0.00) Abrd, isnull([05],0.00) Mayd, isnull([06],0.00) Jund, isnull([07],0.00) Juld, 
				  isnull([08],0.00) Agod, isnull([09],0.00) Sepd, isnull([10],0.00) Octd, isnull([11],0.00) Novd, isnull([12],0.00) Dicd
from (
		select p.tipocuenta, codcuenta=left(d.codcuenta,@Espacio), c.mes as mes, impdebe = sum(d.impdebe) --, p.descripcion
		from movcontables_d d inner join movcontables_c c on d.idmovcontables_c = c.idmovcontables_c
			inner join (select tipocuenta,descripcion,codcuentacontable from plancuentascontables where idempresa= @idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end)) p on p.codcuentacontable=d.codcuenta
		where c.anio=@lcANO
			and c.mes between @lcMesA_1 and @lcMesB 
--			AND C.zona BETWEEN @lcZonaA AND @lcZonaB
--			and d.codunidadeconomica between @lcUnidadA and @lcUnidadB
			And C.zona In (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
			And d.CODUNIDADECONOMICA In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
			and c.codmgc between @lcGruposA and @lcGruposB
			and d.estado!='4' and c.estado!='4' and codpro!='000001'
	 		
			and codcuenta<>'' 
		group by left(d.codcuenta,@Espacio), c.mes, p.descripcion, p.tipocuenta
	) v Pivot (sum(impdebe) for mes  in ([00], [01], [02], [03], [04], [05],
                 [06], [07], [08], [09], [10], [11], [12]) ) as PT
) ok 
where Inid+Ened+Febd+Mard+Abrd+Mayd+Jund+Juld+Agod+Sepd+Octd+Novd+Dicd<>0
order by codcuenta


 -- Calculo mensual del Haber
select ok.* into ##vHaber from (
select tipocuenta, codcuenta, --descripcion, 
				  isnull([00],0.00) Inih, isnull([01],0.00) Eneh, isnull([02],0.00) Febh, isnull([03],0.00) Marh, 
				  isnull([04],0.00) Abrh, isnull([05],0.00) Mayh, isnull([06],0.00) Junh, isnull([07],0.00) Julh, 
				  isnull([08],0.00) Agoh, isnull([09],0.00) Seph, isnull([10],0.00) Octh, isnull([11],0.00) Novh, isnull([12],0.00) Dich
from (
		select p.tipocuenta, codcuenta=left(d.codcuenta,@Espacio), c.mes as mes, impHaber = sum(d.impHaber) --, p.descripcion
		from movcontables_d d inner join movcontables_c c on d.idmovcontables_c = c.idmovcontables_c
			inner join (select tipocuenta,descripcion,codcuentacontable from plancuentascontables where idempresa= @idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end)) p on p.codcuentacontable=d.codcuenta
		where c.anio=@lcANO
			and c.mes between @lcMesA_1 and @lcMesB 
--			AND C.zona BETWEEN @lcZonaA AND @lcZonaB
--			and d.codunidadeconomica between @lcUnidadA and @lcUnidadB
			And C.zona In (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
			And d.CODUNIDADECONOMICA In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
			and c.codmgc between @lcGruposA and @lcGruposB
			and d.estado!='4' and c.estado!='4' and codpro!='000001'
			and codcuenta<>'' 
		group by left(d.codcuenta,@Espacio), c.mes, p.descripcion, p.tipocuenta
	) v Pivot (sum(impHaber) for mes  in ([00], [01], [02], [03], [04], [05],
                 [06], [07], [08], [09], [10], [11], [12]) ) as PT
) ok 
where Inih+Eneh+Febh+Marh+Abrh+Mayh+Junh+Julh+Agoh+Seph+Octh+Novh+Dich<>0
order by codcuenta

--- balance de comprobacion mensual
select cuenta = (Case When left(CodCuenta,2) between '10'and '29'  and tipocuenta = 'A' Then 'ACTIVO CORRIENTE' Else 
					(Case When left(CodCuenta,2) between '30'and '39' and tipocuenta = 'A' Then 'ACTIVO NO CORRIENTE' Else 
					(Case When left(CodCuenta,2) between '40'and '47' and tipocuenta = 'P' Then 'PASIVO CORRIENTE' Else 
					(Case When left(CodCuenta,2) between '48'and '49' Or tipocuenta = 'C' Then 'PASIVO NO CORRIENTE' Else 
					(Case When left(CodCuenta,2) between '50'and '58' and tipocuenta = 'P' Then 'PATRIMONIO' Else 
					(Case When left(CodCuenta,2) between '59' and '59' and tipocuenta = 'P' Then 'PATRIMONIO' Else '' End)
					End) 
					End)
					End)
					End)
					End),
	* from (
select tipocuenta = isnull(tipocuentad,tipocuentah)  , codcuenta, descripcion,
	Apertura = Inid-Inih , 
	Ene = Ened-Eneh, Feb = Febd-Febh, Mar = Mard-Marh, Abr = Abrd-Abrh,
	May = Mayd-Mayh, Jun = Jund-Junh, Jul = Juld-Julh, Ago = Agod-Agoh, 
	Sep = Sepd-Seph, Oct = Octd-Octh, Nov = Novd-Novh, Dic = Dicd-Dich, 
	tot = (Inid+Ened+Febd+Mard+Abrd+Mayd+Jund+Juld+Agod+Sepd+Octd+Novd+Dicd) - (Inih+Eneh+Febh+Marh+Abrh+Mayh+Junh+Julh+Agoh+Seph+Octh+Novh+Dich)
from (
	select tipocuentad = d.tipocuenta, tipocuentah= h.tipocuenta, Codcuenta = p.codcuentacontable, p.descripcion, 
		isnull(Inid,0.00) Inid, isnull(Inih,0.00) Inih, 
		isnull(Ened,0.00) Ened, isnull(Eneh,0.00) Eneh, isnull(Febd,0.00) Febd, isnull(Febh,0.00) Febh, isnull(Mard,0.00) Mard, isnull(Marh,0.00) Marh, 
		isnull(Abrd,0.00) Abrd, isnull(Abrh,0.00) Abrh, isnull(Mayd,0.00) Mayd, isnull(Mayh,0.00) Mayh, isnull(Jund,0.00) Jund, isnull(Junh,0.00) Junh, 
		isnull(Juld,0.00) Juld, isnull(Julh,0.00) Julh, isnull(Agod,0.00) Agod, isnull(Agoh,0.00) Agoh, isnull(Sepd,0.00) Sepd, isnull(Seph,0.00) Seph, 
		isnull(Octd,0.00) Octd, isnull(Octh,0.00) Octh, isnull(Novd,0.00) Novd, isnull(Novh,0.00) Novh, isnull(Dicd,0.00) Dicd, isnull(Dich,0.00) Dich
	from (select  codcuentacontable, descripcion from plancuentascontables where idempresa= @idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end) and len(codcuentacontable)<= @Espacio 
		)p  left join  ##vDebe d on p.codcuentacontable = d.codcuenta
		left join ##vHaber h on p.codcuentacontable = h.codcuenta
) todos 

where Inid+Ened+Febd+Mard+Abrd+Mayd+Jund+Juld+Agod+Sepd+Octd+Novd+Dicd + Inih+Eneh+Febh+Marh+Abrh+Mayh+Junh+Julh+Agoh+Seph+Octh+Novh+Dich<>0
) balance 
order by codcuenta 

drop table ##vDebe
Drop Table ##vHaber
/****** Object:  StoredProcedure [dbo].[Spp_Rep_balanceComprobacion]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[Spp_Rep_balanceComprobacion]
@lcZonaA varchar(6),
@lcZonaB varchar(6),
@lcUnidadA char(10),
@lcUnidadB char(10),
@lcGruposA char(2),
@lcGruposB char(2),
@lcANO char(4),
@lcMesA char(2),
@lcMesB char(2),
@Espacio INT,
@idempresa int

AS
-- exec "Spp_Rep_balanceComprobacion";1 '000069', '000069', '000069    ', '000069    ', '00', '99', '2021', '01', '12', 4, 55
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpBC]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpBC
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpTipDifCab]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpTipDifCab
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpTipDifCab1]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpTipDifCab1
END

-------------------------------------

declare @lcMesA_1 char(2)
declare @lcMesB_1 char(2)
declare @lcTCambio numeric(8,4)
declare @lcCuentaDolares as int
-- Spp_Rep_balanceComprobacion '000032','000032','000032','000032','00','99','2016','01','01',7,24
--if @lcMesA!=@lcMesB
--	begin
	set @lcMesA_1=replicate('0',2-len(convert(int,@lcMesA)-1))+convert(char(2),convert(int,@lcMesA)-1)
	set @lcMesB_1=replicate('0',2-len(convert(int,@lcMesB)-1))+convert(char(2),convert(int,@lcMesB)-1)
	set @lcTCambio = (select @Espacio/1000)
	set @Espacio = (Case When @lcTCambio<>0 Then @lcTCambio else @Espacio end)	
--	end
--else
--	begin 
--		set @lcMesB_1=@lcMesB
--	end
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'exportaventas') AND type in (N'U'))
BEGIN 
	DROP TABLE exportaventas
END
-- calculando dif de tipo cambio por cuentas 
	delete from tmpBCTC
	set @lcCuentaDolares =(select count(codcuentacontable) from plancuentascontables where converMoneda='S' and idEmpresa= @idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end) and estado=1)
	if @lcCuentaDolares>0
		Begin
			exec spp_UltimoDiaTC @lcMesB, @lcANO, @lcZonaA,@lcZonaB,@lcUnidadA,@lcUnidadB,@Idempresa
--			print 'ingreso'
			exec spp_AjusteTCAsiento @lcMesB,@lcANO,@lcZonaA,@lcZonaB,@lcUnidadA,@lcUnidadB,@idempresa, 'RESUMEN','','','','BALCOMPROBA'
		End
------------------------------------TOMANDO DATOS ANTERIORES, y ACTUAL
--					 isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.impdebe) end ,0.00)as andebe,
--					 isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.imphaber) end ,0.00)as anhaber,

--select codcuenta, abs(sum(indebe)) indebe, abs(sum(inhaber)) inhaber, abs(sum(andebe)) andebe, abs(sum(anhaber)) anhaber,
--	abs(sum(debe)) debe, abs(sum(haber)) haber
--into #C001 from (
select codcuenta=left(d.codcuenta,@Espacio), 
--inicio o apertura
					 isnull(case when c.mes = '00' then (CASE WHEN sum(d.impdebe)- sum(d.imphaber)<0 THEN 0.0 ELSE sum(d.impdebe)- sum(d.imphaber) END) end ,0.00)as indebe,
					 isnull(case when c.mes = '00' then (CASE WHEN sum(d.imphaber)- sum(d.impdebe)<0 THEN 0.0 ELSE sum(d.imphaber)- sum(d.impdebe) END) end ,0.00)as inhaber,
-- meses anteriores
					 isnull(case when c.mes between '01' and @lcMesB_1 and @lcMesA_1!=@lcMesB_1 then sum(d.impdebe) end ,0.00)as andebe,
					 isnull(case when c.mes between '01' and @lcMesB_1 and @lcMesA_1!=@lcMesB_1 then sum(d.imphaber) end ,0.00)as anhaber,
--- mes actual
					 isnull(case when c.mes=@lcMesB then sum(d.impdebe) end ,0.00)as DEBE,
					 isnull(case when c.mes=@lcMesB then sum(d.imphaber) end ,0.00)as HABER
into #C001
from movcontables_d d
inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
inner join (select codcuentacontable from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end)) p on p.codcuentacontable=d.codcuenta
where c.mes between '00' and @lcMesB --@lcMesA_1 and @lcMesB
		and c.anio=@lcANO
		and c.codmgc between @lcGruposA and @lcGruposB
--		AND C.zona BETWEEN @lcZonaA AND @lcZonaB
--		AND C.CODUNIDADECONOMICA BETWEEN @lcUnidadA AND @lcUnidadB
		And C.zona In (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
		And C.CODUNIDADECONOMICA In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
		AND d.estado!='4' and c.estado!='4' and d.codmgc!='19' and codcuenta!='' and codpro!='000001'
group by left(d.codcuenta,@Espacio),c.mes, d.CodigodocumentoReferencia
--having len(left(d.codcuenta,@Espacio))=@Espacio
--) todos
--group by codcuenta
union all 
select * from tmpBCTC 
order by codcuenta

-- Actualiza el tipo de cambio si tiene cuenta en dolares 
if @lcTCambio<>0 
Begin
	set @lcTCambio = (select tipoCambioVenta from tipocambio where fecha = DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+@lcMesB+'/'+@lcAno,103)))),DATEADD(mm,1,convert(datetime, '01/'+@lcMesB+'/'+@lcAno,103))) and estado='1')
	update #C001 set indebe=indebe*@lcTCambio,inhaber=inhaber*@lcTCambio,andebe=andebe*@lcTCambio,anhaber=anhaber*@lcTCambio,debe=debe*@lcTCambio,haber=haber*@lcTCambio 
	where codcuenta in (select codcuentacontable from plancuentascontables where converMoneda = 'S' and idempresa= @Idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end) and Estado =1)
End
-- fin actualiza tipo de cambio

select * into tmpBC FROM #C001  --- se deja para usar en el analisis del BC

--		anteriordebe= (CASE WHEN sum(tmp.indebe)- sum(tmp.inhaber)<0 THEN 0.0 ELSE sum(tmp.indebe)- sum(tmp.inhaber) END) + SUM(tmp.andebe) + SUM(tmp.debe),
--		anteriorhaber=(CASE WHEN sum(tmp.inhaber)- sum(tmp.indebe)<0 THEN 0.0 ELSE sum(tmp.inhaber)- sum(tmp.indebe) END) +SUM(tmp.anhaber)+ SUM(tmp.haber),
SELECT Cuenta=tmp.codcuenta,DCuenta=p.descripcion,
		inicialdebe=(CASE WHEN sum(tmp.indebe)- sum(tmp.inhaber)<0 THEN 0.0 ELSE sum(tmp.indebe)- sum(tmp.inhaber) END),-- SUM(tmp.indebe),
		inicialhaber=(CASE WHEN sum(tmp.inhaber)- sum(tmp.indebe)<0 THEN 0.0 ELSE sum(tmp.inhaber)- sum(tmp.indebe) END), --SUM(tmp.inhaber),
		anteriordebe=  SUM(tmp.andebe) + SUM(tmp.debe),
		anteriorhaber= SUM(tmp.anhaber)+ SUM(tmp.haber),
		mesdebe=(CASE WHEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) ELSE 0.00 END),
		meshaber=(CASE WHEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) ELSE 0.00 END),
	saldodebe	=0.00,
	saldohaber	=0.00,
	inventariodebe	=(CASE WHEN p.TipoCuenta IN ('A','P','C') THEN  (CASE WHEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) ELSE 0.00 END) ELSE 0 END),

	inventariohaber	=(CASE WHEN p.TipoCuenta IN('A','P','C') THEN  
						   (CASE WHEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
								 THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
							ELSE 0.00 END) ELSE 0 END),

	naturalezadebe	=(CASE WHEN p.TipoCuenta IN ('N','R','U') THEN 
						   (CASE WHEN (CASE WHEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) 
										THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) 
									  ELSE 0.00 END)>0
								THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))
							ELSE 0 END)
					  ELSE 0 END),

	naturalezahaber	=(CASE WHEN p.TipoCuenta IN ('N','R','U') THEN 
						   (CASE WHEN (CASE WHEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
										   THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
									  ELSE 0.00 END)>0
								THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))
						   ELSE 0.00 END)
					  ELSE 0 END),

	funciondebe	 =(CASE WHEN p.TipoCuenta IN ('F','R','U') THEN 
						   (CASE WHEN (CASE WHEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) 
										THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) 
									  ELSE 0.00 END)>0
								THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))
							ELSE 0.00 END)
				  ELSE 0 END),

	funcionhaber =(CASE WHEN p.TipoCuenta IN ('F','R','U') THEN 
						   (CASE WHEN (CASE WHEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
										   THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
									  ELSE 0.00 END)>0
								THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))
						   ELSE 0.00 END)
				   ELSE 0 END)
FROM #C001 tmp
inner join (select codcuentacontable,descripcion,tipoCuenta from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end)) p on p.codcuentacontable=tmp.codcuenta
where tmp.indebe+tmp.inhaber+tmp.andebe+tmp.debe+tmp.anhaber+tmp.haber<>0

GROUP BY tmp.CODCUENTA,p.descripcion,p.tipoCuenta
order by tmp.CODCUENTA

--select * from tmpBCRes

DROP TABLE #C001

--borrador original
--		inicialdebe=SUM(tmp.indebe),
--		inicialhaber=SUM(tmp.inhaber),
--		anteriordebe=SUM(tmp.andebe),
--		anteriorhaber=SUM(tmp.anhaber),
--		mesdebe=SUM(tmp.debe),
--		meshaber=SUM(tmp.haber ),
--	saldodebe	=(CASE WHEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) ELSE 0.00 END),
--	saldohaber	=(CASE WHEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) ELSE 0.00 END),
--	inventariodebe	=(CASE WHEN p.TipoCuenta IN ('A','P') THEN  (CASE WHEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) ELSE 0.00 END) ELSE 0 END),
--
--	inventariohaber	=(CASE WHEN p.TipoCuenta IN('A','P') THEN  
--						   (CASE WHEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
--								 THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
--							ELSE 0.00 END) ELSE 0 END),
--
--	naturalezadebe	=(CASE WHEN p.TipoCuenta IN ('N','R') THEN 
--						   (CASE WHEN (CASE WHEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) 
--										THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) 
--									  ELSE 0.00 END)>0
--								THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))
--							ELSE 0 END)
--					  ELSE 0 END),
--
--	naturalezahaber	=(CASE WHEN p.TipoCuenta IN ('N','R') THEN 
--						   (CASE WHEN (CASE WHEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
--										   THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
--									  ELSE 0.00 END)>0
--								THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))
--						   ELSE 0.00 END)
--					  ELSE 0 END),
--
--	funciondebe	 =(CASE WHEN p.TipoCuenta IN ('F','R') THEN 
--						   (CASE WHEN (CASE WHEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) 
--										THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) 
--									  ELSE 0.00 END)>0
--								THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))
--							ELSE 0.00 END)
--				  ELSE 0 END),
--
--	funcionhaber =(CASE WHEN p.TipoCuenta IN ('F') THEN 
--						   (CASE WHEN (CASE WHEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
--										   THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
--									  ELSE 0.00 END)>0
--								THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))
--						   ELSE 0.00 END)
--				   ELSE 0 END)
--
/****** Object:  StoredProcedure [dbo].[Spp_Rep_balanceComprobacionAnalisis]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[Spp_Rep_balanceComprobacionAnalisis]
@Datos as char(70)

as
declare @Tipo varchar(3),@lcZonaA varchar(6),
@lcZonaB varchar(6),
@lcUnidadA char(10),
@lcUnidadB char(10),
@lcGruposA char(10),
@lcGruposB char(10),
@lcANO char(4),
@lcMesA char(2),
@lcMesB char(2),
@Espacio INT,
@idempresa int

declare @lcMesA_1 char(2)
declare @lcMesB_1 char(2)

-- Spp_Rep_balanceComprobacionAnalisis '000023','000023','000023','000023','00','99','2014','01','12',5,15
set @tipo = left(@Datos,3) 
set @lcZonaA = substring(@Datos,4,6) 
set @lcZonaB = substring(@Datos,10,6) 
set @lcUnidadA = substring(@Datos,16,10) 
set @lcUnidadB = substring(@Datos,26,10) 
set @lcGruposA = substring(@Datos,36,10) 
set @lcGruposB = substring(@Datos,46,10) 
set @lcANO = substring(@Datos,56,4) 
set @lcMesA = substring(@Datos,60,2) 
set @lcMesB = substring(@Datos,62,2) 
set @Espacio = substring(@Datos,64,1) 
set @idempresa = substring(@Datos,65,5) 

if @tipo = 'CAB'
	Begin
	delete from tmpBCRes
	insert into tmpBCRes
	exec spp_Rep_BalanceComprobacion @lcZonaA,@lcZonaB,@lcUnidadA,@lcUnidadB,@lcGruposA,@lcGruposB,@lcAno,@lcMesA,@lcMesB,@espacio,@IdEmpresa

		select '3' orden,cuenta,dCuenta,inicialdebe,inicialhaber,anteriordebe,anteriorhaber,
			   mesdebe,meshaber,saldodebe,saldohaber,
			   inventariodebe,inventariohaber,naturalezadebe,naturalezahaber,
			   funciondebe,funcionhaber 
		from tmpBCRes
		union 
		select '4' orden,'' cuenta,'Totales : ' dCuenta,sum(inicialdebe),sum(inicialhaber),sum(anteriordebe),sum(anteriorhaber),
			   sum(mesdebe),sum(meshaber),sum(saldodebe),sum(saldohaber),
			   sum(inventariodebe),sum(inventariohaber),sum(naturalezadebe),sum(naturalezahaber),
			   sum(funciondebe),sum(funcionhaber) from tmpBCRes
	order by orden
	End
if @tipo = 'PDT' -- genera BC para exportar al PDT
	Begin
	delete from tmpBCRes
	insert into tmpBCRes
	exec spp_Rep_BalanceComprobacion @lcZonaA,@lcZonaB,@lcUnidadA,@lcUnidadB,@lcGruposA,@lcGruposB,@lcAno,@lcMesA,@lcMesB,@espacio,@IdEmpresa

		select '3' orden,t.cuenta,t.dCuenta,convert(int,round(sum(t.inicialdebe),0)) inicialdebe,
			convert(int,round(sum(t.inicialhaber),0)) inicialhaber,
			convert(int,round(sum(t.anteriordebe),0)) anteriordebe,
			convert(int,round(sum(t.anteriorhaber),0)) anteriorhaber,
			convert(int,round(sum(t.mesdebe),0))*0 mesdebe,
			convert(int,round(sum(t.meshaber),0))*0 meshaber,
			convert(int,round(sum(t.saldodebe),0)) saldodebe,
			convert(int,round(sum(t.saldohaber),0)) saldohaber,
			convert(int,round(sum(t.inventariodebe),0)) inventariodebe,
			convert(int,round(sum(t.inventariohaber),0)) inventariohaber,
			convert(int,round(sum(t.naturalezadebe),0)) naturalezadebe,
			convert(int,round(sum(t.naturalezahaber),0)) naturalezahaber,
			convert(int,round(sum(t.funciondebe),0)) funciondebe,
			convert(int,round(sum(t.funcionhaber),0)) funcionhaber, 
			isnull(p.ctaPDT,'') ctapdt 
		from tmpBCRes t left outer join 
		(select codcuentacontable,ctapdt from PlanCuentasContables where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end) and estado=1) p on t.cuenta=p.codcuentacontable
		Where left(t.cuenta,1)<'9' and left(t.cuenta,2)<>'79' 
		group by t.cuenta,t.dcuenta,p.ctaPDT
		union 
		select '4' orden,'' cuenta,'Totales : ' dCuenta,convert(int,round(sum(t.inicialdebe),0)) inicialdebe,
			convert(int,round(sum(t.inicialhaber),0)) inicialhaber,
			convert(int,round(sum(t.anteriordebe),0)) anteriordebe,
			convert(int,round(sum(t.anteriorhaber),0)) anteriorhaber,
			convert(int,round(sum(t.mesdebe),0))*0 mesdebe,
			convert(int,round(sum(t.meshaber),0))*0 meshaber,
			convert(int,round(sum(t.saldodebe),0)) saldodebe,
			convert(int,round(sum(t.saldohaber),0)) saldohaber,
			convert(int,round(sum(t.inventariodebe),0)) inventariodebe,
			convert(int,round(sum(t.inventariohaber),0)) inventariohaber,
			convert(int,round(sum(t.naturalezadebe),0)) naturalezadebe,
			convert(int,round(sum(t.naturalezahaber),0)) naturalezahaber,
			convert(int,round(sum(t.funciondebe),0)) funciondebe,
			convert(int,round(sum(t.funcionhaber),0)) funcionhaber, 
			'' ctapdt from tmpBCRes t
			Where left(t.cuenta,1)<'9' and left(t.cuenta,2)<>'79'
	order by orden,cuenta
	End
if @tipo = 'PDR' -- genera BC para exportar al PDT en forma Resumida sin cuentas duplicadas pero valores consolidados
	Begin
	delete from tmpBCRes
	insert into tmpBCRes
	exec spp_Rep_BalanceComprobacion @lcZonaA,@lcZonaB,@lcUnidadA,@lcUnidadB,@lcGruposA,@lcGruposB,@lcAno,@lcMesA,@lcMesB,@espacio,@IdEmpresa

		select isnull(p.ctaPDT,'') ctapdt, 
			convert(int,round(sum(t.inicialdebe),0)) inicialdebe,
			convert(int,round(sum(t.inicialhaber),0)) inicialhaber,
			convert(int,round(sum(t.anteriordebe),0)) anteriordebe,
			convert(int,round(sum(t.anteriorhaber),0)) anteriorhaber,
			convert(int,round(sum(t.mesdebe),0))*0 mesdebe,
			convert(int,round(sum(t.meshaber),0))*0 meshaber,
			convert(int,round(sum(t.saldodebe),0)) saldodebe,
			convert(int,round(sum(t.saldohaber),0)) saldohaber,
			convert(int,round(sum(t.inventariodebe),0)) inventariodebe,
			convert(int,round(sum(t.inventariohaber),0)) inventariohaber,
			convert(int,round(sum(t.naturalezadebe),0)) naturalezadebe,
			convert(int,round(sum(t.naturalezahaber),0)) naturalezahaber,
			convert(int,round(sum(t.funciondebe),0)) funciondebe,
			convert(int,round(sum(t.funcionhaber),0)) funcionhaber

		from tmpBCRes t left outer join 
		(select codcuentacontable,(CASE WHEN ctapdt='' THEN '0' ELSE ctapdt END) ctapdt from PlanCuentasContables where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end) and estado=1) p on t.cuenta=p.codcuentacontable
		Where left(t.cuenta,1)<'9' and left(t.cuenta,2)<>'79'
		Group by p.ctaPDT
		order by ctaPdt
	End
-- fin genera BC para exportar al PDT en forma Resumida sin cuentas duplicadas pero valores consolidados

if @tipo = 'DET'
	Begin
	--exec "spp_rep_AnalisisCuenta";1 '000023', '000023', '000023    ', '000023    ', '01', '12', '4011', '4011', '2014', 15, 'MES'
		exec spp_rep_AnalisisCuenta @lcZonaA,@lcZonaB,@lcUnidadA,@lcUnidadB, @lcMesA,@lcMesB, @lcGruposA,@lcGruposB,@lcAno,@IdEmpresa, 'MES'
	--exec spp_Rep_BalanceComprobacion @lcZonaA,@lcZonaB,@lcUnidadA,@lcUnidadB,@lcGruposA,@lcGruposB,@lcAno,@lcMesA,@lcMesB,@espacio,@IdEmpresa
	End

if @tipo = 'DT2'
	Begin
	select codcuenta=left(d.codcuenta,@Espacio), c.mes, d.CodigodocumentoReferencia,
	--inicio o apertura
						 isnull(case when c.mes = '00' then (CASE WHEN sum(d.impdebe)- sum(d.imphaber)<0 THEN 0.0 ELSE sum(d.impdebe)- sum(d.imphaber) END) end ,0.00)as indebe,
						 isnull(case when c.mes = '00' then (CASE WHEN sum(d.imphaber)- sum(d.impdebe)<0 THEN 0.0 ELSE sum(d.imphaber)- sum(d.impdebe) END) end ,0.00)as inhaber,
	-- meses anteriores
						 isnull(case when c.mes between '01' and '11' and '00'!='11' then sum(d.impdebe) end ,0.00)as andebe,
						 isnull(case when c.mes between '01' and '11' and '00'!='11' then sum(d.imphaber) end ,0.00)as anhaber,
	--- mes actual
						 isnull(case when c.mes='01' then sum(d.impdebe) end ,0.00)as DEBE,
						 isnull(case when c.mes='01' then sum(d.imphaber) end ,0.00)as HABER,d.centrocosto
--	into #C001
	from movcontables_d d
	inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
	inner join (select codcuentacontable from plancuentascontables where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end)) p on p.codcuentacontable=d.codcuenta
	where c.mes between '00' and @lcMesB
			and c.anio= @lcANO
			and c.codmgc between @lcGruposA and @lcGruposB
			And C.zona In (Select CodZona from Zona Where IdEmpresa = @IdEmpresa and Estado =1)
			And C.CODUNIDADECONOMICA In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @IdEmpresa and Estado =1) and Estado=1)
			AND d.estado!='4' and c.estado!='4' and d.codmgc!='19' and codcuenta!='' and codpro!='000001'
	group by left(d.codcuenta,@Espacio),c.mes, d.CodigodocumentoReferencia,d.centrocosto
	order by codcuenta

	End

--DROP TABLE tmpBC
--DROP TABLE tmpBCRes
/****** Object:  StoredProcedure [dbo].[Spp_Rep_balanceComprobacionConMes]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[Spp_Rep_balanceComprobacionConMes]
@lcZonaA varchar(6),
@lcZonaB varchar(6),
@lcUnidadA char(10),
@lcUnidadB char(10),
@lcGruposA char(2),
@lcGruposB char(2),
@lcANO char(4),
@lcMesA char(2),
@lcMesB char(2),
@Espacio INT,
@idempresa int

AS
declare @lcMesA_1 char(2)
declare @lcMesB_1 char(2)


--if @lcMesA!=@lcMesB
--	begin
	set @lcMesA_1=replicate('0',2-len(convert(int,@lcMesA)-1))+convert(char(2),convert(int,@lcMesA)-1)
	set @lcMesB_1=replicate('0',2-len(convert(int,@lcMesB)-1))+convert(char(2),convert(int,@lcMesB)-1)
--	end
--else
--	begin 
--		set @lcMesB_1=@lcMesB
--	end


------------------------------------TOMANDO DATOS ANTERIORES, y ACTUAL
--					 isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.impdebe) end ,0.00)as andebe,
--					 isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.imphaber) end ,0.00)as anhaber,


select codcuenta=left(d.codcuenta,@Espacio), 
--inicio o apertura
	isnull(case when c.mes = '00' then (CASE WHEN sum(d.impdebe)- sum(d.imphaber)<0 THEN 0.0 ELSE sum(d.impdebe)- sum(d.imphaber) END) end ,0.00) as indebe,
	isnull(case when c.mes = '00' then (CASE WHEN sum(d.imphaber)- sum(d.impdebe)<0 THEN 0.0 ELSE sum(d.imphaber)- sum(d.impdebe) END) end ,0.00) as inhaber,
-- meses anteriores
	isnull(case when c.mes between '01' and @lcMesB_1 and '01'!=@lcMesB_1 then sum(d.impdebe) end ,0.00)as andebe,
	isnull(case when c.mes between '01' and @lcMesB_1 and '01'!=@lcMesB_1 then sum(d.imphaber) end ,0.00)as anhaber,
	--isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.impdebe) end ,0.00)as andebe,
	--isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.imphaber) end ,0.00)as anhaber,
--- mes actual
	isnull(case when c.mes=@lcMesB then sum(d.impdebe) end ,0.00)as DEBE,
	isnull(case when c.mes=@lcMesB then sum(d.imphaber) end ,0.00)as HABER

into #C001
from movcontables_d d
inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
inner join (select codcuentacontable from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end)) p on p.codcuentacontable=d.codcuenta
where c.mes between '00' and @lcMesB --@lcMesA_1 and @lcMesB
		and c.anio=@lcANO
		and c.codmgc between @lcGruposA and @lcGruposB
		And C.zona In (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
		And C.CODUNIDADECONOMICA In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
		AND d.estado!='4' and c.estado!='4' and d.codmgc!='19' and codcuenta!='' and codpro!='000001'
group by left(d.codcuenta,@Espacio),c.mes
--having len(left(d.codcuenta,@Espacio))=@Espacio
order by codcuenta

SELECT Cuenta=tmp.codcuenta,DCuenta=p.descripcion,
		inicialdebe=(CASE WHEN sum(tmp.indebe)- sum(tmp.inhaber)<0 THEN 0.0 ELSE sum(tmp.indebe)- sum(tmp.inhaber) END),-- SUM(tmp.indebe),
		inicialhaber=(CASE WHEN sum(tmp.inhaber)- sum(tmp.indebe)<0 THEN 0.0 ELSE sum(tmp.inhaber)- sum(tmp.indebe) END), --SUM(tmp.inhaber),
		--anteriordebe= SUM(tmp.indebe) + SUM(tmp.andebe) + SUM(tmp.debe),
		--anteriorhaber=SUM(tmp.inhaber) +SUM(tmp.anhaber)+ SUM(tmp.haber),
		anteriordebe=SUM(tmp.andebe),
		anteriorhaber=SUM(tmp.anhaber),
		mesdebe=SUM(tmp.debe),
		meshaber=SUM(tmp.haber ),
	saldodebe	=(CASE WHEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) ELSE 0.00 END),
	saldohaber	=(CASE WHEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) ELSE 0.00 END),
	inventariodebe	=(CASE WHEN p.TipoCuenta IN ('A','P') THEN  (CASE WHEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) ELSE 0.00 END) ELSE 0 END),

	inventariohaber	=(CASE WHEN p.TipoCuenta IN('A','P') THEN  
						   (CASE WHEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
								 THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
							ELSE 0.00 END) ELSE 0 END),

	naturalezadebe	=(CASE WHEN p.TipoCuenta IN ('N','R','U') THEN 
						   (CASE WHEN (CASE WHEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) 
										THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) 
									  ELSE 0.00 END)>0
								THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))
							ELSE 0 END)
					  ELSE 0 END),

	naturalezahaber	=(CASE WHEN p.TipoCuenta IN ('N','R','U') THEN 
						   (CASE WHEN (CASE WHEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
										   THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
									  ELSE 0.00 END)>0
								THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))
						   ELSE 0.00 END)
					  ELSE 0 END),

	funciondebe	 =(CASE WHEN p.TipoCuenta IN ('F','R','U') THEN 
						   (CASE WHEN (CASE WHEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) 
										THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber)) 
									  ELSE 0.00 END)>0
								THEN (sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))
							ELSE 0.00 END)
				  ELSE 0 END),

	funcionhaber =(CASE WHEN p.TipoCuenta IN ('F','R','U') THEN 
						   (CASE WHEN (CASE WHEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
										   THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe)) 
									  ELSE 0.00 END)>0
								THEN (sum(tmp.inhaber)+sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.indebe)+sum(tmp.andebe)+sum(tmp.debe))
						   ELSE 0.00 END)
				   ELSE 0 END)
 
	
FROM #C001 tmp
inner join (select codcuentacontable,descripcion,tipoCuenta from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end)) p on p.codcuentacontable=tmp.codcuenta
where tmp.indebe+tmp.inhaber+tmp.andebe+tmp.debe+tmp.anhaber+tmp.haber<>0

GROUP BY tmp.CODCUENTA,p.descripcion,p.tipoCuenta
order by tmp.CODCUENTA
DROP TABLE #C001

/****** Object:  StoredProcedure [dbo].[spp_rep_BalanceGeneralI]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rep_BalanceGeneralI]
@Zonaa 		varchar(6),
@Zonab 		varchar(6),
@Unidada 	char(10),
@Unidadb 	char(10),
@Anio 		char(4),
@Mesa 		char(2),
@Mesb       char(2),
@IdEmpresa int
as
-- exec "spp_rep_BalanceGeneralI";1 '000002', '000002', '000002    ', '000002    ', '2020', '00', '01', 2
--------------------------------------------------------------------------------------
select 'ACTIVO CORRIENTE' as Tipo,Codcuenta=left(d.codcuenta,2),cuenta= (select descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and 
left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and 
left(codcuentacontable,2) between '10' and '29' and codcuentacontable=left(d.codcuenta,2) ), --(select descripcion from p where codcuentacontable=left(d.codcuenta,2)), --(select distinct Descripcion from Plancuentascontables where IdEmpresa=@IdEmpresa and left(anio,4)=@Anio and codcuentacontable=left(d.codcuenta,2)),
Ejercicio=sum(d.impdebe)-sum(d.imphaber) from movcontables_d d
left JOIN (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)) p ON p.codcuentacontable=d.codcuenta
left join MOVCONTABLES_C c on c.idmovcontables_c=d.idmovcontables_c
WHERE left(d.CodCuenta,2) between '10' and '29' and
c.mes between @Mesa and @Mesb and c.anio=@Anio 
and c.zona between @Zonaa and @Zonab
and c.codUnidadeconomica between @Unidada and @Unidadb
and c.estado!='4' and d.estado!='4' and d.codpro!='000001'
GROUP BY left(d.CodCuenta,2)
having (sum(d.impdebe)-sum(d.imphaber))!=0
union all
select 'ACTIVO NO CORRIENTE' as Tipo,Codcuenta=left(d.codcuenta,2),cuenta= (select descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and 
left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and 
left(codcuentacontable,2) between '30' and '39' and codcuentacontable=left(d.codcuenta,2) ), --(select descripcion from p where codcuentacontable=left(d.codcuenta,2)), --(select distinct Descripcion from Plancuentascontables where IdEmpresa=@IdEmpresa and left(anio,4)=@Anio and codcuentacontable=left(d.codcuenta,2)),
Ejercicio=sum(d.impdebe)-sum(d.imphaber) from movcontables_d d
left JOIN (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)) p ON p.codcuentacontable=d.codcuenta
left join MOVCONTABLES_C c on c.idmovcontables_c=d.idmovcontables_c
WHERE left(d.CodCuenta,2)between '30' and '39'  and
c.mes between @Mesa and @Mesb and c.anio=@Anio 
and c.zona between @Zonaa and @Zonab
and c.codUnidadeconomica between @Unidada and @Unidadb
and c.estado!='4' and d.estado!='4' and d.codpro!='000001'
GROUP BY left(d.CodCuenta,2)
having (sum(d.impdebe)-sum(d.imphaber))!=0
union
select Tipo,CodCuenta,Cuenta,sum(Ejercicio) from(
select 'OTROS ACTIVOS NO CORRIENTES' as Tipo,Codcuenta=left(d.codcuenta,4),cuenta= (select descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and 
left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and 
left(codcuentacontable,2) between '40' and '40' and codcuentacontable=left(d.codcuenta,2) ), --(select descripcion from p where codcuentacontable=left(d.codcuenta,2)), --(select distinct Descripcion from Plancuentascontables where IdEmpresa=@IdEmpresa and left(anio,4)=@Anio and codcuentacontable=left(d.codcuenta,2)),
Ejercicio=abs(sum(d.impdebe)-sum(d.imphaber)) from movcontables_d d
left JOIN (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)) p ON p.codcuentacontable=d.codcuenta
left join MOVCONTABLES_C c on c.idmovcontables_c=d.idmovcontables_c
WHERE left(d.CodCuenta,2)= '40' and 
c.mes between @Mesa and @Mesb and c.anio=@Anio 
and c.zona between @Zonaa and @Zonab and c.estado!='4' and d.estado!='4' and d.codpro!='000001'
and c.codUnidadeconomica between @Unidada and @Unidadb 
GROUP BY (d.CodCuenta)
having (sum(d.impdebe)-sum(d.imphaber))>0) t
where left(CodCuenta,4)!= '4017' 
group by Tipo,CodCuenta,Cuenta

order by left(d.codcuenta,2)
/****** Object:  StoredProcedure [dbo].[spp_rep_BalanceGeneralII]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rep_BalanceGeneralII]
@Zonaa 		varchar(6),
@Zonab 		varchar(6),
@Unidada 	char(10),
@Unidadb 	char(10),
@Anio 		char(4),
@Mesa 		char(2),
@Mesb       char(2),
@IdEmpresa int
as

-- spp_rep_BalanceGeneralII '000032','000032','000032','000032','2017','00','12',24

declare @Resultado decimal(18,2), @ResultadoParticipa decimal(18,2),@Resultado8889 decimal(18,6)
--declare @PorRenta decimal(18,4)
declare @Aux decimal(18,4)

declare @Uit decimal(18,2),@PorRenta decimal(18,6)
declare @Regimen as varchar(10)

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpTodos]') AND type in (N'U'))
	BEGIN 
		Drop table tmpTodos
	END

--selecciona solo los que estan en parametros y pone en estado 0
UPDATE tbl_MaestroEstadosIntegrales SET ESTADO=0 WHERE CTA NOT like (Select '9['+replace(replace(valor,'9',''),',','')+']%'
										from dbo.parametros Where IdEmpresa = @idempresa and Estado =1 and clave='CuentasGastoOperativo'
									   ) 
										AND ctagral='91'

--set @resultado= (select Ejercicio=sum(importe) 
--from vEstadosIntegrales(@Zonaa,@Zonab,@Unidada,@Unidadb,@Anio,@Mesa, @Mesb,@idempresa,'GANANYPERD')
--having sum(importe)!=0)
--
--
--set @Resultado8889= (select sum(d.imphaber-d.impdebe) from movcontables_d d
--							left JOIN PLANCUENTASCONTABLES p ON p.codcuentacontable=d.codcuenta
--							left join MOVCONTABLES_C c on c.idmovcontables_c=d.idmovcontables_c
--					WHERE left(d.CodCuenta,2) = '89' and d.codmgc='11' and
--							c.mes between @Mesa and @Mesb and c.anio=@Anio AND p.idempresa=@IdEmpresa
--							and c.zona between @Zonaa and @Zonab and c.estado!='4' and d.estado!='4' and d.codpro!='000001'
--							and c.codUnidadeconomica between @Unidada and @Unidadb
--					group by codcuenta
--					)
--
--set @ResultadoParticipa= (select importe *-1
--from vEstadosIntegrales(@Zonaa,@Zonab,@Unidada,@Unidadb,@Anio,@Mesa, @Mesb,@idempresa,'GANANYPERD')
-- where total='' and codcuenta='87') select * from tmptodos

 select * into TmpTodos from vEstadosIntegrales(@zonaa,@zonab,@unidada,@unidadb,@anio,@mesa,@mesb,@idempresa,'GANANYPERD')

delete from tmptodos where orden>15
select @Resultado=sum(importe) from tmptodos where importe <>0

select @Uit=convert(numeric(18,2),valor) from parametros where clave='UIT' and idempresa=@idempresa
select @Regimen=Regimen,@PorRenta=PorRenta  from empresa where idempresa=@idempresa

if @Resultado>(@Uit*15) and @Regimen='MYPE TRI'
begin
	insert into tmptodos
	select 16,'IMPUESTO A LA RENTA','IMPUESTO A LA RENTA 10% 15*UIT','',@Uit*15*0.10*-1,@PorRenta union all
	select 17,'IMPUESTO A LA RENTA','IMPUESTO A LA RENTA '+convert(varchar(10),@PorRenta)+'%','',(@Resultado-(@Uit*15))*(@PorRenta/100)*-1,@PorRenta union all
	select 18,'SUPERAVIT(DEFICIT) DEL EJERCI','SUPERAVIT (DEFICIT) DEL EJERCICIO','',@Resultado-(@Uit*15*0.10)-(@Resultado-(@Uit*15))*(@PorRenta/100),@PorRenta
end
Else
begin
	If @resultado>0
	begin 
	insert into tmptodos
	select 16,'IMPUESTO A LA RENTA','IMPUESTO A LA RENTA '+convert(varchar(10),10)+'%','',@Resultado*(0.10)*-1,@PorRenta union all
	select 18,'SUPERAVIT(DEFICIT) DEL EJERCI','SUPERAVIT (DEFICIT) DEL EJERCICIO','',@Resultado-(@Resultado*(0.10)),@PorRenta
	end
	Else
	begin 
	insert into tmptodos
	select 16,'IMPUESTO A LA RENTA','IMPUESTO A LA RENTA '+convert(varchar(10),@PorRenta)+'%','',@Resultado*(@PorRenta/100)*-1,@PorRenta union all
	select 18,'SUPERAVIT(DEFICIT) DEL EJERCI','SUPERAVIT (DEFICIT) DEL EJERCICIO','',@Resultado-(@Resultado*(@PorRenta/100)),@PorRenta
	end
end

if @resultado>0
	begin
		select @resultado= sum(importe) from tmpTodos where importe!=0 and orden<=16 --17
	End
Else
	Begin
		select @resultado= sum(importe) from tmpTodos where importe!=0 and orden<16 --17
	end
--select @resultado= sum(importe) from tmpTodos where importe!=0 and orden<18 --17

select @aux= sum(importe) from tmpTodos where importe!=0 and orden<16--15

set @Resultado8889= (select sum(d.imphaber-d.impdebe) from movcontables_d d
							left JOIN (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and left(codcuentacontable,2)='89') p ON p.codcuentacontable=d.codcuenta
							left join MOVCONTABLES_C c on c.idmovcontables_c=d.idmovcontables_c
					WHERE left(d.CodCuenta,2) = '89' and d.codmgc='11' and
							c.mes between @Mesa and @Mesb and c.anio=@Anio 
							and c.zona between @Zonaa and @Zonab and c.estado!='4' and d.estado!='4' and d.codpro!='000001'
							and c.codUnidadeconomica between @Unidada and @Unidadb
					group by codcuenta
					)

select @ResultadoParticipa=sum(importe) *1 from tmpTodos where total='' and codcuenta='87' group by codcuenta

--selecciona solo los que estan en parametros y pone en estado normal
UPDATE tbl_MaestroEstadosIntegrales SET ESTADO=1 WHERE CTA NOT like (Select '9['+replace(replace(valor,'9',''),',','')+']%'
										from dbo.parametros Where IdEmpresa = @idempresa and Estado =1 and clave='CuentasGastoOperativo'
									   ) 
										AND ctagral='91'

--set @ResultadoParticipa= (select importe *-1
--from vEstadoGananciasPerdidas(@Zonaa,@Zonab,@Unidada,@Unidadb,@Anio,@Mesa, @Mesb,@idempresa) where total='' and codcuenta='87')

--if @Resultado>0
--begin
--	set @Aux=@Resultado
--	set @PorRenta=(select convert(decimal(10,4),convert(decimal(10,4),porRenta)/100) from empresa where idEmpresa=@IdEmpresa)
--	set @Resultado=(@Resultado-@Resultado*@PorRenta)
--end
--

select Tipo,codCuenta,cuenta=max(Cuenta),Ejercicio=sum(ejercicio),ncodCuenta  from (

Select 'PASIVO CORRIENTE' as Tipo,'40' as CodCuenta,cuenta='TRIBUTOS Y APORTES AL SISTEMA PRIVADO DE PENSIONES', sum(ejercicio) ejercicio,'40' nCodCuenta
From (
	select 'PASIVO CORRIENTE' as Tipo,'40' as CodCuenta,
	cuenta='TRIBUTOS Y APORTES AL SISTEMA PRIVADO DE PENSIONES',@Aux-@Resultado as Ejercicio, '40' as nCodCuenta
	union all 
	--agrupando la 4017
	select Tipo,left(CodCuenta,2) CodCuenta,Cuenta,sum(Ejercicio)*-1 Ejercicio, '40' as nCodCuenta from(
	select 'PASIVO CORRIENTE' as Tipo,Codcuenta=left(d.codcuenta,4),cuenta= (select descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and 
	left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and 
	left(codcuentacontable,2) between '40' and '40' and codcuentacontable=left(d.codcuenta,2) ), --(select descripcion from p where codcuentacontable=left(d.codcuenta,2)), --(select distinct Descripcion from Plancuentascontables where codcuentacontable=left(d.codcuenta,2) and Idempresa=@IdEmpresa),
	Ejercicio=abs(sum(d.impdebe)-sum(d.imphaber)) from movcontables_d d
	left JOIN (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and left(codcuentacontable,2)='40') p ON p.codcuentacontable=d.codcuenta
	left join MOVCONTABLES_C c on c.idmovcontables_c=d.idmovcontables_c
	WHERE left(d.CodCuenta,4)= '4017' and 
	c.mes between @Mesa and @Mesb and c.anio=@Anio 
	and c.zona between @Zonaa and @Zonab and c.estado!='4' and d.estado!='4' and d.codpro!='000001'
	and c.codUnidadeconomica between @Unidada and @Unidadb 
	GROUP BY (d.CodCuenta)
	having (sum(d.impdebe)-sum(d.imphaber))>0) t
	group by Tipo,CodCuenta,Cuenta
) aa
group by codcuenta
--where @Resultado*@PorRenta!=0
union

select Tipo,CodCuenta,Cuenta,Ejercicio=sum(Ejercicio),ncodCuenta=codCuenta from(
select 'PASIVO CORRIENTE' as Tipo,Codcuenta=left(d.codcuenta,2),cuenta= (select descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and 
left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and 
left(codcuentacontable,2) between '40' and '40' and codcuentacontable=left(d.codcuenta,2) ), --(select descripcion from p where codcuentacontable=left(d.codcuenta,2)), --(select distinct Descripcion from Plancuentascontables where codcuentacontable=left(d.codcuenta,2) and Idempresa=@IdEmpresa),
Ejercicio=abs(sum(d.impdebe)-sum(d.imphaber)), ncodCuenta= left(d.codcuenta,2) from movcontables_d d
left JOIN (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and left(codcuentacontable,2)='40') p ON p.codcuentacontable=d.codcuenta
left join MOVCONTABLES_C c on c.idmovcontables_c=d.idmovcontables_c
WHERE left(d.CodCuenta,2)= '40' and
c.mes between @Mesa and @Mesb and c.anio=@Anio 
and c.zona between @Zonaa and @Zonab and c.estado!='4' and d.estado!='4' and d.codpro!='000001'
and c.codUnidadeconomica between @Unidada and @Unidadb 
GROUP BY (d.CodCuenta)
having (sum(d.impdebe)-sum(d.imphaber))<0) t
group by Tipo,CodCuenta,Cuenta

union 

select 'PASIVO CORRIENTE' as Tipo,Codcuenta=left(d.codcuenta,2),cuenta= (select descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and 
left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and 
left(codcuentacontable,2) between '41' and '49' and codcuentacontable=left(d.codcuenta,2) ), --(select descripcion from p where codcuentacontable=left(d.codcuenta,2)), --(select distinct Descripcion from Plancuentascontables where codcuentacontable=left(d.codcuenta,2) and Idempresa=@IdEmpresa),
Ejercicio=(Case when sum(d.impdebe)-sum(d.imphaber)>0 then (sum(d.impdebe)-sum(d.imphaber))*-1 else abs(sum(d.impdebe)-sum(d.imphaber)) end ), nCodcuenta=left(d.codcuenta,2) from movcontables_d d
left JOIN (select codcuentacontable,descripcion,tipocuenta from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and left(codcuentacontable,2) between '41' and '49') p ON p.codcuentacontable=d.codcuenta
left join MOVCONTABLES_C c on c.idmovcontables_c=d.idmovcontables_c
WHERE left(d.CodCuenta,2)between '41' and '49' and
c.mes between @Mesa and @Mesb and c.anio=@Anio 
and p.tipocuenta='P'
and c.zona between @Zonaa and @Zonab and c.estado!='4' and d.estado!='4' and d.codpro!='000001'
and c.codUnidadeconomica between @Unidada and @Unidadb 
GROUP BY left(d.CodCuenta,2)
having (sum(d.impdebe)-sum(d.imphaber))!=0
union all 
select 'PASIVO CORRIENTE' as Tipo,CodCuenta='41',cuenta='REMUNERACIONS Y PARTICIPACIONES POR PAGAR',Ejercicio=abs(@ResultadoParticipa),nCodCuenta='41'
where @ResultadoParticipa!=0

--order by left(d.codcuenta,2)
union 
select 'PASIVO NO CORRIENTE' as Tipo,Codcuenta=left(d.codcuenta,2),cuenta= (select descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and 
left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and 
left(codcuentacontable,2) between '45' and '49' and codcuentacontable=left(d.codcuenta,2) ), --(select descripcion from p where codcuentacontable=left(d.codcuenta,2)), --(select distinct Descripcion from Plancuentascontables where codcuentacontable=left(d.codcuenta,2) and Idempresa=@IdEmpresa),
Ejercicio=(case when (sum(d.impdebe)-sum(d.imphaber))<0 then abs(sum(d.impdebe)-sum(d.imphaber)) else (sum(d.impdebe)-sum(d.imphaber))*-1 end), 
nCodcuenta=left(d.codcuenta,2) from movcontables_d d
left JOIN (select codcuentacontable,descripcion,tipocuenta from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and left(codcuentacontable,2) between '45' and '49') p ON p.codcuentacontable=d.codcuenta
left join MOVCONTABLES_C c on c.idmovcontables_c=d.idmovcontables_c
WHERE --left(d.CodCuenta,2)IN('48','49') and
left(d.CodCuenta,2)between '45' and '49'
and p.tipocuenta='C'
and c.mes between @Mesa and @Mesb and c.anio=@Anio 
and c.zona between @Zonaa and @Zonab and c.estado!='4' and d.estado!='4' and d.codpro!='000001'
and c.codUnidadeconomica between @Unidada and @Unidadb
GROUP BY left(d.CodCuenta,2)
having (sum(d.impdebe)-sum(d.imphaber))!=0
--order by left(d.codcuenta,2)
union 
select 'PATRIMONIO' as Tipo,Codcuenta=left(d.codcuenta,2),cuenta= (select descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and 
left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and 
left(codcuentacontable,2) between '50' and '58' and codcuentacontable=left(d.codcuenta,2) ), --(select descripcion from p where codcuentacontable=left(d.codcuenta,2)), --(select distinct Descripcion from Plancuentascontables where codcuentacontable=left(d.codcuenta,2) and Idempresa=@IdEmpresa),
	Ejercicio=abs(sum(d.impdebe)-sum(d.imphaber)), nCodcuenta=left(d.codcuenta,2) 
from movcontables_d d
left JOIN (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and left(codcuentacontable,2) between '50' and '58') p ON p.codcuentacontable=d.codcuenta
left join MOVCONTABLES_C c on c.idmovcontables_c=d.idmovcontables_c
WHERE left(d.CodCuenta,2)between '50' and '58'  and
c.mes between @Mesa and @Mesb and c.anio=@Anio 
and c.zona between @Zonaa and @Zonab and c.estado!='4' and d.estado!='4' and d.codpro!='000001'
and c.codUnidadeconomica between @Unidada and @Unidadb
GROUP BY left(d.CodCuenta,2)
having (sum(d.impdebe)-sum(d.imphaber))!=0
union all
select 'PATRIMONIO' as Tipo,Codcuenta=left(d.codcuenta,2),cuenta= (select descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and 
left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and 
left(codcuentacontable,2) between '50' and '59' and codcuentacontable=left(d.codcuenta,2) ), --(select descripcion from p where codcuentacontable=left(d.codcuenta,2)), --(select distinct Descripcion from Plancuentascontables where codcuentacontable=left(d.codcuenta,2) and Idempresa=@IdEmpresa),
Ejercicio=case when sum(d.impdebe)>sum(d.imphaber) then (sum(d.impdebe)-sum(d.imphaber)) *-1 else (sum(d.imphaber)-sum(d.impdebe)) end,
nCodcuenta='59' 
from movcontables_d d
left JOIN (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and left(codcuentacontable,2)='59') p ON p.codcuentacontable=d.codcuenta
left join MOVCONTABLES_C c on c.idmovcontables_c=d.idmovcontables_c
WHERE left(d.CodCuenta,2)between '59' and '59'  and
c.mes between @Mesa and @Mesb and c.anio=@Anio 
and c.zona between @Zonaa and @Zonab and c.estado!='4' and d.estado!='4' and d.codpro!='000001'
and c.codUnidadeconomica between @Unidada and @Unidadb
GROUP BY left(d.CodCuenta,2)
having (sum(d.impdebe)-sum(d.imphaber))!=0
union all

select 'PATRIMONIO' as Tipo,CodCuenta='59',cuenta='RESULTADO DE LA OPERACIÓN',Ejercicio=@Resultado+ isnull(@Resultado8889,0),nCodCuenta='60'
where @Resultado!=0
) T where ejercicio<>0
group by tipo,codcuenta,ncodcuenta
order by tipo,codcuenta,ncodcuenta
/****** Object:  StoredProcedure [dbo].[spp_rep_ChequeCobrarPagar]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_rep_ChequeCobrarPagar]
@MesA char(2),
@MesB char(2),
@Anio char(4),
@ZonaA char(6),
@ZonaB char(6),
@UnidadA char(10),
@UnidadB char(10),
@Banco char(10),
@Moneda VARchar(25),
@codmgc char(2),
@IdEmpresa int
as
SELECT 	CUENTA1=Codcuenta , 
       	d.TipoMov, d.codMGC,  
       	impDEBE=(cASe when @Moneda = '01' then  d.Impdebe else d.ImpDebeDolar end ), 
       	impHABER=(cASe when @Moneda = '01' then  d.Imphaber else d.ImpHaberDolar end) ,
	importe=(cASe when tipomov='D' THEN (CASE WHEN @Moneda='01' then d.impdebe else d.impdebedolar end) ELSE
		(CASE WHEN @Moneda='01' then d.imphaber*-1 else d.imphaberdolar *-1 end) end),
       	c.NroDoc,
	c.FechCo,
	c.Zona, 
	c.CodUnidadeconomica, 
dr=(select DISTINCT rtrim(Descripcion)
	from tipodocumento where codigOdocumento=d.codigodocumentoreferencia )+' '+d.NRODOCReFERENCIA,
df=(select DISTINCT rtrim(Descripcion)
	from tipodocumento where codigOdocumento=d.codigodocumentofuente)+' '+d.NRODOCReFERENCIA,
PROVEEDOR=isnull((SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=2 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=2 and razonsocial!='' then razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO and Estado=1),''), 
	d.glosa,
       FechaDocReferencia
    
FROM  movcontables_d d 
	Inner join movcontables_c c ON c.idmovcontables_c=d.idmovcontables_c
	inner join zona z on z.codzona=c.zona
       WHERE c.anio=@Anio 
             AND c.mes between @MesA and @MesB
             AND d.codcuenta in(select ctacontable from banco where ctacontable like rtrim(@Banco)+'%')
             AND c.zona   BETWEEN @ZonaA AND @ZonaB 
             AND c.codunidadeconomica BETWEEN @UnidadA AND @UnidadB
             AND d.Estado!='4' and z.idempresa=@IdEmpresa  and d.codmgc=@codmgc and d.codigodocumentoreferencia='20'
       ORDER BY d.codcuenta,c.fechco
/****** Object:  StoredProcedure [dbo].[spp_rep_CuentaImport]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE Procedure [dbo].[spp_rep_CuentaImport]
@zonaA char(6),
@zonaB char(6),
@UnidadA char(10),
@UnidadB char(10),
--@anio char(4),
@fechaA varchar(12),
@fechaB varchar(12),
@cuentaA varchar(10),
@cuentaB varchar(10),
@IdEmpresa int
as	
select fechcontable=c.fechco,d.codcuenta,p.descripcion,importe=case when d.impdebe>0 then d.impdebe else d.imphaber*(-1) end from movcontables_d d
	inner join movcontables_c c on d.idmovcontables_c=c.idmovcontables_c
	inner join (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When right(rtrim(@fechaA),4)<'2020' then '2009' else right(rtrim(@fechaA),4) end)) p on p.codcuentacontable=d.codcuenta
	inner join tipodocumento t  on t.codigodocumento=d.codigodocumentoreferencia
	WHERE c.estado !='4' and d.estado !='4' and d.codpro!='000001'       
						 and d.FechaDocReferencia between @fechaA and @fechaB
--						 AND c.anio = @anio
						 AND c.zona BETWEEN @zonaA AND @ZonaB
						 and c.codunidadeconomica between @UnidadA and @UnidadB
						 and d.codcuenta between @cuentaA and @cuentaB
	order by c.fechco
/****** Object:  StoredProcedure [dbo].[spp_rep_Cuentas_por_cobrarPagar]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_rep_Cuentas_por_cobrarPagar]
@ZonaA varchar(6),
@ZonaB varchar(6),
@UnidadA varchar(10),
@UnidadB varchar(10),
@MesA char(2),
@MesB char(2),
@Anio char(4),
@idempresa int,
@IdTipoCLienProveeA int,
@IdTipoCLienProveeB int,
@cuentaA varchar(10),
@cuentaB varchar(10),
@rucc varchar(11),
@tipo varchar(6)
as

--exec "spp_rep_Cuentas_por_cobrarPagar";1 '000043', '000043', '000043    ', '000043    ', '01', '12', '2019', 35, 1, 6, '4212002', '4212002', NULL, 'PAGAR'
if @tipo='COBRAR'
BEGIN
		if @rucc is null
		BEGIN
		select cuenta,max(nrodoc) nrodoc,Zona,ruc= MAX(ruc), proveedor,fechadocreferencia= MIN(fechadocreferencia),
			fechavencimiento= MIN(fechavencimiento), dr= (case when len(rtrim(newdr))<=2 then max(dr)+'*' else newdr end),
			saldo=sum(saldo), saldoDolar=sum(saldodolar),tipoCambio=max(tipoCambio) 
		from (
			SELECT CUENTA=max(d.codcuenta),NRODOC=max(C.NRODOC),c.zona,ruc= d.codpro,
				PROVEEDOR=(SELECT DISTINCT case when IdTipoClienteProveedor IN (1,2,4,6) and razonsocial!='' then razonsocial 
								   --when IdTipoCLienteProveedor=2 and razonsocial!='' then razonsocial 
								   --when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
								   --when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial 
								   when IdTipoClienteProveedor IN (1,2,4,6) and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
								   --when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
								   --when IdTipoCLienteProveedor=2 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
								   --when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
								   end
							FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),
				FECHADOCREFERENCIA=max(D.FECHADOCREFERENCIA),FECHAVENCIMIENTO=max(D.FECHAVENCIMIENTO),
				dr =(select DISTINCT rtrim(Descripcion) from tipodocumento where codigOdocumento=d.codigodocumentoreferencia )+' '+ D.nrodocreferencia,  
				newdr=(case when rtrim(d.codigodocumentoreferencia)='07' then (select DISTINCT rtrim(Descripcion)
						from tipodocumento where codigOdocumento=d.tipo_refcomprobmodi ) +' '+rtrim(d.serie_refcomprobmodi)+'-'+ d.nro_refcomprobmodi else 
							(select DISTINCT rtrim(Descripcion)
								from tipodocumento where codigOdocumento=d.codigodocumentoreferencia )+' '+d.NRODOCReFERENCIA end) , 
				Saldo= (case when left(d.codcuenta,2)between '10' and '40' then sum(d.impdebe) - sum(d.imphaber) end),
				SaldoDolar= (case when left(d.codcuenta,2)between '10'  and '59' then sum(d.impdebeDolar) - sum(d.imphaberDolar) end),
				tipoCambio=max(tipoCambio)
			FROM MOVCONTABLES_D D
				inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
				inner join ZONA Z ON C.ZONA=Z.CODZONA
				inner JOIN TBL_MSTO_CLIENTEPROVEEDOR TBL ON TBL.RUC=D.CODPRO
				--INNER JOIN PlanCuentasContables P ON P.CodCuentaContable = d.CodCuenta 
			WHERE C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB
				  AND C.ANIO=@Anio and d.codcuenta between @cuentaA and @cuentaB
				  AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB --AND p.IDEMPRESA=@idempresa
				  And D.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB 
				  And Z.IDEMPRESA=@idempresa 
				  and D.ESTADO!='4' and C.ESTADO!='4' and d.codpro!='000001'
				  AND Z.Estado= 1 --AND p.tipocuenta='A'
				  AND TBL.IDTIPOCLIENTEPROVEEDOR BETWEEN @IdTipoCLienProveeA AND @IdTipoCLienProveeB AND TBL.Estado=1 
				  and D.CODPRO IN (SELECT DD.CODPRO FROM MOVCONTABLES_D DD
													INNER JOIN MOVCONTABLES_C CC ON CC.IDMOVCONTABLES_C=DD.IDMOVCONTABLES_C
													inner join ZONA Z ON CC.ZONA=Z.CODZONA
													--INNER JOIN PlanCuentasContables P ON P.CodCuentaContable = d.CodCuenta 
													WHERE CC.ZONA BETWEEN @ZonaA AND @ZonaB AND CC.MES BETWEEN @MesA AND @MesB 
														AND CC.ANIO=@Anio and dd.codcuenta between @cuentaA and @cuentaB
														AND CC.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB
														And DD.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB 
														And Z.IDEMPRESA=@idempresa 
														and DD.ESTADO!='4' AND CC.ESTADO!='4' 
														AND Z.Estado= 1 --AND p.tipocuenta='A' AND p.IDEMPRESA=@idempresa 
													group by DD.codpro
													having sum(DD.impdebe)!=sum(DD.imphaber) --and sum(DD.impdebe)>0
									) 
			GROUP BY d.NroDocReferencia, c.zona, d.codpro,tbl.idtipoclienteproveedor,D.CodigoDocumentoReferencia,d.codcuenta, --d.fechadocreferencia
				d.tipo_refcomprobmodi,d.serie_refcomprobmodi,d.nro_refcomprobmodi
			having  (left(d.codcuenta,2)between '10' and '40') and (sum(D.impdebe)-sum(D.imphaber))!=0 
			--order by codcuenta,d.codpro,d.nrodocreferencia
		) resumen
		group by cuenta,Zona,proveedor,newdr
		having SUM(saldo)<>0
		order by cuenta,proveedor,newdr
		END
END
ELSE
	IF @tipo='PAGAR'
	BEGIN
		if @rucc is null
		BEGIN
		select cuenta, max(nrodoc) nrodoc, zona,ruc=MAX(ruc), proveedor, fechadocreferencia=min(fechadocreferencia), 
			fechavencimiento=min(fechavencimiento), dr=(Case when len(rtrim(ltrim(newdr)))<4 then '*'+max(dr) else max(identif)+newdr end) +
			rtrim((Case when max(identif)<'*' and max(dr)=newdr then ' ' else rtrim(max(dr)) end)), 
			saldo=sum(saldo), saldoDolar=sum(saldodolar),tipoCambio=max(tipoCambio) 
		From (
			select cuenta, nrodoc, zona, ruc, proveedor, fechadocreferencia, fechavencimiento, dr, identif, 
					newdr = (case when len(rtrim(ltrim(newdr)))<4 then dr else newdr end), saldo,SaldoDolar,tipoCambio --, codpro
			From (
				SELECT CUENTA=max(d.codcuenta),NRODOC=max(C.NRODOC),c.zona,ruc=d.codpro,
					PROVEEDOR=(SELECT DISTINCT case when IdTipoClienteProveedor IN (1,2,4,6) and razonsocial!='' then razonsocial 
									   --when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
									   --when IdTipoCLienteProveedor=2 and razonsocial!='' then razonsocial
									   when IdTipoClienteProveedor IN (1,2,4,6) and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
									   --when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
									   --when IdTipoCLienteProveedor=2 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
									    end
							FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),
				FECHADOCREFERENCIA=max(D.FECHADOCREFERENCIA),FECHAVENCIMIENTO=max(D.FECHAVENCIMIENTO),
				dr=(select DISTINCT rtrim(Descripcion) from tipodocumento where codigOdocumento=d.codigodocumentoreferencia )+' '+d.NRODOCReFERENCIA,
				identif= (case when rtrim(d.codigodocumentoreferencia)='07' then '*' else '' end),
				newdr=(case when rtrim(d.codigodocumentoreferencia)='07' then (select DISTINCT rtrim(Descripcion)
						from tipodocumento where codigOdocumento=d.tipo_refcomprobmodi ) +' '+rtrim(d.serie_refcomprobmodi)+'-'+ d.nro_refcomprobmodi else 
							(select DISTINCT rtrim(Descripcion)
								from tipodocumento where codigOdocumento=d.codigodocumentoreferencia )+' '+d.NRODOCReFERENCIA end) , 
				Saldo= (case when left(d.codcuenta,2)between '40'  and '59' then sum(d.impdebe) - sum(d.imphaber) end),
				SaldoDolar= (case when left(d.codcuenta,2)between '40'  and '59' then sum(d.impdebeDolar) - sum(d.imphaberDolar) end),
				tipoCambio=max(tipoCambio)
			FROM MOVCONTABLES_D D
				inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
				inner join ZONA Z ON C.ZONA=Z.CODZONA
				inner JOIN TBL_MSTO_CLIENTEPROVEEDOR TBL ON TBL.RUC=D.CODPRO
				--INNER JOIN PlanCuentasContables P ON P.CodCuentaContable = d.CodCuenta 
			WHERE C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB
				  AND C.ANIO=@Anio and d.codcuenta between @cuentaA and @cuentaB
				  AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB --AND p.IDEMPRESA=@idempresa
				  And D.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB 
				  And Z.IDEMPRESA=@idempresa 
				   and D.ESTADO!='4' and C.ESTADO!='4' and d.codpro!='000001'
				   AND Z.Estado= 1 --AND p.tipocuenta='P'
				   AND TBL.IDTIPOCLIENTEPROVEEDOR BETWEEN @IdTipoCLienProveeA AND @IdTipoCLienProveeB AND TBL.Estado=1
				   and D.CODPRO IN (SELECT DD.CODPRO FROM MOVCONTABLES_D DD
													INNER JOIN MOVCONTABLES_C CC ON CC.IDMOVCONTABLES_C=DD.IDMOVCONTABLES_C
													inner join ZONA Z ON CC.ZONA=Z.CODZONA
													--INNER JOIN PlanCuentasContables P ON P.CodCuentaContable = d.CodCuenta 
													WHERE CC.ZONA BETWEEN @ZonaA AND @ZonaB AND CC.MES BETWEEN @MesA AND @MesB 
														  AND CC.ANIO=@Anio and dd.codcuenta between @cuentaA and @cuentaB
														  AND CC.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB
														  And DD.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB 
														  And Z.IDEMPRESA=@idempresa 
														  and DD.ESTADO!='4' AND CC.ESTADO!='4'
														  AND Z.Estado= 1 --AND p.tipocuenta='P' AND p.IDEMPRESA=@idempresa 
													group by DD.codpro
													having sum(DD.impdebe)!=sum(DD.imphaber) --and sum(DD.impdebe)<0
									) 
--				and left(d.glosa,10) not in ('AJUSTE POR')
			GROUP by d.nrodocreferencia,c.zona,d.codpro,tbl.idtipoclienteproveedor,D.CodigoDocumentoReferencia,d.codcuenta, --D.FechaDocReferencia,D.FechaVencimiento,
				d.tipo_refcomprobmodi,d.serie_refcomprobmodi,d.nro_refcomprobmodi
			having  (left(d.codcuenta,2)between '40' and '59') and (sum(D.impdebe)-sum(D.imphaber))!=0 
			--		order by d.codcuenta,d.codpro,d.nrodocreferencia
			)todos
			--		order by cuenta,codpro,dr, newdr
		) newtodos
		group by cuenta, zona, proveedor, newdr 
		--group by cuenta, nrodoc, zona, codpro,proveedor, newdr 
		having sum(saldo)<>0
		order by cuenta,proveedor,fechadocreferencia,newdr 
		END
	END
/****** Object:  StoredProcedure [dbo].[Spp_Rep_diarioPrincipal]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[Spp_Rep_diarioPrincipal]
	-- Add the parameters for the stored procedure here
@aZona 	varCHAR( 6 ),
@bZona 	varCHAR( 6 ),
@aCodUnidadEconomica  CHAR(10),
@bCodUnidadEconomica  CHAR(10),
@lcAnio  CHAR(4),
@lcMes  CHAR(2),
@aCodMGC  VARCHAR(1000),
@lnDigitos	INT

AS
BEGIN

	SET NOCOUNT ON;
--set @aCodUnidadEconomica=ltrim(rtrim(@aCodUnidadEconomica))+replicate('0',10-len(ltrim(rtrim(@aCodUnidadEconomica))))
--set @bCodUnidadEconomica=ltrim(rtrim(@bCodUnidadEconomica))+replicate('0',10-len(ltrim(rtrim(@bCodUnidadEconomica))))

declare @IdEmpresa as int

select @idEmpresa = idempresa from zona where codzona = @aZona group by idempresa

SELECT     TOP (100) PERCENT dbo.MovContables_D.NroOperacion, dbo.MovContables_C.FechCo, dbo.MovContables_C.Glosa, '5' AS codigo_libro, 
                      dbo.MovContables_D.Correlativo, dbo.MovContables_D.CodigoDocumentoFuente, dbo.TipoDocumento.DesTipoDocumento, 
                      dbo.MovContables_D.NroDocumentoFuente, LEFT(dbo.MovContables_D.CodCuenta, @lnDigitos) AS Cuenta, 
					  p.Descripcion, 
                      SUM(CASE WHEN MES = rtrim(@lcMes) THEN IMPDEBE ELSE 0 END) AS DEBE, 
					  SUM(CASE WHEN MES = rtrim(@lcMes) THEN IMPHABER ELSE 0 END) AS HABER
FROM         dbo.MovContables_C INNER JOIN
                      dbo.MovContables_D ON dbo.MovContables_C.IdMovContables_C = dbo.MovContables_D.IdMovContables_C INNER JOIN
                      dbo.TipoDocumento ON dbo.MovContables_D.CodigoDocumentoFuente = dbo.TipoDocumento.CodigoDocumento INNER JOIN
                      (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@lcAnio)<'2020' then '2009' else rtrim(@lcAnio) end)) p ON LEFT(dbo.MovContables_D.CodCuenta,@lnDigitos) = p.CodCuentaContable
WHERE     (dbo.MovContables_C.Zona BETWEEN rtrim(@aZona) AND rtrim(@bZona)) AND (dbo.MovContables_C.Mes <= rtrim(@lcMes)) AND 
                      (dbo.MovContables_C.CodUnidadEconomica BETWEEN rtrim(@aCodUnidadEconomica) AND rtrim(@bCodUnidadEconomica)) AND (dbo.MovContables_C.Anio = rtrim(@lcAnio)) AND 
                      (CHARINDEX(rtrim(@aCodMGC), dbo.MovContables_D.CodMGC) > 0)
GROUP BY dbo.MovContables_D.CodMGC, LEFT(dbo.MovContables_D.CodCuenta, @lnDigitos), dbo.MovContables_C.FechCo, dbo.MovContables_D.NroOperacion, 
                      dbo.MovContables_C.Glosa, dbo.MovContables_D.Correlativo, dbo.MovContables_D.CodigoDocumentoFuente, 
                      dbo.MovContables_D.NroDocumentoFuente, dbo.TipoDocumento.DesTipoDocumento,
					  p.Descripcion
ORDER BY dbo.MovContables_D.NroOperacion, dbo.MovContables_D.Correlativo, Cuenta

end

-----------------------------------------
/****** Object:  StoredProcedure [dbo].[spp_rep_EstadoCtaCte]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rep_EstadoCtaCte]
	@codPro varchar(11),@MesInicio varchar(10),@MesFin varchar(10),
@aCodUnidadEconomica varchar(10),
@bCodUnidadEconomica varchar(10)

as
	select a.CodCuenta,Fecha=convert(varchar,FechaDocReferencia,103),a.CodigoDocumentoReferencia,a.NroDocReferencia,a.ImpDebe,a.ImpHaber,Total=case when a.impDebe=0 then -1 * a.impHaber else a.impDebe end from movcontables_d a
	inner join movContables_C b on a.idMovContables_C=b.idMovContables_C 
	where left(a.codCuenta,2) in('12','13','14','15','16','14','42','46','47','48','50') and a.codPro=@CodPro and 
	a.FechaDocReferencia between convert(DATEtime,@MesInicio,103) and convert(DATEtime,@MesFin,103) and
	a.codUnidadEconomica between @aCodUnidadEconomica and @bCodUnidadEconomica and b.estado <>'4' and a.estado<>'4'
	group by a.CodCuenta,a.FechaDocReferencia,a.NroDocReferencia,a.ImpDebe,a.ImpHaber,a.codPro,a.CodigoDocumentoReferencia
	order by a.codPro,a.NroDocReferencia,a.codcuenta
/****** Object:  StoredProcedure [dbo].[spp_rep_EstadoPErdidaGAnancia]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCedure [dbo].[spp_rep_EstadoPErdidaGAnancia]
@mesa char(2),
@mesb char(2),
@anio char(4),
@unidada varchar(10),
@unidadb varchar(10),
@zonaa nchar(6),
@zonab nchar(6),
@idempresa int,
@TipoCuenta char(1)
as
--exec "spp_rep_EstadoPErdidaGAnancia";1 '00', '12', '2017', '000004  ', '000004  ', N'000004', N'000004', 3, 'F'

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpTodos]') AND type in (N'U'))
	BEGIN 
		Drop table tmpTodos
	END

declare @Resultado decimal(18,2), @Uit decimal(18,2),@PorRenta decimal(18,6)
declare @Regimen as varchar(10)

--declare @tipoEmpresa as char(20)
--
--select @tipoEmpresa=te.descripcion from empresa e inner join tbl_tipo_empresa te on e.codigo_tipo_empresa=te.codigo_tipo_empresa where te.estado='1' and idempresa= @idempresa

if @tipocuenta!='F' -- NATURALEZA
begin

UPDATE tbl_MaestroEstadosIntegrales SET ESTADO=0 WHERE CTA NOT like (Select '9['+replace(replace(valor,'9',''),',','')+']%'
										from dbo.parametros Where IdEmpresa = @idempresa and Estado =1 and clave='CuentasGastoOperativo'
									   ) 
										AND ctagral='91'

 select * into tmpTodos from vEstadosIntegrales(@zonaa,@zonab,@unidada,@unidadb,@anio,@mesa,@mesb,@idempresa,'NATURALEZA') where importe<>0

UPDATE tbl_MaestroEstadosIntegrales SET ESTADO=1 WHERE CTA NOT like (Select '9['+replace(replace(valor,'9',''),',','')+']%'
										from dbo.parametros Where IdEmpresa = @idempresa and Estado =1 and clave='CuentasGastoOperativo'
									   ) 
										AND ctagral='91'

delete from tmptodos where orden>17
select @Resultado=sum(importe) from tmptodos
select @Uit=convert(numeric(18,2),valor) from parametros where clave='UIT' and idempresa=@idempresa
select @Regimen=Regimen,@PorRenta=PorRenta  from empresa where idempresa=@idempresa

if @Resultado>(@Uit*15) and @Regimen='MYPE TRI'
begin
	insert into tmptodos
	select 18,'IMPUESTO A LA RENTA','IMPUESTO A LA RENTA 10% 15*UIT','',@Uit*15*0.10*-1,@PorRenta union all
	select 19,'IMPUESTO A LA RENTA','IMPUESTO A LA RENTA '+convert(varchar(10),@PorRenta)+'%','',(@Resultado-(@Uit*15))*(@PorRenta/100)*-1,@PorRenta union all
	select 20,'SUPERAVIT(DEFICIT) DEL EJERCI','SUPERAVIT (DEFICIT) DEL EJERCICIO','',@Resultado-(@Uit*15*0.10)-(@Resultado-(@Uit*15))*(@PorRenta/100),@PorRenta
end
Else
begin
	if @Resultado<0
		begin
		insert into tmptodos
		select 18,'IMPUESTO A LA RENTA','IMPUESTO A LA RENTA '+convert(varchar(10),@PorRenta)+'%','',0.0,@PorRenta union all
		select 19,'SUPERAVIT(DEFICIT) DEL EJERCI','SUPERAVIT (DEFICIT) DEL EJERCICIO','',@Resultado,@PorRenta
		end
	else
		begin
		insert into tmptodos
		select 18,'IMPUESTO A LA RENTA','IMPUESTO A LA RENTA '+convert(varchar(10),@PorRenta)+'%','',@Resultado*(@PorRenta/100)*-1,@PorRenta union all
		select 19,'SUPERAVIT(DEFICIT) DEL EJERCI','SUPERAVIT (DEFICIT) DEL EJERCICIO','',@Resultado-(@Resultado*(@PorRenta/100)),@PorRenta
		end
end

		Select * from tmpTodos order by orden

--		select 'MARGEN COMERCIAL'as total,'VENTAS' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'70'),importe=isnull(abs(sum(impdebe)-sum(imphaber)),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)in ('70') and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @idempresa and Estado =1)
--							--and c.zona between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
--										--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' --and p.tipocuenta =@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		union all
--		select 'MARGEN COMERCIAL'as total,'(-)COMPRAS' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'60'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='60'  and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
--							--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' --and p.tipocuenta =@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		union all
--		SELECT total, Tipo,'61' codcuenta,sum(importe) importe, porrenta 
--		FROM(
--		select 'MARGEN COMERCIAL'as total,'VARIACION DE EXISTENCIAS' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'61'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2) IN ('61','69','71')  and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
--							--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' --and p.tipocuenta =@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		) Variacion GROUP BY total, Tipo,porrenta 
--		union all
--
--		select 'VALOR AGREGADO'as total,'(-)SERVICIOS PRESTADOS POR TERCEROS' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'63'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='63'  and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
--							--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' --and p.tipocuenta =@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		union all
--		select 'EXCEDENTE BRUTO DE EXPLOTACION'as total,'(-)GASTOS DE PERSONAL' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'62'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='62'  and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
--							--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' --and p.tipocuenta =@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		union all
--		select 'EXCEDENTE BRUTO DE EXPLOTACION'as total,'(-)TRIBUTOS' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'64'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='64'  and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
--							--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' --and p.tipocuenta =@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		union all
--		select 'RESULTADO DE EXPLOTACION'as total,'(-)OTROS GASTOS DE GESTION' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'65'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='65'  and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
--							--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' --and p.tipocuenta =@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		union all
--		select 'RESULTADO DE EXPLOTACION'as total,'(-)PERDIDA MED.ACT. NO FINAN.AL VALOR RAZONABLE' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'66'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='66'  and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
--							--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' --and p.tipocuenta =@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		union ALL
--		select 'RESULTADO DE EXPLOTACION'as total,'(-)VALUACION Y DETERIORO DE ACTIVOS Y PROVISIONES' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'68'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='68'  and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
--							--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' --and p.tipocuenta =@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		union ALL
--		select 'RESULTADO DE EXPLOTACION'as total,'PRODUCCION ACTIVO INMOBILIZADO' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'72'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='72'  and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
--							--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' --and p.tipocuenta =@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		union ALL
--		select 'RESULTADO DE EXPLOTACION'as total,'DSCTOS REBAJAS Y BONIF.OBTENIDOS' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'73'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='73'  and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
--							--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' --and p.tipocuenta =@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		union ALL
--		select 'RESULTADO DE EXPLOTACION'as total,'DSCTOS REBAJAS Y BONIF.CONCEDIDOS' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'74'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='74'  and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
--							--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' --and p.tipocuenta =@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		union ALL
--		select 'RESULTADO DE EXPLOTACION'as total,'OTROS INGRESOS DE GESTION' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'75'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='75'  and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
--							--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' --and p.tipocuenta =@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		UNION ALL
--		select 'OTROS INGRESOS OPERATIVOS'as total,'(+)INGRESOS EXCEPCIONALES' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'76'),importe=isnull(abs((sum(impdebe)+sum(imphaber))),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='76' and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
--										--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' and p.tipocuenta =@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		UNION ALL
--		select 'OTROS INGRESOS OPERATIVOS'as total,'(+)INGRESOS FINANCIEROS' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'77'),importe=isnull(abs(sum(impdebe)-sum(imphaber)),0.00)*1,PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='77' and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
--										--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' --and p.tipocuenta =@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		union ALL
--		select 'OTROS INGRESOS OPERATIVOS'as total,'(-)CARGAS EXCEPCIONALES' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'78'),importe=isnull((sum(impdebe)+sum(imphaber)),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='78' and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
--										--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' and p.tipocuenta =@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		union ALL
--		select 'OTROS INGRESOS OPERATIVOS'as total,'(-)CARGAS FINANCIERAS' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'67'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='67' and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
--										--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' and p.tipocuenta =@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
----		UNION ALL
----		SELECT '    ' AS Total, '(+)REPAROS' AS Tipo,'79' AS codcuenta, ISNULL(SUM(impDebe), 0.00) AS importe, 
----					ISNULL(MAX(e.PorRenta), 0.00) AS PorRenta
----		FROM         dbo.tmpReparo AS d INNER JOIN
----							  dbo.PlanCuentasContables AS p ON p.CodCuentaContable = d.CodCuenta INNER JOIN
----							  dbo.Empresa AS e ON e.IdEmpresa = p.IdEmpresa
----		WHERE     (p.IdEmpresa =@idempresa)
----		GROUP BY p.IdEmpresa
----		union ALL
----		select '    ' as total,'(-)PARTICIPACION TRABAJADORES' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'87'),importe=isnull(((sum(impdebe)+sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
----		from movcontables_d d
----		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
----		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
----		inner join empresa e on e.idempresa=p.idempresa
----		where left(d.codcuenta,2)='87' and p.idempresa=@idempresa and c.mes between @mesa and @mesb
----					and c.zona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
----							--between @zonaa  and @zonab 
----					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1)
----										--between @unidada and @unidadb
----					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' and p.tipocuenta =@TipoCuenta
----		group by left(d.codcuenta,2),e.porrenta
end
else
begin -- POR FUNCION
UPDATE tbl_MaestroEstadosIntegrales SET ESTADO=0 WHERE CTA NOT like (Select '9['+replace(replace(valor,'9',''),',','')+']%'
										from dbo.parametros Where IdEmpresa = @idempresa and Estado =1 and clave='CuentasGastoOperativo'
									   ) 
										AND ctagral='91'

 select * into TmpTodos from vEstadosIntegrales(@zonaa,@zonab,@unidada,@unidadb,@anio,@mesa,@mesb,@idempresa,'FUNCION') where importe<>0

UPDATE tbl_MaestroEstadosIntegrales SET ESTADO=1 WHERE CTA NOT like (Select '9['+replace(replace(valor,'9',''),',','')+']%'
										from dbo.parametros Where IdEmpresa = @idempresa and Estado =1 and clave='CuentasGastoOperativo'
									   ) 
										AND ctagral='91'
		
delete from tmptodos where orden>15 --14
select @Resultado=sum(importe) from tmptodos
select @Uit=convert(numeric(18,2),valor) from parametros where clave='UIT' and idempresa=@idempresa
select @Regimen=Regimen,@PorRenta=PorRenta  from empresa where idempresa=@idempresa

if @Resultado>(@Uit*15) and @Regimen='MYPE TRI'
begin
	insert into tmptodos
	select 16,'IMPUESTO A LA RENTA','IMPUESTO A LA RENTA 10% 15*UIT','',@Uit*15*0.10*-1,@PorRenta union all
	select 17,'IMPUESTO A LA RENTA','IMPUESTO A LA RENTA '+convert(varchar(10),@PorRenta)+'%','',(@Resultado-(@Uit*15))*(@PorRenta/100)*-1,@PorRenta union all
	select 18,'SUPERAVIT(DEFICIT) DEL EJERCI','SUPERAVIT (DEFICIT) DEL EJERCICIO','',@Resultado-(@Uit*15*0.10)-(@Resultado-(@Uit*15))*(@PorRenta/100),@PorRenta
end
Else
begin
	if @Resultado<0
		begin
		insert into tmptodos
		select 16,'IMPUESTO A LA RENTA','IMPUESTO A LA RENTA '+convert(varchar(10),@PorRenta)+'%','',0.0,@PorRenta union all
		select 17,'SUPERAVIT(DEFICIT) DEL EJERCI','SUPERAVIT (DEFICIT) DEL EJERCICIO','',@Resultado,@PorRenta
		end
	else
		begin
		insert into tmptodos
		select 16,'IMPUESTO A LA RENTA','IMPUESTO A LA RENTA '+convert(varchar(10),@PorRenta)+'%','',@Resultado*(@PorRenta/100)*-1,@PorRenta union all
		select 17,'SUPERAVIT(DEFICIT) DEL EJERCI','SUPERAVIT (DEFICIT) DEL EJERCICIO','',@Resultado-(@Resultado*(@PorRenta/100)),@PorRenta
		end
end


--		select 'UTILIDAD BRUTA'as total,'VENTAS' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'70'),importe=isnull(abs(sum(impdebe)-sum( imphaber)),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		into TmpTodos
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)in ('70') and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
--										--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
--		group by left(d.codcuenta,2),e.porrenta
--		union all
--		select 'UTILIDAD BRUTA'as total,'COSTO DE '+(Case when @tipoEmpresa= 'SERVICIO' then 'SERVICIO' else 'VENTA' end) as Tipo, --'COSTO DE VENTAS' as Tipo,
--			codcuenta=isnull(max(left(d.codcuenta,2)),'69'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2) in ('69','71')  and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) 
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
--										--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
--		group by left(d.codcuenta,2),e.porrenta
--		UNION ALL
--		select total, tipo,'90' cuenta,sum(importe) as importe, PorRenta from (
--		select 'UTILIDAD BRUTA' as total,'(-)COSTO DE '+(Case when @tipoEmpresa= 'SERVICIO' then 'SERVICIO' else 'VENTA' end) as Tipo, --'(-)COSTO DE VENTA' as Tipo,
--			codcuenta=isnull(max(left(d.codcuenta,2)),'90'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2) like ('90') --('91','92','93') -- seleccionando las cuentas afectas a los gastos operativos
--					and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
--								--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' --and p.tipocuenta ='R' --@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		) agrupa group by total, tipo,PorRenta
--		UNION ALL
--		select total, tipo,'91' cuenta,sum(importe) as importe, PorRenta from (
--		select 'UTILIDAD OPERATIVA' as total,'(-)GASTOS OPERACIONALES' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'91'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2) like (Select '9['+replace(replace(valor,'9',''),',','')+']%'
--										from parametros Where IdEmpresa = @idempresa and Estado =1 and clave='CuentasGastoOperativo'
--									   ) --('91','92','93') -- seleccionando las cuentas afectas a los gastos operativos
--					and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
--								--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' --and p.tipocuenta ='R' --@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		) agrupa group by total, tipo,PorRenta
--		union all
--
--		select 'UTILIDAD OPERATIVA'as total,'(-)GASTOS ADMINISTRATIVOS' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'94'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='94'  and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
--							-- between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
--										--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4'  and c.estado!='4' and d.codpro!='000001'
--		group by left(d.codcuenta,2),e.porrenta
--		union all
--		select 'UTILIDAD OPERATIVA'as total,'(-)GASTOS VENTAS' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'95'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='95'  and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
--										--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
--		group by left(d.codcuenta,2),e.porrenta
--		union all
--
--		select 'OTROS INGRESOS OPERATIVOS'as total,'(-)GASTOS FINANCIEROS' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'97'),importe=isnull(((sum(impdebe)-sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='97' and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) 
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
--										--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
--		group by left(d.codcuenta,2),e.porrenta
--		UNION ALL
--		select 'OTROS INGRESOS OPERATIVOS'as total,'(-)CARGAS EXCEPCIONALES' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'66'),importe=isnull(((sum(impdebe)+sum(imphaber))*-1),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='66' and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) 
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
--										--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' 
--		group by left(d.codcuenta,2),e.porrenta
----		UNION ALL
----		select 'OTROS INGRESOS OPERATIVOS'as total,'(-)CARGAS EXCEPCIONALES' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'65'),importe=isnull((sum(impdebe)+sum(imphaber))*-1,0.00),PorRenta=isnull(max(e.PorRenta),0.00)
----		from movcontables_d d
----		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
----		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
----		inner join empresa e on e.idempresa=p.idempresa
----		where left(p.codcuentacontable,3)='659' and p.descripcion like 'SANCION%' and p.ctadebe=''
----					and p.idempresa=@idempresa and c.mes between @mesa and @mesb
----					and c.zona In (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) 
----							--between @zonaa  and @zonab 
----					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
----										--between @unidada and @unidadb
----					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' --and p.tipocuenta =@TipoCuenta
----		group by left(d.codcuenta,2),e.porrenta
--		UNION ALL
--		select total, tipo,'75' cuenta,sum(importe) as importe, PorRenta from (
--		select 'OTROS INGRESOS OPERATIVOS' as total,'(-)PRODUCCION ACTIVO INMOBILIZADO' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'72'),importe=isnull((sum(imphaber)-sum(impdebe)),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2) in ('72') and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
--								--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' and p.tipocuenta ='R' --@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		) agrupa group by total, tipo,PorRenta
--		UNION ALL
--		select total, tipo,'75' cuenta,sum(importe) as importe, PorRenta from (
--		select 'OTROS INGRESOS OPERATIVOS' as total,'(-)DSCTOS REBAJAS Y BONIF. OBTENIDOS' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'73'),importe=isnull((sum(imphaber)-sum(impdebe)),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2) in ('73') and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
--								--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' and p.tipocuenta ='R' --@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		) agrupa group by total, tipo,PorRenta
--		UNION ALL
--		select total, tipo,'75' cuenta,sum(importe) as importe, PorRenta from (
--		select 'OTROS INGRESOS OPERATIVOS' as total,'(-)DSCTOS REBAJAS Y BONIF. CONCEDIDOS' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'74'),importe=isnull((sum(imphaber)-sum(impdebe)),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2) in ('74') and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
--								--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' and p.tipocuenta ='R' --@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		) agrupa group by total, tipo,PorRenta
--		UNION ALL
--		select total, tipo,'75' cuenta,sum(importe) as importe, PorRenta from (
--		select 'OTROS INGRESOS OPERATIVOS' as total,'(+)INGRESOS EXTRAORDINARIOS' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'75'),importe=isnull(abs(sum(impdebe)-sum(imphaber)),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2) in ('75') and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1)
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
--								--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001' and p.tipocuenta ='R' --@TipoCuenta
--		group by left(d.codcuenta,2),e.porrenta
--		) agrupa group by total, tipo,PorRenta
--		UNION ALL
--		select 'OTROS INGRESOS OPERATIVOS'as total,'(+)INGRESOS EXCEPCIONALES' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'76'),importe=isnull(abs(sum(impdebe)-sum(imphaber)),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2)='76' and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) 
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
--										--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
--		group by left(d.codcuenta,2),e.porrenta
--		UNION ALL
--		select 'OTROS INGRESOS OPERATIVOS'as total,'(+)INGRESOS FINANCIEROS' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'77'),importe=isnull(abs(sum(impdebe)-sum(imphaber)),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
--		from movcontables_d d
--		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join empresa e on e.idempresa=p.idempresa
--		where left(d.codcuenta,2) in ('77') and p.idempresa=@idempresa and c.mes between @mesa and @mesb
--					and c.zona In (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) 
--							--between @zonaa  and @zonab 
--					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
--										--between @unidada and @unidadb
--					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
--		group by left(d.codcuenta,2),e.porrenta
----		UNION ALL
----		SELECT     '    ' AS Total, '(+)REPAROS' AS Tipo,'79' AS codcuenta, 
----					ISNULL(SUM(impDebe), 0.00)*(Case when (select valor from parametros where clave='IncReparo' and idempresa= @idempresa )='True' then 1 else 0 end) AS importe, 
----					ISNULL(MAX(e.PorRenta), 0.00) AS PorRenta
----		FROM         dbo.tmpReparo AS d INNER JOIN
----							  dbo.PlanCuentasContables AS p ON p.CodCuentaContable = d.CodCuenta INNER JOIN
----							  dbo.Empresa AS e ON e.IdEmpresa = p.IdEmpresa
----		WHERE     (p.IdEmpresa =@idempresa)
----		GROUP BY p.IdEmpresa
----		UNION ALL
----		select '    ' as total,'(-)PARTICIPACION TRABAJADORES' as Tipo,codcuenta=isnull(max(left(d.codcuenta,2)),'87'),importe=isnull(sum(imphaber)-(sum(impdebe)),0.00),PorRenta=isnull(max(e.PorRenta),0.00)
----		from movcontables_d d
----		inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
----		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
----		inner join empresa e on e.idempresa=p.idempresa
----		where left(d.codcuenta,2)='87' and p.idempresa=@idempresa and c.mes between @mesa and @mesb
----					and c.zona In (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) 
----							--between @zonaa  and @zonab 
----					and c.codunidadeconomica In (Select codunidadeconomica from Unidad_Economica where codzona in (Select CodZona from Zona Where IdEmpresa = @Idempresa and Estado =1) and Estado=1) 
----										--between @unidada and @unidadb
----					and c.anio=@anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
----		group by left(d.codcuenta,2),e.porrenta
--
----declare @incPar as numeric(5,2)
----set @incPar = (select convert(numeric(5,2),PorParticipaTrab)/100 from empresa where idempresa= @Idempresa)
----
----	if @incPar<>0
----	begin
----		Select * from tmpTodos
----		union all 
----		select '    ' as total,'(-)PARTICIPACION TRABAJADORES' as Tipo,codcuenta='87',
----			importe=sum(importe)*@incPar*-1,
----			PorRenta=(select convert(numeric(5,2),PorRenta)/100 from empresa where idempresa= 5) 
----		from TmpTodos
----	End
----
----	if @incPar=0
----	begin
		Select * from tmpTodos order by orden
----	End

end
/****** Object:  StoredProcedure [dbo].[spp_rep_EstadoSitMEF]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rep_EstadoSitMEF]
@Zonaa 		varchar(6),
@Zonab 		varchar(6),
@Unidada 	char(10),
@Unidadb 	char(10),
@Anio 		char(4),
@Mesa 		char(2),
@Mesb       char(2),
@IdEmpresa int
as
-- spp_rep_EstadoSitMEF '000012','000012','000012','000012','2013','00','04',5
-- solo activos
--declare @Resultado decimal(18,2)
--set @resultado= (select Ejercicio=sum(importe) 
--from vEstadoGananciasPerdidas(@Zonaa,@Zonab,@Unidada,@Unidadb,@Anio,@Mesa, @Mesb,@idempresa)
--having sum(importe)!=0)
--
--if @Resultado>0
--begin
--	declare @PorRenta decimal(10,2)
--	declare @Aux decimal(10,2)
--	set @Aux=@Resultado
--	set @PorRenta=(select convert(decimal(10,2),convert(decimal(10,2),porRenta)/100) from empresa where idEmpresa=@IdEmpresa)
--	set @Resultado=(@Resultado-@Resultado*@PorRenta)
--end
--
--select codigoFlujoEfectivo,descripcion,formula, isnull(saldo,0) saldo from tbl_flujoefectivo fe left outer join 
--(
--select pc.tipomovpccdb codmef, sum(impdebe) impdebe, sum(imphaber) imphaber, sum(impdebe-imphaber) saldo 
--from movcontables_d d inner join movcontables_c c on d.idmovcontables_c=c.idmovcontables_c 
--inner join plancuentascontables pc on d.codcuenta= pc.codcuentacontable
--where pc.tipomovpccdb not in ('-','') and pc.idempresa= @IdEmpresa
--and d.codunidadeconomica between @Unidada and @Unidadb
--and c.estado<>'4' and d.estado<>'4'
--and mes between @Mesa and @Mesb and anio=@Anio and c.codunidadeconomica between @Unidada and @Unidadb and c.zona between @Zonaa and @Zonab
--group by pc.tipomovpccdb
--) mov on fe.codigoflujoefectivo= mov.codmef
--where left(codigoFlujoEfectivo,1) in ('A') and estado='1'




------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpflujo') AND type in (N'U'))
BEGIN 
	drop table tmpflujo
END
-------------------------------------
select pc.tipomovpccdb codmef, sum(impdebe) impdebe, sum(imphaber) imphaber, sum(impdebe-imphaber) saldo 
into tmpFlujo
from movcontables_d d inner join movcontables_c c on d.idmovcontables_c=c.idmovcontables_c 
inner join (select codcuentacontable,descripcion,tipomovpccdb from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and tipomovpccdb not in ('-','')) pc on d.codcuenta= pc.codcuentacontable
where d.codunidadeconomica between @Unidada and @Unidadb
and c.estado<>'4' and d.estado<>'4'
and mes between @Mesa and @Mesb and anio=@Anio 
and c.codunidadeconomica between @Unidada and @Unidadb and c.zona between @Zonaa and @Zonab
group by pc.tipomovpccdb

-- creando cursor para las formulas
declare cursorformula cursor for
select codigoflujoEfectivo,formula,orden from tbl_flujoEfectivo 
where formula <>'' and left(codigoflujoEfectivo,1) in ('A','P') --order by idflujoefectivo desc
-- declarando variables
declare @codigoflujoEfectivo varchar(10),
@formula varchar(50), @orden char(2),@resultado numeric(18,2), @consulta varchar(200)
-- abrimos cursor
open cursorformula
--asignamos valores
fetch next from cursorformula
into @codigoflujoEfectivo,@formula, @orden
--inicia recorrido
while @@fetch_status=0
Begin

set @consulta = 'insert into tmpflujo '+char(13)
set @consulta = @consulta +'select '''+@codigoflujoEfectivo+''' codmef,0,0,isnull(sum(saldo),0.00) from tmpflujo where codmef like '''+@formula+'%'''
print @consulta 
exec(@consulta)
fetch next from cursorformula
into @codigoflujoEfectivo,@formula, @orden
end
-- [FOI]1[13][09] 
-- para este ejemplo suma todas las concidencias de tres registros O119+I119+F130
--comienza con FOI, 2dig. 1, 3dig. 1 ó 3,4dig. 0 ó 9

close cursorformula
deallocate cursorformula

-- creando la consulta
--select codigoFlujoEfectivo,descripcion,formula, isnull(saldo,0) saldo from tbl_flujoefectivo fe left outer join 
--(
select isnull(codmef,'') codmef,descripcion,isnull(impdebe,0) impdebe, isnull(imphaber,0) imphaber, isnull(saldo,0) saldo 
from tbl_flujoEfectivo fe left outer join  
tmpflujo on fe.codigoflujoefectivo=tmpflujo.codmef where left(fe.codigoFlujoEfectivo,1) in ('A') and fe.estado=1
order by fe.codigoflujoefectivo -- fe.orden
--on fe.codigoflujoefectivo= mov.codmef
--) mov on fe.codigoflujoefectivo= mov.codmef
--where left(codigoFlujoEfectivo,1) in ('A') and estado='1'

drop table tmpflujo
/****** Object:  StoredProcedure [dbo].[spp_rep_EstadoSitMEF2]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rep_EstadoSitMEF2]
@Zonaa 		varchar(6),
@Zonab 		varchar(6),
@Unidada 	char(10),
@Unidadb 	char(10),
@Anio 		char(4),
@Mesa 		char(2),
@Mesb       char(2),
@IdEmpresa int
as
-- spp_rep_EstadoSitMEF2 '000012','000012','000012','000012','2013','00','04',5
-- solo pasivos
declare @EstadoResultado decimal(18,2)

	--selecciona solo los que estan en parametros y pone en estado 0
	UPDATE tbl_MaestroEstadosIntegrales SET ESTADO=0 WHERE CTA NOT like (Select '9['+replace(replace(valor,'9',''),',','')+']%'
										from dbo.parametros Where IdEmpresa = @idempresa and Estado =1 and clave='CuentasGastoOperativo'
									   ) 
										AND ctagral='91'

	set @Estadoresultado= (select Ejercicio=sum(importe) 
		from vEstadosIntegrales(@Zonaa,@Zonab,@Unidada,@Unidadb,@Anio,@Mesa, @Mesb,@idempresa,'GANANYPERD')
		having sum(importe)!=0)

	--selecciona solo los que estan en parametros y pone en estado normal
	UPDATE tbl_MaestroEstadosIntegrales SET ESTADO=1 WHERE CTA NOT like (Select '9['+replace(replace(valor,'9',''),',','')+']%'
										from dbo.parametros Where IdEmpresa = @idempresa and Estado =1 and clave='CuentasGastoOperativo'
									   ) 
										AND ctagral='91'

if @EstadoResultado>0
begin
	declare @PorRenta decimal(10,2)
	declare @Aux decimal(10,2)
	set @Aux=@EstadoResultado
	set @PorRenta=(select convert(decimal(10,2),convert(decimal(10,2),porRenta)/100) from empresa where idEmpresa=@IdEmpresa)
	set @EstadoResultado=(@EstadoResultado-@EstadoResultado*@PorRenta)
end

--select codigoFlujoEfectivo,descripcion,formula, isnull(saldo,0) saldo from tbl_flujoefectivo fe left outer join 
--(
--select pc.tipomovpccdb codmef, sum(impdebe) impdebe, sum(imphaber) imphaber, sum(imphaber-impdebe) saldo 
--from movcontables_d d inner join movcontables_c c on d.idmovcontables_c=c.idmovcontables_c 
--inner join plancuentascontables pc on d.codcuenta= pc.codcuentacontable
--where pc.tipomovpccdb not in ('-','') and pc.idempresa= @IdEmpresa
--and d.codunidadeconomica between @Unidada and @Unidadb
--and c.estado<>'4' and d.estado<>'4'
--and mes between @Mesa and @Mesb and anio=@Anio and c.codunidadeconomica between @Unidada and @Unidadb and c.zona between @Zonaa and @Zonab
--group by pc.tipomovpccdb
--union all --agregando utilidad/perdida
--select 'P526' codmef, 0.0 impdebe, 0.0 impHaber, @Resultado saldo 
--where @Resultado!=0
--) mov on fe.codigoflujoefectivo= mov.codmef
--where left(codigoFlujoEfectivo,1) in ('P') and estado='1'

------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpflujo2') AND type in (N'U'))
BEGIN 
	drop table tmpflujo2
END
-------------------------------------
select * into tmpFlujo2 from (
select pc.tipomovpccdb codmef, sum(impdebe) impdebe, sum(imphaber) imphaber, sum(imphaber-impdebe) saldo 
from movcontables_d d inner join movcontables_c c on d.idmovcontables_c=c.idmovcontables_c 
inner join (select codcuentacontable,descripcion,tipomovpccdb from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and tipomovpccdb not in ('-','')) pc on d.codcuenta= pc.codcuentacontable
where d.codunidadeconomica between @Unidada and @Unidadb
and c.estado<>'4' and d.estado<>'4'
and mes between @Mesa and @Mesb and anio=@Anio 
and c.codunidadeconomica between @Unidada and @Unidadb and c.zona between @Zonaa and @Zonab
group by pc.tipomovpccdb
union all --agregando utilidad/perdida
select 'P526' codmef, 0.0 impdebe, 0.0 impHaber, @EstadoResultado saldo 
where @EstadoResultado!=0
) todos

-- creando cursor para las formulas
declare cursorformula2 cursor for
select codigoflujoEfectivo,formula,orden from tbl_flujoEfectivo 
where formula <>'' and left(codigoflujoEfectivo,1) in ('P') --order by idflujoefectivo desc
-- declarando variables
declare @codigoflujoEfectivo varchar(10),
@formula varchar(50), @orden char(2),@resultado numeric(18,2), @consulta varchar(200)
-- abrimos cursor
open cursorformula2
--asignamos valores
fetch next from cursorformula2
into @codigoflujoEfectivo,@formula, @orden
--inicia recorrido
while @@fetch_status=0
Begin

set @consulta = 'insert into tmpflujo2 '+char(13)
set @consulta = @consulta +'select '''+@codigoflujoEfectivo+''' codmef,0,0,isnull(sum(saldo),0.00) from tmpflujo2 where codmef like '''+@formula+'%'''
print @consulta 
exec(@consulta)
fetch next from cursorformula2
into @codigoflujoEfectivo,@formula, @orden
end
-- [FOI]1[13][09] 
-- para este ejemplo suma todas las concidencias de tres registros O119+I119+F130
--comienza con FOI, 2dig. 1, 3dig. 1 ó 3,4dig. 0 ó 9

close cursorformula2
deallocate cursorformula2

-- creando la consulta
select codigoFlujoEfectivo,descripcion,formula, isnull(saldo,0) saldo from tbl_flujoefectivo fe left outer join 
(
select isnull(codmef,'') codmef,isnull(impdebe,0) impdebe, isnull(imphaber,0) imphaber, isnull(saldo,0) saldo 
from 
tmpflujo2 
--union all --agregando utilidad/perdida
--select 'P526' codmef, 0.0 impdebe, 0.0 impHaber, @EstadoResultado saldo 
--where @EstadoResultado!=0
--order by fe.codigoflujoefectivo -- fe.orden
--on fe.codigoflujoefectivo= mov.codmef
) mov on fe.codigoflujoefectivo= mov.codmef
where left(fe.codigoFlujoEfectivo,1) in ('P') and estado='1'

--tbl_flujoEfectivo fe left outer join  
--on fe.codigoflujoefectivo=tmpflujo2.codmef where left(fe.codigoFlujoEfectivo,1) in ('P') and fe.estado=1

drop table tmpflujo2
/****** Object:  StoredProcedure [dbo].[spp_rep_flujoCaja]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rep_flujoCaja]
@ZonaA varchar(6),
@ZonaB varchar(6),
@UnidadA varchar(10),
@UnidadB varchar(10),
@fechaInicio varchar(10),
@idempresa int
as
set dateformat dmy
declare @cont int,@campo varchar(max)
set @cont=1
set @campo=''
while @cont<=6
	begin
		 set @campo=@campo +  
            CASE WHEN LEN(@campo) > 0 THEN  
                ', '  
            ELSE  
                ''  
            END +  
             'isnull(case when fechcontable='''+convert(varchar(10),convert(datetime,@fechaInicio)+@cont,103)+''' then impdebe end,0.00) AS " ' +  
             convert(varchar(10),convert(datetime,@fechaInicio)+@cont,103) + ' "'
	set @cont=@cont+1

	end

    SET @campo = 'SELECT codcuenta,' + @campo  
	set @campo =@campo + ' from movcontables_d  d '
	set @campo =@campo + ' inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
						  inner join (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa='+convert(char(6),@IdEmpresa)+' and left(anio,4)=(case When '+right(@fechainicio,4)+'<''2020'' then ''2009'' else '''+right(@fechainicio,4)+''' end)) p on p.codcuentacontable=d.codcuenta'
	set @campo =@campo + 'where codcuenta!='''' and c.zona between '+@ZonaA+' and '+@ZonaB+'
						  and c.codunidadeconomica between '+@UnidadA+' and '+@UnidadB+''
	set @campo =@campo + 'group by '
	set @campo =@campo+' order by codcuenta'
    EXEC(@campo)
/****** Object:  StoredProcedure [dbo].[spp_Rep_FlujoEfectivo]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Rep_FlujoEfectivo]
@Anio char(4),
@aMes char(2),
@bMes char(2),
@aZona varchar(6),
@bZona varchar(6),
@aCodUnidadEconomica varchar(10),
@bCodUnidadEconomica varchar(10),
@IdEmpresa int,
@Crp as varchar(11),
@Tipo as varchar(10)

AS
--spp_Rep_FlujoEfectivo '2013','01','06','000012','000012','000012','000012',5,'O115','RES'

if @Tipo ='RES' 
Begin
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpflujo') AND type in (N'U'))
BEGIN 
	drop table tmpflujo
END
-------------------------------------
select crp, sum(impdebe) impdebe, sum(imphaber) imphaber, sum(impdebe) - sum(imphaber) flujo
into tmpFlujo 
from vFlujoEfectivo(@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@Anio,@aMes,@bMes) group by crp

-- creando cursor para las formulas
declare cursorformula cursor for
select codigoflujoEfectivo,formula,orden from tbl_flujoEfectivo 
where formula <>'' and left(codigoFlujoEfectivo,1) in ('O','I','F','C')
and codigoorden='FED01' --order by idflujoefectivo desc
-- declarando variables
declare @codigoflujoEfectivo varchar(10),
@formula varchar(50), @orden char(2),@resultado numeric(18,2), @consulta varchar(200)
-- abrimos cursor
open cursorformula
--asignamos valores
fetch next from cursorformula
into @codigoflujoEfectivo,@formula, @orden
--inicia recorrido
while @@fetch_status=0
Begin

set @consulta = 'insert into tmpflujo '+char(13)
set @consulta = @consulta +'select '''+@codigoflujoEfectivo+''' crp,0,0,isnull(sum(flujo),0.00) from tmpflujo where crp like '''+@formula+'%'''
exec(@consulta)
fetch next from cursorformula
into @codigoflujoEfectivo,@formula, @orden
end
-- [FOI]1[13][09] 
-- para este ejemplo suma todas las concidencias de tres registros O119+I119+F130
--comienza con FOI, 2dig. 1, 3dig. 1 ó 3,4dig. 0 ó 9
-- select * from tmpflujo
close cursorformula
deallocate cursorformula

-- creando la consulta
select isnull(crp,'') crp,descripcion,isnull(impdebe,0) impdebe, isnull(imphaber,0) imphaber, isnull(flujo,0) flujo, codigoSbs 
from tbl_flujoEfectivo fe left outer join  
tmpflujo on fe.codigoflujoefectivo=tmpflujo.crp 
where left(fe.codigoFlujoEfectivo,1) in ('O','I','F','C')
and fe.codigoorden='FED01'
order by fe.orden,fe.codigoflujoefectivo

drop table tmpflujo
end 

if @Tipo ='DET' 
Begin
	select nrodocumento,codpro, 
	codigoDocumentoReferencia,nroDocReferencia,FechaDocReferencia,codcuenta,glosa,impdebe, imphaber, flujo
	from vFlujoEfectivo(@aZona,@bZona,@aCodUnidadEconomica,@bCodUnidadEconomica,@Anio,@aMes,@bMes)
	where crp= @crp
	order by crp
end
/****** Object:  StoredProcedure [dbo].[spp_rep_ImprimeVoucher]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rep_ImprimeVoucher]
@voucher varCHAR(20) ,
@ZonaA varchar(6) ,
@ZonaB varchar(6),
@UnidadA varchar(10),
@UnidadB varchar(10),
@Anio varchar(4),
@idempresa int
as
-- exec "spp_rep_ImrimeVoucher";1 '0400100002', '000015', '000015', '000002', '000002', '2010', 6

select c.zona, c.codunidadeconomica,mgc.mgc,
c.nrodoc, c.fechco,c.glosa, d.codigodocumentoreferencia,d.nrodocreferencia,d.fechadocreferencia,d.fechavencimiento,
d.codpro,d.codcuenta,pcc.descripcion, d.centrocosto,d.glosa detglosa,d.impdebe,d.imphaber,flujoE=d.crp
from movcontables_c c inner join movcontables_d d on c.idmovcontables_c=d.idmovcontables_c
inner join (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@anio)<'2020' then '2009' else rtrim(@anio) end)) pcc on pcc.codcuentacontable=d.codcuenta
inner join MaestroGrupoContable mgc on c.codmgc=mgc.codmgc
where c.nrodoc=@voucher
and d.estado<>'4' and c.estado IN ('','0')
and c.zona between @ZonaA and @ZonaB and c.codunidadeconomica between @UnidadA and @UnidadB
and mgc.codzona between @ZonaA and @ZonaB and mgc.codunidadeconomica between @UnidadA and @UnidadB
and c.anio=@Anio and mgc.anio=@Anio
order by d.correlativo,d.idmovcontable_d
/****** Object:  StoredProcedure [dbo].[Spp_Rep_InventarioGeneral]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[Spp_Rep_InventarioGeneral]--Libro Invetario y Balances
@lcZonaA varchar(6),
@lcZonaB varchar(6),
@lcUnidadA char(10),
@lcUnidadB char(10),
@lcGruposA char(2),
@lcGruposB char(2),
@lcANO char(4),
@lcMesA char(2),
@lcMesB char(2),
@Espacio INT,
@idempresa int

AS
declare @lcMesB_1 char(2)

SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
SET CONCAT_NULL_YIELDS_NULL ON
SET NUMERIC_ROUNDABORT OFF
SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON

--if @lcMesA!=@lcMesB
--	begin
	set @lcMesB_1=replicate('0',2-len(convert(int,@lcMesB)-1))+convert(char(2),convert(int,@lcMesB)-1)
--	end
--else
--	begin 
--		set @lcMesB_1=@lcMesB
--	end


------------------------------------TOMANDO DATOS ANTERIORES, y ACTUAL
select codcuenta=left(d.codcuenta,@Espacio), 
					 (case when d.CodigoDocumentoReferencia='07' Then +1 else 1 end) * isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.impdebe) end ,0.00)as andebe,
					 (case when d.CodigoDocumentoReferencia='07' Then +1 else 1 end) * isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.imphaber) end ,0.00)as anhaber,
						  (case when d.CodigoDocumentoReferencia='07' Then +1 else 1 end) * isnull(case when c.mes=@lcMesB then sum(d.impdebe) end ,0.00)as DEBE,
						  (case when d.CodigoDocumentoReferencia='07' Then +1 else 1 end) * isnull(case when c.mes=@lcMesB then sum(d.imphaber) end ,0.00)as HABER
into #C001
from movcontables_d d
inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
inner join (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end)) p on p.codcuentacontable=d.codcuenta
where c.mes between @lcMesA and @lcMesB
		and c.anio=@lcANO
		and c.codmgc between @lcGruposA and @lcGruposB
		AND C.zona BETWEEN @lcZonaA AND @lcZonaB
		AND C.CODUNIDADECONOMICA BETWEEN @lcUnidadA AND @lcUnidadB
		AND d.estado!='4' and c.estado!='4' and d.estado!='A' and codcuenta!='' and codpro!='000001' 
group by left(d.codcuenta,@Espacio),c.mes,d.CodigoDocumentoReferencia

--selecciona solo los que estan en parametros
UPDATE tbl_MaestroEstadosIntegrales SET ESTADO=0 WHERE CTA NOT like (Select '9['+replace(replace(valor,'9',''),',','')+']%'
										from dbo.parametros Where IdEmpresa = @idempresa and Estado =1 and clave='CuentasGastoOperativo'
									   ) 
										AND ctagral='91'


select cuenta, dcuenta, anteriordebe=SUM(anteriordebe),
		anteriorhaber=SUM(anteriorhaber),
		mesdebe=SUM(mesdebe),
		meshaber=SUM(meshaber ),
	inventariodebe	=SUM(inventariodebe),
	inventariohaber	=sum(inventariohaber)
into #C002
From (
SELECT Cuenta=tmp.codcuenta,DCuenta=p.descripcion,
		anteriordebe=SUM(tmp.andebe),
		anteriorhaber=SUM(tmp.anhaber),
		mesdebe=SUM(tmp.debe),
		meshaber=SUM(tmp.haber ),
	inventariodebe	=(CASE WHEN p.TipoCuenta IN ('A','P') THEN  (CASE WHEN (sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.anhaber)+sum(tmp.haber)) THEN (sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.anhaber)+sum(tmp.haber)) ELSE 0.00 END) ELSE 0 END),

	inventariohaber	=(CASE WHEN p.TipoCuenta IN('A','P') THEN  
						   (CASE WHEN (sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.andebe)+sum(tmp.debe)) 
								 THEN (sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe)) 
							ELSE 0.00 END) ELSE 0 END)

FROM #C001 tmp
inner join (select codcuentacontable,descripcion,tipoCuenta from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end)) p on p.codcuentacontable=tmp.codcuenta
where left(tmp.codcuenta,2)<60
GROUP BY tmp.CODCUENTA,p.descripcion,p.tipoCuenta
having 
(CASE WHEN p.TipoCuenta IN ('A','P') THEN (CASE WHEN (sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.anhaber)+sum(tmp.haber)) THEN (sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.anhaber)+sum(tmp.haber)) ELSE 0.00 END) ELSE 0 END)>0
or 
(CASE WHEN p.TipoCuenta IN('A','P') THEN (CASE WHEN (sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.andebe)+sum(tmp.debe)) THEN (sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe))ELSE 0.00 END) ELSE 0 END)>0
--order by tmp.CODCUENTA

union all
-----------------------------------
select '401' as Cuenta,'GOBIERNO CENTRAL',0,0,0,0,
0,
case when (sum(Importe))>0 then abs(sum(Importe))*max(porrenta)/100 else 0 end 
from vEstadoGananciasPerdidas(@lcZonaA,@lcZonaB,@lcUnidadA,@lcUnidadB,@lcANO,@lcMesA, @lcMesB,@idempresa)
--where zona between @lcZonaA and @lcZonaB and 
--CodUnidadEconomica between @lcUnidadA and @lcUnidadB and 
--anio=@lcANO and Mes between @lcMesA and @lcMesB
) todos group by cuenta, dcuenta
order by cuenta, dcuenta
-----------------------------------
select * from #C002

union all 

--select '59' as Cuenta,'RESULTADO DE LA OPERACION',0,0,0,0,
--case when sum(Importe)<0 then abs(sum(Importe)) else 0 end,
--case when (sum(Importe))>0 then abs(sum(Importe))-abs(sum(Importe))*max(porrenta)/100 else 0 end 
--from vEstadoGananciasPerdidas(@lcZonaA,@lcZonaB,@lcUnidadA,@lcUnidadB,@lcANO,@lcMesA, @lcMesB,@idempresa)
----where zona between @lcZonaA and @lcZonaB and 
----CodUnidadEconomica between @lcUnidadA and @lcUnidadB and 
----anio=@lcANO and Mes between @lcMesA and @lcMesB

select '59' as Cuenta,'RESULTADO DE LA OPERACION',0,0,0,0,
case when sum(Importe)<0 then abs(sum(Importe)) else 0 end,
case when (sum(Importe))>0 then abs(sum(Importe))-abs(sum(Importe))*max(porrenta)/100 else 0 end 
from vEstadosIntegrales(@lcZonaA,@lcZonaB,@lcUnidadA,@lcUnidadB,@lcANO,@lcMesA, @lcMesB,@idempresa,'GANANYPERD')
having sum(importe)!=0

--selecciona solo los que estan en parametros y pone en estado normal
UPDATE tbl_MaestroEstadosIntegrales SET ESTADO=1 WHERE CTA NOT like (Select '9['+replace(replace(valor,'9',''),',','')+']%'
										from dbo.parametros Where IdEmpresa = @idempresa and Estado =1 and clave='CuentasGastoOperativo'
									   ) 
										AND ctagral='91'

DROP TABLE #C001
DROP TABLE #C002
/****** Object:  StoredProcedure [dbo].[spp_rep_LibroBanco]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_rep_LibroBanco]
@MesA char(2),
@Anio char(4),
@ZonaA char(6),
@ZonaB char(6),
@UnidadA char(10),
@UnidadB char(10),
@Banco char(10),
@Moneda VARchar(25),
@IdEmpresa int
as
-- exec "spp_rep_LibroBanco";1 '07', '2016', '000045', '000045', '000045    ', '000045    ', ' ', '01', 34
select * from (
select   CUENTA1=(select rtrim(codcuentacontable)+' - '+descripcion from plancuentascontables 
		where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and codcuentacontable=d.codcuenta),
		'' as TipoMov, '' as codMGC ,  
       	impDEBE = (case when (sum(cASe when @Moneda = '01' then  d.Impdebe else d.ImpDebeDolar end ) - sum(cASe when @Moneda = '01' then  d.Imphaber else d.ImpHaberDolar end))<0 then 0.00 else (sum(cASe when @Moneda = '01' then  d.Impdebe else d.ImpDebeDolar end ) - sum(cASe when @Moneda = '01' then  d.Imphaber else d.ImpHaberDolar end)) end), 
		impHABER= abs(case when (sum(cASe when @Moneda = '01' then  d.Impdebe else d.ImpDebeDolar end ) - sum(cASe when @Moneda = '01' then  d.Imphaber else d.ImpHaberDolar end))<0 then sum(cASe when @Moneda = '01' then  d.Impdebe else d.ImpDebeDolar end ) - sum(cASe when @Moneda = '01' then  d.Imphaber else d.ImpHaberDolar end) else 0.00 end),
		importe= sum(cASe when @Moneda = '01' then  d.Impdebe else d.ImpDebeDolar end ) - sum(cASe when @Moneda = '01' then  d.Imphaber else d.ImpHaberDolar end), 
       	'' as NroDoc, FechCo = '',
		'' as Zona, '' as CodUnidadeconomica, 
		'' as dr, '' as df,
		'' as PROVEEDOR, 'SALDO MES ANTERIOR..... ' as glosa,
		'' as FechaDocReferencia,'' correlTesoreria, '' direccion
FROM  movcontables_d d 
	Inner join movcontables_c c ON c.idmovcontables_c=d.idmovcontables_c
	Inner join zona z on z.codzona=c.zona
where c.zona   BETWEEN @ZonaA AND @ZonaB 
     AND c.codunidadeconomica BETWEEN @UnidadA AND @UnidadB
     AND d.Estado!='4' and c.estado!='4' and d.codpro!='000001' and z.idempresa=@IdEmpresa and
	c.anio=@Anio and c.mes<@MesA and left(d.codcuenta,3)='104' and 
	d.codcuenta in (select ctacontable from banco where ctacontable like rtrim(@Banco)+'%' and idempresa = @IdEmpresa and estado=1)	and 
	d.Estado!='4' and 
	d.codpro!='000001' 
group by c.anio, d.codcuenta 

union all
SELECT 	CUENTA1=(select rtrim(codcuentacontable)+' - '+descripcion 
				from PLANCUENTASCONTABLES 
				where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and codcuentacontable=d.codcuenta),
       	d.TipoMov, d.codMGC,  
       	impDEBE=(cASe when @Moneda = '01' then  d.Impdebe else d.ImpDebeDolar end ), 
       	impHABER=(cASe when @Moneda = '01' then  d.Imphaber else d.ImpHaberDolar end) ,
	importe=(cASe when tipomov='D' THEN (CASE WHEN @Moneda='01' then d.impdebe else d.impdebedolar end) ELSE
		(CASE WHEN @Moneda='01' then d.imphaber*-1 else d.imphaberdolar *-1 end) end),
       	c.NroDoc,
	c.FechCo,
	c.Zona, 
	c.CodUnidadeconomica, 
dr=(select DISTINCT rtrim(Descripcion)
	from tipodocumento where codigOdocumento=d.codigodocumentoreferencia )+' '+d.NRODOCReFERENCIA,
--df=(select DISTINCT rtrim(Descripcion)
--	from tipodocumento where codigOdocumento=d.codigodocumentofuente)+' '+d.NRODOCReFERENCIA,
df= d.GLOSA,
PROVEEDOR=isnull((SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=5 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=5 and razonsocial!='' then razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
					FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),''), 
	c.glosa,FechaDocReferencia, isnull(tesoreria.correlativo,'') correlTesoreria, isnull(direccion,'') direccion
    
FROM  movcontables_d d 
	Inner join movcontables_c c ON c.idmovcontables_c=d.idmovcontables_c
	inner join zona z on z.codzona=c.zona
--	left outer join (select nrodoc,correlativo from tbl_movimientocajac
--					 where anio=@Anio AND mes=@MesA
--							AND zona   BETWEEN @ZonaA    AND @ZonaB 
--							AND codunidadeconomica BETWEEN @UnidadA AND @UnidadB
--					) tesoreria on d.cocach=tesoreria.nrodoc
       
--	left outer join (select distinct codpro,nrodoc,correlativo,direccion,codigoDocumentoFuente,NroDocumentoFuente from tbl_movimientocajac cc inner join tbl_movimientocajad dd on cc.idMovimientocajac=dd.idMovimientocajac
	left outer join (select codpro,nrodoc,correlativo,max(direccion) direccion,codigoDocumentoFuente,NroDocumentoFuente from tbl_movimientocajac cc inner join tbl_movimientocajad dd on cc.idMovimientocajac=dd.idMovimientocajac
					 where anio=@Anio AND mes=@MesA
							AND zona   BETWEEN @ZonaA    AND @ZonaB 
							AND cc.codunidadeconomica BETWEEN @UnidadA AND @UnidadB
					 group by codpro,nrodoc,correlativo,codigoDocumentoFuente,NroDocumentoFuente
					) tesoreria on d.codpro+d.cocach+d.CodigoDocumentoFuente+d.NroDocumentoFuente=tesoreria.codpro+tesoreria.nrodoc+tesoreria.codigoDocumentoFuente+tesoreria.NroDocumentoFuente
	WHERE c.anio=@Anio 
             AND c.mes=@MesA
             AND d.codcuenta in(select ctacontable from banco where ctacontable like rtrim(@Banco)+'%' and idempresa = @IdEmpresa and estado=1)
             AND c.zona   BETWEEN @ZonaA    AND @ZonaB 
             AND c.codunidadeconomica BETWEEN @UnidadA AND @UnidadB
             AND d.Estado!='4' and c.estado!='4' and d.codpro!='000001' and z.idempresa=@IdEmpresa
---- agregando 103 efectivo en transito
--union all
--SELECT 	CUENTA1=(select rtrim(codcuentacontable)+' - '+descripcion from plancuentascontables 
--		where codcuentacontable=d.codcuenta  and idempresa=@IdEmpresa),
--       	d.TipoMov, d.codMGC,  
--       	impDEBE=(cASe when @Moneda = '01' then  d.Impdebe else d.ImpDebeDolar end ), 
--       	impHABER=(cASe when @Moneda = '01' then  d.Imphaber else d.ImpHaberDolar end) ,
--	importe=(cASe when tipomov='D' THEN (CASE WHEN @Moneda='01' then d.impdebe else d.impdebedolar end) ELSE
--		(CASE WHEN @Moneda='01' then d.imphaber*-1 else d.imphaberdolar *-1 end) end),
--       	c.NroDoc,
--	c.FechCo,
--	c.Zona, 
--	c.CodUnidadeconomica, 
--dr=(select DISTINCT rtrim(Descripcion)
--	from tipodocumento where codigOdocumento=d.codigodocumentoreferencia )+' '+d.NRODOCReFERENCIA,
--df= d.GLOSA,
--PROVEEDOR=isnull((SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
--							   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
--							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
--							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
--							   when IdTipoCLienteProveedor=5 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
--							   when IdTipoCLienteProveedor=5 and razonsocial!='' then razonsocial 
--							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
--							   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
--					FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),''), 
--	c.glosa,FechaDocReferencia, isnull(tesoreria.correlativo,'') correlTesoreria, direccion
--    
--FROM  movcontables_d d 
--	Inner join movcontables_c c ON c.idmovcontables_c=d.idmovcontables_c
--	inner join zona z on z.codzona=c.zona
--	left outer join (select codpro,nrodoc,correlativo,max(direccion) direccion,codigoDocumentoFuente,NroDocumentoFuente from tbl_movimientocajac cc inner join tbl_movimientocajad dd on cc.idMovimientocajac=dd.idMovimientocajac
--					 where anio=@Anio AND mes=@MesA
--							AND zona   BETWEEN @ZonaA    AND @ZonaB 
--							AND cc.codunidadeconomica BETWEEN @UnidadA AND @UnidadB
--					 group by codpro,nrodoc,correlativo,codigoDocumentoFuente,NroDocumentoFuente
--					) tesoreria on d.codpro+d.cocach+d.CodigoDocumentoFuente+d.NroDocumentoFuente=tesoreria.codpro+tesoreria.nrodoc+tesoreria.codigoDocumentoFuente+tesoreria.NroDocumentoFuente
--	WHERE c.anio=@Anio 
--             AND c.mes=@MesA
--             AND left(d.codcuenta,3) in ('103')
--             AND c.zona   BETWEEN @ZonaA    AND @ZonaB 
--             AND c.codunidadeconomica BETWEEN @UnidadA AND @UnidadB
--             AND d.Estado!='4' and c.estado!='4' and d.codpro!='000001' and z.idempresa=@IdEmpresa
--			 AND d.codigoCtaBancaria='' 
--			 and d.codmgc='20'
) todos
ORDER BY --d.codcuenta,c.fechco
cuenta1, fechco --fechadocreferencia--fechco
/****** Object:  StoredProcedure [dbo].[spp_rep_LibroCajaBancos]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rep_LibroCajaBancos]
	@where varchar(900),@IdEmpresa int,@lcAnio varchar(4)
as
	declare @cmd varchar(900)
	set @cmd=('
		select a.correlativo,fecha=convert(varchar,a.fechContable,103),b.glosa,a.codCuenta,c.Descripcion,a.impDebe,a.impHaber,b.nroDoc from movContables_D a
		inner join movContables_C b
		on a.idMovcontables_C=b.idMovcontables_C
		inner join (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa='+convert(varchar(6),@IdEmpresa)+' and left(anio,4)=(case When '''+@lcAnio+'''<''2020'' then ''2009'' else '''+@lcAnio+''' end) and left(codcuentacontable,2)=10) c
		on a.codCuenta=c.codCuentaContable where left(a.codcuenta,2)=10')
	if @where!=''
		begin
		set @cmd=@cmd+' '+@where
		end
	exec (@cmd)
/****** Object:  StoredProcedure [dbo].[spp_rep_LibroDiario]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_rep_LibroDiario]
@AnoProceso CHAR(4),
@MesProceso CHAR(20) ,
--@MesProcesoB CHAR(2) ,
@ZonaA varchar(6) ,
@ZonaB varchar(6),
@UnidadA varchar(10),
@UnidadB varchar(10),
@idempresa int,
@grupo char(2),
@vaucher varchar(10)
as
--exec "spp_rep_LibroDiario";1 '2015', '0101', '000003', '000003', '000003    ', '000003    ', 3, NULL, ''
-- creando el orden de los grupos
select rtrim(codmgc) +' '+mgc codmgcOg, 
(Case codmgc when '00' then '01' when '18' then '02' when '09' then '03' when '02' then '04' when '04' then '05'
 when '03' then '06' when '05' then '07' when '07' then '08' when '20' then '09' when '08' then '10' when '11' then '11' when '19' then '12' end) orden 
into ##ordengrupo from maestrogrupocontable where codzona=@ZonaA and anio=@AnoProceso and sistema like '%CONT%'
order by 2

Declare @SeriesLength as varchar(20),@NumbersLength as varchar(20), @ctaIVA as varchar(10)

set @SeriesLength = (select valor from parametros where clave='SeriesLength' and idempresa=@idempresa)
set @NumbersLength = (select valor from parametros where clave='NumbersLength' and idempresa=@idempresa)

if @grupo!='' and @vaucher=''
 begin
	Select orden, nrodoc,idmovcontables_c,idmovcontable_d,correlativo,FechContable,Glosa,Zona,codmgc,doc,CodCuenta,Diario.Descripcion,impdebe, imphaber,
		fechco,coddocref,isnull(RIGHT(RTRIM(Diario.serie),sernro.serie),'') serie, isnull(RIGHT(rtrim(nrodocref),sernro.numero),'') NroDocRef,CentroCosto,CodClientePRoveedor,Ruc
	From (	
		select og.orden+' '+og.codmgcOg orden,nrodoc=d.nrodocumento,d.IDMovContables_c,d.IDMovContable_d,correlativo,fechcontable=d.FechaDocReferencia, 
		glosa = (case when len(ltrim(rTrim(d.glosa)))>0 then d.glosa else c.glosa end) ,
		zona=(z.zona),
		codmgc = tlibros.Codigo,
		DOc=(rtrim(t.Descripcion)+'- '+d.nrodocreferencia +' '+(case when d.CodigoDocumentoReferencia='99' then  right(d.NroDocumentofuente,7) else '' end )),
		d.codcuenta,
--		descripcion=pcta.descripcion,d.impdebe,d.imphaber,
		descripcion=(case when d.codmgc in ('04','11') then d.glosa else pcta.descripcion end),d.impdebe,d.imphaber,
		c.fechco,CodDocRef =d.codigodocumentoreferencia,
		serie=isnull(case when charindex('-',nrodocreferencia)>0 then left(nrodocreferencia,@SeriesLength) end,''),
		NroDocRef= (case when charindex('-',nrodocreferencia)>0 then right(rtrim(nrodocreferencia),@NumbersLength) else nrodocreferencia end),
		Centrocosto,tcp.CodClienteProveedor,tcp.RUC
		from movcontables_d d
		inner join movcontables_c c on d.idmovcontables_c=c.idmovcontables_c
		inner join ##ordengrupo og on left(og.codmgcOg,2)=d.codmgc
		inner join zona z on z.codzona=c.zona
		inner join tipodocumento t  on t.codigodocumento=d.codigodocumentoreferencia
		left outer join tbl_msto_ClienteProveedor tcp on tcp.RUC=d.CodPro
		left outer join (SELECT CODIGO,codmgc FROM tbl_Libros WHERE CODMGC IN (SELECT RTRIM(CODMGC) FROM MaestroGrupoContable WHERE codunidadeconomica between @UnidadA and @UnidadB and anio = @AnoProceso)) tlibros on tlibros.codMGC=c.codmgc
		inner join (select distinct max(Descripcion) descripcion, CodCuentaContable from plancuentascontables where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@AnoProceso)<'2020' then '2009' else rtrim(@AnoProceso) end) and estado=1 group by descripcion, CodCuentaContable) pcta on pcta.codcuentacontable=d.codcuenta
		WHERE c.estado !='4' and d.estado !='4' and c.MES >= left(@MesProceso,2) and c.mes <= left(substring(@mesProceso,3,2),2) --A and c.MES <= @MesProcesoB 
		And tcp.estado='1'	AND c.anio = @AnoProceso
		AND c.zona BETWEEN @ZonaA AND @ZonaB and z.idempresa=@idempresa and c.codunidadeconomica between @UnidadA and @UnidadB
		and d.codmgc=@grupo and d.codpro!='000001'
		) diario left outer join TipoDocSerieNro sernro on sernro.CodigoDocumento=diario.CodDocRef
	order by zona,orden,nrodoc, IDMovContables_c,correlativo,IDMovContable_D,FechContable,DOc 

end
if @grupo is null and @vaucher=''
	begin
	Select orden, nrodoc,idmovcontables_c,idmovcontable_d,correlativo,FechContable,Glosa,Zona,codmgc,doc,CodCuenta,Diario.Descripcion,impdebe, imphaber,
		fechco,coddocref,isnull(RIGHT(RTRIM(Diario.serie),sernro.serie),'') serie, isnull(RIGHT(rtrim(nrodocref),sernro.numero),'') NroDocRef,CentroCosto,CodClientePRoveedor,Ruc
	From (	
		select og.orden+' '+og.codmgcOg orden,nrodoc=d.nrodocumento,d.IDMovContables_c,d.IDMovContable_d,correlativo,fechcontable=d.FechaDocReferencia, 
		glosa = (case when len(ltrim(rTrim(d.glosa)))>0 then d.glosa else c.glosa end) ,
		zona=(z.zona),
		codmgc = tlibros.Codigo,
		DOc=(rtrim(t.Descripcion)+'- '+d.nrodocreferencia+' '+(case when d.CodigoDocumentoReferencia='99' then  right(d.NroDocumentofuente,7) else '' end )),
		d.codcuenta,
		descripcion=pcta.descripcion,d.impdebe,d.imphaber,
		c.fechco,CodDocRef =d.codigodocumentoreferencia,
		serie=isnull(case when charindex('-',nrodocreferencia)>0 then left(nrodocreferencia,@SeriesLength) end,''),
		NroDocRef= (case when charindex('-',nrodocreferencia)>0 then right(rtrim(nrodocreferencia),@NumbersLength) else nrodocreferencia end),
		Centrocosto,tcp.CodClienteProveedor,tcp.RUC
		from movcontables_d d
		inner join movcontables_c c on d.idmovcontables_c=c.idmovcontables_c
		inner join ##ordengrupo og on left(og.codmgcOg,2)=d.codmgc
		inner join zona z on z.codzona=c.zona
		inner join tipodocumento t  on t.codigodocumento=d.codigodocumentoreferencia
		left outer join tbl_msto_ClienteProveedor tcp on tcp.RUC=d.CodPro
		left outer join (SELECT CODIGO,codmgc FROM tbl_Libros WHERE CODMGC IN (SELECT RTRIM(CODMGC) FROM MaestroGrupoContable WHERE codunidadeconomica between @UnidadA and @UnidadB and anio = @AnoProceso)) tlibros on tlibros.codMGC=c.codmgc
		inner join (select distinct max(Descripcion) descripcion, CodCuentaContable from plancuentascontables where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@AnoProceso)<'2020' then '2009' else rtrim(@AnoProceso) end) and estado=1 group by descripcion, CodCuentaContable) pcta on pcta.codcuentacontable=d.codcuenta
		WHERE c.estado !='4' and d.estado !='4' and c.MES >= left(@MesProceso,2) and c.mes <= left(substring(@mesProceso,3,2),2) --A and c.MES <= @MesProcesoB 
		And tcp.estado='1'	AND c.anio = @AnoProceso
		AND c.zona BETWEEN @ZonaA AND @ZonaB and z.idempresa=@idempresa  and d.codpro!='000001' and c.codunidadeconomica between @UnidadA and @UnidadB
		) diario left outer join TipoDocSerieNro sernro on sernro.CodigoDocumento=diario.CodDocRef
	order by zona,orden,nrodoc, IDMovContables_c,correlativo,IDMovContable_D,FechContable,DOc 

end

if @grupo!='' and @vaucher!=''
	 begin
	Select orden, nrodoc,idmovcontables_c,idmovcontable_d,correlativo,FechContable,Glosa,Zona,codmgc,doc,CodCuenta,Diario.Descripcion,impdebe, imphaber,
		fechco,coddocref,isnull(RIGHT(RTRIM(Diario.serie),sernro.serie),'') serie, isnull(RIGHT(rtrim(nrodocref),sernro.numero),'') NroDocRef,CentroCosto,CodClientePRoveedor,Ruc
	From (	
		select og.orden+' '+og.codmgcOg orden,nrodoc=d.nrodocumento,d.IDMovContables_c,d.IDMovContable_d,d.Correlativo,fechcontable=d.FechaDocReferencia, 
		glosa = (case when len(ltrim(rTrim(d.glosa)))>0 then d.glosa else c.glosa end) ,
		zona=(z.codzona+' '+z.zona),
		codmgc = tlibros.Codigo,
		DOc=(rtrim(t.Descripcion)+'- '+d.nrodocreferencia+' '+(case when d.CodigoDocumentoReferencia='99' then  right(d.NroDocumentofuente,7) else '' end )),
		d.codcuenta,
		descripcion=pcta.descripcion,d.impdebe,d.imphaber,
		c.fechco,CodDocRef =d.codigodocumentoreferencia,
		serie=isnull(case when charindex('-',nrodocreferencia)>0 then left(nrodocreferencia,@SeriesLength) end,''),
		NroDocRef= (case when charindex('-',nrodocreferencia)>0 then right(rtrim(nrodocreferencia),@NumbersLength) else nrodocreferencia end),
		Centrocosto,tcp.CodClienteProveedor,tcp.RUC
		from movcontables_d d
		inner join movcontables_c c on d.idmovcontables_c=c.idmovcontables_c
		inner join ##ordengrupo og on left(og.codmgcOg,2)=d.codmgc
		inner join zona z on z.codzona=c.zona
		inner join tipodocumento t  on t.codigodocumento=d.codigodocumentoreferencia
		left outer join tbl_msto_ClienteProveedor tcp on tcp.RUC=d.CodPro
		left outer join (SELECT CODIGO,codmgc FROM tbl_Libros WHERE CODMGC IN (SELECT RTRIM(CODMGC) FROM MaestroGrupoContable WHERE codunidadeconomica between @UnidadA and @UnidadB and anio = @AnoProceso)) tlibros on tlibros.codMGC=c.codmgc
		inner join (select distinct max(Descripcion) descripcion, CodCuentaContable from plancuentascontables where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@AnoProceso)<'2020' then '2009' else rtrim(@AnoProceso) end) and estado=1 group by descripcion, CodCuentaContable) pcta on pcta.codcuentacontable=d.codcuenta
		WHERE c.estado !='4' and d.estado !='4' and c.MES >= left(@MesProceso,2) and c.mes <= left(substring(@mesProceso,3,2),2) --A and c.MES <= @MesProcesoB 
		And tcp.estado='1'	AND c.anio = @AnoProceso
		AND c.zona BETWEEN @ZonaA AND @ZonaB and z.idempresa=@idempresa
		and c.codmgc=@grupo and c.nrodoc=@vaucher  and d.codpro!='000001' and c.codunidadeconomica between @UnidadA and @UnidadB
		) diario left outer join TipoDocSerieNro sernro on sernro.CodigoDocumento=diario.CodDocRef
	order by zona,orden,nrodoc, IDMovContables_c,correlativo,IDMovContable_D,FechContable,DOc 

	end

drop table ##ordengrupo
/****** Object:  StoredProcedure [dbo].[spp_rep_LibroDiarioAuxiliar]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_rep_LibroDiarioAuxiliar]
@AnoProceso CHAR(4),
@MesProceso CHAR(2) ,
@ZonaA varchar(6) ,
@ZonaB varchar(6),
@UnidadA varchar(10),
@UnidadB varchar(10),
@idempresa int,
@grupo char(2),
@vaucher varchar(10)
as
if @grupo!='' and @vaucher=''
 begin
	select c.nrodoc,d.Correlativo,fechcontable=c.fechco,c.glosa,d.codpro,proveedor=(SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=2 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=2 and razonsocial!='' then razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
							FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND estado=1),zona= (z.codzona+' '+z.zona),
								DOc=(rtrim(t.Descripcion)+'- '+d.nrodocreferencia),
glosaDoc = (case when d.glosa='' then c.glosa else d.glosa end),
codcuenta=(select rtrim(codcuentacontable)+'  '+(Descripcion) from plancuentascontables where codcuentacontable=d.codcuenta and idempresa=@idempresa and left(anio,4)=(case When rtrim(@AnoProceso)<'2020' then '2009' else rtrim(@AnoProceso) end) and estado=1),
d.impdebe,d.imphaber from movcontables_d d
	inner join movcontables_c c on d.idmovcontables_c=c.idmovcontables_c
	inner join zona z on z.codzona=c.zona
	inner join tipodocumento t  on t.codigodocumento=d.codigodocumentoreferencia
	WHERE c.estado !='4' and d.estado !='4' and c.MES = @MesProceso  AND c.anio = @AnoProceso
	AND c.zona BETWEEN @ZonaA AND @ZonaB and z.idempresa=@idempresa
	and c.codmgc=@grupo and d.codpro!='000001' and c.codunidadeconomica between @UnidadA and @UnidadB
	order by c.zona,d.nrodocumento,correlativo,d.IDMovContable_D,d.nrodocreferencia
	--c.fechco,d.codcuenta,d.nrodocumento,d.nrodocreferencia,correlativo,d.idmovcontable_d
end
if @grupo is null and @vaucher=''
	begin
	select c.nrodoc,d.Correlativo,fechcontable=c.fechco,c.glosa,d.codpro,proveedor=(SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=2 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=2 and razonsocial!='' then razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
							FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),zona= (z.codzona+' '+z.zona),
								DOc=(rtrim(t.Descripcion)+'- '+d.nrodocreferencia),
glosaDoc = (case when d.glosa='' then c.glosa else d.glosa end),
codcuenta=(select rtrim(codcuentacontable)+'  '+(Descripcion) from plancuentascontables where codcuentacontable=d.codcuenta and idempresa=@idempresa and left(anio,4)=(case When rtrim(@AnoProceso)<'2020' then '2009' else rtrim(@AnoProceso) end) and estado=1),
d.impdebe,d.imphaber from movcontables_d d
	inner join movcontables_c c on d.idmovcontables_c=c.idmovcontables_c
--	inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
	inner join zona z on z.codzona=c.zona
	inner join tipodocumento t  on t.codigodocumento=d.codigodocumentoreferencia
	WHERE c.estado !='4' and d.estado !='4' and c.MES = @MesProceso AND c.anio = @AnoProceso
	AND c.zona BETWEEN @ZonaA AND @ZonaB and z.idempresa=@idempresa  and d.codpro!='000001'
	and c.codunidadeconomica between @UnidadA and @UnidadB
	order by c.zona,d.nrodocumento,correlativo,d.IDMovContable_D,d.nrodocreferencia
	--c.fechco,d.codcuenta,d.nrodocumento,d.nrodocreferencia,correlativo,d.idmovcontable_d
end

if @grupo!='' and @vaucher!=''
	 begin
			select c.nrodoc,d.Correlativo,fechcontable=c.fechco,c.glosa,d.codpro,proveedor=(SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=2 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=2 and razonsocial!='' then razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
			FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),zona= (z.codzona+' '+z.zona),c.codmgc,DOc=(rtrim(t.Descripcion)+'- '+d.nrodocreferencia),
glosaDoc = (case when d.glosa='' then c.glosa else d.glosa end),
codcuenta=(select rtrim(codcuentacontable)+'  '+(Descripcion) from plancuentascontables where codcuentacontable=d.codcuenta and idempresa=@idempresa and left(anio,4)=(case When rtrim(@AnoProceso)<'2020' then '2009' else rtrim(@AnoProceso) end) and estado=1)
,d.impdebe,d.imphaber from movcontables_d d
	inner join movcontables_c c on d.idmovcontables_c=c.idmovcontables_c
--	inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
	inner join zona z on z.codzona=c.zona
	inner join tipodocumento t  on t.codigodocumento=d.codigodocumentoreferencia
	WHERE c.estado !='4' and d.estado !='4' and c.MES = @MesProceso  AND c.anio = @AnoProceso
	AND c.zona BETWEEN @ZonaA AND @ZonaB and z.idempresa=@idempresa
	and c.codmgc=@grupo and c.nrodoc=@vaucher  and d.codpro!='000001'
	and c.codunidadeconomica between @UnidadA and @UnidadB
	order by c.zona,d.nrodocumento,correlativo,d.IDMovContable_D,d.nrodocreferencia
	--c.fechco,d.codcuenta,d.nrodocumento,d.nrodocreferencia,correlativo,d.idmovcontable_d

	end
/****** Object:  StoredProcedure [dbo].[spp_Rep_LibroDiarioSimplCabExcel]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Rep_LibroDiarioSimplCabExcel]
@ZonaA varchar(6),
@ZonaB varchar(6),
@CodUnidadA varchar(10),
@CodUnidadB varchar(10),
@MesB char(2),
@Anio char(4),
@Digitos Char(2)
as

-- spp_Rep_LibroDiarioSimplCabExcel '000016','000018','000016','000018','01','2013',5 
Select sum(activo) activo, sum(pasivo) pasivo, sum(patrim) patrim, sum(gastos) gastos, sum(ingres) ingres, sum(saldos) saldos,sum(funcion) funcion, sum(orden) orden,
sum(activo+pasivo+patrim+gastos+ingres+saldos+funcion+orden) total
From (
	select '1' registro,
	(Case When left(rtrim(codcuenta),2)>=10 and left(rtrim(codcuenta),2)<=39 then count(codcuenta) else 0 end) activo,
	(Case When left(rtrim(codcuenta),2)>=40 and left(rtrim(codcuenta),2)<=49 then count(codcuenta) else 0 end) pasivo,  
	(Case When left(rtrim(codcuenta),2)>=50 and left(rtrim(codcuenta),2)<=59 then count(codcuenta) else 0 end) patrim,
	(Case When left(rtrim(codcuenta),2)>=60 and left(rtrim(codcuenta),2)<=69 then count(codcuenta) else 0 end) gastos,
	(Case When left(rtrim(codcuenta),2)>=70 and left(rtrim(codcuenta),2)<=79 then count(codcuenta) else 0 end) ingres,
	(Case When left(rtrim(codcuenta),2)>=80 and left(rtrim(codcuenta),2)<=89 then count(codcuenta) else 0 end) saldos,
	(Case When left(rtrim(codcuenta),2)>=90 and left(rtrim(codcuenta),2)<=99 then count(codcuenta) else 0 end) funcion,
	(Case When left(rtrim(codcuenta),2)>=00 and left(rtrim(codcuenta),2)<=09 then count(codcuenta) else 0 end) orden 
	From (
		select left(rtrim(codcuenta),@Digitos) codcuenta
		from movcontables_d d
			inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
		where c.Zona between @ZonaA and @ZonaB
			  and c.codunidadeconomica between @CodUnidadA and @CodUnidadB and c.estado!='4' and d.codpro!='000001' and d.estado!='4'
			  and c.mes<= @MesB and c.anio=@Anio and codcuenta!=''
		group by left(rtrim(codcuenta),@Digitos)
		) cta
	group by left(rtrim(codcuenta),2)
	) ctas 
group by registro
/****** Object:  StoredProcedure [dbo].[spp_Rep_LibroDiarioSimplificado]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
-- Procedure
CREATE PROCEDURE [dbo].[spp_Rep_LibroDiarioSimplificado]
@ZonaA varchar(6),
@ZonaB varchar(6),
@CodUnidadA varchar(10),
@CodUnidadB varchar(10),
@MesA char(2),
@MesB char(2),
@Anio char(4),
@IdEmpresa1 int,
@Digitos Char(2)
as

-- exec spp_Rep_LibroDiarioSimplificado @ZonaA='000012',@ZonaB='000012',@CodUnidadA='000012    ',@CodUnidadB='000012    ',@MesA='01',@MesB='01',@Anio='2022',@IdEmpresa1='5',@Digitos='7'
--datos del inventario inicial (s)
declare @AVISO TINYINT
declare @IdEmpresa char(4)
declare @cadena0 as varchar(8000)
declare @cadena1 as varchar(8000)
declare @cadena2 as varchar(8000)
declare @cadena3 as varchar(8000)
declare @conceptos as varchar(10)
declare @csqlA as varchar(max)
declare @csqlA1 as varchar(max)
declare @csqlB as varchar(max)
declare @csqlB1 as varchar(max)
declare @csqlC as varchar(max)
declare @csqlC1 as varchar(max)
declare @csql as varchar(max)
declare @csql2 as varchar(max)
declare @csql3 as varchar(8000)

set @IdEmpresa =convert(char(4),@IdEmpresa1)
--borrando tabls temporales
------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpDiaSimplA') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpDiaSimplA
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpDiaSimplB') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpDiaSimplB
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpDiaSimplC') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpDiaSimplC
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpDiaSimpl1') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpDiaSimpl1
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpDiaSimpl2') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpDiaSimpl2
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tmpDiaSimpl3') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpDiaSimpl3
END
-------------------------------------

declare cptos cursor for 
select left(rtrim(codcuenta),@digitos) cpto from movcontables_d d
	inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
	inner join (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)) p on p.CodCuentaContable=d.CodCuenta 
where c.Zona between @ZonaA and @ZonaB
	  and c.codunidadeconomica between @CodUnidadA and @CodUnidadB and c.estado!='4' and d.codpro!='000001' and d.estado!='4'
	  and c.mes<= @MesB and c.anio=@Anio and codcuenta!=''

group by left(rtrim(codcuenta),@digitos)
having sum(impdebe)<>sum(impHaber)
order by left(rtrim(codcuenta),@digitos)

set @cadena0 = ''
set @cadena1 = ''
set @cadena2 = ''
set @cadena3 = ''

open cptos
fetch next from cptos
into @conceptos
while @@fetch_status =0
begin
--set @cadena0 = @cadena0 + 'Sum(['+@conceptos +']) ''[' + @conceptos +']'','
set @cadena0 = @cadena0 + 'Sum(['+@conceptos +']) ''' + @conceptos +''','
--set @cadena1 = @cadena1 + 'isnull(sum(['+@conceptos +']),0.00) ''C'+ @conceptos +''','
set @cadena1 = @cadena1 + 'isnull(sum(['+@conceptos +']),0.00) '''+ @conceptos +''','
set @cadena2 = @cadena2 + '['+@conceptos +'],'
set @cadena3 = @cadena3 + 'isnull(['+@conceptos +'],0.00) '''+ @conceptos +''','

fetch next from cptos
into @conceptos
end 
close cptos
deallocate cptos

if @cadena0 ='' 
SET @AVISO=1

if @cadena0 <>''  
Begin 
	set @cadena0 = left(@cadena0, len(@cadena0)-1)
	set @cadena1 = left(@cadena1, len(@cadena1)-1)
	set @cadena2 = left(@cadena2, len(@cadena2)-1)
	set @cadena3 = left(@cadena3, len(@cadena3)-1)
	print @cadena0 
	print @cadena1 
	print @cadena2 
	print @cadena3 
	print ''
	print len(@cadena0) 
	print len(@cadena1) 
	print len(@cadena2) 
	print len(@cadena3) 



	--datos de la tabla inicial inventario inicial (s)
	set @csqlA =('select '''' nrodoc,fechco='' ''+convert(varchar(10),c.fechco,103),(Case When '+@MesB+' in (''00'',''01'') Then ''Inventario Inicial'' else ''Saldo Mes Anterior'' end) as Glosa,


			CodCuenta=left(d.codcuenta,'+@Digitos+'), 
					monto=(case when d.impdebe=0.00 then d.imphaber*(-1) else d.impdebe end) 
		  into tmpDiaSimplA from movcontables_d d
			inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
			inner join (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa='+@IdEmpresa+' and left(anio,4)=(case When '+@Anio+'<''2020'' then ''2009'' else '+@Anio+' end)) p on p.CodCuentaContable=d.CodCuenta 
		  where c.Zona between '''+ @ZonaA +''' and '''+@ZonaB +''' 
			  and c.codunidadeconomica between '''+@CodUnidadA+''' and '''+@CodUnidadB+''' and c.estado!=''4'' and d.codpro!=''000001'' and d.estado!=''4''
			  and c.mes< '''+@MesB+''' and c.anio='''+@Anio+''' and codcuenta!=''''
	'
	)

	--datos del inventario inicial (s)
	set @csqlA1 =('select '' '' nrodoc,'' =============>'' as [Fecha Contable],0 orden,(Case When '+@MesB+' in (''00'',''01'') Then ''Inventario Inicial'' else ''Saldo Mes Anterior'' end) as Glosa,
	'+ @cadena1 +' 
	into tmpDiaSimpl1 from tmpDiaSimplA
	'
	)
	set @csql =('
	V PIVOT
	(sum(monto) for codcuenta in ('+@cadena2+ ')) as PT 
	'
	)
	
	--datos del mes total
	set @csqlB =('select c.nrodoc nrodoc,fechco='' ''+convert(varchar(10),c.fechco,103),d.idmovcontables_c orden, 
			c.Glosa,CodCuenta=left(d.codcuenta,'+@Digitos+'),monto=(case when d.impdebe=0.00 then d.imphaber*(-1) else d.impdebe end) 
			into tmpDiaSimplB from movcontables_d d
			inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
			inner join (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa='+@IdEmpresa+' and left(anio,4)=(case When '+@Anio+'<''2020'' then ''2009'' else '+@Anio+' end)) p on p.CodCuentaContable=d.CodCuenta 
		where c.Zona between '''+@ZonaA+''' and '''+@ZonaB+''' and 
			  c.codunidadeconomica between '''+@CodUnidadA+''' and '''+@CodUnidadB+''' and  c.estado!=''4'' and d.estado!=''4'' and
			  c.mes ='''+@MesB+''' and c.anio='''+@Anio+''' and codpro!=''000001'' and codcuenta!=''''
	'
	)
	
	--datos del mes
	set @csqlB1 =('SELECT nrodoc,[Fecha Contable], max(orden) orden,Glosa,
		   '+ @cadena0 +' 
	into tmpDiaSimpl2 From (
		select nrodoc,FechCO as [Fecha Contable],orden,Glosa,
	'
	)

	set @csql2 =(''+ @cadena3 +' 
		From tmpDiaSimplB



	V PIVOT (sum(monto) for CodCuenta IN (
	'+@cadena2+ ')
	) AS PT
	) vmensual
	GROUP BY nrodoc,[Fecha Contable],Glosa
	'
	)

	--datos del total general(invetario inicial mas el mes)

	set @csqlC =('select '''' nrodoc,fechco='' ''+convert(varchar(10),c.fechco,103),''Total'' as Glosa,CodCuenta=left(d.codcuenta,'+@Digitos+'),
	monto=(case when d.impdebe=0.00 then d.imphaber*(-1) else d.impdebe end) 
	into tmpDiaSimplC from movcontables_d d
		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
		inner join (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa='+@IdEmpresa+' and left(anio,4)=(case When '+@Anio+'<''2020'' then ''2009'' else '+@Anio+' end)) p on p.CodCuentaContable=d.CodCuenta 
	where c.Zona between '''+@ZonaA+''' and '''+@ZonaB+''' and
		  c.codunidadeconomica between '''+@CodUnidadA+''' and'''+ @CodUnidadB+''' and  c.estado!=''4'' and d.estado!=''4'' and
		  c.mes <='''+@MesB+''' and c.anio='''+@Anio+''' and codpro!=''000001'' and codcuenta!=''''
	'
	)

	--datos del total (invetario inicial mas el mes)
	set @csqlC1 =('select '''' nrodoc,''Total =======>'' as [Fecha Contable],999999999 orden, '' -> ''+dbo.traeNombreMes('''+@MesB+''') as Glosa,
	'+ @cadena1 +' 
	into tmpDiaSimpl3 from tmpDiaSimplC
	'
	)
	set @csql3 =('



		V PIVOT (sum(monto) for CodCuenta IN ('+@cadena2+ ')) AS PT
	'
	)

-------------------------
--	set @csql =('select '' =============>'' as [Fecha Contable],0 orden,(Case When '+@MesB+' in (''00'',''01'') Then ''Inventario Inicial'' else ''Saldo Mes Anterior'' end) as Glosa,
--	'+ @cadena1 +' 
--	from (select fechco='' ''+convert(varchar(10),c.fechco,103),(Case When '+@MesB+' in (''00'',''01'') Then ''Inventario Inicial'' else ''Saldo Mes Anterior'' end) as Glosa,
--			CodCuenta=left(d.codcuenta,'+@Digitos+'), 
--					monto=(case when d.impdebe=0.00 then d.imphaber*(-1) else d.impdebe end) 
--		  from movcontables_d d
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join plancuentascontables p on p.CodCuentaContable=d.CodCuenta 
--	where c.Zona between '''+ @ZonaA +''' and '''+@ZonaB +''' 
--		  and c.codunidadeconomica between '''+@CodUnidadA+''' and '''+@CodUnidadB+''' and c.estado!=''4'' and d.codpro!=''000001'' and d.estado!=''4''
--		  and c.mes< '''+@MesB+''' and c.anio='''+@Anio+''' and p.idempresa='''+@IdEmpresa+''' and codcuenta!='''')
--	 V PIVOT
--	(sum(monto) for codcuenta in ('+@cadena2+ ')) as PT 
--	union all
--	SELECT [Fecha Contable], max(orden) orden,Glosa,
--		   '+ @cadena0 +' 
--	From (
--		select FechCO as [Fecha Contable],orden,Glosa,
--			   '+ @cadena3 +' 
--		From (select fechco='' ''+convert(varchar(10),c.fechco,103),d.idmovcontables_c orden, 
--			c.Glosa,CodCuenta=left(d.codcuenta,'+@Digitos+'),monto=(case when d.impdebe=0.00 then d.imphaber*(-1) else d.impdebe end) from movcontables_d d
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join plancuentascontables p on p.CodCuentaContable=d.CodCuenta 
--	where c.Zona between '''+@ZonaA+''' and '''+@ZonaB+''' and 
--		  c.codunidadeconomica between '''+@CodUnidadA+''' and '''+@CodUnidadB+''' and  c.estado!=''4'' and d.estado!=''4'' and
--		  c.mes ='''+@MesB+''' and c.anio='''+@Anio+''' and p.idempresa='''+@IdEmpresa+''' and codpro!=''000001'' and codcuenta!='''') 
--	V PIVOT (sum(monto) for CodCuenta IN (
--	'+@cadena2+ ')
--	) AS PT
--	) vmensual
--	GROUP BY [Fecha Contable],Glosa
--	union all
--	select ''Total =======>'' as [Fecha Contable],999999999 orden, '' -> ''+dbo.traeNombreMes('''+@MesB+''') as Glosa,
--	'+ @cadena1 +' 
--	from (select fechco='' ''+convert(varchar(10),c.fechco,103),''Total'' as Glosa,CodCuenta=left(d.codcuenta,'+@Digitos+'),
--	monto=(case when d.impdebe=0.00 then d.imphaber*(-1) else d.impdebe end) from movcontables_d d
--		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--		inner join plancuentascontables p on p.CodCuentaContable=d.CodCuenta 
--	where c.Zona between '''+@ZonaA+''' and '''+@ZonaB+''' and
--		  c.codunidadeconomica between '''+@CodUnidadA+''' and'''+ @CodUnidadB+''' and  c.estado!=''4'' and d.estado!=''4'' and
--		  c.mes <='''+@MesB+''' and c.anio='''+@Anio+''' and p.idempresa='''+@IdEmpresa+''' and codpro!=''000001'' and codcuenta!='''')
--		V PIVOT (sum(monto) for CodCuenta IN ('+@cadena2+ ')) AS PT
--	order by [Fecha Contable],orden
--	'
--	)
print @csql
print @csql2
print @csql3
-------------------------
If len(@csql)=8000
SET @AVISO=2

If len(@csql)<8000
	exec(@csqlA)
	exec(@csqlA1+@csql)
If len(@csql2)<8000
	exec(@csqlB)
	exec(@csqlB1+@csql2)
If len(@csql3)<8000
	exec(@csqlC)
	exec(@csqlC1+@csql3)

select * from tmpdiaSimpl1
union all 
select * from tmpdiaSimpl2
union all 
select * from tmpdiaSimpl3
order by [Fecha Contable],orden

	DROP TABLE tmpDiaSimplA
	DROP TABLE tmpDiaSimplB
	DROP TABLE tmpDiaSimplC
	DROP TABLE tmpDiaSimpl1
	DROP TABLE tmpDiaSimpl2
	DROP TABLE tmpDiaSimpl3

end

IF @AVISO=2
	BEGIN
		RAISERROR('ADVERTENCIA: EN EL NUMERO DE CUENTAS ES MAYOR DE LO PERMITIDO',1,16)
		WITH NOWAIT RETURN
	END
ELSE
	IF @AVISO=1
		BEGIN
		RAISERROR('ADVERTENCIA: NO EXISTE REGISTRO A PROCESAR',1,16)
		WITH NOWAIT RETURN
		END
/****** Object:  StoredProcedure [dbo].[spp_rep_LibroHonorarios]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_rep_LibroHonorarios]
@ZonaA varchar(6),
@ZonaB varchar(6),
@UnidadA varchar(10),
@UnidadB varchar(10),
@Anio char(4),
@MesA char(2),
@MesB char(2),
@idempresa int
as
--exec "spp_rep_LibroHonorarios";1 '000012', '000012', '000012    ', '000012    ', '2013', '00', '01', 5
SELECT zona=(z.zona), codmgc= max(d.codmgc), nrodocumento= max(d.nrodocumento), fechadocreferencia = max(d.fechadocreferencia), 
	nrodocreferencia = (Case When len(d.codpro)= 8 Then '1' Else 
				(Case When len(d.codpro)= 11 Then '6' Else 
				(Case When len(d.codpro)= 15 Then '4' Else 
				(Case When len(d.codpro)= 9 Then '7' Else '0'
				End )
				End ) 
				End ) 
			 End ), d.codpro, 
	BENEFICIARIO=(SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=2 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=2 and razonsocial!='' then razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
	FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND estado=1),
sub_Importe = (case when sum(d.impdebe)>= sum(d.imphaber) then sum(d.impdebe) else sum(d.imphaber)*1 end) +sum(montoretencion4), 
--sub_Importe = (case when sum(d.impdebe)>= sum(d.imphaber) then sum(d.impdebe) else sum(d.imphaber)*-1 end) , 
retencion=sum(montoretencion4)*-1,
Importe = (case when sum(d.impdebe)>= sum(d.imphaber) then sum(d.impdebe) else sum(d.imphaber)*1 end),
--Importe = (case when sum(d.impdebe)>= sum(d.imphaber) then 0.00 --sum(d.impdebe)*-1+sum(montoretencion4) 
--			else sum(d.imphaber)+sum(montoretencion4)*-1 end) , 
d.codcuenta, impdebe= sum(d.impdebe), imphaber = sum(d.imphaber),
codigodocumentoreferencia = max(codigodocumentoreferencia), docReferencia=nrodocreferencia, fechavencimiento=max(fechavencimiento)
FROM MovContables_D D
inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
	inner join ZONA Z ON C.ZONA=Z.CODZONA
WHERE  C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB AND 
	   C.ANIO=@Anio AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND 
	   Z.IDEMPRESA=@idempresa and d.codpro!='000001' AND
	  d.estado !='4' AND LEFT(d.CodCuenta,2)in ('42') and codigodocumentoreferencia='02' 
GROUP BY c.zona, z.zona,--d.codmgc,d.nrodocumento,
--d.fechadocreferencia, 
d.codpro,d.NroDocReferencia,d.codcuenta
ORDER BY c.zona,max(d.fechadocreferencia),d.codpro, d.NroDocReferencia,codmgc
/****** Object:  StoredProcedure [dbo].[spp_rep_LibroInventariosBalances_GRAL_Activo]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rep_LibroInventariosBalances_GRAL_Activo]
	@campos varchar(800),@where varchar(400)
as
	declare @sql varchar(800)
	set @sql='select ' + @campos + ' from vRPT_LibroInventarios'
	if @where<>'' 
	begin
		set @sql=(@sql + ' where ' + @where)
	end
	exec (@sql)
/****** Object:  StoredProcedure [dbo].[spp_rep_LibroMayor]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_rep_LibroMayor]
@Zona01 	varCHAR( 6 ),
@Zona02 	varCHAR( 6 ),
@UnidadA varchar(10),
@UnidadB varchar(10),
@cuenta1 varchar(10),
@cuenta2 varchar(10),
@Ano		CHAR( 4 ),	
@Mes		CHAR( 2 ),
@MesB		char(2),
@idempresa int,
@grupo char(2),
@digito int
as

--spp_rep_LibroMayor '000015', '000015', '000002    ', '000002    ', '1', '9999999999', '2010', '10', '10', 6, NULL, 7

if @grupo is null
begin
Select * from (
select Cuenta=(select rtrim(codcuentacontable)+' - '+descripcion from plancuentascontables 
											where idempresa=@idempresa and left(anio,4)=(case When rtrim(@Ano)<'2020' then '2009' else rtrim(@Ano) end) and codcuentacontable=left(d.codcuenta,@digito)),fechcontable=convert(datetime,@Ano+'-01-'+(case when @Mes='00' then '01' else @Mes end),102),nrodoc='',
glosa = 'SALDO INICIAL...' ,
Debe=sum(d.impdebe),Acreedor=sum(d.imphaber) from movcontables_d d
inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
inner join zona z on z.codzona=c.zona 
where z.idempresa=@idempresa AND  c.mes < @Mes and codcuenta!='' and c.anio=@Ano and d.estado!='4' and c.estado!='4'
	and c.ZONA BETWEEN @Zona01  AND @Zona02 and codpro!='000001' and c.codunidadeconomica between @UnidadA and @UnidadB
    and d.codcuenta between @cuenta1 and @cuenta2
	and d.impdebe+d.imphaber>0
group by d.codcuenta
union all 
----------------
select Cuenta=(select rtrim(codcuentacontable)+' - '+descripcion from plancuentascontables 
											where idempresa=@idempresa and left(anio,4)=(case When rtrim(@Ano)<'2020' then '2009' else rtrim(@Ano) end) and codcuentacontable=left(d.codcuenta,@digito)),fechcontable=c.fechco,c.nrodoc,
glosa = (case when len(ltrim(rTrim(d.glosa)))>0 then d.glosa else c.glosa end) ,
Debe=d.impdebe,Acreedor=d.imphaber from movcontables_d d
inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
inner join zona z on z.codzona=c.zona 
where z.idempresa=@idempresa AND  c.mes between @Mes and @MesB  and codcuenta!='' and c.anio=@Ano and d.estado!='4' and c.estado!='4'
	and c.ZONA BETWEEN @Zona01  AND @Zona02 and codpro!='000001' and c.codunidadeconomica between @UnidadA and @UnidadB
    and d.codcuenta between @cuenta1 and @cuenta2
	and d.impdebe+d.imphaber>0
) todos order by cuenta,nrodoc,fechcontable
end
else 
	begin
	Select * from (
		select Cuenta=(select rtrim(codcuentacontable)+' - '+descripcion from plancuentascontables 
											where idempresa=@idempresa and left(anio,4)=(case When rtrim(@Ano)<'2020' then '2009' else rtrim(@Ano) end) and codcuentacontable=left(d.codcuenta,@digito)),
		fechcontable=convert(datetime,@Ano+'-01-'+(case when @Mes='00' then '01' else @Mes end)),nrodoc='',
		glosa = 'SALDO INICIAL...' ,
		Debe=sum(d.impdebe),Acreedor=sum(d.imphaber) from movcontables_d d
		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
		inner join zona z on z.codzona=c.zona 
		where z.idempresa=@idempresa AND  c.mes < @Mes and codcuenta!='' and c.anio=@Ano and d.estado!='4' and c.estado!='4'
			and c.ZONA BETWEEN @Zona01  AND @Zona02 and codpro!='000001' and c.codunidadeconomica between @UnidadA and @UnidadB
			and d.impdebe+d.imphaber>0 and d.codmgc=@grupo
			and d.codcuenta between @cuenta1 and @cuenta2
		group by d.codcuenta
		union all
		------------------
		select Cuenta=(select rtrim(codcuentacontable)+' - '+descripcion from plancuentascontables 
											where idempresa=@idempresa and left(anio,4)=(case When rtrim(@Ano)<'2020' then '2009' else rtrim(@Ano) end) and codcuentacontable=left(d.codcuenta,@digito)),
		fechcontable=c.fechco,c.nrodoc,
		glosa = (case when len(ltrim(rTrim(d.glosa)))>0 then d.glosa else c.glosa end) ,
		Debe=d.impdebe,Acreedor=d.imphaber from movcontables_d d
		inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
		inner join zona z on z.codzona=c.zona 
		where z.idempresa=@idempresa AND  c.mes between @Mes and @MesB  and codcuenta!='' and c.anio=@Ano and d.estado!='4' and c.estado!='4'
			and c.ZONA BETWEEN @Zona01  AND @Zona02 and codpro!='000001' and c.codunidadeconomica between @UnidadA and @UnidadB
			and d.impdebe+d.imphaber>0 and d.codmgc=@grupo
			and d.codcuenta between @cuenta1 and @cuenta2
	) todos order by cuenta,nrodoc,fechcontable
end
/****** Object:  StoredProcedure [dbo].[spp_rep_MayorAnalitico]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_rep_MayorAnalitico]
@Zona01 	varCHAR( 6 ),
@Zona02 	varCHAR( 6 ),
@UnidadA varchar(10),
@UnidadB varchar(10),
@cuenta1 varchar(10),
@cuenta2 varchar(10),
@Ano		CHAR( 4 ),
@MesA		char( 2 ),	
@MesB		CHAR( 2 ),
@idempresa int,
@grupo char(2),
@digito int
AS
-- exec "spp_rep_MayorAnalitico";1 '000017', '000017', '000017', '000017', '1010001', '9767901', '2015', '01', '12', 9, NULL, 7
if @grupo is null
begin
	select * from (
	select Cuenta=left(d.codcuenta,@digito),desceunta=(select descripcion from plancuentascontables 
												where idempresa=@idempresa and left(anio,4)=(case When rtrim(@Ano)<'2020' then '2009' else rtrim(@Ano) end) and codcuentacontable=d.codcuenta)
	,nrodoc = '',fechcontable=convert(datetime,@Ano+'-'+@MesA+'-01'),c.zona,
	FechaDoc='',dr='',
	df='',
	PROVEEDOR='',
	glosa = 'SALDO ANTERIOR ... ',
	impdebe=sum(d.impdebe),imphaber=sum(d.imphaber),
	Saldo= case  when left(codcuenta,2) between '10' and '39' then sum(d.impdebe)-Sum(d.imphaber )
				 when left(codcuenta,2) between '40' and '59' then sum(d.impdebe)-sum(d.imphaber)
				 when left(codcuenta,2) between '60' and '99' then sum(d.impdebe)-sum(d.imphaber) 
				end,
	'' TipoMedioPago,'' detGlosa
	from movcontables_d d
	inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
	inner join zona z on z.codzona=c.zona 
	where z.idempresa=@idempresa AND  c.mes < @MesA and codcuenta!='' and c.anio=@Ano
		and c.ZONA BETWEEN @Zona01  AND @Zona02 and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
		and d.impdebe+d.imphaber>0 and c.codunidadeconomica between @UnidadA and @UnidadB
		and d.codcuenta between @cuenta1 and @cuenta2
	--order by codcuenta,c.fechco
	group by d.codcuenta, c.zona
	union all 
	------------------
	select Cuenta=left(d.codcuenta,@digito),desceunta=(select descripcion from plancuentascontables 
												where idempresa=@idempresa and left(anio,4)=(case When rtrim(@Ano)<'2020' then '2009' else rtrim(@Ano) end) and codcuentacontable=d.codcuenta)
	,c.nrodoc,fechcontable=c.fechco,c.zona,
	FechaDoc=convert(varchar(10),fechadocReferencia,105),
	dr=(select DISTINCT rtrim(Descripcion)
		from tipodocumento where codigOdocumento=d.codigodocumentoreferencia )+' '+d.NRODOCReFERENCIA,
	df=(select DISTINCT rtrim(Descripcion)
		from tipodocumento where codigOdocumento=d.codigodocumentofuente)+' '+d.NRODOCReFERENCIA,
	PROVEEDOR=isnull((SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
								   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
								   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
								   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
								   when IdTipoCLienteProveedor=2 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
								   when IdTipoCLienteProveedor=2 and razonsocial!='' then razonsocial 
								   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
								   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
	FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),''),
	glosa= (case when d.glosa='' then C.glosa else d.glosa end),
	d.impdebe,d.imphaber,
	Saldo= case  when left(codcuenta,2) between '10' and '39' then d.impdebe-d.imphaber 
				 when left(codcuenta,2) between '40' and '59' then d.impdebe-d.imphaber
				 when left(codcuenta,2) between '60' and '99' then d.impdebe-d.imphaber 
				end,
	tmp.TipoMedioPago,d.glosa detGlosa
	from movcontables_d d
	inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
	inner join zona z on z.codzona=c.zona 
	inner join tbl_Tipo_Medio_Pago tmp on tmp.codTipoMedioPago=d.tipoMedioPago
	where z.idempresa=@idempresa AND  c.mes BETWEEN @MesA AND @MesB and codcuenta!='' and c.anio=@Ano
		and c.ZONA BETWEEN @Zona01  AND @Zona02 and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
		and d.impdebe+d.imphaber>0 and c.codunidadeconomica between @UnidadA and @UnidadB
		and d.codcuenta between @cuenta1 and @cuenta2
	--order by codcuenta,c.fechco
	) todos order by cuenta,fechcontable,proveedor, dr
	end
else
begin
	select * from (
		select Cuenta=left(d.codcuenta,@digito),desceunta=(select descripcion from plancuentascontables 
												where idempresa=@idempresa and left(anio,4)=(case When rtrim(@Ano)<'2020' then '2009' else rtrim(@Ano) end) and codcuentacontable=left(d.codcuenta,2))
	,nrodoc = '',fechcontable=convert(datetime,@Ano+'-'+@MesA+'-01'),c.zona,
	FechaDoc='',dr='',
	df='',
	PROVEEDOR='',
	glosa = 'SALDO ANTERIOR ... ',
	impdebe=sum(d.impdebe),imphaber=sum(d.imphaber),
	Saldo= case  when left(codcuenta,2) between '10' and '39' then sum(d.impdebe)-Sum(d.imphaber )
				 when left(codcuenta,2) between '40' and '59' then sum(d.impdebe)-sum(d.imphaber)
				 when left(codcuenta,2) between '60' and '99' then sum(d.impdebe)-sum(d.imphaber) 
				end,
	'' TipoMedioPago,'' detGlosa
	from movcontables_d d
	inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
	inner join zona z on z.codzona=c.zona 
	where z.idempresa=@idempresa AND  c.mes< @MesA and codcuenta!='' and c.anio=@Ano
		and c.ZONA BETWEEN @Zona01  AND @Zona02 and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
		and d.impdebe+d.imphaber>0 and c.codunidadeconomica between @UnidadA and @UnidadB
		and d.codcuenta between @cuenta1 and @cuenta2
		and d.codmgc=@grupo
	group by d.codcuenta, c.zona
	union all 
	------------------
		select Cuenta=left(d.codcuenta,@digito),desceunta=(select descripcion from plancuentascontables 
												where idempresa=@idempresa and left(anio,4)=(case When rtrim(@Ano)<'2020' then '2009' else rtrim(@Ano) end) and codcuentacontable=left(d.codcuenta,2))
	,c.nrodoc,fechcontable=c.fechco,c.zona,
	FechaDoc=convert(varchar(10),fechadocReferencia,105),
	dr=(select DISTINCT rtrim(Descripcion)
		from tipodocumento where codigOdocumento=d.codigodocumentoreferencia )+' '+d.NRODOCReFERENCIA,
	df=(select DISTINCT rtrim(Descripcion)
		from tipodocumento where codigOdocumento=d.codigodocumentofuente)+' '+d.NRODOCReFERENCIA,
	PROVEEDOR=isnull((SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
								   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
								   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
								   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
								   when IdTipoCLienteProveedor=2 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
								   when IdTipoCLienteProveedor=2 and razonsocial!='' then razonsocial 
								   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
								   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
	FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),''),
	glosa= (case when d.glosa='' then C.glosa else d.glosa end),
	d.impdebe,d.imphaber,
	Saldo= case  when left(codcuenta,2) between '10' and '39' then d.impdebe-d.imphaber 
				 when left(codcuenta,2) between '40' and '59' then d.impdebe-d.imphaber
				 when left(codcuenta,2) between '60' and '99' then d.impdebe-d.imphaber 
				end,
	tmp.TipoMedioPago,d.glosa detGlosa
	from movcontables_d d
	inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
	inner join zona z on z.codzona=c.zona 
	inner join tbl_Tipo_Medio_Pago tmp on tmp.codTipoMedioPago=d.tipoMedioPago
	where z.idempresa=@idempresa AND  c.mes BETWEEN @MesA AND @MesB and codcuenta!='' and c.anio=@Ano
		and c.ZONA BETWEEN @Zona01  AND @Zona02 and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
		and d.impdebe+d.imphaber>0 and c.codunidadeconomica between @UnidadA and @UnidadB
		and d.codcuenta between @cuenta1 and @cuenta2
		and d.codmgc=@grupo
--	order by codcuenta,c.fechco
	) todos order by cuenta,fechcontable,proveedor, dr

	END
/****** Object:  StoredProcedure [dbo].[spp_Rep_MayorGeneral]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Rep_MayorGeneral]

@lcZona01 	varCHAR( 6 ),
@lcZona02 	varCHAR( 6 ),
@lcUnidad01	CHAR( 10 ),
@lcUnidad02	CHAR( 10 ),
@lcGrupos       NVARCHAR( 100 ),
@lcCuenta01	CHAR( 12 ),
@lcCuenta02	CHAR( 12 ),
@lcAno		CHAR( 04 ),	
@lcMes		CHAR( 02 )

AS
SET NOCOUNT OFF

DECLARE @lnLongitud INT

SET @lcCuenta01 = RTRIM( @lcCuenta01 )
SET @lcCuenta02 = RTRIM( @lcCuenta02 )

SET @lnLongitud = LEN( @lcCuenta02 )


SELECT 	S_CCTA 		= D.CODCUENTA,
	ANTERIOR	= SUM( CASE WHEN C.MES < @lcMes THEN D.IMPDEBE - D.IMPHABER ELSE 0 END ),
	DEBE		= SUM( CASE WHEN C.MES = @lcMes THEN D.IMPDEBE ELSE 0 END ),
	HABER		= SUM( CASE WHEN C.MES = @lcMes THEN D.IMPHABER ELSE 0 END ),
	ACTUAL 		= SUM( D.IMPDEBE - D.IMPHABER )
FROM MOVCONTABLES_D D
INNER JOIN MOVCONTABLES_C C ON D.IDMOVCONTABLES_C=C.IDMOVCONTABLES_C	
WHERE C.ZONA	 BETWEEN @lcZona01 AND @lcZona02
      AND D.CODUNIDADECONOMICA BETWEEN @lcUnidad01 AND @lcUnidad02
      AND CHARINDEX( RTRIM(D.CODMGC), @lcGrupos ) > 0
      AND LEFT( D.CODCUENTA, @lnLongitud ) BETWEEN @lcCuenta01 AND @lcCuenta02
      AND C.ANIO = @lcAno
      AND C.MES  <= @lcMes
GROUP BY D.CODCUENTA
/****** Object:  StoredProcedure [dbo].[spp_rep_OtrosListados]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_rep_OtrosListados]
@ZonaA varchar(6),
@ZonaB varchar(6),
@UnidadA varchar(10),
@UnidadB varchar(10),
@Anio char(4),
@MesA char(2),
@MesB char(2),
@idempresa int,
@tipoDoc char(10)

as

--exec "spp_rep_OtrosListados";1 '000071', '000071', '000071    ', '000071    ', '2021', '00', '10', 56,'LIQCOMPRA'
--exec "spp_rep_OtrosListados";1 '000071', '000071', '000071    ', '000071    ', '2021', '00', '10', 56,'RETENIGV'
--exec "spp_rep_OtrosListados";1 '000071', '000071', '000071    ', '000071    ', '2021', '00', '10', 56,'PERCEPC'
--exec "spp_rep_OtrosListados";1 '000071', '000071', '000071    ', '000071    ', '2021', '00', '10', 56,'PDB-COM'
--exec "spp_rep_OtrosListados";1 '000071', '000071', '000071    ', '000071    ', '2021', '00', '10', 56,'PDB-VTA'
--exec "spp_rep_OtrosListados";1 '000071', '000071', '000071    ', '000071    ', '2021', '00', '10', 56,'PDB-FP'
--exec "spp_rep_OtrosListados";1 '000071', '000071', '000071    ', '000071    ', '2021', '00', '10', 56,'PDB-TC'
--exec "spp_rep_OtrosListados";1 '000071', '000071', '000071    ', '000071    ', '2021', '00', '10', 56,'PDB-DUA'

Declare @Ruc as varchar(15)
declare @reg int, @cadena varchar(1200), @direcCab Sysname 
Declare @t table (dir varchar(200))
declare @MD varchar(100), @Dir varchar(100)

Set @Ruc = (Select ruc from empresa where IDEMPRESA=@IdEmpresa)

IF @tipoDoc = 'LIQCOMPRA'
	BEGIN
		select TipoDocumentoCli= cli.codclienteproveedor,
			NRodocCliente = d.codpro,
			RazonSocialCli= (Case When cli.codclienteproveedor in ('6') and left(cli.Ruc,2)='20' Then 
							rtrim(cli.RazonSocial)  
						 Else 
							(Case When cli.codclienteproveedor in ('7') Then rtrim(cli.RazonSocial) Else '' End)
						End),
			PaternoCli= rtrim(left(rtrim(cli.Apellido),charindex(' ',rtrim(cli.Apellido)))),
			MaternoCli= rtrim(right(cli.Apellido,len(rtrim(cli.apellido))-charindex(' ',rtrim(cli.Apellido)))),
			Nombre1Cli= rtrim(left(rtrim(cli.Nombre),charindex(' ',rtrim(cli.Nombre)))),
			Nombre2Cli= rtrim(right(cli.Nombre,len(rtrim(cli.Nombre))-charindex(' ',rtrim(cli.Nombre)))),
			Serie=left(d.nrodocReferencia,4),
			Nrodoc=rtrim(substring(d.nrodocReferencia,6,8)),
			Femision=convert(varchar(10),d.fechaDocReferencia,103),
			FCancela=convert(varchar(10),d.fechaDocReferencia,103),
			MontoReten = d.MontoRetencion4,
			TipoReten='06'
		into tmpLIQC
		from movcontables_d d left outer join tbl_msto_ClienteProveedor cli on d.codpro=cli.ruc
		inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
			inner join ZONA Z ON C.ZONA=Z.CODZONA
		WHERE  C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB AND 
			   C.ANIO=@Anio AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND 
			   Z.IDEMPRESA=@idempresa and d.codpro!='000001' AND
			  d.estado !='4' AND LEFT(d.CodCuenta,2)in ('42')
		and d.codmgc='04'
		and cli.estado='1' and d.codigoDocumentoReferencia='04'

		-------------
		---- Buscamos la carpeta del cliente identificado por RUC si no existe lo creamos
		-- INSERT INTO @t
		-- EXEC master.dbo.xp_subdirs 'D:\Gestion\' 
		-- set @reg = (select count(dir) from @t where dir like (@ruc+'%'))

		--if @reg=0
		--Begin -- creando la carpeta del cliente

		--	set @Dir = 'D:\Gestion\' + @ruc
		--	SET @MD = ' mkdir ' + @Dir

		--	EXEC xp_cmdshell @MD, no_output
		--End
		---- Fin Busca la carpeta del cliente identificado por RUC y creando el archivo texto 

		----	set @reg = (select count(serie) from tmpLeCompras)
		--	set @direcCab = 'd:\gestion\'+ @ruc+'\0617'+@ruc+ @Anio+ @MesB +'L.txt'

		--			set @cadena = 'select TipoDocumentoCli+''|''+NRodocCliente+''|''+RazonSocialCli+''|''+PaternoCli+''|''+MaternoCli+''|''+Nombre1Cli+''|''+Nombre2Cli+''|''+Serie+''|''+Nrodoc+''|''+Femision+''|''+FCancela+''|''+convert(varchar(12),MontoReten)+''|''+TipoReten+''|'' from gestion..tmpLIQC'
		--			--set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r '+(Case when @aMes='03' then '\r' else '' end)+'\n' --\r\n
		--			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
		--			EXEC master..xp_cmdshell @cadena , no_output

		--SELECT * FROM tmpLIQC

		--DROP TABLE tmpLIQC
		-----------

	END

IF @tipoDoc = 'RETENIGV'
	BEGIN
		select top 10 * from movcontables_d
	END

IF @tipoDoc = 'PERCEPC'
	BEGIN
		select Ruc=d.codpro,
			TipoCompro=d.codigoDocumentoReferencia,
			Serie=left(d.NumeroPercepcion,4),
			Nrodoc=rtrim(substring(d.NumeroPercepcion,6,8)),
			FecPercep=convert(varchar(10),d.fechaPercepcion,103),
			MontoPercep = d.PorcentajePercepcion
		into tmpPERCEP
		from movcontables_d d inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
			inner join ZONA Z ON C.ZONA=Z.CODZONA
		WHERE  C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB AND 
			   C.ANIO=@Anio AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND 
			   Z.IDEMPRESA=@idempresa and d.codpro!='000001' AND
			  d.estado !='4' --AND LEFT(d.CodCuenta,2) in ('42')
		and d.codmgc='04'
		and d.impdebe<>0
		and d.codcuenta =(select valor from parametros where clave='CuentaPercepcion' and idempresa=@idempresa)

		-------------
		---- Buscamos la carpeta del cliente identificado por RUC si no existe lo creamos
		-- INSERT INTO @t
		-- EXEC master.dbo.xp_subdirs 'D:\Gestion\' 
		-- set @reg = (select count(dir) from @t where dir like (@ruc+'%'))

		--if @reg=0
		--Begin -- creando la carpeta del cliente

		--	set @Dir = 'D:\Gestion\' + @ruc
		--	SET @MD = ' mkdir ' + @Dir

		--	EXEC xp_cmdshell @MD, no_output
		--End
		---- Fin Busca la carpeta del cliente identificado por RUC y creando el archivo texto 

		----	set @reg = (select count(serie) from tmpLeCompras)
		--	set @direcCab = 'd:\gestion\'+ @ruc+'\0621'+@ruc+ @Anio+ @MesB +'P.txt'

		--			set @cadena = 'select Ruc+''||||0.00|''+TipoCompro+''|''+Serie+''|''+Nrodoc+''|''+FecPercep+''|''+convert(varchar(12),MontoPercep)+''|'' from gestion..tmpPERCEP'
		--			--set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r '+(Case when @aMes='03' then '\r' else '' end)+'\n' --\r\n
		--			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
		--			EXEC master..xp_cmdshell @cadena , no_output

		--SELECT * FROM tmpPERCEP

		--DROP TABLE tmpPERCEP
		-------------
	END

IF @tipoDoc = 'PDB-COM'
	BEGIN
		select TipoDoc='01',
			TipoCompro=codigoDocumentoReferencia,
			Femision=convert(varchar(10),fechaDocReferencia,103),
			Serie=left(nrodocReferencia,4),
			Nrodoc=rtrim(substring(nrodocreferencia,6,8)),
			TipoPersona=(Case When cli.codclienteproveedor='6' Then 
							(Case When left(d.codpro,2)='10' Then '01' Else '02' End)  
						 Else 
							'03'
						End),
			TipoDocumentoCli= cli.codclienteproveedor,
			NRodocCliente = d.codpro,
			RazonSocialCli= (Case When cli.codclienteproveedor in ('6') and left(cli.Ruc,2)='20' Then 
							rtrim(cli.RazonSocial)  
						 Else 
							(Case When cli.codclienteproveedor in ('7') Then rtrim(cli.RazonSocial) Else '' End)
						End),
			PaternoCli= (Case When cli.codclienteproveedor in ('6') and left(cli.Ruc,2)='10' Then 
							rtrim(left(rtrim(cli.Apellido),
									(case When charindex(' ',rtrim(cli.Apellido))=0 Then 40 else charindex(' ',rtrim(cli.Apellido)) End)))  
						 Else 
							''
						End),
			MaternoCli= '',
			Nombre1Cli= (Case When cli.codclienteproveedor in ('6') and left(cli.Ruc,2)='10' Then 
							rtrim(left(rtrim(cli.RazonSocial)+rtrim(cli.Nombre),
								(case When charindex(' ',rtrim(cli.RazonSocial)+rtrim(cli.Nombre))=0 Then 40 
								 else charindex(' ',rtrim(cli.RazonSocial)+rtrim(cli.Apellido)) End)))  
						 Else 
							''
						End),
			Nombre2Cli= '',
			TMoneda= d.Moneda,
			CodDestino= (Case When left(d.CodDua,3) in ('EX:') Then '2' Else '1' End),
			NroDestino= '1',
			BaseImponible = d.ImpDebe,
			ISC = d.MontoIsc,
			IGV = d.MontoIgv,
			Otros = '',
			IndicaDetrac= (case When len(CodigoDetraccion)>1 then '1' else '0' end),
			TasaDetrac=(case When len(CodigoDetraccion)>1 then CodigoDetraccion else '' end),
			SerieDetrac=(case When len(CodigoDetraccion)>1 then NroDetrac else '' end),
			IndicaRetec='0',
			TipoCompNC='',
			SerieNC='',
			NroDocNC='',
			FechaDocNC='',
			BaseImpoNC='',
			IgvNC=''
		into tmpPDBCOM
		from movcontables_d d left outer join tbl_msto_ClienteProveedor cli on d.codpro=cli.ruc
		inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
			inner join ZONA Z ON C.ZONA=Z.CODZONA
		WHERE  C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB AND 
			   C.ANIO=@Anio AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND 
			   Z.IDEMPRESA=@idempresa and d.codpro!='000001' AND
			  d.estado !='4' AND LEFT(d.CodCuenta,2)in ('42')
		and d.codmgc='04'
		and cli.estado='1'
		and d.coddua='EX:'
		-------------
		---- Buscamos la carpeta del cliente identificado por RUC si no existe lo creamos
		-- INSERT INTO @t
		-- EXEC master.dbo.xp_subdirs 'D:\Gestion\' 
		-- set @reg = (select count(dir) from @t where dir like (@ruc+'%'))

		--if @reg=0
		--Begin -- creando la carpeta del cliente

		--	set @Dir = 'D:\Gestion\' + @ruc
		--	SET @MD = ' mkdir ' + @Dir

		--	EXEC xp_cmdshell @MD, no_output
		--End
		---- Fin Busca la carpeta del cliente identificado por RUC y creando el archivo texto 

		----	set @reg = (select count(serie) from tmpLeCompras)
		--	set @direcCab = 'd:\gestion\'+ @ruc+'\C'+@ruc+ @Anio+ @MesB +'.txt'

		--			set @cadena = 'select TipoDoc+''|''+TipoCompro+''|''+Femision+''|''+Serie+''|''+Nrodoc+''|''+TipoPersona+''|''+TipoDocumentoCli+''|''+NRodocCliente+''|''+RazonSocialCli+''|''+PaternoCli+''|''+MaternoCli+''|''+Nombre1Cli+''|''+Nombre2Cli+''|''+convert(VARCHAR(1),TMoneda)+''|''+CodDestino+''|''+NroDestino+''|''+convert(varchar(12),BaseImponible)+''|''+(Case When ISC=0 Then '''' Else convert(varchar(12),ISC) End)+''|''+(Case When IGV=0 Then '''' Else convert(varchar(12),IGV) End)+''|''+Otros+''|''+IndicaDetrac+''|''+TasaDetrac+''|''+SerieDetrac+''|''+IndicaRetec+''|''+TipoCompNC+''|''+SerieNC+''|''+NroDocNC+''|''+FechaDocNC+''|''+BaseImpoNC+''|''+IgvNC+''|'' from gestion..tmpPDBCOM'
		--			--set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r '+(Case when @aMes='03' then '\r' else '' end)+'\n' --\r\n
		--			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
		--			EXEC master..xp_cmdshell @cadena, no_output

		--SELECT * FROM tmpPDBCOM

		--DROP TABLE tmpPDBCOM
		-------------
	END

IF @tipoDoc = 'PDB-VTA'
	BEGIN
		select TipoDoc='02',
			TipoCompro=d.codigoDocumentoReferencia,
			Femision=convert(varchar(10),d.fechaDocReferencia,103),
			Serie=left(d.nrodocReferencia,4),
			Nrodoc=rtrim(substring(d.nrodocreferencia,6,8)),
			TipoPersona=(Case When cli.codclienteproveedor='6' Then 
							(Case When left(d.codpro,2)='10' Then '01' Else '02' End)  
						 Else 
							'03'
						End),
			TipoDocumentoCli= cli.CodClienteProveedor,
			NRodocCliente = d.codpro,
			RazonSocialCli= (Case When cli.codclienteproveedor in ('6') and left(cli.Ruc,2)='20' Then 
							rtrim(cli.RazonSocial)  
						 Else 
							(Case When cli.codclienteproveedor in ('7') Then rtrim(cli.RazonSocial) Else '' End)
						End),
			PaternoCli= (Case When cli.codclienteproveedor in ('6') and left(cli.Ruc,2)='10' Then 
							rtrim(left(rtrim(cli.apellido),
									(case When charindex(' ',rtrim(cli.apellido))=0 Then 40 else charindex(' ',rtrim(cli.apellido)) End)))  
						 Else 
							''
						End),
			MaternoCli= '',
			Nombre1Cli= (Case When cli.codclienteproveedor in ('6') and left(cli.Ruc,2)='10' Then 
							rtrim(left(rtrim(cli.RazonSocial)+rtrim(cli.Nombre),
								(case When charindex(' ',rtrim(cli.RazonSocial)+rtrim(cli.Nombre))=0 Then 40 
								 else charindex(' ',rtrim(cli.RazonSocial)+rtrim(cli.apellido)) End)))  
						 Else 
							''
						End),
			Nombre2Cli= '',
			TMoneda= d.Moneda,
			CodDestino= (Case When left(d.CodDua,3) in ('EX:') Then '2' Else '1' End),
			NroDestino= '1',
			BaseImponible = d.ImpDebe,
			ISC = d.MontoIsc,
			IGV = d.MontoIgv,
			Otros = '',
			IndicaPercep= '0',
			TipoTasaPercep='',
			SeriePercep='',
			NroPercep='',
			TipoCompNC='',
			SerieNC='',
			NroDocNC='',
			FechaDocNC='',
			BaseImpoNC='',
			IgvNC=''
		into tmpPDBVTA
		from movcontables_d d left outer join tbl_msto_ClienteProveedor cli on d.codpro=cli.ruc
		inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
			inner join ZONA Z ON C.ZONA=Z.CODZONA
		WHERE  C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB AND 
			   C.ANIO=@Anio AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND 
			   Z.IDEMPRESA=@idempresa and d.codpro!='000001' AND
			  d.estado !='4' AND LEFT(d.CodCuenta,2)in ('12')
		and d.codmgc='18'
		and cli.estado='1'

		-------------
		---- Buscamos la carpeta del cliente identificado por RUC si no existe lo creamos
		-- INSERT INTO @t
		-- EXEC master.dbo.xp_subdirs 'D:\Gestion\' 
		-- set @reg = (select count(dir) from @t where dir like (@ruc+'%'))

		--if @reg=0
		--Begin -- creando la carpeta del cliente

		--	set @Dir = 'D:\Gestion\' + @ruc
		--	SET @MD = ' mkdir ' + @Dir

		--	EXEC xp_cmdshell @MD, no_output
		--End
		---- Fin Busca la carpeta del cliente identificado por RUC y creando el archivo texto 

		----	set @reg = (select count(serie) from tmpLeCompras)
		--	set @direcCab = 'd:\gestion\'+ @ruc+'\V'+@ruc+ @Anio+ @MesB +'.txt'

		--			set @cadena = 'select TipoDoc+''|''+TipoCompro+''|''+Femision+''|''+Serie+''|''+Nrodoc+''|''+TipoPersona+''|''+TipoDocumentoCli+''|''+NRodocCliente+''|''+RazonSocialCli+''|''+PaternoCli+''|''+MaternoCli+''|''+Nombre1Cli+''|''+Nombre2Cli+''|''+convert(VARCHAR(1),TMoneda)+''|''+CodDestino+''|''+NroDestino+''|''+convert(varchar(12),BaseImponible)+''|''+(Case When ISC=0 Then '''' Else convert(varchar(12),ISC) End)+''|''+(Case When IGV=0 Then '''' Else convert(varchar(12),IGV) End)+''|''+Otros+''|''+IndicaPercep+''|''+TipoTasaPercep+''|''+SeriePercep+''|''+NroPercep+''|''+TipoCompNC+''|''+SerieNC+''|''+NroDocNC+''|''+FechaDocNC+''|''+BaseImpoNC+''|''+IgvNC+''|'' from gestion..tmpPDBVTA'
		--			--set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r '+(Case when @aMes='03' then '\r' else '' end)+'\n' --\r\n
		--			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
		--			EXEC master..xp_cmdshell @cadena , no_output

		--SELECT * FROM tmpPDBVTA

		--DROP TABLE tmpPDBVTA
		-------------
	END

IF @tipoDoc = 'PDB-FP'
	BEGIN
		select TipoDoc='01',
			TipoCompro=codigoDocumentoReferencia,
			Serie=left(nrodocReferencia,4),
			Nrodoc=rtrim(substring(nrodocreferencia,6,8)),
			TipoPersona=(Case When cli.codclienteproveedor='6' Then 
							(Case When left(d.codpro,2)='10' Then '01' Else '02' End)  
						 Else 
							'03'
						End),
			TipoDocumentoCli= cli.codclienteproveedor,
			NRodocCliente = d.codpro,
			MedioPago = '098',
			Entidad ='',
			OperBco ='',
			FecOperacion='',
			MontoOper=''
		into tmpPDBFP
		from movcontables_d d left outer join tbl_msto_ClienteProveedor cli on d.codpro=cli.ruc
		inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
			inner join ZONA Z ON C.ZONA=Z.CODZONA
		WHERE  C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB AND 
			   C.ANIO=@Anio AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND 
			   Z.IDEMPRESA=@idempresa and d.codpro!='000001' AND
			  d.estado !='4' AND LEFT(d.CodCuenta,2)in ('42')
		and d.codmgc='04'
		and cli.estado='1'
		and d.coddua='EX:'
		-------------
		---- Buscamos la carpeta del cliente identificado por RUC si no existe lo creamos
		-- INSERT INTO @t
		-- EXEC master.dbo.xp_subdirs 'D:\Gestion\' 
		-- set @reg = (select count(dir) from @t where dir like (@ruc+'%'))

		--if @reg=0
		--Begin -- creando la carpeta del cliente

		--	set @Dir = 'D:\Gestion\' + @ruc
		--	SET @MD = ' mkdir ' + @Dir

		--	EXEC xp_cmdshell @MD, no_output
		--End
		---- Fin Busca la carpeta del cliente identificado por RUC y creando el archivo texto 

		----	set @reg = (select count(serie) from tmpLeCompras)
		--	set @direcCab = 'd:\gestion\'+ @ruc+'\F'+@ruc+ @Anio+ @MesB +'.txt'


		--			set @cadena = 'select TipoDoc+''|''+TipoCompro+''|''+Serie+''|''+Nrodoc+''|''+TipoPersona+''|''+TipoDocumentoCli+''|''+NRodocCliente+''|''+MedioPago+''|''+Entidad+''|''+OperBco+''|''+FecOperacion+''|''+MontoOper+''|'' from gestion..tmpPDBFP'
		--			--set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r '+(Case when @aMes='03' then '\r' else '' end)+'\n' --\r\n
		--			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
		--			EXEC master..xp_cmdshell @cadena , no_output

		--SELECT * FROM tmpPDBFP

		--DROP TABLE tmpPDBFP
		-------------
	END

IF @tipoDoc = 'PDB-TC'
	BEGIN
		select a.fecha,tipocambioCompra, tipoCambioVenta 
		into tmpPDBTC
		from (
		select d.fechaDocReferencia fecha
		from movcontables_d d left outer join tbl_msto_ClienteProveedor cli on d.codpro=cli.ruc
		inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
			inner join ZONA Z ON C.ZONA=Z.CODZONA
		WHERE  C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB AND 
			   C.ANIO=@Anio AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND 
			   Z.IDEMPRESA=@idempresa and d.codpro!='000001' AND
			  d.estado !='4' AND LEFT(d.CodCuenta,2)in ('42','12')
		and d.codmgc in ('04','18')
		and cli.estado='1'
		Group by d.fechaDocReferencia
		) a inner join tipocambio tc on a.fecha=tc.fecha
	
		-------------
		---- Buscamos la carpeta del cliente identificado por RUC si no existe lo creamos
		-- INSERT INTO @t
		-- EXEC master.dbo.xp_subdirs 'D:\Gestion\' 
		-- set @reg = (select count(dir) from @t where dir like (@ruc+'%'))

		--if @reg=0
		--Begin -- creando la carpeta del cliente

		--	set @Dir = 'D:\Gestion\' + @ruc
		--	SET @MD = ' mkdir ' + @Dir

		--	EXEC xp_cmdshell @MD, no_output
		--End
		---- Fin Busca la carpeta del cliente identificado por RUC y creando el archivo texto 

		----	set @reg = (select count(serie) from tmpLeCompras)
		--	set @direcCab = 'd:\gestion\'+ @ruc+'\'+@ruc+'.tc'

		--			set @cadena = 'select convert(varchar(10),fecha,103)+''|''+convert(varchar(12),TipoCambioCompra)+''|''+convert(varchar(12),TipoCambioVenta)+''|'' from gestion..tmpPDBTC'
		--			--set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r '+(Case when @aMes='03' then '\r' else '' end)+'\n' --\r\n
		--			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
		--			EXEC master..xp_cmdshell @cadena , no_output

		--SELECT * FROM tmpPDBTC

		--DROP TABLE tmpPDBTC
		-------------
	END

IF @tipoDoc = 'PDB-DUA'
	BEGIN
		select CodDua=d.CodAduana,
			AnioDua=year(d.fechDua),
			NroCorrel=rtrim(d.CodDua),
			FechEmbarque=convert(varchar(10),d.fechaDocReferencia,103),
			FechDua=d.fechDua,
			BaseImponible = d.ImpDebe
		into tmpPDBDDUA
		from movcontables_d d left outer join tbl_msto_ClienteProveedor cli on d.codpro=cli.ruc
		inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
			inner join ZONA Z ON C.ZONA=Z.CODZONA
		WHERE  C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB AND 
			   C.ANIO=@Anio AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND 
			   Z.IDEMPRESA=@idempresa and d.codpro!='000001' AND
			  d.estado !='4' AND LEFT(d.CodCuenta,2)in ('12')
		and d.codmgc='18'
		and cli.estado='1'

		-------------
		---- Buscamos la carpeta del cliente identificado por RUC si no existe lo creamos
		-- INSERT INTO @t
		-- EXEC master.dbo.xp_subdirs 'D:\Gestion\' 
		-- set @reg = (select count(dir) from @t where dir like (@ruc+'%'))

		--if @reg=0
		--Begin -- creando la carpeta del cliente

		--	set @Dir = 'D:\Gestion\' + @ruc
		--	SET @MD = ' mkdir ' + @Dir

		--	EXEC xp_cmdshell @MD, no_output
		--End
		---- Fin Busca la carpeta del cliente identificado por RUC y creando el archivo texto 

		----	set @reg = (select count(serie) from tmpLeCompras)
		--	set @direcCab = 'd:\gestion\'+ @ruc+'\'+@ruc+ @Anio+ @MesB +'.dua'

		--			set @cadena = 'select CodDua+''|''+convert(varchar(4),AnioDua)+''|''+NroCorrel+''|''+FechEmbarque+''|''+convert(varchar(10),FechDua,103)+''|''+convert(varchar(12),BaseImponible)+''|'' from gestion..tmpPDBDDUA'
		--			--set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -q -C1252 -t "|" -r '+(Case when @aMes='03' then '\r' else '' end)+'\n' --\r\n
		--			set @cadena = 'bcp "'+@cadena+ '" queryout "' + @direcCab + '" -T -c -C -t -r \n"' --\r\n
		--			EXEC master..xp_cmdshell @cadena, no_output

		--SELECT * FROM tmpPDBDDUA

		--DROP TABLE tmpPDBDDUA
		-------------
	END
/****** Object:  StoredProcedure [dbo].[spp_Rep_PagosXproveedor]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Rep_PagosXproveedor]
--@Anio char(4),
--@aMes char(2),
--@bMes char(2),
@fechaA datetime,
@fechaB datetime,
@aZona varchar(6),
@bZona varchar(6),
@aCodUnidadEconomica varchar(10),
@bCodUnidadEconomica varchar(10),
@proveedor varchar(11),
@tipo char(2)
as

-- exec "SP_Rep_PagoProveedores";1 '01/01/2011', '29/10/2011', '04', '10427601132', 6
set language spanish
declare @idempresa as int

select @idempresa=idempresa from zona where codzona= @aZona

select Correlativo=CodCuenta,FechaDocReferencia,FechaVencimiento,DesTipoDocumento,NroDocReferencia,tcp.RUC,
Proveedor=case when tcp.IdTipoClienteProveedor=1 and tcp.razonsocial!='' then tcp.razonsocial 
										 when tcp.IdTipoClienteProveedor=4 and tcp.razonsocial!='' then tcp.RazonSocial 
										 when tcp.IdTipoClienteProveedor=1 and (tcp.nombre+' '+tcp.apellido)!='' then (tcp.nombre+' '+tcp.apellido)
										 when tcp.IdTipoClienteProveedor=4 and (tcp.nombre+' '+tcp.apellido)!='' then (tcp.nombre+' '+tcp.apellido) end,
AGDOGE1=  case CodigoDocumentoReferencia 
				when '07' then (cast(isnull(case tipoOper when 1 then  d.impDebe end,0.00)as numeric(15,3)))*(-1) else cast(isnull(case tipoOper when 1 then  d.impDebe end,0.00)as numeric(15,3)) end,
IGV_1=    case CodigoDocumentoReferencia 
				when '07' then (cast(isnull(case when tipoOper=1 then d.montoIGV end,0.00)as numeric(15,3)))*(-1) 
				else cast(isnull(case when tipoOper=1 then d.montoIGV end,0.00)as numeric(15,3)) end,
AGDOGE_NG=case CodigoDocumentoReferencia 
				when '07' then (cast(isnull(case tipoOper when 2 then d.impDebe end,0.00)as numeric(15,3)))*(-1) else cast(isnull(case tipoOper when 2 then d.impDebe end,0.00)as numeric(15,3)) end,
IGV_2=	  case CodigoDocumentoReferencia 
				when '07' then (cast(isnull(case when tipoOper=2 then d.montoIGV end,0.00)as numeric(15,3)))*(-1)
				else cast(isnull(case when tipoOper=2 then d.montoIGV end,0.00)as numeric(15,3)) end,
AGDO_NG=  case CodigoDocumentoReferencia 
				when '07' then (cast(isnull(case tipoOper when 3 then d.impDebe end,0.00)as numeric(15,3)))*(-1) else cast(isnull(case tipoOper when 3 then d.impDebe end,0.00)as numeric(15,3)) end,
IGV_3=	  case CodigoDocumentoReferencia 
				when '07' then (cast(isnull(case when tipoOper=3 then d.montoIGV end,0.00)as numeric(15,3)))*(-1)
				else cast(isnull(case when tipoOper=3 then d.montoIGV end,0.00)as numeric(15,3)) end,
Valor_Adquisicion=case CodigoDocumentoReferencia 
				when '07' then (cast(isnull(case afecto when 0 then d.impDebe end,0.00)as numeric(15,3)))*(-1)
				else cast(isnull(case when afecto=0 and d.CodigoDocumentoReferencia!='40' then d.impDebe end,0.00)as numeric(15,3))end,
ISC=	  case CodigoDocumentoReferencia 
				when '07' then (cast(isnull(case isc when 1 then d.impDebe end,0.00)as numeric(15,3)))*(-1)
				else cast(isnull(case isc when 1 then d.impDebe end,0.00)as numeric(15,3))end,
TotalImporte=case CodigoDocumentoReferencia 
				when '07' then (cast(isnull(case when tipooper=1 then d.impDebe + d.montoIGV
				  when tipooper=2 then d.impDebe + d.montoIGV
				  when tipooper=3 then d.impDebe + d.montoIGV
				  when afecto=0 then d.impDebe
				  when isc=1 then d.impDebe
			 end,0.00)as numeric(15,3)))*(-1)
				else cast(isnull(case when tipooper=1 then d.impDebe + d.montoIGV
				  when tipooper=2 then  d.impDebe + d.montoIGV
				  when tipooper=3 then d.impDebe + d.montoIGV
				  when afecto=0 then d.impDebe  
				  when isc=1 then d.impDebe 
			 end,0.00)as numeric(15,3)) end,
PorcentajePercepcion=isnull(case when  tipooper=4 then d.impdebe end,0.00),NroDetrac,fechaDetrac,Tipocambio,
Fecha_RefComprobModi=case when (datepart(yy,Fecha_RefComprobModi)>1900) then convert(varchar(10),Fecha_RefComprobModi,103) else '' end,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi
from movcontables_d d
inner join movcontables_c c on c.idMovContables_C=d.IdMovContables_c
inner join tipodocumento td on td.CodigoDocumento=d.CodigoDocumentoReferencia
inner join tbl_msto_ClienteProveedor tcp on tcp.RUC=d.CodPro
inner join  (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When convert(varchar(4),year(@fechaA))<'2020' then '2009' else convert(varchar(4),year(@fechaA)) end)) p on p.codcuentacontable=d.codcuenta
where c.codMGC=@tipo 
      and d.FechaDocReferencia between @fechaA and @fechaB
	  and c.zona between @aZona and @bZona
      and c.CodUnidadEconomica between @aCodUnidadEconomica and @bCodUnidadEconomica
      and d.codPro=@proveedor AND tcp.Estado=1
	  and d.estado not in('4','D') and c.estado!='4' and d.codpro!='000001'
/****** Object:  StoredProcedure [dbo].[spp_rep_PatrimonioNeto]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rep_PatrimonioNeto]
@Zonaa 		varchar(6),
@Zonab 		varchar(6),
@Unidada 	char(10),
@Unidadb 	char(10),
@Anio 		char(4),
@Mesa 		char(2),
@Mesb       char(2),
@IdEmpresa int
as
-- spp_rep_PatrimonioNeto '000012','000012','000012','000012','2013','00','06',5


declare @Resultado decimal(18,6)

--selecciona solo los que estan en parametros y pone en estado 0
UPDATE tbl_MaestroEstadosIntegrales SET ESTADO=0 WHERE CTA NOT like (Select '9['+replace(replace(valor,'9',''),',','')+']%'
										from dbo.parametros Where IdEmpresa = @idempresa and Estado =1 and clave='CuentasGastoOperativo'
									   ) 
										AND ctagral='91'

set @resultado= (select Ejercicio=sum(importe) 
from vEstadosIntegrales(@Zonaa,@Zonab,@Unidada,@Unidadb,@Anio,@Mesa, @Mesb,@idempresa,'GANANYPERD')
having sum(importe)!=0)

--selecciona solo los que estan en parametros y pone en estado normal
UPDATE tbl_MaestroEstadosIntegrales SET ESTADO=1 WHERE CTA NOT like (Select '9['+replace(replace(valor,'9',''),',','')+']%'
										from dbo.parametros Where IdEmpresa = @idempresa and Estado =1 and clave='CuentasGastoOperativo'
									   ) 
										AND ctagral='91'

--set @resultado= (select Ejercicio=sum(importe) 
--from vEstadoGananciasPerdidas(@Zonaa,@Zonab,@Unidada,@Unidadb,@Anio,@Mesa, @Mesb,@idempresa)
--having sum(importe)!=0)
if @Resultado>0
begin
	declare @PorRenta decimal(20,6)
	declare @Aux decimal(20,6)
	set @Aux=@Resultado
	set @PorRenta=(select convert(decimal(10,6),convert(decimal(10,6),porRenta)/100) from empresa where idEmpresa=@IdEmpresa)

	set @Resultado=(@Resultado-@Resultado*@PorRenta)
end

-- mov. de apertura
select 'E101' codigoflujoefectivo, rtrim('   SALDO AL 01 DE '+(CASE WHEN  mes in ('00', '01') THEN 'ENERO' 
WHEN  mes = '02' THEN 'FEBRERO' 
WHEN  mes = '03' THEN 'MARZO' 
WHEN  mes = '04' THEN 'ABRIL' 
WHEN  mes = '05' THEN 'MAYO' 
WHEN  mes = '06' THEN 'JUNIO' 
WHEN  mes = '07' THEN 'JULIO' 
WHEN  mes = '08' THEN 'AGOSTO' 
WHEN  mes = '09' THEN 'SETIEMBRE' 
WHEN  mes = '10' THEN 'OCTUBRE' 
WHEN  mes = '11' THEN 'NOVIEMBRE' ELSE 'DICIEMBRE' END)
+' DEL '+@Anio) descripcion,(CASE WHEN  isnull(left(codcuenta,3),'') in ('501') THEN '1 Capital' 
WHEN  isnull(left(codcuenta,3),'') in ('521','522') THEN '2 Capital Adicional' 
WHEN  isnull(left(codcuenta,3),'') = '511' THEN '3 Acciones de Inversión' 
WHEN  isnull(left(codcuenta,3),'') = '571' THEN '4 Excedente de Revaluación' 
WHEN  isnull(left(codcuenta,3),'') = '582' THEN '5 Reserva Legal' 
WHEN  isnull(left(codcuenta,3),'') = '589' THEN '6 Otras Reservas' 
WHEN  isnull(left(codcuenta,3),'') in ('591','592') THEN '7 Resultados Acumulados' 
ELSE '8 Otros sin considerar' END) codcuenta, 
sum(imphaber-impdebe) saldo, sum(impdebe) debe, sum(imphaber) haber ,'4D0101' codigosbs 
--select crp, codcuenta,sum(impdebe) debe, sum(imphaber) haber 
from movcontables_d d inner join movcontables_c c on d.idmovcontables_c=c.idmovcontables_c
where d.codmgc='00' and left(codcuenta,2) in ('50','51','52','56','57','58','59') and c.estado<>'4' and d.estado<>'4'
--and mes between '00' and '00' 
and anio=@Anio and c.codunidadeconomica between @Unidada and @Unidada and c.zona between @Zonaa and @Zonab
group by mes,left(codcuenta,3)
union all 
-- mov. del periodo
select codigoflujoefectivo,' '+ rtrim(descripcion) descrpcion,(CASE WHEN  isnull(left(codcuenta,3),'') in ('501') THEN '1 Capital' 
WHEN  isnull(left(codcuenta,3),'') in ('521','522') THEN '2 Capital Adicional' 
WHEN  isnull(left(codcuenta,3),'') = '511' THEN '3 Acciones de Inversión' 
WHEN  isnull(left(codcuenta,3),'') = '571' THEN '4 Excedente de Revaluación' 
WHEN  isnull(left(codcuenta,3),'') = '582' THEN '5 Reserva Legal' 
WHEN  isnull(left(codcuenta,3),'') = '589' THEN '6 Otras Reservas' 
WHEN  isnull(left(codcuenta,3),'') in ('591','592') THEN '7 Resultados Acumulados' 
ELSE '8 Otros sin considerar' END) codcuenta, 
isnull(haber-debe,0) saldo, isnull(debe,0) debe, isnull(haber,0) haber,codigosbs
from tbl_flujoEfectivo 
left outer join 
(select crp, codcuenta,sum(impdebe) debe, sum(imphaber) haber from movcontables_d d inner join movcontables_c c on d.idmovcontables_c=c.idmovcontables_c
where left(crp,1) in ('E') and left(codcuenta,2) in ('50','51','52','56','57','58','59') and c.estado<>'4' and d.estado<>'4'
and mes between @Mesa and @Mesb and anio=@Anio and c.codunidadeconomica between @Unidada and @Unidada and c.zona between @Zonaa and @Zonab
group by crp, codcuenta
union all --agregando utilidad/perdida
select 'E109' crp, codcuenta='591', (case when @Resultado<0 then @Resultado else 0 end) debe, (case when @Resultado<0 then 0 else @Resultado end) Haber 
where @Resultado!=0
) pneto 
on tbl_flujoEfectivo.codigoFlujoEfectivo=pneto.crp
where left(codigoFlujoEfectivo,1) in ('E') and estado='1'
union all
select 'E125' codigoflujoefectivo,'' descripcion, '2 Capital Adicional' codcuenta, 0 saldo,0 debe, 0 haber,'4D0136' codigosbs
union all
select 'E125' codigoflujoefectivo,'' descripcion, '3 Acciones de Inversión' codcuenta, 0 saldo,0 debe, 0 haber,'4D0136' codigosbs
union all
select 'E125' codigoflujoefectivo,'' descripcion, '4 Excedente de Revaluación' codcuenta, 0 saldo,0 debe, 0 haber,'4D0136' codigosbs
union all
select 'E125' codigoflujoefectivo,'' descripcion, '5 Reserva Legal' codcuenta, 0 saldo,0 debe, 0 haber,'4D0136' codigosbs
union all
select 'E125' codigoflujoefectivo,'' descripcion, '6 Otras Reservas' codcuenta, 0 saldo,0 debe, 0 haber,'4D0136' codigosbs
union all
select 'E125' codigoflujoefectivo,'' descripcion, '7 Resultados Acumulados' codcuenta, 0 saldo,0 debe, 0 haber,'4D0136' codigosbs
order by codigoFlujoEfectivo,codcuenta

/****** Object:  StoredProcedure [dbo].[spp_rep_PlancuentasContables]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rep_PlancuentasContables]
	@Condicion varchar(900),@idEmpresa varchar(9),@anio varchar(6)
as
-- spp_rep_PlanCuentascontables '(10,12)',2,'2020'
	declare @SQL varchar(2000)
	set @SQL=('
	declare @Tabla1 Table(IdGrupo varchar(2),CodCuentaContable nchar(10),Descripcion varchar(150),Nivel nchar(1),Tipo nchar(2),Analisis nchar(1),Debe varchar(10),Haber varchar(10),Cierre varchar(10),IdEmpresa bigint)
	declare @Tabla2 Table(IdGrupo varchar(2),Descripcion varchar(150),IdEmpresa bigint)

	insert into @Tabla1
	select IdGrupo=left(codCuentaContable,2),CodCuentaContable,Descripcion,NivelCuenta,TipoCuenta,TipoAnalisis,CtaDebe,CtaHaber,CtaCierre,IdEmpresa from plancuentascontables 
	where estado=1 and len(CodCuentaContable)>2 and idEmpresa='+@idEmpresa+' and left(anio,4)=(case When '+@anio+'<''2020'' then ''2009'' else '+@anio+' end)

	insert into @Tabla2
	select IgGrupo=left(codCuentaContable,2),Descripcion,IdEmpresa from plancuentascontables
	where len(codCuentaContable)=2 and estado=1  and idEmpresa='+@idEmpresa+' and left(anio,4)=(case When '+@anio+'<''2020'' then ''2009'' else '+@anio+' end)

	
	select Grupo=a.idGrupo+ ''  -  '' + b.Descripcion,a.CodCuentaContable,a.Descripcion,a.Nivel,a.Tipo,a.Analisis,a.Debe,a.Haber,a.Cierre 
	from @Tabla1 a
	left outer join @Tabla2 b
	on a.idGrupo=b.idGrupo')
	if len(@Condicion)>0
	begin
		set @SQL=@SQL + ' where left(codCuentaContable,2) in '+@Condicion+' order by left(codCuentaContable,10)'
	end
	exec (@SQL)
/****** Object:  StoredProcedure [dbo].[spp_rep_Ratios_1Vs2]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rep_Ratios_1Vs2]	
	@idEmpresa bigint,@Zona1 varchar(200),@Zona2 varchar(200),@Unidad1 varchar(200),@Unidad2 varchar(200),
	@AnioA1 varchar(4),@MesA1 varchar(2),@MesA2 varchar(2),@AnioB1 varchar(4),
	@MesB1 varchar(2),@MesB2 varchar(2)
as
	--Declare @idEmpresa bigint
	--declare @Zona1 varchar(200)
	--declare @Zona2 varchar(200)
	--declare @Unidad1 varchar(200)
	--declare @Unidad2 varchar(200)
	--declare @AnioA1 varchar(4)
	--declare @MesA1 varchar(2)
	--declare @MesA2 varchar(2)
	--declare @AnioB1 varchar(4)
	--declare @MesB1 varchar(2)
	--declare @MesB2 varchar(2)

	--set @IdEmpresa=1
	--set @Zona1='000001'
	--set @Zona2='000001'
	--set @Unidad1='00000101'
	--set @Unidad2='00000101'
	--set @AnioA1='2008'
	--set @MesA1='01'
	--set @MesA2='06'
	--set @AnioB1='2008'
	--set @MesB1='06'
	--set @MesB2='12'

	declare @T1 table(Ratio varchar(50),FOrmula varchar(100),Resultado varchar(100),Valor decimal(10,2))
	declare @T2 table(Ratio varchar(50),FOrmula varchar(100),Resultado varchar(100),Valor decimal(10,2))

	insert into @T1
	exec spp_rpt_Ratios @idEmpresa,@Zona1,@Zona2,@Unidad1,@Unidad2,@AnioA1,@MesA1,@MesA2 
	insert into @T2
	exec spp_rpt_Ratios @idEmpresa,@Zona1,@Zona2,@Unidad1,@Unidad2,@AnioB1,@MesB1,@MesB2 

	Select Periodo=@MesA2+'-'+@AnioA1,Ratio,Valor=Valor*100,Formula,Resultado From @T1
	union all
	Select Periodo=@MesB2+'-'+@AnioB1,Ratio,Valor=Valor*100,Formula,Resultado From @T2
	order by ratio,Periodo
/****** Object:  StoredProcedure [dbo].[spp_Rep_RegistroCompra]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_Rep_RegistroCompra]
@Anio char(4),
@aMes char(2),
@bMes char(2),
@aZona varchar(6),
@bZona varchar(6),
@aCodUnidadEconomica varchar(10),
@bCodUnidadEconomica varchar(10),
@docA char(2),
@docB char(2),
@IdEmpresa int
AS
--exec "spp_Rep_RegistroCompra";1 '2016', '03', '03', '000002', '000002', '000002    ', '000002    ', '01', '99', 2
declare @nombreEmpre as varchar(60)
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'##Resumen') AND type in (N'U'))
BEGIN 
	DROP TABLE ##Resumen
END
set @docA= (Case When @docA='01' then '00' else @docA end)

select mes,correlativo, FechaDocReferencia, --FechaVencimiento,
FechaVencimiento=case when (datepart(yy,FechaVencimiento)>1900) then convert(varchar(10),
	FechaVencimiento,5) else ''''  end,
DesTipoDocumento,CodAduana,AnioDua,
(case when DesTipoDocumento in ('05','55') then substring(rtrim(serie),4,1) else 
	(case when DesTipoDocumento in ('50','51','52','53','54') then substring(rtrim(serie),2,3) else serie end) end) serie, 
	NroDocReferencia, CodClienteProveedor, RUC, Proveedor, AGDOGE1 = sum(AGDOGE1), IGV_1 = sum(IGV_1),
AGDOGE_NG = sum(AGDOGE_NG), IGV_2 = sum(IGV_2), AGDO_NG = sum(AGDO_NG), IGV_3 = sum(IGV_3), 
Valor_Adquisicion = sum(Valor_Adquisicion), ISC = sum(ISC),MontoIcbper= sum(MontoIcbper),OtrosCptos= sum(OtrosCptos),TotalImporte = sum(TotalImporte),
PorcentajePercepcion = sum(PorcentajePercepcion), 
NroDetrac,fechaDetrac,Tipocambio, Fecha_RefComprobModi, Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi, NombreDocumento,nrodocumento,(case when right(rtrim(codIn),1) in ('-','0') then '' else right(rtrim(codIn),1) end) ClasificaBS
into ##resumen 
from (
select c.mes, Correlativo=dbo.traeNombreMes(c.mes),FechaDocReferencia,FechaVencimiento,DesTipoDocumento=d.CodigoDocumentoReferencia,CodAduana,AnioDua=case when year(FechDUA)!=1900 then year(FechDUA) else 0 end,
serie=isnull(case when charindex('-',nrodocreferencia)>0 then left(nrodocreferencia,
			(select valor from parametros where clave='SeriesLength' and idempresa=@IdEmpresa))end,''),
NroDocReferencia=(case when charindex('-',nrodocreferencia)>0 then right(rtrim(nrodocreferencia),(select valor from parametros 
										 where clave='NumbersLength' and idempresa=@IdEmpresa))else nrodocreferencia end),
tcp.CodClienteProveedor,tcp.RUC,
Proveedor=case when tcp.IdTipoClienteProveedor=1 and tcp.razonsocial!='' then tcp.razonsocial 
										 when tcp.IdTipoClienteProveedor=4 and tcp.razonsocial!='' then tcp.RazonSocial 
										 when tcp.IdTipoClienteProveedor=1 and (tcp.nombre+' '+tcp.apellido)!='' then (tcp.nombre+' '+tcp.apellido)
										 when tcp.IdTipoClienteProveedor=4 and (tcp.nombre+' '+tcp.apellido)!='' then (tcp.nombre+' '+tcp.apellido) end,
AGDOGE1=  case CodigoDocumentoReferencia 
				when '07' then (cast(isnull(case tipoOper when 1 then  d.impHABER end,0.00)as numeric(15,3)))*(-1) else cast(isnull(case tipoOper when 1 then  d.impDebe-montocuentaauxiliar end,0.00)as numeric(15,3)) end,
IGV_1=    case CodigoDocumentoReferencia 
				when '07' then (cast(isnull(case when tipoOper=1 then d.montoIGV end,0.00)as numeric(15,3)))*(-1) 
				else cast(isnull(case when tipoOper=1 then d.montoIGV end,0.00)as numeric(15,3)) end,
AGDOGE_NG=case CodigoDocumentoReferencia 
				when '07' then (cast(isnull(case tipoOper when 2 then d.impHABER end,0.00)as numeric(15,3)))*(-1) else cast(isnull(case tipoOper when 2 then d.impDebe end,0.00)as numeric(15,3)) end,
IGV_2=	  case CodigoDocumentoReferencia 
				when '07' then (cast(isnull(case when tipoOper=2 then d.montoIGV end,0.00)as numeric(15,3)))*(-1)
				else cast(isnull(case when tipoOper=2 then d.montoIGV end,0.00)as numeric(15,3)) end,
AGDO_NG=  case CodigoDocumentoReferencia 
				when '07' then (cast(isnull(case tipoOper when 3 then d.impHABER end,0.00)as numeric(15,3)))*(-1) else cast(isnull(case tipoOper when 3 then d.impDebe-MontoCuentaAuxiliar end,0.00)as numeric(15,3)) end,
IGV_3=	  case CodigoDocumentoReferencia 
				when '07' then (cast(isnull(case when tipoOper=3 then d.montoIGV end,0.00)as numeric(15,3)))*(-1)
				else cast(isnull(case when tipoOper=3 then d.montoIGV end,0.00)as numeric(15,3)) end,
Valor_Adquisicion=case CodigoDocumentoReferencia 
				when '07' then (cast(isnull(case afecto when 0 then d.impHaber end,0.00)as numeric(15,3)))*(-1)
				else cast(isnull(case when afecto=0 and d.CodigoDocumentoReferencia!='40' then (case when tipooper=4 then 0.00 else d.impDebe end) end,
				(case when tipooper=1 AND montocuentaauxiliar<>0 then montocuentaauxiliar else (case when tipooper=3 then montocuentaauxiliar else 0.00 end) end))as numeric(15,3))end,

ISC=	  case CodigoDocumentoReferencia 
				when '07' then (cast(isnull(case isc when 1 then d.MontoISC end,0.00)as numeric(15,3)))*(-1)
				when '02' then montoretencion4 
				else cast(isnull(case isc when 1 then d.MontoISC end,0.00)as numeric(15,3)) end,
MontoIcbper= d.MontoIcbPer,
OtrosCptos= d.montocuentaauxiliar,
TotalImporte=case CodigoDocumentoReferencia when '07' then (cast(isnull(
															case when tipooper=1 then d.impHABER + d.montoIGV+PorcentajePercepcion + d.MontoISC
																when tipooper=2 then d.impHABER + d.montoIGV +PorcentajePercepcion + d.MontoISC
																when tipooper=3 then d.impHABER + d.montoIGV+PorcentajePercepcion + d.MontoISC
																when afecto=0 then d.impHaber + d.MontoISC
																when isc=1 then d.impDebe				  
															end,0.00)as numeric(15,3)))*(-1)
											when '02' then d.impDebe - abs(d.montoretencion4)
				else cast(isnull(
								case when tipooper=1 then d.impDebe + d.montoIGV+PorcentajePercepcion+montoISC +montoIcbper --+montocuentaauxiliar
									 when tipooper=2 then  d.impDebe + d.montoIGV +PorcentajePercepcion+montocuentaauxiliar+montoISC+montoIcbper
									 when tipooper=3 then d.impDebe + d.montoIGV+PorcentajePercepcion+montoISC+montocuentaauxiliar+montoIcbper-MontoCuentaAuxiliar
									 when tipooper=4 then d.impDebe + d.montoIGV+PorcentajePercepcion+montoISC+montoIcbper
									 when afecto=0 then d.impDebe  +montocuentaauxiliar+montoISC+montoIcbper
									 when isc=1 then d.impDebe +montocuentaauxiliar+montoISC+montoIcbper
								end,0.00)as numeric(15,3))
				 
				end,
PorcentajePercepcion=isnull(case when tipooper=4 then impdebe							
								 when tipooper!=4 then (case CodigoDocumentoReferencia when '07' then PorcentajePercepcion *-1 else 
								 PorcentajePercepcion end) end,0.00),
NroDetrac,fechaDetrac,Tipocambio,
Fecha_RefComprobModi=case when (datepart(yy,Fecha_RefComprobModi)>1900) then convert(varchar(10),Fecha_RefComprobModi,103) else '' end,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,
NombreDocumento=td.DesTipoDocumento, nrodocumento,  codIn
from movcontables_d d
inner join movcontables_c c on c.idMovContables_C=d.IdMovContables_c
inner join zona z on z.codzona=c.zona
inner join tipodocumento td on td.CodigoDocumento=d.CodigoDocumentoReferencia
inner join tbl_msto_ClienteProveedor tcp on tcp.RUC=d.CodPro
where c.codMGC='04' and d.estado!='D' and d.estado!='4' and c.estado!='4' and tcp.estado=1 --and d.codpro!='000001'
      and (c.Anio=@Anio)
      and (c.Mes between @aMes and @bMes)
	  and (c.zona between @aZona and @bZona)
      and (c.CodUnidadEconomica between @aCodUnidadEconomica and @bCodUnidadEconomica)
      and (d.CodUnidadEconomica between @aCodUnidadEconomica and @bCodUnidadEconomica)
      and (d.CodigoDocumentoReferencia between @docA and @docB) and z.idempresa=@IdEmpresa
      and (d.CodigoDocumentoReferencia not in ('52')) -- requerido por sercon se excluye los cheques
	  and (d.CodigoDocumentoReferencia not in ('00') and d.cocach<>'')  -- requerido por sercon se excluye los cheques
--order by c.mes,FechaDocReferencia,FechaVencimiento
) resumen 
group by mes, correlativo, FechaDocReferencia, FechaVencimiento,DesTipoDocumento,CodAduana,AnioDua,
serie, NroDocReferencia, CodClienteProveedor, RUC, Proveedor, 
NroDetrac,fechaDetrac,Tipocambio, Fecha_RefComprobModi, Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,NombreDocumento,nrodocumento,CodIn
order by mes, DesTipoDocumento,nrodocumento,FechaDocReferencia,serie, NroDocReferencia, FechaVencimiento,codIn

set @nombreEmpre= (select RazonSocial from empresa where idempresa=@IdEmpresa)
if rtrim(@nombreEmpre) = 'ELECTRO TOCACHE S.A.' 
	begin
	select * from ##Resumen where destipodocumento<>'02'
	order by mes, DesTipoDocumento,FechaDocReferencia,nrodocumento,serie, NroDocReferencia, FechaVencimiento

	end
else
	begin
	select * from ##Resumen 
	order by mes, DesTipoDocumento,FechaDocReferencia,nrodocumento,serie, NroDocReferencia, FechaVencimiento

	end

drop table ##Resumen
/****** Object:  StoredProcedure [dbo].[spp_rep_RegVentasIngresos]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rep_RegVentasIngresos]
	@zona varchar(200),@Unidad varchar(200),@Anio varchar(4),@Mes1 varchar(2),@Mes2 varchar(2)
as
--exec "spp_rep_RegVentasIngresos";1 'select distinct(codZona) from zona where idEmpresa=7', '7', '2018', '12', '12'
---------------Elimina tabla temporal vtemp
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[vtemp]') AND type in (N'U'))
BEGIN 
	delete from vtemp where zona in (select codzona from zona where estado=1 and idempresa=@Unidad)
	and mes between @Mes1 and @Mes2	
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[leventas]') AND type in (N'U'))
BEGIN 
	DROP TABLE leventas
END
-------------------------------------

--	set language spanish
--	declare @sql as varchar(8000)
--	set @sql=('
	declare @PorcentajeIGV decimal(10,2), @PorcentajeISC decimal(10,2)
	declare @nZonaA varchar(10), @nZonaB varchar(10)
	declare @nUnidadA varchar(10), @nUnidadB varchar(10)
	Declare @SeriesLength as varchar(20),@NumbersLength as varchar(20), @ctaIVA as varchar(10)

set @SeriesLength = (select valor from parametros where clave='SeriesLength' and idempresa=@Unidad)
set @NumbersLength = (select valor from parametros where clave='NumbersLength' and idempresa=@Unidad)
set @ctaIVA=(select valor from Parametros where clave like '%IVA%' and idempresa=@Unidad)

--obteniendo las zonas y unidades
If left(@zona,4) <> 'SELE'
	begin 
	set @nZonaA = @zona
	set @nZonaB = @zona

	set @nUnidadA = (select min(codunidadeconomica) from unidad_economica where estado=1 and codzona = @zona) 
	set @nUnidadB = (select max(codunidadeconomica) from unidad_economica where estado=1 and codzona = @zona) 
	end
else
	begin
	set @nZonaA = (select min(codzona) from zona where estado=1 and idempresa=@Unidad)
	set @nZonaB = (select max(codzona) from zona where estado=1 and idempresa=@Unidad)

	set @nUnidadA = (select min(codunidadeconomica) from unidad_economica where estado=1 and codzona in (select codzona from zona where idempresa=@Unidad)) 
	set @nUnidadB = (select max(codunidadeconomica) from unidad_economica where estado=1 and codzona in (select codzona from zona where idempresa=@Unidad)) 
	end

-- fin obtener zona unidad 

	set @PorcentajeIGV=(select convert(decimal(10,2),convert(decimal(10,2),max(Valor))/100) from parametros p inner join zona z on z.idempresa= p.idempresa where p.clave='PorcentajeIGV' and p.estado=1 and z.codzona in (select codzona from zona where idempresa=@Unidad) )
	set @PorcentajeISC=(select convert(decimal(10,2),convert(decimal(10,2),max(valor))/100) from parametros p inner join zona z on z.idempresa= p.idempresa where p.clave='PorcentajeISC' and p.estado=1 and z.codzona in (select codzona from zona where idempresa=@Unidad) )

	Insert into vtemp
	select b.zona,a.codUnidadEconomica,mes=b.mes,a.correlativo,FechaEmision=convert(varchar(10),a.fechaDocReferencia,5),
	FechaVencimiento=(case when year(a.FechaVencimiento)=1900 then '' else convert(varchar(10),a.FechaVencimiento,5) end),
	d.CodigoDocumento,Serie=convert(varchar(4),left(a.NroDocReferencia,@SeriesLength)),
	Numero=convert(varchar(19),right(rtrim(a.NroDocReferencia),@NumbersLength)+' '+
			(case when a.CodigoDocumentoReferencia in ('99','03','12','14') and rtrim(a.NroDocReferencia)<>rtrim(a.NroDocumentofuente) 
				then  right(rtrim(a.NroDocumentofuente),@NumbersLength) else '' end )),
	TipoDoc=codClienteProveedor,ruc,
	Entidad=convert(nvarchar(62),case when c.razonSocial='-' or c.razonSocial='' then c.apellido+', '+c.nombre else c.razonSocial end),
	Exportacion= --case when a.codAduana!='' then
	case when left(a.CodDua,3) in ('EX:') then 
		case when a.impDebe>0.0 then 
			case when a.CodigoDocumentoReferencia in ('07','87') then
				convert(decimal(10,2),-1.0 * a.impDebe - a.MontoIGV - a.MontoISC - a.MontoDetraccionIvap)
			else
				convert(decimal(10,2),a.impDebe - a.MontoIGV - a.MontoISC - a.MontoDetraccionIvap)
			end
		else 
			case when a.CodigoDocumentoReferencia in ('07','87') then
				convert(decimal(10,2),-1.0 * a.impHaber - a.MontoIGV - a.MontoISC - a.MontoDetraccionIvap)
			else
				convert(decimal(10,2),a.impHaber - a.MontoIGV - a.MontoISC - a.MontoDetraccionIvap)
			end
		end 
	else 
		0.0 
	end,
	BaseImponible=
	case when (a.afecto=1 or a.CodigoDetraccion!='')  and 
				isnull(CtaIva.imphaber,0)=0 then 
		case when a.impDebe>0.0 then 
			case when a.CodigoDocumentoReferencia in ('07','87') then 
				convert(decimal(10,2),-1.0 * (a.impDebe - a.MontoIGV - a.MontoISC - a.MontoDetraccionIvap - a.MontoIcbPer))
			else
				convert(decimal(10,2),a.impDebe  - a.MontoIGV - a.MontoISC - a.MontoDetraccionIvap - a.MontoIcbPer)
			end
		else 
			case when a.CodigoDocumentoReferencia in ('07','87') then 
				Case When isnull(CtaIva.impdebe,0)>0 Then 0 else
				convert(decimal(10,2),-1.0 * (a.impHaber - a.MontoIGV - a.MontoISC - a.MontoDetraccionIvap - a.MontoIcbPer))
				end
			else
				convert(decimal(10,2),a.impHaber  - a.impHaber - a.MontoISC - a.MontoDetraccionIvap - a.MontoIcbPer)
			end 
		end 
	else	
		0.0 
	end,
	Exonerado=
	case when a.afecto=0 and a.CodigoDetraccion='' then 
		case when a.impDebe>0.0 then 
			case when a.CodigoDocumentoReferencia in ('07','87') then 
				convert(decimal(10,2),-1.0 * (a.impDebe - a.MontoIGV - a.MontoISC - a.MontoDetraccionIvap - a.MontoIcbPer))
			else
				convert(decimal(10,2),a.impDebe - a.MontoIGV - a.MontoISC - a.MontoDetraccionIvap - a.MontoIcbPer)
			end
		else 
			case when a.CodigoDocumentoReferencia in ('07','87') then 
				convert(decimal(10,2),-1.0 * (a.impHaber - a.MontoIGV - a.MontoISC - a.MontoDetraccionIvap - a.MontoIcbPer))
			else
				convert(decimal(10,2),a.impHaber - a.MontoIGV - a.MontoISC - a.MontoDetraccionIvap - a.MontoIcbPer)
			end 
		end 
	else	
		0.0 
	end,
	Inafecta=0.00,
	ISC=
	case when a.isc=1 then 
		case when a.impDebe>0.0 then 
			case when a.CodigoDocumentoReferencia in ('07','87') then 
				convert(decimal(10,2),-1.0 * a.MontoISC)
			else
				convert(decimal(10,2),a.MontoISC) 
			end
		else 
			case when a.CodigoDocumentoReferencia in ('07','87') then 
				convert(decimal(10,2),-1.0 * a.MontoISC)
			else
				convert(decimal(10,2),a.MontoISC) 
			end 
		end 
	else 
		0.0 
	end,
	IGV=
	case when a.afecto=1 then 
		case when a.impDebe>0.0 then 
			case when a.CodigoDocumentoReferencia in ('07','87') then 
				convert(decimal(10,2),-1.0 * MontoIGV) 
			else
				convert(decimal(10,2),MontoIGV) 
--				convert(decimal(10,2),a.impHaber)  --MontoIGV)  
			end
		else 
			case when a.CodigoDocumentoReferencia in ('07','87') then 
				convert(decimal(10,2),-1.0 * MontoIGV)  
			else
				convert(decimal(10,2),a.impdebe)  --MontoIGV)  
			end 
		end 
	else 
		0.00
	end,
	OtrosTributos=
		(case when @ctaIVA<>'-' or @ctaIVA<>'' then 0 else 
			(case when a.CodigoDocumentoReferencia in ('07','87') then 
					convert(decimal(10,2),-1.0 * a.MontoDetraccionIvap)  
			else
					convert(decimal(10,2),a.MontoDetraccionIvap)
			end)  
		End),
	MontoIcbper=
		case when a.CodigoDocumentoReferencia in ('07','87') then 
			convert(decimal(10,2),-1.0 * a.MontoIcbPer)  
		else
			convert(decimal(10,2),a.MontoIcbPer)  
		end,
	OtrosCptos=
		case when a.CodigoDocumentoReferencia in ('07','87') then 
			convert(decimal(10,2),-1.0 * a.montocuentaauxiliar)  
		else
			convert(decimal(10,2),a.montocuentaauxiliar)  
		end,
	Total=
		case when a.impDebe>0.0 then 
			case when a.CodigoDocumentoReferencia in ('07','87') then 
				convert(decimal(10,2),-1.0 * (a.impDebe)) 
			else
				convert(decimal(10,2),a.impDebe) 
			end
		else 
			case when a.CodigoDocumentoReferencia in ('07','87') then 
				convert(decimal(10,2),-1.0 * (a.impHaber)) 
			else
				convert(decimal(10,2),a.impHaber) 
			end 
		end,
	TipoCambio=case when a.Moneda>1 then a.TipoCambio else 0.00 end,
	Fecha=case when year(a.Fecha_RefComprobModi)=1900 then '' else convert(varchar(10),a.Fecha_RefComprobModi,5) end,
	Tipo=a.Tipo_RefComprobModi,Serie2=a.Serie_RefComprobModi,Numero2=a.Nro_RefComprobModi,Voucher=b.NroDoc, 

	BaseImponibleIva=
	case when (a.afecto=1 or a.CodigoDetraccion!='' ) and 
				isnull(CtaIva.imphaber,0)>0
	then 
		case when a.impDebe>0.0 then 
			case when a.CodigoDocumentoReferencia in ('07','87') then 
				convert(decimal(10,2),-1.0 * (a.impHaber - a.MontoIGV - a.MontoISC - a.MontoDetraccionIvap))
			else
				convert(decimal(10,2),a.impDebe  - a.MontoIGV - a.MontoISC - a.MontoDetraccionIvap)
			end
		else 
			case when a.CodigoDocumentoReferencia in ('07','87') then 
				convert(decimal(10,2),-1.0 * (a.impHaber - a.MontoIGV - a.MontoISC - a.MontoDetraccionIvap))
			else
				convert(decimal(10,2),a.impHaber  - a.MontoIGV - a.MontoISC - a.MontoDetraccionIvap)
			end 
		end 
	else	
		(Case When isnull(CtaIva.imphaber,0)=0
		Then 
			case when a.MontoDetraccionIvap=0 then 0.0 else
				(Case When a.CodigoDocumentoReferencia in ('07','87') Then convert(decimal(10,2),-1.0 * (a.impHaber - a.MontoIGV - a.MontoISC - a.MontoDetraccionIvap - a.MontoIcbPer)) else 0.0 End)
			End
		Else 
			(Case When a.CodigoDocumentoReferencia in ('07','87') Then convert(decimal(10,2), (a.impHaber - a.MontoIGV - a.MontoISC - a.MontoDetraccionIvap - a.MontoIcbPer)) else 0.0 End)
		End)
	end, 
	Impuestoiva= 
		case when isnull(CtaIva.imphaber,0)>0 
		then 
			isnull(CtaIva.imphaber,0) 
		else 
			(Case When a.CodigoDocumentoReferencia in ('07','87') Then -1.0 *isnull(CtaIva.impdebe,0) else 0.0 End)
		end, 
	NombreDocumento= d.desTipoDocumento, a.Nrodocumento  
	-- into vtemp 
	from movcontables_D a 
	inner join movContables_c b on a.idMovcontables_C=b.idMovContables_C
	inner join tbl_msto_ClienteProveedor c on a.codPro=c.ruc
	inner join TipoDocumento d on a.CodigoDocumentoReferencia=d.CodigoDocumento
	INNER JOIN zona z on b.zona= z.codzona
	INNER JOIN unidad_economica ue on a.codunidadeconomica= ue.codunidadeconomica
	left outer join (select nrodocumento,codigoDocumentoReferencia,nrodocreferencia,sum(imphaber) imphaber,sum(impdebe) impdebe from movcontables_d where codMGC='18' and estado in ('D')  
--				and (CodUnidadEconomica between @nUnidadA and @nUnidadB)
				and (CodUnidadEconomica between '000012' and '000012')

				and substring(nrodocumento,3,3) between right(@Anio,1)+@Mes1 and right(@Anio,1)+@Mes2
				and codcuenta= @ctaIVA
				group by nrodocumento,codigoDocumentoReferencia,nrodocreferencia) CtaIva
				on CtaIva.nrodocumento = a.nrodocumento and CtaIva.codigoDocumentoReferencia=a.codigoDocumentoReferencia and CtaIva.nrodocreferencia = a.nrodocreferencia 
--	')
--		set @sql=@sql+' 
where a.codMGC='18' and a.estado in ('-') --not in ('4','D') 
--and b.zona in (select codzona from zona where estado=1 and idempresa=@Unidad) --between @nZonaA and @nZonaB
	and c.estado=1 and d.estado=1
--	and a.codUnidadEconomica in (select codunidadeconomica from unidad_economica where estado=1 and codzona in (select codzona from zona where idempresa=@Unidad)) -- @nUnidadA and @nUnidadB
	and b.anio=@anio and b.mes between @Mes1 and @Mes2	
	--and (b.CodUnidadEconomica between @nUnidadA and @nUnidadB)
	--and (a.CodUnidadEconomica between @nUnidadA and @nUnidadB)
	--and (b.zona between @nZonaA and @nZonaB)
	and (b.CodUnidadEconomica between '000012' and '000012')
	and (a.CodUnidadEconomica between '000012' and '000012')
	and (b.zona between '000012' and '000012')




--	exec(@sql)
-- agrupando resultados
If left(@zona,4) <> 'SELE'
	begin 
		select mes, correlativo ,FechaEmision,FechaVencimiento, CodigoDocumento,Serie,
			Numero, TipoDoc,ruc, Entidad,Exportacion  ,	BaseImponible = (Case When Exportacion<>0 then 0 else BaseImponible end), 
			Exonerado = (Case When Exportacion<>0 then 0 else Exonerado end), Inafecta ,ISC , IGV , OtrosTributos,MontoIcbper, OtrosCptos, Total ,TipoCambio ,
			Fecha,Tipo,Serie2,Numero2,Voucher, BaseImponibleIva , Impuestoiva, NombreDocumento,nrodocumento
		From  (
		select mes, correlativo= max(correlativo),FechaEmision,	FechaVencimiento,CodigoDocumento,Serie,
			Numero, TipoDoc,ruc, Entidad,Exportacion = sum(Exportacion) ,BaseImponible= sum(BaseImponible), 
			Exonerado = sum(Exonerado), Inafecta =sum(Inafecta),ISC = sum(ISC), 
			IGV = sum(IGV), OtrosTributos = sum(OtrosTributos), MontoIcbper = sum(MontoIcbper),OtrosCptos = sum(OtrosCptos), Total = sum(Total),
			TipoCambio = max(TipoCambio),Fecha,Tipo,Serie2,Numero2,Voucher, 
			BaseImponibleIva = sum(BaseImponibleIva), Impuestoiva = sum(Impuestoiva),NombreDocumento,nrodocumento 
		from vtemp 
		--Where zona between @nZonaA and @nZonaB and codUnidadEconomica between @nUnidadA and @nUnidadB
		where zona in (select codzona from zona where estado=1 and idempresa=@Unidad)
			and mes between @Mes1 and @Mes2
		group by mes, FechaEmision,
			FechaVencimiento,CodigoDocumento,Serie,
			Numero, TipoDoc,ruc, Entidad,Fecha,Tipo,Serie2,Numero2,Voucher, NombreDocumento,nrodocumento
		) resum 
		order by mes,CodigoDocumento, FechaEmision,Serie,
			Numero
	end
else 
	begin 
		select mes, correlativo ,FechaEmision,FechaVencimiento, CodigoDocumento,Serie,
			Numero, TipoDoc,ruc, Entidad,Exportacion  ,	BaseImponible = (Case When Exportacion<>0 then 0 else BaseImponible end), 
			Exonerado= (Case When Exportacion<>0 then 0 else Exonerado end), Inafecta ,ISC , IGV , OtrosTributos,MontoIcbper,OtrosCptos, Total ,TipoCambio ,
			Fecha,Tipo,Serie2,Numero2,Voucher, BaseImponibleIva , Impuestoiva, NombreDocumento,nrodocumento
		From  (
		select mes, correlativo= max(correlativo),FechaEmision,	FechaVencimiento,CodigoDocumento,Serie,
			Numero, TipoDoc,ruc, Entidad,Exportacion = sum(Exportacion) ,BaseImponible= sum(BaseImponible), 
			Exonerado = sum(Exonerado), Inafecta =sum(Inafecta),ISC = sum(ISC), 
			IGV = sum(IGV), OtrosTributos = sum(OtrosTributos), MontoIcbper = sum(MontoIcbper),OtrosCptos = sum(OtrosCptos), Total = sum(Total),
			TipoCambio = max(TipoCambio),Fecha,Tipo,Serie2,Numero2,Voucher, 
			BaseImponibleIva = sum(BaseImponibleIva), Impuestoiva = sum(Impuestoiva),NombreDocumento,nrodocumento 
		from vtemp 
		where zona in (select codzona from zona where estado=1 and idempresa=@Unidad)
			and mes between @Mes1 and @Mes2
		group by mes, FechaEmision,
			FechaVencimiento,CodigoDocumento,Serie,
			Numero, TipoDoc,ruc, Entidad,Fecha,Tipo,Serie2,Numero2,Voucher, NombreDocumento,nrodocumento
		) resum 
		order by mes,CodigoDocumento, FechaEmision,Serie,
			Numero
	end

--copiando datos para el PLE Ventas
select zona,codunidadeconomica,mes, correlativo ,FechaEmision,FechaVencimiento, CodigoDocumento,Serie,
			Numero, TipoDoc,ruc, Entidad,Exportacion  ,	BaseImponible = (Case When Exportacion<>0 then 0 else BaseImponible end), 
			Exonerado= (Case When Exportacion<>0 then 0 else Exonerado end), Inafecta ,ISC , IGV , OtrosTributos,MontoIcbper,OtrosCptos, Total ,TipoCambio ,
			Fecha,Tipo,Serie2,Numero2,Voucher, BaseImponibleIva , Impuestoiva, NombreDocumento,nrodocumento
into leVentas 
		From  (
		select zona=MAX(Zona),codunidadeconomica=MAX(codunidadeconomica),mes, correlativo= max(correlativo),FechaEmision,	FechaVencimiento,CodigoDocumento,Serie,
			Numero, TipoDoc,ruc, Entidad,Exportacion = sum(Exportacion) ,BaseImponible= sum(BaseImponible), 
			Exonerado = sum(Exonerado), Inafecta =sum(Inafecta),ISC = sum(ISC), 
			IGV = sum(IGV), OtrosTributos = sum(OtrosTributos), MontoIcbper = sum(MontoIcbper),OtrosCptos = sum(OtrosCptos),Total = sum(Total),
			TipoCambio = max(TipoCambio),Fecha,Tipo,Serie2,Numero2,Voucher, 
			BaseImponibleIva = sum(BaseImponibleIva), Impuestoiva = sum(Impuestoiva),NombreDocumento,nrodocumento 
		from vtemp 
		where zona in (select codzona from zona where estado=1 and idempresa=@Unidad)
			and mes between @Mes1 and @Mes2
		group by mes, FechaEmision,
			FechaVencimiento,CodigoDocumento,Serie,
			Numero, TipoDoc,ruc, Entidad,Fecha,Tipo,Serie2,Numero2,Voucher, NombreDocumento,nrodocumento
		) resum 
		order by mes,CodigoDocumento, FechaEmision,Serie,Numero
-- Borrando Datos 	
--delete from vtemp where zona in (select codzona from zona where estado=1 and idempresa=@Unidad)
--	and mes between @Mes1 and @Mes2
/****** Object:  StoredProcedure [dbo].[spp_rep_Renta4ta]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_rep_Renta4ta]
@MesA char(2),
@MesB char(2),
@Anio char(4),
@ZonaA char(6),
@ZonaB char(6),
@UnidadA char(10),
@UnidadB char(10),
@IdEmpresa int
as
-- exec "spp_rep_Renta4ta";1 '10','12', '2013', '000012', '000012', '000012   ', '000012   ', 5

select fechaVencimiento,fechadocReferencia, 'a' inciso,left(nrodocumentoFuente,4) serie, substring(nrodocumento,5,9) numero,
	codclienteproveedor tipodoc, codpro, (Case when (nombre+' '+apellido)!='' then (nombre+' '+apellido) else razonsocial End) razonsocial, 
	(Case when montoretencion4<>0 then montoretencion4*10 else imphaber end) renta, montoretencion4,
	(Case when montoretencion4<>0 then montoretencion4*10 else imphaber end)-imphaber-montoretencion4  otros, imphaber cobrado
 from movcontables_d d inner join movcontables_c c ON c.idmovcontables_c=d.idmovcontables_c
	inner join TBL_MSTO_CLIENTEPROVEEDOR cli on d.codpro=cli.ruc 
where c.anio=@Anio AND c.mes BETWEEN @MesA AND @MesB
      AND c.zona   BETWEEN @ZonaA    AND @ZonaB 
      AND c.codunidadeconomica BETWEEN @UnidadA AND @UnidadB
	  And c.codmgc in ('04','18') and codigodocumentoreferencia='02' 
and left(codcuenta,2)='70' and d.estado='D' and cli.estado='1'
order by 2,1
/****** Object:  StoredProcedure [dbo].[Spp_Rep_ReporteAuxiliar]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[Spp_Rep_ReporteAuxiliar]
	-- Add the parameters for the stored procedure here
@aCodMGC  VARCHAR(1000),
@aZona  varCHAR(6),
@bZona  varCHAR(6),
@aCodUnidadEconomica  CHAR(10),
@bCodUnidadEconomica  CHAR(10),
@lcAnio  CHAR(4),
@lcMes  CHAR(2),
@aNroDoc  CHAR(10),
@bNroDoc  CHAR(10),
@lcEstado VARCHAR(1)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
SELECT     dbo.MovContables_C.Anio, dbo.MovContables_C.Mes, dbo.MovContables_C.Zona, dbo.MovContables_C.CodUnidadEconomica, 
                      dbo.MovContables_C.NroDoc, dbo.MovContables_D.CRP, dbo.MovContables_D.CodActividad, dbo.MovContables_D.CodPar, 
                      dbo.MovContables_D.CodSubActividad, dbo.MovContables_D.FechContable, dbo.MovContables_C.CodMGC, dbo.MovContables_D.ClaseMovimiento, 
                      dbo.MovContables_D.CtaDestino, dbo.MovContables_D.CodigoDocumentoReferencia, dbo.MovContables_D.NroDocReferencia, 
                      dbo.MovContables_D.FechaDocReferencia, dbo.MovContables_D.FechaVencimiento, dbo.MovContables_D.CodigoDocumentoFuente, 
                      dbo.MovContables_D.NroDocumentoFuente, dbo.MovContables_D.FechaDocumentoFuente, dbo.MovContables_D.CodigoCtaBancaria, 
                      dbo.MovContables_D.NroOperacion, dbo.MovContables_D.NroCheque, dbo.MovContables_D.CuentaNaturaleza, dbo.MovContables_D.CodCuenta, 
                      dbo.MovContables_D.CentroCosto, dbo.MovContables_D.TipoMov, dbo.MovContables_D.Glosa, dbo.MovContables_D.Orden, 
                      dbo.MovContables_D.Afecto, dbo.MovContables_D.TipoCambio, dbo.MovContables_D.impDebe, dbo.MovContables_D.impHaber, 
                      dbo.MovContables_D.impDebeDolar, dbo.MovContables_D.impHaberDolar, dbo.MovContables_D.TipoAnexo, dbo.MovContables_D.CodAnexo, 
                      dbo.MovContables_D.codPro, dbo.MovContables_D.u_codi, dbo.MovContables_D.datUsu, dbo.MovContables_D.Correlativo, 
                      dbo.MovContables_D.estado, dbo.MovContables_D.Destino, dbo.MovContables_D.Anexo, dbo.MovContables_D.GastoIntPersonal, 
                      dbo.MovContables_D.cocach, dbo.MovContables_D.nomanx, dbo.MovContables_D.codIn, dbo.MovContables_D.tipdca, dbo.MovContables_D.nrodca, 
                      dbo.MovContables_D.reten, dbo.MovContables_D.rigv, dbo.MovContables_D.corrigv
FROM         dbo.MovContables_C INNER JOIN dbo.MovContables_D 
		ON dbo.MovContables_C.IdMovContables_C = dbo.MovContables_D.IdMovContables_C
WHERE   (dbo.MovContables_C.Anio = @lcAnio) AND 
		(dbo.MovContables_C.Mes = @lcMes) AND
		(dbo.MovContables_C.Zona BETWEEN @aZona AND @bZona) AND 
        (MovContables_C.CodUnidadEconomica BETWEEN @aCodUnidadEconomica  AND @bCodUnidadEconomica) AND  
		(MovContables_C.NroDoc BETWEEN @aNroDoc AND @bNroDoc) AND 		
		CHARINDEX(@lcEstado,dbo.MovContables_D.estado) > 0 AND 
		CHARINDEX(@aCodMGC, RTRIM(dbo.MovContables_c.CodMGC)) > 0
ORDER BY MovContables_C.Anio,   MovContables_C.Mes, 
		MovContables_C.Zona,   MovContables_C.CodUnidadEconomica, 
		MovContables_C.NroDoc, MovContables_D.IDMovContable_D



end
/****** Object:  StoredProcedure [dbo].[Spp_Rep_SaldoCuenta10]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[Spp_Rep_SaldoCuenta10]
@lcZonaA varchar(6),
@lcZonaB varchar(6),
@lcUnidadA char(10),
@lcUnidadB char(10),
@lcGruposA char(2),
@lcGruposB char(2),
@lcANO char(4),
@lcMesA char(2),
@lcMesB char(2),
@Espacio INT,
@idempresa int

AS
-- exec "Spp_Rep_SaldoCuenta10";1 '000021', '000021', '000021    ', '000021    ', '00', '99', '2010', '01', '12', 7, 14
------------------------------------
--IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpLePle2]') AND type in (N'U'))
--BEGIN 
--	DROP TABLE tmpLePle2
--END
-------------------------------------

declare @lcMesB_1 char(2)
	set @lcMesB_1=replicate('0',2-len(convert(int,@lcMesB)-1))+convert(char(2),convert(int,@lcMesB)-1)
------------------------------------TOMANDO DATOS ANTERIORES, y ACTUAL
select codcuenta=left(d.codcuenta,@Espacio), 
					 isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.impdebe) end ,0.00)as andebe,
					 isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.imphaber) end ,0.00)as anhaber,
					(case when d.CodigoDocumentoReferencia='07' Then -1 else 1 end) * isnull(case when c.mes=@lcMesB then sum(d.impdebe) end ,0.00)as DEBE,
					(case when d.CodigoDocumentoReferencia='07' Then -1 else 1 end) * isnull(case when c.mes=@lcMesB then sum(d.imphaber) end ,0.00)as HABER
into #C001
from movcontables_d d
inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
inner join (select codcuentacontable from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end) and left(codcuentacontable,2)='10') p on p.codcuentacontable=d.codcuenta
where c.mes between @lcMesA and @lcMesB
		and c.anio=@lcANO
		and c.codmgc between @lcGruposA and @lcGruposB
		AND C.zona BETWEEN @lcZonaA AND @lcZonaB
		AND C.CODUNIDADECONOMICA BETWEEN @lcUnidadA AND @lcUnidadB
		AND d.estado!='4' and c.estado!='4' and d.estado!='A' and codcuenta!=''
		and left(d.codcuenta,2)='10'
group by left(d.codcuenta,@Espacio),c.mes,d.CodigoDocumentoReferencia

SELECT Cuenta=tmp.codcuenta,DCuenta=p.descripcion,EntidadBancaria=isnull(ban.Descripcion,''),CtaBancaria=isnull(ban.CtaBancaria,''),Moneda=isnull(ban.codMoneda,'01'),
	inventariodebe	=(CASE WHEN p.TipoCuenta IN ('A','P') THEN  (CASE WHEN (sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.anhaber)+sum(tmp.haber)) THEN (sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.anhaber)+sum(tmp.haber)) ELSE 0.00 END) ELSE 0 END),
	inventariohaber	=(CASE WHEN p.TipoCuenta IN('A','P') THEN  
						   (CASE WHEN (sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.andebe)+sum(tmp.debe)) 
								 THEN (sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe)) 
							ELSE 0.00 END) ELSE 0 END),
	CodEFina=isnull(ban.CodEFina,'99')
--into tmpLePle2
FROM #C001 tmp
inner join (select descripcion,tipoCuenta,codcuentacontable from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end) and left(codcuentacontable,2)='10') p 
on p.codcuentacontable=tmp.codcuenta
left outer join (select ctacontable, descripcion, ctabancaria, codmoneda,NroOperacion CodEFina from banco where estado='1' and idempresa=@idempresa) ban 
on tmp.codcuenta=ban.CtaContable
--where p.idempresa=@idempresa --and left(codcuentacontable,2)='10'
		--and ban.idempresa=@idempresa
GROUP BY tmp.CODCUENTA,p.descripcion,p.tipoCuenta,isnull(ban.Descripcion,''),isnull(ban.CtaBancaria,''),isnull(ban.codMoneda,'01'), isnull(ban.CodEFina,'99')
having 
(CASE WHEN p.TipoCuenta IN ('A','P') THEN (CASE WHEN (sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.anhaber)+sum(tmp.haber)) THEN (sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.anhaber)+sum(tmp.haber)) ELSE 0.00 END) ELSE 0 END)>0
or 
(CASE WHEN p.TipoCuenta IN('A','P') THEN (CASE WHEN (sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.andebe)+sum(tmp.debe)) THEN (sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe)) ELSE 0.00 END) ELSE 0 END)>0

order by tmp.CODCUENTA

--select * from tmpLePle2
--order by cuenta

DROP TABLE #C001
/****** Object:  StoredProcedure [dbo].[Spp_Rep_SaldoCuenta12]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[Spp_Rep_SaldoCuenta12] 
-- exec "Spp_Rep_SaldoCuenta12";1 '000017', '000017', '000017    ', '000017    ', '00', '99', '2011', '00', '12', 4, 9, '12'
@lcZonaA varchar(6),
@lcZonaB varchar(6),
@lcUnidadA char(10),
@lcUnidadB char(10),
@lcGruposA char(2),
@lcGruposB char(2),
@lcANO char(4),
@lcMesA char(2),
@lcMesB char(2),
@Espacio INT,
@idempresa int,
@Cuenta varchar(2)

AS
declare @lcMesB_1 char(2)


--if @lcMesA!=@lcMesB
--	begin
	set @lcMesB_1=replicate('0',2-len(convert(int,@lcMesB)-1))+convert(char(2),convert(int,@lcMesB)-1)
--	end
--else
--	begin 
--		set @lcMesB_1=@lcMesB
--	end


------------------------------------TOMANDO DATOS ANTERIORES, y ACTUAL
select codpro,Fecha=min(FechaDocReferencia),codcuenta=left(d.codcuenta,@Espacio), 
					 isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.impdebe) end ,0.00)as andebe,
					 isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.imphaber) end ,0.00)as anhaber,
						  isnull(case when c.mes=@lcMesB then sum(d.impdebe) end ,0.00)as DEBE,
						  isnull(case when c.mes=@lcMesB then sum(d.imphaber) end ,0.00)as HABER,d.nrodocreferencia, nrodocumento=min(d.nrodocumento)
into #C001
from movcontables_d d
inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
inner join (select codcuentacontable from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end)) p on p.codcuentacontable=d.codcuenta
where c.mes between @lcMesA and @lcMesB
		and c.anio=@lcANO
		and c.codmgc between @lcGruposA and @lcGruposB
		AND C.zona BETWEEN @lcZonaA AND @lcZonaB
		AND C.CODUNIDADECONOMICA BETWEEN @lcUnidadA AND @lcUnidadB
		AND d.estado!='4' and c.estado!='4' and d.estado!='A' and codcuenta!=''
group by left(d.codcuenta,@Espacio),c.mes,codpro,d.nrodocreferencia

select tipo, codpro, entidad,abs(sum(monto)) monto, min(fecha) fecha,min(nrodocumento) nrodocumento,codcuenta
from (
SELECT Tipo=cli.codClienteProveedor,tmp.CodPro,Entidad=case when cli.RazonSocial='' then cli.Nombre+' '+cli.Apellido else RazonSocial end,
	Monto=(CASE WHEN p.TipoCuenta IN ('A','P') THEN  (CASE WHEN (sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.anhaber)+sum(tmp.haber)) THEN (sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.anhaber)+sum(tmp.haber)) ELSE 0.00 END) ELSE 0 END)-(CASE WHEN p.TipoCuenta IN('A','P') THEN  
						   (CASE WHEN (sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.andebe)+sum(tmp.debe)) 
								 THEN (sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe)) 
							ELSE 0.00 END) ELSE 0 END),min(tmp.Fecha) fecha,nrodocumento= min(tmp.nrodocumento),rtrim(codcuenta)+'  '+rtrim(p.Descripcion) codcuenta

FROM #C001 tmp
inner join (select descripcion,tipoCuenta,codcuentacontable from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end) and left(codcuentacontable,2)=@Cuenta) p 
on p.codcuentacontable=tmp.codcuenta
inner join tbl_msto_clienteProveedor cli
on tmp.CodPro=cli.ruc
where cli.Estado=1
GROUP BY tmp.CODCUENTA,p.descripcion,p.tipoCuenta,tmp.codPro,cli.RazonSocial,cli.codClienteProveedor,
cli.Apellido,cli.Nombre,nrodocreferencia
having (CASE WHEN p.TipoCuenta IN ('A','P') THEN  (CASE WHEN (sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.anhaber)+sum(tmp.haber)) THEN (sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.anhaber)+sum(tmp.haber)) ELSE 0.00 END) ELSE 0 END)-(CASE WHEN p.TipoCuenta IN('A','P') THEN  
						   (CASE WHEN (sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.andebe)+sum(tmp.debe)) 
								 THEN (sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe)) 
							ELSE 0.00 END) ELSE 0 END)!=0
--order by tmp.CODCUENTA,Fecha,tmp.CodPro
) todos 
group by tipo, codpro, entidad,codcuenta
having sum(monto)<>0
order by codcuenta,fecha,entidad

DROP TABLE #C001
/****** Object:  StoredProcedure [dbo].[Spp_Rep_SaldoCuenta19]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[Spp_Rep_SaldoCuenta19] 
@lcZonaA varchar(6),
@lcZonaB varchar(6),
@lcUnidadA char(10),
@lcUnidadB char(10),
@lcGruposA char(2),
@lcGruposB char(2),
@lcANO char(4),
@lcMesA char(2),
@lcMesB char(2),
@Espacio INT,
@idempresa int,
@Cuenta varchar(2)

AS
declare @lcMesB_1 char(2)


--if @lcMesA!=@lcMesB
--	begin
	set @lcMesB_1=replicate('0',2-len(convert(int,@lcMesB)-1))+convert(char(2),convert(int,@lcMesB)-1)
--	end
--else
--	begin 
--		set @lcMesB_1=@lcMesB
--	end


------------------------------------TOMANDO DATOS ANTERIORES, y ACTUAL
select codpro,Fecha=min(FechaDocReferencia),TDoc=d.CodigoDocumentoReferencia,Doc=d.NroDocReferencia,codcuenta=left(d.codcuenta,@Espacio), 
					 isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.impdebe) end ,0.00)as andebe,
					 isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.imphaber) end ,0.00)as anhaber,
						  isnull(case when c.mes=@lcMesB then sum(d.impdebe) end ,0.00)as DEBE,
						  isnull(case when c.mes=@lcMesB then sum(d.imphaber) end ,0.00)as HABER, nrodocumento=min(d.nrodocumento)
into #C001

from movcontables_d d
inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
inner join (select codcuentacontable from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end)) p on p.codcuentacontable=d.codcuenta
where c.mes between @lcMesA and @lcMesB
		and c.anio=@lcANO
		and c.codmgc between @lcGruposA and @lcGruposB
		AND C.zona BETWEEN @lcZonaA AND @lcZonaB
		AND C.CODUNIDADECONOMICA BETWEEN @lcUnidadA AND @lcUnidadB
		AND d.estado!='4' and c.estado!='4' and d.estado!='A' and codcuenta!=''
group by left(d.codcuenta,@Espacio),c.mes,codpro,d.CodigoDocumentoReferencia,d.NroDocReferencia

select tipo, codpro,entidad,TDoc, doc, min(fecha) fecha,sum(monto) monto, min(nrodocumento) nrodocumento
from (
SELECT Tipo=cli.codClienteProveedor,tmp.CodPro,tmp.TDoc,tmp.Doc,Entidad=case when cli.RazonSocial='' then cli.Nombre+' '+cli.Apellido else RazonSocial end,
	Monto=
	(CASE WHEN p.TipoCuenta IN ('A','P') THEN  
			(CASE WHEN (sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.anhaber)+sum(tmp.haber)) THEN 
				(sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.anhaber)+sum(tmp.haber)) 
			ELSE 0.00 END) 
	ELSE 0 END)-
	(CASE WHEN p.TipoCuenta IN('A','P') THEN 
			(CASE WHEN (sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.andebe)+sum(tmp.debe)) THEN 
				(sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe)) 
			ELSE 0.00 END) 
	ELSE 0 END),Fecha=min(tmp.Fecha),nrodocumento= min(tmp.nrodocumento)


FROM #C001 tmp
inner join (select descripcion,tipoCuenta,codcuentacontable from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end) and left(codcuentacontable,2)=@Cuenta) p 
on p.codcuentacontable=tmp.codcuenta
inner join tbl_msto_clienteProveedor cli
on tmp.CodPro=cli.ruc
where cli.Estado=1
GROUP BY tmp.TDoc,tmp.Doc,tmp.CODCUENTA,p.descripcion,p.tipoCuenta,tmp.codPro,cli.RazonSocial,cli.codClienteProveedor,/*tmp.Fecha,*/cli.Apellido,cli.Nombre
having (CASE WHEN p.TipoCuenta IN ('A','P') THEN  (CASE WHEN (sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.anhaber)+sum(tmp.haber)) THEN (sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.anhaber)+sum(tmp.haber)) ELSE 0.00 END) ELSE 0 END)-(CASE WHEN p.TipoCuenta IN('A','P') THEN  
						   (CASE WHEN (sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.andebe)+sum(tmp.debe)) 
								 THEN (sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe)) 
							ELSE 0.00 END) ELSE 0 END)>0
--order by tmp.CODCUENTA,Fecha,tmp.CodPro
) todos 
group by tipo, codpro,TDoc,doc, entidad 
having sum(monto)<>0
order by fecha,entidad

DROP TABLE #C001
/****** Object:  StoredProcedure [dbo].[Spp_Rep_SaldoCuenta40]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[Spp_Rep_SaldoCuenta40]
@lcZonaA varchar(6),
@lcZonaB varchar(6),
@lcUnidadA char(10),
@lcUnidadB char(10),
@lcGruposA char(2),
@lcGruposB char(2),
@lcANO char(4),
@lcMesA char(2),
@lcMesB char(2),
@Espacio INT,
@idempresa int

AS
declare @lcMesB_1 char(2)


--if @lcMesA!=@lcMesB
--	begin
	set @lcMesB_1=replicate('0',2-len(convert(int,@lcMesB)-1))+convert(char(2),convert(int,@lcMesB)-1)
--	end
--else
--	begin 
--		set @lcMesB_1=@lcMesB
--	end


------------------------------------TOMANDO DATOS ANTERIORES, y ACTUAL
select codcuenta=left(d.codcuenta,@Espacio), c.glosa,
					 isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.impdebe) end ,0.00)as andebe,
					 isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.imphaber) end ,0.00)as anhaber,
						  isnull(case when c.mes=@lcMesB then sum(d.impdebe) end ,0.00)as DEBE,
						  isnull(case when c.mes=@lcMesB then sum(d.imphaber) end ,0.00)as HABER
into #C001
from movcontables_d d
inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
inner join (select codcuentacontable from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end)) p on p.codcuentacontable=d.codcuenta
where c.mes between @lcMesA and @lcMesB
		and c.anio=@lcANO
		and c.codmgc between @lcGruposA and @lcGruposB
		AND C.zona BETWEEN @lcZonaA AND @lcZonaB
		AND C.CODUNIDADECONOMICA BETWEEN @lcUnidadA AND @lcUnidadB
		AND d.estado!='4' and c.estado!='4' and d.estado!='A' and codcuenta!=''
group by left(d.codcuenta,@Espacio),c.mes,c.glosa
--
--from movcontables_d d
--inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
--inner join plancuentascontables p on p.codcuentacontable=d.codcuenta
--where c.codmgc between @lcGruposA and @lcGruposB
--    AND D.ESTADO not in('4','A') and c.anio=@lcANO
--	AND C.zona BETWEEN RTRIM(@lcZonaA) AND RTRIM(@lcZonaA)
--	and C.mes BETWEEN @lcMesA AND @lcMesB AND d.estado!='4' and c.estado!='4'
--	AND C.CODUNIDADECONOMICA BETWEEN @lcUnidadA AND @lcUnidadB and p.idempresa=@idempresa
--group by left(ltrim(rtrim(d.codcuenta)),@Espacio) ,c.mes,c.glosa

SELECT Cuenta=tmp.codcuenta,DCuenta=p.descripcion,
--		anteriordebe=SUM(tmp.andebe),
--		anteriorhaber=SUM(tmp.anhaber),
--		mesdebe=SUM(tmp.debe),
--		meshaber=SUM(tmp.haber ),
	Saldo=abs((CASE WHEN p.TipoCuenta IN ('A','P') THEN  (CASE WHEN (sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.anhaber)+sum(tmp.haber)) THEN (sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.anhaber)+sum(tmp.haber)) ELSE 0.00 END) ELSE 0 END)-(CASE WHEN p.TipoCuenta IN('A','P') THEN  
						   (CASE WHEN (sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.andebe)+sum(tmp.debe)) 
								 THEN abs(sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe)) 
							ELSE 0.00 END) ELSE 0 END))

FROM #C001 tmp
inner join (select descripcion,tipoCuenta,codcuentacontable from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end) and left(codcuentacontable,2)='40') p on p.codcuentacontable=tmp.codcuenta
where left(tmp.codcuenta,2)=40
GROUP BY tmp.CODCUENTA,p.descripcion,p.tipoCuenta
having (CASE WHEN p.TipoCuenta IN ('A','P') THEN  (CASE WHEN (sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.anhaber)+sum(tmp.haber)) THEN (sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.anhaber)+sum(tmp.haber)) ELSE 0.00 END) ELSE 0 END)-(CASE WHEN p.TipoCuenta IN('A','P') THEN  
						   (CASE WHEN (sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.andebe)+sum(tmp.debe)) 
								 THEN abs(sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe)) 
							ELSE 0.00 END) ELSE 0 END)!=0
order by tmp.CODCUENTA
DROP TABLE #C001
/****** Object:  StoredProcedure [dbo].[Spp_Rep_SaldoCuenta41]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[Spp_Rep_SaldoCuenta41]
@lcZonaA varchar(6),
@lcZonaB varchar(6),
@lcUnidadA char(10),
@lcUnidadB char(10),
@lcGruposA char(2),
@lcGruposB char(2),
@lcANO char(4),
@lcMesA char(2),
@lcMesB char(2),
@Espacio INT,
@idempresa int

AS
select * from (
select d.codcuenta, p.descripcion, d.codpro, nombre= rtrim(rtrim(cp.razonSocial)+' '+ rtrim(cp.nombre)+' '+rtrim(cp.apellido)), 
	tipdoc = (Case When len(d.codpro)= 8 Then '1' Else 
				(Case When len(d.codpro)= 11 Then '6' Else 
				(Case When len(d.codpro)= 15 Then '4' Else 
				(Case When len(d.codpro)= 9 Then '7' Else '0'
				End )
				End ) 
				End ) 
			 End ), 
	numero = d.codpro, saldo = abs(sum(imphaber)- sum(d.impdebe)),nrodocumento=min(d.nrodocumento)
from movcontables_d d
	inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
	inner join (select descripcion,tipoCuenta,codcuentacontable from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end) and left(codcuentacontable,2)='41') p on p.codcuentacontable=d.codcuenta
	inner join tbl_msto_ClienteProveedor cp on d.codpro= cp.ruc
where left(d.codcuenta,2)='41'  
		and c.mes between @lcMesA and @lcMesB
		and c.anio=@lcANO
		and c.codmgc between @lcGruposA and @lcGruposB
		AND C.zona BETWEEN @lcZonaA AND @lcZonaB
		AND C.CODUNIDADECONOMICA BETWEEN @lcUnidadA AND @lcUnidadB
		and d.estado not in ('4','A') and c.estado!='4' AND cp.Estado=1 
group by d.codcuenta, p.descripcion, d.codpro, cp.razonSocial, cp.nombre, cp.apellido
) todos 
where saldo <> 0
order by codcuenta
/****** Object:  StoredProcedure [dbo].[Spp_Rep_SaldoCuenta46]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[Spp_Rep_SaldoCuenta46]
--exec "Spp_Rep_SaldoCuenta46";1 '000017', '000017', '000017    ', '000017    ', '00', '99', '2011', '00', '12', 4, 9, '46'
@lcZonaA varchar(6),
@lcZonaB varchar(6),
@lcUnidadA char(10),
@lcUnidadB char(10),
@lcGruposA char(2),
@lcGruposB char(2),
@lcANO char(4),
@lcMesA char(2),
@lcMesB char(2),
@Espacio INT,
@idempresa int,
@Cuenta varchar(2)

AS
declare @lcMesB_1 char(2)


--if @lcMesA!=@lcMesB
--	begin
	set @lcMesB_1=replicate('0',2-len(convert(int,@lcMesB)-1))+convert(char(2),convert(int,@lcMesB)-1)
--	end
--else
--	begin 
--		set @lcMesB_1=@lcMesB
--	end


------------------------------------TOMANDO DATOS ANTERIORES, y ACTUAL
select codpro,Fecha=min(FechaDocReferencia),codcuenta=left(ltrim(rtrim(d.codcuenta)),@Espacio),c.glosa ,
					 isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.impdebe) end ,0.00)as andebe,
					 isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.imphaber) end ,0.00)as anhaber,
						  isnull(case when c.mes=@lcMesB then sum(d.impdebe) end ,0.00)as DEBE,
						  isnull(case when c.mes=@lcMesB then sum(d.imphaber) end ,0.00)as HABER,d.nrodocreferencia,nrodocumento=min(d.nrodocumento)
into #C001
from movcontables_d d
inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
inner join (select codcuentacontable from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end)) p on p.codcuentacontable=d.codcuenta
where c.codmgc between @lcGruposA and @lcGruposB
    AND D.ESTADO not in('4','A') and c.anio=@lcANO
	AND C.zona BETWEEN RTRIM(@lcZonaA) AND RTRIM(@lcZonaA)
	and C.mes BETWEEN @lcMesA AND @lcMesB AND d.estado!='4' and c.estado!='4'
	AND C.CODUNIDADECONOMICA BETWEEN @lcUnidadA AND @lcUnidadB 
group by left(ltrim(rtrim(d.codcuenta)),@Espacio),c.mes,codpro,d.nrodocreferencia,c.glosa

select tipo, max(glosa) glosa, codpro, entidad,abs(sum(monto)) monto, min(fecha) fecha,codcuenta,min(nrodocumento) nrodocumento
from (
SELECT Tipo=cli.codClienteProveedor,max(tmp.Glosa) glosa,tmp.CodPro,Entidad=case when cli.RazonSocial='' then cli.Nombre+' '+cli.Apellido else RazonSocial end,
	Monto=(CASE WHEN p.TipoCuenta IN ('A','P') THEN  (CASE WHEN (sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.anhaber)+sum(tmp.haber)) THEN 
																(sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.anhaber)+sum(tmp.haber)) ELSE 
																--(sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe)) end)
																0.00 END) 
			ELSE 0 END)-(CASE WHEN p.TipoCuenta IN('A','P') THEN  
						   (CASE WHEN (sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.andebe)+sum(tmp.debe)) 
								 THEN (sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe)) 
							ELSE 0.00 END) ELSE 0 END),min(tmp.Fecha) fecha,rtrim(tmp.codcuenta)+'  '+rtrim(p.Descripcion) codcuenta,nrodocumento= min(tmp.nrodocumento)
FROM #C001 tmp
inner join (select descripcion,tipoCuenta,codcuentacontable from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end) and left(codcuentacontable,2)=@Cuenta) p 
on p.codcuentacontable=tmp.codcuenta
inner join tbl_msto_clienteProveedor cli
on tmp.CodPro=cli.ruc
where cli.Estado=1 
GROUP BY tmp.CODCUENTA,p.descripcion,p.tipoCuenta,tmp.codPro,cli.RazonSocial,cli.codClienteProveedor, --tmp.Fecha,
cli.Apellido,cli.Nombre,tmp.nrodocreferencia --,tmp.glosa
having (CASE WHEN p.TipoCuenta IN ('A','P') THEN  (CASE WHEN (sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.anhaber)+sum(tmp.haber)) THEN 
															(sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.anhaber)+sum(tmp.haber)) ELSE 
															--(sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe)) end)
																0.00 END) 
			ELSE 0 END)-(CASE WHEN p.TipoCuenta IN('A','P') THEN  
						   (CASE WHEN (sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.andebe)+sum(tmp.debe)) 
								 THEN (sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe)) 
							ELSE 0.00 END) ELSE 0 END)<>0
--order by tmp.CODCUENTA,Fecha,tmp.CodPro
) todos 
group by codcuenta,tipo, codpro, entidad
having sum(monto)<>0
order by codcuenta,fecha,entidad

DROP TABLE #C001
/****** Object:  StoredProcedure [dbo].[Spp_Rep_SaldoCuenta49]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[Spp_Rep_SaldoCuenta49]
--exec "Spp_Rep_SaldoCuenta49";1 '000017', '000017', '000017    ', '000017    ', '00', '99', '2011', '00', '12', 4, 9, '49'
@lcZonaA varchar(6),
@lcZonaB varchar(6),
@lcUnidadA char(10),
@lcUnidadB char(10),
@lcGruposA char(2),
@lcGruposB char(2),
@lcANO char(4),
@lcMesA char(2),
@lcMesB char(2),
@Espacio INT,
@idempresa int,
@Cuenta varchar(2)

AS
declare @lcMesB_1 char(2)


--if @lcMesA!=@lcMesB
--	begin
	set @lcMesB_1=replicate('0',2-len(convert(int,@lcMesB)-1))+convert(char(2),convert(int,@lcMesB)-1)
--	end
--else
--	begin 
--		set @lcMesB_1=@lcMesB
--	end


------------------------------------TOMANDO DATOS ANTERIORES, y ACTUAL
select codpro,Fecha=min(FechaDocReferencia),codcuenta=left(ltrim(rtrim(d.codcuenta)),@Espacio),d.glosa ,
					 isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.impdebe) end ,0.00)as andebe,
					 isnull(case when c.mes between @lcMesA and @lcMesB_1 and @lcMesA!=@lcMesB then sum(d.imphaber) end ,0.00)as anhaber,
						  isnull(case when c.mes=@lcMesB then sum(d.impdebe) end ,0.00)as DEBE,
						  isnull(case when c.mes=@lcMesB then sum(d.imphaber) end ,0.00)as HABER,d.nrodocreferencia,nrodocumento=min(d.nrodocumento)
into #C001
from movcontables_d d
inner join movcontables_c c on c.idmovcontables_c=d.idmovcontables_c
inner join (select codcuentacontable from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end)) p on p.codcuentacontable=d.codcuenta
where c.codmgc between @lcGruposA and @lcGruposB
    AND D.ESTADO not in('4','A') and c.anio=@lcANO
	AND C.zona BETWEEN RTRIM(@lcZonaA) AND RTRIM(@lcZonaA)
	and C.mes BETWEEN @lcMesA AND @lcMesB AND d.estado!='4' and c.estado!='4'
	AND C.CODUNIDADECONOMICA BETWEEN @lcUnidadA AND @lcUnidadB
group by left(ltrim(rtrim(d.codcuenta)),@Espacio),c.mes,codpro,d.nrodocreferencia,d.glosa

select tipo, max(glosa) glosa, codpro, entidad,sum(monto) monto, min(fecha) fecha,nrodocreferencia=min(nrodocreferencia),codcuenta,min(nrodocumento) nrodocumento
from (
SELECT Tipo=cli.codClienteProveedor,max(tmp.Glosa) glosa,tmp.CodPro,Entidad=case when cli.RazonSocial='' then cli.Nombre+' '+cli.Apellido else RazonSocial end,
	Monto=(CASE WHEN p.TipoCuenta IN ('A','P') THEN  (CASE WHEN (sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.anhaber)+sum(tmp.haber)) THEN 
																(sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.anhaber)+sum(tmp.haber)) ELSE 
																--(sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe)) end)
																0.00 END) 
			ELSE 0 END)-(CASE WHEN p.TipoCuenta IN('A','P') THEN  
						   (CASE WHEN (sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.andebe)+sum(tmp.debe)) 
								 THEN (sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe)) 
							ELSE 0.00 END) ELSE 0 END),min(tmp.Fecha) fecha, tmp.nrodocreferencia,tmp.codcuenta,nrodocumento= min(tmp.nrodocumento)
FROM #C001 tmp
inner join (select descripcion,tipoCuenta,codcuentacontable from plancuentascontables where idempresa=@idempresa and left(anio,4)=(case When rtrim(@lcAno)<'2020' then '2009' else rtrim(@lcAno) end) and left(codcuentacontable,2)=@Cuenta) p 
on p.codcuentacontable=tmp.codcuenta
inner join tbl_msto_clienteProveedor cli
on tmp.CodPro=cli.ruc
where cli.Estado=1 
GROUP BY tmp.CODCUENTA,p.descripcion,p.tipoCuenta,tmp.codPro,cli.RazonSocial,cli.codClienteProveedor, --tmp.Fecha,
cli.Apellido,cli.Nombre,tmp.nrodocreferencia --,tmp.glosa
having (CASE WHEN p.TipoCuenta IN ('A','P') THEN  (CASE WHEN (sum(tmp.andebe)+sum(tmp.debe))>(sum(tmp.anhaber)+sum(tmp.haber)) THEN 
															(sum(tmp.andebe)+sum(tmp.debe))-(sum(tmp.anhaber)+sum(tmp.haber)) ELSE 
															--(sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe)) end)
																0.00 END) 
			ELSE 0 END)-(CASE WHEN p.TipoCuenta IN('A','P') THEN  
						   (CASE WHEN (sum(tmp.anhaber)+sum(tmp.haber))>(sum(tmp.andebe)+sum(tmp.debe)) 
								 THEN (sum(tmp.anhaber)+sum(tmp.haber))-(sum(tmp.andebe)+sum(tmp.debe)) 
							ELSE 0.00 END) ELSE 0 END)<>0
--order by tmp.CODCUENTA,Fecha,tmp.CodPro
) todos 
group by codcuenta,tipo, codpro, entidad
having sum(monto)<>0
order by fecha,entidad
DROP TABLE #C001
/****** Object:  StoredProcedure [dbo].[Spp_Rep_SaldoCuenta50]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[Spp_Rep_SaldoCuenta50]
--exec "Spp_Rep_SaldoCuenta50";1 '000010', '000010', '000010    ', '000010    ', '00', '99', '2011', '00', '12', 7, 3, '50'
@lcZonaA varchar(6),
@lcZonaB varchar(6),
@lcUnidadA char(10),
@lcUnidadB char(10),
@lcGruposA char(2),
@lcGruposB char(2),
@lcANO char(4),
@lcMesA char(2),
@lcMesB char(2),
@Espacio INT,
@idempresa int,
@Cuenta varchar(2)

AS
declare @lcMesANew char(2), @lcMesBNew char(2), @lcAnioNew char(4)

set @lcAnioNew =(select max(anio) from tbl_msto_accionistas where idempresa = @idempresa and estado != '0' group by anio)
if @lcANO >=@lcAnioNew 
begin 
	set @lcAno=@lcAnioNew
end 

if @lcMesA <>@lcMesB 
Begin
set @lcMesANew = (select max(mes) from tbl_msto_accionistas where idempresa = @idempresa and estado != '0'
					and anio= @lcANO )
set @lcMesBNew = (select max(mes) from tbl_msto_accionistas where idempresa = @idempresa and estado != '0'
					and anio= @lcANO )
End
if @lcMesA =@lcMesB 
Begin
set @lcMesANew = @lcMesA
set @lcMesBNew = @lcMesB
End

------------------------------------TOMANDO DATOS ACCIONISTAS
select a.idempresa, capital, r.valoraccion, suscritas, pagadas, socios, 
		Tipdocumento =(case when len(documento)<>8 then '4' else '1' end), 
		documento, accionista, tipoaccion= 'ORDINARIAS', nroaccion, porcentajeparticipacion
from tbl_msto_accionistas a 
inner join (select idempresa, capital = sum(valoraccion* nroaccion), valoraccion, 
				suscritas= sum(nroaccion), pagadas = sum(nroaccion), 
				socios= count(idempresa) 
			from tbl_msto_accionistas 
			where idempresa = @idempresa and estado != '0'
					and anio= @lcANO and mes BETWEEN @lcMesANew AND @lcMesBNew 
			group by idempresa,valoraccion 
			) r  
on a.idempresa = r.idempresa
where a.idempresa = @idempresa and estado != '0'
and a.anio= @lcANO and a.mes BETWEEN @lcMesANew AND @lcMesBNew
/****** Object:  StoredProcedure [dbo].[spp_rep_SaldoCuentaEntidad]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_rep_SaldoCuentaEntidad]
@ZonaA varchar(6),
@ZonaB varchar(6),
@UnidadA varchar(10),
@UnidadB varchar(10),
@MesA char(2),
@MesB char(2),
@Anio char(4),
@idempresa int,
@IdTipoCLienProveeA int,
@IdTipoCLienProveeB int,
@cuentaA varchar(10),
@cuentaB varchar(10),
@rucc varchar(11)
as
if @rucc is null
BEGIN
SELECT mes=(select rtrim(codcuentacontable)+' - '+descripcion from plancuentascontables 
											where codcuentacontable=max(d.codcuenta) and idempresa=@idempresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)),NRODOC=max(C.NRODOC),c.zona,PROVEEDOR=(SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then rtrim(RUC)+' - '+razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then RUC+' - '+RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=5 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido)
							   when IdTipoCLienteProveedor=5 and razonsocial!='' then rtrim(RUC)+' - '+razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then rtrim(RUC)+' - '+razonsocial end
FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),TBL.IDTIPOCLIENTEPROVEEDOR,

FECHADOCREFERENCIA=max(D.FECHADOCREFERENCIA),FECHAVENCIMIENTO=max(D.FECHAVENCIMIENTO),D.CODIGODOCUMENTOREFERENCIA,D.NRODOCREFERENCIA,
Saldo= (case when left(d.codcuenta,2)between '10'  and '39'then sum(d.impdebe) - sum(d.imphaber) 
		     when left(d.codcuenta,2)between '40'  and '59'then sum(d.imphaber) - sum(d.impdebe) 
			 when left(d.codcuenta,2)between '60'  and '99'then sum(d.impdebe) - sum(d.imphaber) end)
FROM MOVCONTABLES_D D
inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
inner join ZONA Z ON C.ZONA=Z.CODZONA
inner JOIN TBL_MSTO_CLIENTEPROVEEDOR TBL ON TBL.RUC=D.CODPRO
WHERE C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB
	  AND C.ANIO=@Anio and d.codcuenta between @cuentaA and @cuentaB
	  AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND Z.IDEMPRESA=@idempresa
	   and D.ESTADO!='4' and C.ESTADO!='4' and d.codpro!='000001' AND TBL.Estado=1
	   AND Z.Estado= 1 AND TBL.IDTIPOCLIENTEPROVEEDOR BETWEEN @IdTipoCLienProveeA AND @IdTipoCLienProveeB and D.CODPRO IN (SELECT DD.CODPRO
														FROM MOVCONTABLES_D DD
														INNER JOIN MOVCONTABLES_C CC ON CC.IDMOVCONTABLES_C=DD.IDMOVCONTABLES_C
														inner join ZONA Z ON CC.ZONA=Z.CODZONA

														WHERE CC.ZONA BETWEEN @ZonaA AND @ZonaB AND CC.MES BETWEEN @MesA AND @MesB 
															  AND CC.ANIO=@Anio and dd.codcuenta between @cuentaA and @cuentaB
															  AND CC.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB
															   and DD.ESTADO!='4' AND CC.ESTADO!='4' AND Z.IDEMPRESA=@idempresa  and dd.codpro!=''
														group by DD.codpro
														having sum(DD.impdebe)!=sum(DD.imphaber) /*and sum(DD.impdebe)>0*/) 

GROUP by d.nrodocreferencia,c.zona,d.codpro,tbl.idtipoclienteproveedor,
/*D.FechaDocReferencia,D.FechaVencimiento,*/D.CodigoDocumentoReferencia,d.codcuenta,D.FechaDocReferencia
having  (left(d.codcuenta,2)between '10'  and '39' or left(d.codcuenta,2)between '40'  and '59' or
			 left(d.codcuenta,2)between '60'  and '99') and (sum(D.impdebe)-sum(D.imphaber))!=0 
order by d.codpro,d.FECHADOCREFERENCIA,d.nrodocreferencia
END
ELSE
	BEGIN
SELECT mes=(select rtrim(codcuentacontable)+' - '+descripcion from plancuentascontables 
											where codcuentacontable=max(d.codcuenta) and idempresa=@idempresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)),NRODOC=max(C.NRODOC),c.zona,PROVEEDOR=(SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then rtrim(RUC)+' - '+razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then ruc+' - '+RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=5 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido)
							   when IdTipoCLienteProveedor=5 and razonsocial!='' then rtrim(RUC)+' - '+razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then rtrim(RUC)+' - '+razonsocial end
FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),TBL.IDTIPOCLIENTEPROVEEDOR,

FECHADOCREFERENCIA=max(D.FECHADOCREFERENCIA),FECHAVENCIMIENTO=max(D.FECHAVENCIMIENTO),D.CODIGODOCUMENTOREFERENCIA,D.NRODOCREFERENCIA,
Saldo= (case when left(d.codcuenta,2)between '10'  and '39'then sum(d.impdebe) - sum(d.imphaber) 
		     when left(d.codcuenta,2)between '40'  and '59'then sum(d.imphaber) - sum(d.impdebe) 
			 when left(d.codcuenta,2)between '60'  and '99'then sum(d.impdebe) - sum(d.imphaber) end)
FROM MOVCONTABLES_D D
inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
inner join ZONA Z ON C.ZONA=Z.CODZONA
inner JOIN TBL_MSTO_CLIENTEPROVEEDOR TBL ON TBL.RUC=D.CODPRO
WHERE C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB
	  AND C.ANIO=@Anio and d.codcuenta between @cuentaA and @cuentaB
	  AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND Z.IDEMPRESA=@idempresa
	   and D.ESTADO!='4' and C.ESTADO!='4' and d.codpro!='000001' AND TBL.Estado=1
	   AND Z.Estado= 1 AND TBL.IDTIPOCLIENTEPROVEEDOR BETWEEN @IdTipoCLienProveeA AND @IdTipoCLienProveeB and D.CODPRO=@rucc

GROUP by d.nrodocreferencia,c.zona,d.codpro,tbl.idtipoclienteproveedor,
/*D.FechaDocReferencia,D.FechaVencimiento,*/D.CodigoDocumentoReferencia,d.codcuenta--,D.FechaDocReferencia
having  (left(d.codcuenta,2)between '10'  and '39' or left(d.codcuenta,2)between '40'  and '59' or
			 left(d.codcuenta,2)between '60'  and '99') and (sum(D.impdebe)-sum(D.imphaber))!=0 
order by d.codpro,max(d.FECHADOCREFERENCIA),d.nrodocreferencia		
	END
/****** Object:  StoredProcedure [dbo].[spp_rep_SaldoCuentaEntidad_resumido]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_rep_SaldoCuentaEntidad_resumido]
@ZonaA varchar(6),
@ZonaB varchar(6),
@UnidadA varchar(10),
@UnidadB varchar(10),
@MesA char(2),
@MesB char(2),
@Anio char(4),
@idempresa int,
@IdTipoCLienProveeA int,
@IdTipoCLienProveeB int,
@cuentaA varchar(10),
@cuentaB varchar(10),
@rucc varchar(11)
as
--exec "spp_rep_SaldoCuentaEntidad_resumido";1 '000012', '000012', '000012    ', '000012    ', '00', '01', '2013', 5, 1, 6, '4221101', '4221101', NULL

if @rucc is null
BEGIN
SELECT codcuenta=(select rtrim(codcuentacontable)+' - '+descripcion from plancuentascontables 
											where codcuentacontable=d.codcuenta and idempresa=@idempresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)),C.NRODOC,c.zona,c.codunidadeconomica,PROVEEDOR=(SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then rtrim(RUC)+' - '+razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then rtrim(RUC)+' - '+RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=5 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido)
							   when IdTipoCLienteProveedor=5 and razonsocial!='' then rtrim(RUC)+' - '+razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then rtrim(RUC)+' - '+razonsocial end
FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),TBL.IDTIPOCLIENTEPROVEEDOR,

D.FECHADOCREFERENCIA,D.FECHAVENCIMIENTO,
dr=(select DISTINCT rtrim(Descripcion)
	from tipodocumento where codigOdocumento=d.codigodocumentoreferencia )+' '+d.NRODOCReFERENCIA,d.impdebe,d.imphaber,
Saldo= (case when left(d.codcuenta,2)between '10'  and '39'then d.impdebe - d.imphaber 
		     when left(d.codcuenta,2)between '40'  and '59'then d.imphaber - d.impdebe 
			 when left(d.codcuenta,2)between '60'  and '99'then d.impdebe - d.imphaber end)
FROM MOVCONTABLES_D D
inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
inner join ZONA Z ON C.ZONA=Z.CODZONA
inner JOIN TBL_MSTO_CLIENTEPROVEEDOR TBL ON TBL.RUC=D.CODPRO
WHERE C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB
	  AND C.ANIO=@Anio and d.codcuenta between @cuentaA and @cuentaB
	  AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND Z.IDEMPRESA=@idempresa
	   and D.ESTADO!='4' and C.ESTADO!='4' and d.codpro!='000001' AND TBL.Estado=1
	   AND Z.Estado= 1 AND TBL.IDTIPOCLIENTEPROVEEDOR BETWEEN @IdTipoCLienProveeA AND @IdTipoCLienProveeB and D.CODPRO IN (SELECT DD.CODPRO
														FROM MOVCONTABLES_D DD
														INNER JOIN MOVCONTABLES_C CC ON CC.IDMOVCONTABLES_C=DD.IDMOVCONTABLES_C
														inner join ZONA Z ON CC.ZONA=Z.CODZONA

														WHERE CC.ZONA BETWEEN @ZonaA AND @ZonaB AND CC.MES BETWEEN @MesA AND @MesB 
															  AND CC.ANIO=@Anio and dd.codcuenta between @cuentaA and @cuentaB
															  AND CC.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB and d.codpro!=''
															   and DD.ESTADO!='4' AND CC.ESTADO!='4' AND Z.Estado= 1 AND Z.IDEMPRESA=@idempresa
														group by DD.codpro
														having sum(DD.impdebe)!=sum(DD.imphaber) and (sum(DD.impdebe)+sum(DD.imphaber))>0) 
order by d.codpro,d.codcuenta,d.FECHADOCREFERENCIA,d.nrodocreferencia,c.nrodoc
END
ELSE
	BEGIN
	SELECT codcuenta=(select rtrim(codcuentacontable)+' - '+descripcion from plancuentascontables 
											where codcuentacontable=d.codcuenta and idempresa=@idempresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)),C.NRODOC,c.zona,c.codunidadeconomica,PROVEEDOR=(SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then rtrim(RUC)+' - '+razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then rtrim(RUC)+' - '+RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=2 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido)
							   when IdTipoCLienteProveedor=2 and razonsocial!='' then rtrim(RUC)+' - '+razonsocial end
FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),TBL.IDTIPOCLIENTEPROVEEDOR,

D.FECHADOCREFERENCIA,D.FECHAVENCIMIENTO,
dr=(select DISTINCT rtrim(Descripcion)
	from tipodocumento where codigOdocumento=d.codigodocumentoreferencia )+' '+d.NRODOCReFERENCIA,d.impdebe,d.imphaber,
Saldo= (case when left(d.codcuenta,2)between '10'  and '39'then d.impdebe - d.imphaber 
		     when left(d.codcuenta,2)between '40'  and '59'then d.imphaber - d.impdebe 
			 when left(d.codcuenta,2)between '60'  and '99'then d.impdebe - d.imphaber end)
FROM MOVCONTABLES_D D
inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
inner join ZONA Z ON C.ZONA=Z.CODZONA
inner JOIN TBL_MSTO_CLIENTEPROVEEDOR TBL ON TBL.RUC=D.CODPRO
WHERE C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB
	  AND C.ANIO=@Anio and d.codcuenta between @cuentaA and @cuentaB
	  AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND Z.IDEMPRESA=@idempresa
	   and D.ESTADO!='4' and C.ESTADO!='4' and d.codpro!='000001' AND TBL.Estado=1
	   AND Z.Estado= 1 AND TBL.IDTIPOCLIENTEPROVEEDOR BETWEEN @IdTipoCLienProveeA AND @IdTipoCLienProveeB and D.CODPRO=@rucc
order by d.codpro,d.codcuenta,d.FECHADOCREFERENCIA,d.nrodocreferencia,c.nrodoc
	END
/****** Object:  StoredProcedure [dbo].[spp_rep_SaldoCuentaEntidad_Totales]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_rep_SaldoCuentaEntidad_Totales]
@ZonaA varchar(6),
@ZonaB varchar(6),
@UnidadA varchar(10),
@UnidadB varchar(10),
@MesA char(2),
@MesB char(2),
@Anio char(4),
@idempresa int,
@IdTipoCLienProveeA int,
@IdTipoCLienProveeB int,
@cuentaA varchar(10),
@cuentaB varchar(10),
@rucc varchar(11)
as
if @rucc is null
BEGIN
SELECT cuenta=(select rtrim(codcuentacontable)+' - '+descripcion from plancuentascontables 
											where codcuentacontable=max(d.codcuenta) and idempresa=@idempresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)), 
c.zona,PROVEEDOR=(SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then RUC+' - '+RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=5 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido)
							   when IdTipoCLienteProveedor=5 and razonsocial!='' then rtrim(RUC)+' - '+razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then rtrim(RUC)+' - '+razonsocial end
FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),
Saldo= (case when left(d.codcuenta,2)between '10'  and '39'then sum(d.impdebe) - sum(d.imphaber) 
		     when left(d.codcuenta,2)between '40'  and '59'then sum(d.imphaber) - sum(d.impdebe) 
			 when left(d.codcuenta,2)between '60'  and '99'then sum(d.impdebe) - sum(d.imphaber) end)
FROM MOVCONTABLES_D D
inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
inner join ZONA Z ON C.ZONA=Z.CODZONA
inner JOIN TBL_MSTO_CLIENTEPROVEEDOR TBL ON TBL.RUC=D.CODPRO
WHERE C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB
	  AND C.ANIO=@Anio and d.codcuenta between @cuentaA and @cuentaB
	  AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND Z.IDEMPRESA=@idempresa
	   and D.ESTADO!='4' and C.ESTADO!='4' and d.codpro!='000001' AND TBL.Estado=1
	   AND Z.Estado= 1 AND TBL.IDTIPOCLIENTEPROVEEDOR BETWEEN @IdTipoCLienProveeA AND @IdTipoCLienProveeB and D.CODPRO IN (SELECT DD.CODPRO
														FROM MOVCONTABLES_D DD
														INNER JOIN MOVCONTABLES_C CC ON CC.IDMOVCONTABLES_C=DD.IDMOVCONTABLES_C
														inner join ZONA Z ON CC.ZONA=Z.CODZONA

														WHERE CC.ZONA BETWEEN @ZonaA AND @ZonaB AND CC.MES BETWEEN @MesA AND @MesB 
															  AND CC.ANIO=@Anio and dd.codcuenta between @cuentaA and @cuentaB
															  AND CC.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB and d.codpro!=''
															   and DD.ESTADO!='4' AND CC.ESTADO!='4' AND Z.IDEMPRESA=@idempresa 
														group by DD.codpro
														having sum(DD.impdebe)!=sum(DD.imphaber) /*and sum(DD.impdebe)>0*/) 

GROUP by c.zona,d.codpro,D.CodigoDocumentoReferencia,d.codcuenta
having  (left(d.codcuenta,2)between '10'  and '39' or left(d.codcuenta,2)between '40'  and '59' or
			 left(d.codcuenta,2)between '60'  and '99') and (sum(D.impdebe)-sum(D.imphaber))!=0 
order by d.codpro
END
ELSE
	BEGIN
SELECT cuenta=(select rtrim(codcuentacontable)+' - '+descripcion from plancuentascontables 
											where codcuentacontable=max(d.codcuenta) and idempresa=@idempresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)),c.zona,PROVEEDOR=(SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then RUC+' - '+RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=5 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido)
							   when IdTipoCLienteProveedor=5 and razonsocial!='' then rtrim(RUC)+' - '+razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then rtrim(RUC)+' - '+(nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then rtrim(RUC)+' - '+razonsocial end
FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO AND Estado=1),
Saldo= (case when left(d.codcuenta,2)between '10'  and '39'then sum(d.impdebe) - sum(d.imphaber) 
		     when left(d.codcuenta,2)between '40'  and '59'then sum(d.imphaber) - sum(d.impdebe) 
			 when left(d.codcuenta,2)between '60'  and '99'then sum(d.impdebe) - sum(d.imphaber) end)
FROM MOVCONTABLES_D D
inner JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
inner join ZONA Z ON C.ZONA=Z.CODZONA
inner JOIN TBL_MSTO_CLIENTEPROVEEDOR TBL ON TBL.RUC=D.CODPRO
WHERE C.ZONA BETWEEN @ZonaA AND @ZonaB AND C.MES BETWEEN @MesA AND @MesB
	  AND C.ANIO=@Anio and d.codcuenta between @cuentaA and @cuentaB
	  AND C.CODUNIDADECONOMICA BETWEEN @UnidadA AND @UnidadB AND Z.IDEMPRESA=@idempresa
	   and D.ESTADO!='4' and C.ESTADO!='4' and d.codpro!='000001' AND TBL.Estado=1
	   AND Z.Estado= 1 AND TBL.IDTIPOCLIENTEPROVEEDOR BETWEEN @IdTipoCLienProveeA AND @IdTipoCLienProveeB and D.CODPRO=@rucc

GROUP by c.zona,d.codpro,D.CodigoDocumentoReferencia,d.codcuenta
having  (left(d.codcuenta,2)between '10'  and '39' or left(d.codcuenta,2)between '40'  and '59' or
			 left(d.codcuenta,2)between '60'  and '99') and (sum(D.impdebe)-sum(D.imphaber))!=0 
order by d.codpro		
	END
/****** Object:  StoredProcedure [dbo].[spp_RepCajayBanco]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_RepCajayBanco]
@anio char(4),@Mesi char(2),@Mesf char(2),
@ZonaA varchar(6),@ZonaB varchar(6),@UnidadA char(10),@UnidadB char(10),
@Grupo varchar(50),
@IDEMPRESA INT,
@tipo char(2)
AS

set @Grupo='02/20/11/'

if @tipo='CB'
	begin

SELECT C.NRODOC,D.CodCuenta,DESCRIPCION=(SELECT DISTINCT DESCRIPCION FROM PLANCUENTASCONTABLES 
											WHERE CODCUENTACONTABLE=D.CODCUENTA AND IDEMPRESA=@IDEMPRESA and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)),
	c.zona,d.fechavencimiento,d.codigodocumentoreferencia,
	nrodocreferencia = right(d.NroDocReferencia,7)+' '+(case when d.CodigoDocumentoReferencia='99' then  right(d.NroDocumentofuente,7) else '' end ),
	d.codpro,
	PROVEEDOR=isnull((SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
							   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
							   when IdTipoCLienteProveedor=5 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=5 and razonsocial!='' then razonsocial 
							   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
							   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
					  FROM TBL_MSTO_CLIENTEPROVEEDOR 
					  WHERE RUC=D.CODPRO AND Estado=1),''), 
	d.glosa,FINANCIERA=ISNULL(B.Descripcion,''), NroCuenta=isnull(B.CtaBancaria,''),
(case when d.CodigoDocumentoReferencia='07' Then -1 else 1 end) * D.IMPDEBE IMPDEBE,
(case when d.CodigoDocumentoReferencia='07' Then -1 else 1 end) * D.IMPHABER IMPHABER
FROM MOVCONTABLES_D D INNER JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C

	INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
	LEFT JOIN (SELECT DESCRIPCION, CTABANCARIA,CTACONTABLE,CODMONEDA FROM BANCO WHERE estado!='0' AND IDEMPRESA=@IDEMPRESA) B ON B.CTACONTABLE=D.CodigoCtaBancaria
	LEFT JOIN MONEDA M ON M.CODMONEDA=B.CODMONEDA
WHERE C.Anio = @anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
     AND c.mes    BETWEEN @Mesi AND @Mesf 
     AND c.zona   BETWEEN @ZonaA AND @ZonaB 
     AND c.codUNidadEconomica BETWEEN rtrim(@UnidadA) AND rtrim(@UnidadB)
     AND charindex(rtrim(C.CODMGC),@Grupo )>0 AND Z.IDEMPRESA=@IDEMPRESA
ORDER BY c.mes,d.nrodocumento,d.fechavencimiento
end
--if @tipo='CE'
--	begin
--	SELECT C.NRODOC,D.CodCuenta,DESCRIPCION=(SELECT DISTINCT DESCRIPCION FROM PLANCUENTASCONTABLES 
--											WHERE CODCUENTACONTABLE=D.CODCUENTA AND IDEMPRESA=@IDEMPRESA and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)),
--c.zona,d.fechavencimiento,d.codigodocumentoreferencia,d.nrodocreferencia,d.codpro,PROVEEDOR=isnull((SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
--							   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
--							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
--							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
--							   when IdTipoCLienteProveedor=2 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
--							   when IdTipoCLienteProveedor=2 and razonsocial!='' then razonsocial end
--FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO),'')
--,d.glosa,FINANCIERA=ISNULL(B.Descripcion,''),NroCuenta=isnull(B.CtaBancaria,''),D.IMPDEBE,D.IMPHABER 
--FROM MOVCONTABLES_D D INNER JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
--
--INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
--LEFT JOIN BANCO B ON B.CTACONTABLE=D.CodigoCtaBancaria
--LEFT JOIN MONEDA M ON M.CODMONEDA=B.CODMONEDA
--      WHERE C.Anio = @anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
--            AND c.mes    BETWEEN @Mesi AND @Mesf 
--            AND c.zona   BETWEEN @ZonaA AND @ZonaB and left(codcuenta,3)not in('104')
--            AND c.codUNidadEconomica BETWEEN rtrim(@UnidadA) AND rtrim(@UnidadB)
--            AND charindex(rtrim(C.CODMGC),@Grupo )>0 AND Z.IDEMPRESA=@IDEMPRESA
--       ORDER BY c.mes,d.nrodocumento,d.fechavencimiento
--	end
--
--if @tipo='CC'
--	begin
--	SELECT C.NRODOC,D.CodCuenta,DESCRIPCION=(SELECT DISTINCT DESCRIPCION FROM PLANCUENTASCONTABLES 
--											WHERE CODCUENTACONTABLE=D.CODCUENTA AND IDEMPRESA=@IDEMPRESA and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)),
--c.zona,d.fechavencimiento,d.codigodocumentoreferencia,d.nrodocreferencia,d.codpro,PROVEEDOR=isnull((SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
--							   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
--							   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
--							   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
--							   when IdTipoCLienteProveedor=2 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
--							   when IdTipoCLienteProveedor=2 and razonsocial!='' then razonsocial end
--FROM TBL_MSTO_CLIENTEPROVEEDOR WHERE RUC=D.CODPRO),'')
--,d.glosa,FINANCIERA=ISNULL(B.Descripcion,''),NroCuenta=isnull(B.CtaBancaria,''),D.IMPDEBE,D.IMPHABER 
--FROM MOVCONTABLES_D D INNER JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
--
--INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
--LEFT JOIN BANCO B ON B.CTACONTABLE=D.CodigoCtaBancaria
--LEFT JOIN MONEDA M ON M.CODMONEDA=B.CODMONEDA
--      WHERE C.Anio = @anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
--            AND c.mes    BETWEEN @Mesi AND @Mesf 
--            AND c.zona   BETWEEN @ZonaA AND @ZonaB and left(codcuenta,3)not in('101')
--            AND c.codUNidadEconomica BETWEEN rtrim(@UnidadA) AND rtrim(@UnidadB)
--            AND charindex(rtrim(C.CODMGC),@Grupo )>0 AND Z.IDEMPRESA=@IDEMPRESA
--       ORDER BY c.mes,d.nrodocumento,d.fechavencimiento
--	end
--
--
--
--
--
--
/****** Object:  StoredProcedure [dbo].[spp_RepCajayBanco_Detalle]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_RepCajayBanco_Detalle]
@anio char(4),@Mesi char(2),@Mesf char(2),
@ZonaA varchar(6),@ZonaB varchar(6),@UnidadA char(10),@UnidadB char(10),

@IDEMPRESA INT,
@tipo char(2)
AS
-- exec "spp_RepCajayBanco_Detalle";1 '2017', '01', '01', '000012', '000012', '000012    ', '000012    ', 5, 'CC'
DECLARE @CodCta varchar(20),@Grupo varchar(50),@digito int

set @Grupo='02/20/11/'

If @tipo='CC'
Begin
	--Caja Bancos Detalle Cuenta Coriente
	set @CodCta= '104' --'1040'
	set @digito=3 --4
	--- calculando solo mes apertura
	If @mesi <= (select mes=isnull(min(mc.mes),'00')
				from movcontables_d md inner join movcontables_c mc on md.idmovcontables_C = mc.IdMovContables_C
				where mc.zona BETWEEN @ZonaA AND @ZonaB and md.CodUnidadEconomica BETWEEN @UnidadA AND @UnidadB and mc.mes>'00' and mc.mes<= @Mesf and 
					mc.anio=@Anio and md.estado<>'4')
	Begin
		Select * from (
			select entidad.codigoctabancaria Cuenta, 
					entidad =isnull((SELECT rtrim(DESCRIPCION)+' '+ Ctabancaria FROM banco 
														WHERE CTACONTABLE=entidad.codigoctabancaria and estado='1' AND IDEMPRESA=@IDEMPRESA), ''), 
					zona= max(z.zona), max(C.NRODOC) as NroDoc,
					'01/01/1900' as FechaDocReferencia, '001' AS mediopago, 
					 'APERTURA..... ('+convert(char(10), max(d.fechadocreferencia), 103)+')' descripcion, '00' AS codpro, 'VARIOS' as PROVEEDOR, '00' AS NroTransaccionBancaria, 
					CodCuenta=max(D.CodCuenta), 
					Financiera = (SELECT DISTINCT DESCRIPCION FROM PLANCUENTASCONTABLES 
														WHERE IDEMPRESA=@IDEMPRESA and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) AND CODCUENTACONTABLE=MAx(D.CODCUENTA)),
					'' as NroCuenta, 
					-- invirtiendo valores impdebe por imphaber
					
					impHaber= (CASE WHEN sum(cASe when d.moneda = '01' then  d.Impdebe else d.ImpDebeDolar*tipocambio end ) - 
										sum(cASe when d.moneda = '01' then  d.Imphaber else d.ImpHaberDolar*tipocambio end) >0 
								THEN  0.00 
								ELSE 	sum(cASe when d.moneda = '01' then  d.Impdebe else d.ImpDebeDolar*tipocambio end ) - 
										sum(cASe when d.moneda = '01' then  d.Imphaber else d.ImpHaberDolar*tipocambio end) 
							 END )*-1, 
					impDebe= (CASE WHEN sum(cASe when d.moneda = '01' then  d.Impdebe else d.ImpDebeDolar*tipocambio end ) - 
										sum(cASe when d.moneda = '01' then  d.Imphaber else d.ImpHaberDolar*tipocambio end) <0 
								THEN  0.00 
								ELSE 	sum(cASe when d.moneda = '01' then  d.Impdebe else d.ImpDebeDolar*tipocambio end ) - 
										sum(cASe when d.moneda = '01' then  d.Imphaber else d.ImpHaberDolar*tipocambio end) 
							 END ) , '' cocach, d.moneda,'00' CodigoDocumentoReferencia, 'APER-000'+@Anio NrodocReferencia, Isnull(ban.codEFina,'') codEFina
			FROM  movcontables_d d 
				Inner join movcontables_c c ON c.idmovcontables_c=d.idmovcontables_c
				Inner join zona z on z.codzona=c.zona
				inner join (Select distinct nrodocumento, codigoctaBancaria=(case when codigoctaBancaria='-' then '' else codigoctaBancaria end) from movContables_d 
							where left(CodCuenta,@digito) =@CodCta and codUNidadEconomica BETWEEN rtrim(@UnidadA) AND rtrim(@UnidadB) and Estado <>'4'
								and substring(nrodocumento,3,3) = right(@Anio,1)+'00'
							group by nrodocumento, codigoctabancaria ) entidad
							on entidad.nrodocumento+rtrim(entidad.codigoctaBancaria) =d.nrodocumento+ d.codigoctaBancaria 
				left outer join (select ctacontable,dbo.padl(NroOperacion,2,'0') CodEFina from banco where idempresa=@idempresa and estado!='0') ban 
							on entidad.codigoctaBancaria = ban.ctacontable
			where c.zona   BETWEEN @ZonaA AND @ZonaB 
				 AND c.codunidadeconomica BETWEEN @UnidadA AND @UnidadB AND  
				 d.Estado!='4' and c.estado!='4' and d.codpro!='000001' and z.idempresa=@IDEMPRESA and
				c.anio=@Anio and c.mes='00' and 
				left(d.codcuenta,@digito)=@CodCta and d.estado <>'D' and 
					----------
					d.nrodocumento in (
					select dd.nrodocumento from movcontables_d dd 
						Inner join movcontables_c cc ON cc.idmovcontables_c=dd.idmovcontables_c
					where cc.zona   BETWEEN '000012' AND '000012' and --@ZonaA AND @ZonaB  and 
						cc.anio=@Anio and cc.mes='00' and 
						left(dd.codcuenta,@digito)=@CodCta and dd.codunidadeconomica BETWEEN '000012' AND '000012' --@UnidadA AND @UnidadB
						AND dd.Estado!='4' and dd.codpro!='000001' 
					group by nrodocumento )
					----------
				AND left(d.CodigoCtaBancaria,3)='104' --desactivar por no tener registros de tesoreria
			group by entidad.codigoctabancaria,c.anio, d.codcuenta, c.zona, d.moneda, ban.codEFina

			UNION ALL 
			--Datos Seleccionados
			SELECT entidad.codigoctabancaria Cuenta, 
				entidad =isnull((SELECT rtrim(DESCRIPCION)+' '+ Ctabancaria FROM banco 
														WHERE CTACONTABLE=entidad.codigoctabancaria AND Estado= '1' AND IDEMPRESA=@idEmpresa),''), 
				zona=z.zona,C.NRODOC,convert(char(10), d.fechadocreferencia, 103) fechadocreferencia,
				MedioPago = d.tipomediopago,-- +' '+ MP.TipoMedioPago, 
				descripcion = rtrim(c.glosa)+' '+rtrim(TD.descripcion)+' '+d.NroDocReferencia,
				d.codpro,
				PROVEEDOR=isnull((SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
										   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
										   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
										   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
										   when IdTipoCLienteProveedor=5 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
										   when IdTipoCLienteProveedor=5 and razonsocial!='' then razonsocial 
										   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
										   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
								  FROM TBL_MSTO_CLIENTEPROVEEDOR 
								  WHERE RUC=D.CODPRO AND Estado=1),''), 
				NrotransaccionBancaria =d.glosa,
				D.CodCuenta, 
				FINANCIERA = (SELECT DISTINCT DESCRIPCION FROM PLANCUENTASCONTABLES 
														WHERE IDEMPRESA=@IDEMPRESA and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) AND CODCUENTACONTABLE=D.CODCUENTA),
				NroCuenta=isnull(B.CtaBancaria,''),
				ImpHaber = D.IMPDebe, --D.IMPDEBE,
				ImpDebe  = D.IMPHaber --D.IMPHABER 
				, isnull(tesoreria.correlativo,'') cocach, d.moneda, d.CodigoDocumentoReferencia, d.NrodocReferencia, isnull(ban.CodEFina,'') CodEFina
			FROM MOVCONTABLES_D D INNER JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
				INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
				LEFT JOIN (SELECT DESCRIPCION, CTABANCARIA,CTACONTABLE,CODMONEDA FROM BANCO WHERE estado!='0' AND IDEMPRESA=@IDEMPRESA) B ON B.CTACONTABLE=D.CodigoCtaBancaria
				LEFT JOIN MONEDA M ON M.CODMONEDA=B.CODMONEDA
				inner join tbl_Tipo_Medio_Pago MP on d.tipomediopago = MP.CodTipoMedioPago
				inner join TipoDocumento TD on d.codigoDocumentoreferencia = TD.codigodocumento
				inner join (Select distinct nrodocumento, codigoctaBancaria=(case when codigoctaBancaria='-' then '' else codigoctaBancaria end) from movContables_d 
							where left(CodCuenta,@digito) =@CodCta and codUNidadEconomica BETWEEN rtrim(@UnidadA) AND rtrim(@UnidadB) and Estado <>'4' 
								and substring(nrodocumento,3,3) BETWEEN right(@Anio,1)+@Mesi AND right(@Anio,1)+@Mesf
							group by nrodocumento, codigoctabancaria ) entidad
							--on entidad.nrodocumento+(case When rtrim(entidad.codigoctaBancaria)='' Then '-' Else rtrim(entidad.codigoctaBancaria) End) =d.nrodocumento+(case When rtrim(d.codigoctaBancaria)='' Then '-' Else rtrim(d.codigoctaBancaria) End)
							on entidad.nrodocumento = c.nrodoc --and entidad.codigoctabancaria=d.codigoctabancaria
				left outer join (select nrodoc,correlativo from tbl_movimientocajac
					 where anio=@Anio AND mes BETWEEN @Mesi AND @Mesf
							AND zona   BETWEEN @ZonaA    AND @ZonaB 
							AND codunidadeconomica BETWEEN @UnidadA AND @UnidadB
					) tesoreria on d.cocach=tesoreria.nrodoc
				left outer join (select ctacontable,dbo.padl(NroOperacion,2,'0') CodEFina from banco where idempresa=@idempresa and estado!='0') ban 
							on entidad.codigoctaBancaria = ban.ctacontable
			WHERE C.Anio = @anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
				 AND c.mes    BETWEEN @Mesi AND @Mesf 
				 AND c.zona   BETWEEN @ZonaA AND @ZonaB 
				 AND c.codUNidadEconomica BETWEEN rtrim(@UnidadA) AND rtrim(@UnidadB)
				 AND charindex(rtrim(C.CODMGC),@Grupo )>0 AND Z.IDEMPRESA=@IDEMPRESA 
				 AND left(D.CodCuenta,@digito)!=@CodCta and d.estado <>'D' and 
					d.nrodocumento in (
						select dd.nrodocumento from movcontables_d dd
							Inner join movcontables_c cc ON cc.idmovcontables_c=dd.idmovcontables_c
						where cc.zona   BETWEEN '000012' AND '000012' and --@ZonaA AND @ZonaB  and 
							cc.anio=@Anio and cc.mes BETWEEN @Mesi AND @Mesf and 
							left(dd.codcuenta,@digito)!=@CodCta and dd.codunidadeconomica BETWEEN '000012' AND '000012' --@UnidadA AND @UnidadB
							AND dd.Estado!='4' and dd.codpro!='000001' 
						group by nrodocumento)
					----------
				AND left(d.CodigoCtaBancaria,3)='104' --desactivar por no tener registros de tesoreria
		) Resumen 
		Order by cuenta,convert(datetime, fechadocreferencia,103) --, NroDoc
	End
	Else 
	Begin
	--calculando meses anteriores y actual
	-- calcula saldo meses anteriores
		Select * from (
--		select cuenta,entidad,zona, '' as NroDoc,'01/'+@Mesi+'/'+@anio as FechaDocReferencia, '001' AS mediopago, 
		select cuenta,entidad,zona, '' as NroDoc,'01/'+@Mesi+'/1900' as FechaDocReferencia, '001' AS mediopago, 
							 '' descripcion, '' AS codpro, '' as PROVEEDOR, '' AS NroTransaccionBancaria, 
							CodCuenta='', 
							'SALDO MES ANTERIOR..... ' as Financiera,
							'' as NroCuenta,
							impdebe=(Case When sum(impdebe-imphaber)<0 Then 0 Else sum(impdebe-imphaber) End),
							imphaber=(Case When sum(impdebe-imphaber)<0 Then sum(impdebe-imphaber) else 0 End),
							'' cocach, max(monedabc) moneda,'00' CodigoDocumentoReferencia, 'SALD-MESANT' NrodocReferencia, codEFina
		from (
			select  d.codigoctabancaria cuenta,
				entidad =isnull((SELECT rtrim(DESCRIPCION)+' '+ Ctabancaria FROM banco 
														WHERE CTACONTABLE=d.codigoctabancaria AND Estado ='1' AND IDEMPRESA=@IDEMPRESA),''), 
--				 entidad.codigoctabancaria Cuenta, 
--				entidad =isnull((SELECT rtrim(DESCRIPCION)+' '+ Ctabancaria FROM banco 
--														WHERE CTACONTABLE=entidad.codigoctabancaria AND Estado ='1' AND IDEMPRESA=@IDEMPRESA),''), 
					zona=max(z.zona), '' as NroDoc,'' as FechaDocReferencia, '' AS mediopago, 
					 '' descripcion, '00' AS codpro, 'VARIOS' as PROVEEDOR, '00' AS NroTransaccionBancaria, 
					CodCuenta='', --(select rtrim(codcuentacontable)+' - '+descripcion from plancuentascontables 
								--where codcuentacontable=d.codcuenta  and idempresa=@IDEMPRESA and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)),
					'SALDO MES ANTERIOR..... ' as Financiera,
					'' as NroCuenta, 
					-- invirtiendo valores impdebe por imphaber
					impDebe= (CASE WHEN sum(cASe when d.moneda = '01' then  d.Impdebe else d.ImpDebeDolar*tipocambio end ) - 
										sum(cASe when d.moneda = '01' then  d.Imphaber else d.ImpHaberDolar*tipocambio end) <0 
								THEN  0.00 
								ELSE 	sum(cASe when d.moneda = '01' then  d.Impdebe else d.ImpDebeDolar*tipocambio end ) - 
										sum(cASe when d.moneda = '01' then  d.Imphaber else d.ImpHaberDolar*tipocambio end) 
							 END ), 
					impHaber= (CASE WHEN sum(cASe when d.moneda = '01' then  d.Impdebe else d.ImpDebeDolar*tipocambio end ) - 
										sum(cASe when d.moneda = '01' then  d.Imphaber else d.ImpHaberDolar*tipocambio end) >0 
								THEN  0.00 
								ELSE 	sum(cASe when d.moneda = '01' then  d.Impdebe else d.ImpDebeDolar*tipocambio end ) - 
										sum(cASe when d.moneda = '01' then  d.Imphaber else d.ImpHaberDolar*tipocambio end) 
							 END )*-1 , '' cocach, d.moneda,'' CodigoDocumentoReferencia, '' NrodocReferencia, isnull(ban.CodEFina,'') codEFina
			FROM  movcontables_d d 
				Inner join movcontables_c c ON c.idmovcontables_c=d.idmovcontables_c
				Inner join zona z on z.codzona=c.zona
--				inner join (Select distinct nrodocumento, codigoctaBancaria=(case when codigoctaBancaria='-' then '' else codigoctaBancaria end) from movContables_d 
--							where left(CodCuenta,@digito) =@CodCta and codUNidadEconomica BETWEEN rtrim(@UnidadA) AND rtrim(@UnidadB) and Estado <>'4'
--								and substring(nrodocumento,3,3) BETWEEN right(@Anio,1)+@Mesi AND right(@Anio,1)+@Mesf
--							group by nrodocumento, codigoctabancaria ) entidad
--							on entidad.nrodocumento+(case When rtrim(entidad.codigoctaBancaria)='' Then '-' Else rtrim(entidad.codigoctaBancaria) End) =d.nrodocumento+(case When rtrim(d.codigoctaBancaria)='' Then '-' Else rtrim(d.codigoctaBancaria) End)
				left outer join (select ctacontable,dbo.padl(NroOperacion,2,'0') CodEFina from banco where idempresa=@idempresa and estado!='0') ban 
							on d.codigoctaBancaria = ban.ctacontable
			where c.zona   BETWEEN @ZonaA AND @ZonaB 
				 AND c.codunidadeconomica BETWEEN @UnidadA AND @UnidadB AND  
				 d.Estado!='4' and c.estado!='4' and d.codpro!='000001' and z.idempresa=@IDEMPRESA and
				c.anio=@Anio and c.mes>='00' and c.mes<@Mesi and 
				left(d.codcuenta,@digito)=@CodCta and d.estado <>'D' and 
					----------
					d.nrodocumento in (
					select nrodocumento from movcontables_d dd 
						Inner join movcontables_c cc ON cc.idmovcontables_c=dd.idmovcontables_c
					where cc.zona   BETWEEN '000012' AND '000012' and --@ZonaA AND @ZonaB  and 
						cc.anio=@Anio and cc.mes>='00' and cc.mes<@Mesi and 
						left(dd.codcuenta,@digito)=@CodCta and dd.codunidadeconomica BETWEEN '000012' AND '000012' --@UnidadA AND @UnidadB
						AND dd.Estado!='4' and dd.codpro!='000001' 
					group by nrodocumento )
					----------
				AND left(d.CodigoCtaBancaria,3)='104' --desactivar por no tener registros de tesoreria
--			group by entidad.codigoctabancaria,c.anio, c.zona
			group by d.codigoctabancaria,c.anio, c.zona,d.moneda, ban.codEFina
		) res inner join (select ctacontable,codmoneda*1 monedabc from banco where idempresa=@IDEMPRESA group by ctacontable,codmoneda) bc on res.cuenta=bc.ctacontable
		group by cuenta,entidad,zona,codEFina

			UNION ALL 
			--Datos Seleccionados mes actual 
			SELECT --b.CTACONTABLE cuenta,b.descripcion entidad,
--				 d.codigoctabancaria cuenta,
--				entidad =isnull((SELECT rtrim(DESCRIPCION)+' '+ Ctabancaria FROM banco 
--														WHERE CTACONTABLE=d.codigoctabancaria AND Estado ='1' AND IDEMPRESA=@IDEMPRESA),''), 
				 entidad.codigoctabancaria Cuenta, 
				entidad =isnull((SELECT rtrim(DESCRIPCION)+' '+ Ctabancaria FROM banco 
														WHERE CTACONTABLE=entidad.codigoctabancaria AND Estado ='1' AND IDEMPRESA=@IDEMPRESA),''), 
				zona=z.zona,C.NRODOC,convert(char(10), d.fechadocreferencia, 103) fechadocreferencia,
				MedioPago = d.tipomediopago,-- +' '+ MP.TipoMedioPago, 
				descripcion = rtrim(c.glosa)+' '+rtrim(TD.descripcion)+' '+NroDocReferencia,
				d.codpro,
				PROVEEDOR=isnull((SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
										   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
										   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
										   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
										   when IdTipoCLienteProveedor=5 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
										   when IdTipoCLienteProveedor=5 and razonsocial!='' then razonsocial 
										   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
										   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
								  FROM TBL_MSTO_CLIENTEPROVEEDOR 
								  WHERE RUC=D.CODPRO AND Estado=1),''), 
				NrotransaccionBancaria =d.glosa,
				D.CodCuenta, 
				FINANCIERA = (SELECT DISTINCT DESCRIPCION FROM PLANCUENTASCONTABLES 
														WHERE IDEMPRESA=@IDEMPRESA and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) AND CODCUENTACONTABLE=D.CODCUENTA),
				NroCuenta=isnull(B.CtaBancaria,''),
				ImpHaber = D.IMPHaber, --D.IMPDEBE,
				ImpDebe  = D.IMPDebe --D.IMPHABER 
				, isnull(tesoreria.correlativo,'') cocach, d.moneda, d.CodigoDocumentoReferencia, d.NrodocReferencia,isnull(ban.codEFina,'') codEFina
			FROM MOVCONTABLES_D D INNER JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
				INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
				LEFT JOIN (SELECT DESCRIPCION, CTABANCARIA,CTACONTABLE,CODMONEDA FROM BANCO WHERE estado!='0' AND IDEMPRESA=@IDEMPRESA) B ON B.CTACONTABLE=D.CodigoCtaBancaria
				LEFT JOIN MONEDA M ON M.CODMONEDA=B.CODMONEDA
				inner join tbl_Tipo_Medio_Pago MP on d.tipomediopago = MP.CodTipoMedioPago
				inner join TipoDocumento TD on d.codigoDocumentoreferencia = TD.codigodocumento
				inner join (Select distinct nrodocumento, codigoctaBancaria=(case when codigoctaBancaria='-' then '' else codigoctaBancaria end) from movContables_d 
							where left(CodCuenta,@digito)=@CodCta and codUNidadEconomica BETWEEN rtrim(@UnidadA) AND rtrim(@UnidadB) and Estado <>'4' 
								and substring(nrodocumento,3,3) BETWEEN right(@Anio,1)+@Mesi AND right(@Anio,1)+@Mesf
							group by nrodocumento, codigoctabancaria ) entidad
							on entidad.nrodocumento = c.nrodoc --and entidad.codigoctabancaria=d.codigoctabancaria

				left outer join (select nrodoc,correlativo from tbl_movimientocajac
				 where anio=@Anio AND mes BETWEEN @Mesi AND @Mesf
						AND zona   BETWEEN @ZonaA    AND @ZonaB 
						AND codunidadeconomica BETWEEN @UnidadA AND @UnidadB
				) tesoreria on d.cocach=tesoreria.nrodoc
				left outer join (select ctacontable,dbo.padl(NroOperacion,2,'0') CodEFina from banco where idempresa=@idempresa and estado!='0') ban 
							on entidad.codigoctaBancaria = ban.ctacontable
			WHERE C.Anio = @anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
				 AND c.mes    BETWEEN @Mesi AND @Mesf 
				 AND c.zona   BETWEEN @ZonaA AND @ZonaB 
				 AND c.codUNidadEconomica BETWEEN rtrim(@UnidadA) AND rtrim(@UnidadB)
				 AND charindex(rtrim(C.CODMGC),@Grupo )>0 AND Z.IDEMPRESA=@IDEMPRESA --AND B.IDEMPRESA=@IDEMPRESA
				 AND left(D.CodCuenta,@digito)!=@CodCta and --(d.estado <>'D' or left(d.codcuenta,2) in ('12','42')) and 
					d.nrodocumento in (
					select nrodocumento from movcontables_d dd
						Inner join movcontables_c cc ON cc.idmovcontables_c=dd.idmovcontables_c
					where cc.zona   BETWEEN '000012' AND '000012' and --@ZonaA AND @ZonaB  and 
						cc.anio=@Anio and cc.mes BETWEEN @Mesi AND @Mesf and 
						left(dd.codcuenta,@digito)!=@CodCta and dd.codunidadeconomica BETWEEN '000012' AND '000012' --@UnidadA AND @UnidadB
						AND dd.Estado!='4' and dd.codpro!='000001' 
					group by nrodocumento)
				AND left(d.CodigoCtaBancaria,3)='104' --desactivar por no tener registros de tesoreria
--				AND d.codigoctabancaria not in ('','-')
		) Resumen 
		Order by cuenta,convert(datetime, fechadocreferencia,103) --, NroDoc
	End
End -- fin 104
Else
Begin
---- Caja Bancos - Detalle Movimientos en Efectivo
--	set @CodCta='101' -- '1011'
	set @CodCta='101/102'
	set @digito=3  --4

	--- calculando solo mes apertura
	If @mesi <= (select mes=isnull(min(mes),'00')
				from movcontables_d md inner join movcontables_c mc on md.idmovcontables_C = mc.IdMovContables_C
				where mc.zona BETWEEN @ZonaA AND @ZonaB and mc.mes>'00' and mc.mes<= @Mesf and 
					mc.anio=@Anio and md.estado<>'4')
	Begin
		Select * from (
			select entidad.codigoctabancaria Cuenta, 
					entidad =isnull((SELECT rtrim(DESCRIPCION)+' '+ Ctabancaria FROM banco 
														WHERE CTACONTABLE=entidad.codigoctabancaria and estado='1' AND IDEMPRESA=@IDEMPRESA), ''), 
					zona= max(z.zona), max(C.NRODOC) as NroDoc,
					--convert(char(10), max(d.fechadocreferencia), 103) as FechaDocReferencia, '' AS mediopago, 
					convert(char(10), '01/01/1900', 103) as FechaDocReferencia, '' AS mediopago, 
					 'APERTURA..... ' descripcion, '' AS codpro, '' as PROVEEDOR, '' AS NroTransaccionBancaria, 
					CodCuenta=max(D.CodCuenta), 
					Financiera = (SELECT DISTINCT DESCRIPCION FROM PLANCUENTASCONTABLES 
														WHERE IDEMPRESA=@IDEMPRESA and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) AND CODCUENTACONTABLE=MAx(D.CODCUENTA)),
					'' as NroCuenta, 
					-- invirtiendo valores impdebe por imphaber
					
					imphaber= (CASE WHEN sum(cASe when d.moneda = '01' then  d.Impdebe else d.ImpDebeDolar*tipocambio end ) - 
										sum(cASe when d.moneda = '01' then  d.Imphaber else d.ImpHaberDolar*tipocambio end) >0 
								THEN  0.00 
								ELSE 	sum(cASe when d.moneda = '01' then  d.Impdebe else d.ImpDebeDolar*tipocambio end ) - 
										sum(cASe when d.moneda = '01' then  d.Imphaber else d.ImpHaberDolar*tipocambio end) 
							 END )*-1, 
					impdebe= (CASE WHEN sum(cASe when d.moneda = '01' then  d.Impdebe else d.ImpDebeDolar*tipocambio end ) - 
										sum(cASe when d.moneda = '01' then  d.Imphaber else d.ImpHaberDolar*tipocambio end) <0 
								THEN  0.00 
								ELSE 	sum(cASe when d.moneda = '01' then  d.Impdebe else d.ImpDebeDolar*tipocambio end ) - 
										sum(cASe when d.moneda = '01' then  d.Imphaber else d.ImpHaberDolar*tipocambio end) 
							 END ), '' cocach, d.moneda,'00' CodigoDocumentoReferencia, 'APER-000'+@Anio NrodocReferencia
			FROM  movcontables_d d 
				Inner join movcontables_c c ON c.idmovcontables_c=d.idmovcontables_c
				Inner join zona z on z.codzona=c.zona
				inner join (Select distinct nrodocumento, codigoctaBancaria=(case when codigoctaBancaria='-' then '' else codigoctaBancaria end) from movContables_d 
							where charindex(left(CodCuenta,3),@CodCta)>0 and codUNidadEconomica BETWEEN rtrim(@UnidadA) AND rtrim(@UnidadB) and Estado <>'4'
--								and substring(nrodocumento,3,3) = right(@Anio,1)+'00' 
							group by nrodocumento, codigoctabancaria ) entidad
							on entidad.nrodocumento+rtrim(entidad.codigoctaBancaria) =d.nrodocumento+ d.codigoctaBancaria 
			where c.zona   BETWEEN @ZonaA AND @ZonaB 
				 AND c.codunidadeconomica BETWEEN @UnidadA AND @UnidadB AND  
				 d.Estado!='4' and c.estado!='4' and d.codpro!='000001' and z.idempresa=@IDEMPRESA and
				c.anio=@Anio and c.mes='00' and 
				charindex(left(CodCuenta,3),@CodCta)>0 and d.estado <>'D' and 
					----------
					d.nrodocumento in (
					select nrodocumento from movcontables_d dd 
						Inner join movcontables_c cc ON cc.idmovcontables_c=dd.idmovcontables_c
					where cc.zona   BETWEEN @ZonaA AND @ZonaB  and 
						cc.anio=@Anio and cc.mes='00' and 
						charindex(left(CodCuenta,3),@CodCta)>0 and dd.codunidadeconomica BETWEEN @UnidadA AND @UnidadB
						AND dd.Estado!='4' and dd.codpro!='000001' 
					group by nrodocumento )
					----------
			group by entidad.codigoctabancaria,c.anio, d.codcuenta, c.zona,d.moneda

			UNION ALL 
			--Datos Seleccionados
			SELECT entidad.codigoctabancaria Cuenta, 
				entidad =isnull((SELECT rtrim(DESCRIPCION)+' '+ Ctabancaria FROM banco 
														WHERE CTACONTABLE=entidad.codigoctabancaria AND Estado= '1' AND IDEMPRESA=@idEmpresa),''), 
				zona=z.zona,C.NRODOC,convert(char(10), d.fechadocreferencia, 103) fechadocreferencia,
				MedioPago = d.tipomediopago,-- +' '+ MP.TipoMedioPago, 
				descripcion = c.glosa,
				d.codpro,
				PROVEEDOR=isnull((SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
										   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
										   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
										   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
										   when IdTipoCLienteProveedor=5 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
										   when IdTipoCLienteProveedor=5 and razonsocial!='' then razonsocial 
										   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
										   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
								  FROM TBL_MSTO_CLIENTEPROVEEDOR 
								  WHERE RUC=D.CODPRO AND Estado=1),''), 
				NrotransaccionBancaria =rtrim(TD.descripcion)+' '+d.NroDocReferencia,
				D.CodCuenta, 
				FINANCIERA = (SELECT DISTINCT DESCRIPCION FROM PLANCUENTASCONTABLES 
														WHERE IDEMPRESA=@IDEMPRESA and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) AND CODCUENTACONTABLE=D.CODCUENTA),
				NroCuenta='',
				ImpHaber = D.IMPDebe, --D.IMPDEBE,
				ImpDebe  = D.IMPHaber --D.IMPHABER 
				, isnull(tesoreria.correlativo,'') cocach, d.moneda, d.CodigoDocumentoReferencia, d.NrodocReferencia 
			FROM MOVCONTABLES_D D INNER JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
				INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
				--LEFT JOIN BANCO B ON B.CTACONTABLE=D.CodigoCtaBancaria
				--LEFT JOIN MONEDA M ON M.CODMONEDA=B.CODMONEDA
				inner join tbl_Tipo_Medio_Pago MP on d.tipomediopago = MP.CodTipoMedioPago
				inner join TipoDocumento TD on d.codigoDocumentoreferencia = TD.codigodocumento
				inner join (Select distinct nrodocumento, codigoctaBancaria=(case when codigoctaBancaria='-' then '' else codigoctaBancaria end) from movContables_d 
							where charindex(left(CodCuenta,3),@CodCta)>0 and codUNidadEconomica BETWEEN rtrim(@UnidadA) AND rtrim(@UnidadB) and Estado <>'4'
								and substring(nrodocumento,3,3) BETWEEN right(@Anio,1)+@Mesi AND right(@Anio,1)+@Mesf
							group by nrodocumento, codigoctabancaria ) entidad
							on entidad.nrodocumento+(case When rtrim(entidad.codigoctaBancaria)='' Then '-' Else rtrim(entidad.codigoctaBancaria) End) =d.nrodocumento+(case When rtrim(d.codigoctaBancaria)='' or left(d.codigoctabancaria,3)='104' Then '-' Else rtrim(d.codigoctaBancaria) End)
				left outer join (select nrodoc,correlativo from tbl_movimientocajac
				 where anio=@Anio AND mes BETWEEN @Mesi AND @Mesf
						AND zona   BETWEEN @ZonaA    AND @ZonaB 
						AND codunidadeconomica BETWEEN @UnidadA AND @UnidadB
				) tesoreria on d.cocach=tesoreria.nrodoc
			WHERE C.Anio = @anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
				 AND c.mes    BETWEEN @Mesi AND @Mesf 
				 AND c.zona   BETWEEN @ZonaA AND @ZonaB 
				 AND c.codUNidadEconomica BETWEEN rtrim(@UnidadA) AND rtrim(@UnidadB)
				 AND charindex(rtrim(C.CODMGC),@Grupo )>0 AND Z.IDEMPRESA=@IDEMPRESA --AND B.IDEMPRESA=@IDEMPRESA
				 AND charindex(left(CodCuenta,3),@CodCta)=0 and (d.estado <>'D' or d.glosa='AJUSTE POR DIFERENCIA DE TIPO CAMBIO') and 
					d.nrodocumento in (
						select nrodocumento from movcontables_d dd
							Inner join movcontables_c cc ON cc.idmovcontables_c=dd.idmovcontables_c
						where cc.zona   BETWEEN @ZonaA AND @ZonaB  and 
							cc.anio=@Anio and cc.mes BETWEEN @Mesi AND @Mesf and 
							charindex(left(CodCuenta,3),@CodCta)=0 and dd.codunidadeconomica BETWEEN @UnidadA AND @UnidadB
							AND dd.Estado!='4' and dd.codpro!='000001' 
						group by nrodocumento)
					----------
		) Resumen 
		Order by cuenta,convert(datetime, fechadocreferencia,103) --, NroDoc
	End
	Else 
	Begin
	--calculando meses anteriores y actual
	-- calcula saldo meses anteriores
		Select * from (
			select  entidad.codigoctabancaria Cuenta, 
					entidad =isnull((SELECT rtrim(DESCRIPCION)+' '+ Ctabancaria FROM banco 
														WHERE CTACONTABLE=entidad.codigoctabancaria AND Estado ='1' AND IDEMPRESA=@IDEMPRESA),''), 
					zona=max(z.zona), '' as NroDoc,'01/'+@Mesi+'/1900' as FechaDocReferencia, '' AS mediopago, 
					 '' descripcion, '' AS codpro, '' as PROVEEDOR, '' AS NroTransaccionBancaria, 
					CodCuenta='', --(select rtrim(codcuentacontable)+' - '+descripcion from plancuentascontables 
								--where codcuentacontable=d.codcuenta  and idempresa=@IDEMPRESA and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)),
					'SALDO MES ANTERIOR..... ' as Financiera,
					'' as NroCuenta, 
					-- invirtiendo valores impdebe por imphaber
					imphaber= (CASE WHEN sum(cASe when d.moneda = '01' then  d.Impdebe else d.ImpDebeDolar*tipocambio end ) - 
										sum(cASe when d.moneda = '01' then  d.Imphaber else d.ImpHaberDolar*tipocambio end) >0 
								THEN  0.00 
								ELSE 	sum(cASe when d.moneda = '01' then  d.Impdebe else d.ImpDebeDolar*tipocambio end ) - 
										sum(cASe when d.moneda = '01' then  d.Imphaber else d.ImpHaberDolar*tipocambio end) 
							 END )*-1,
					impdebe= (CASE WHEN sum(cASe when d.moneda = '01' then  d.Impdebe else d.ImpDebeDolar*tipocambio end ) - 
										sum(cASe when d.moneda = '01' then  d.Imphaber else d.ImpHaberDolar*tipocambio end) <0 
								THEN  0.00 
								ELSE 	sum(cASe when d.moneda = '01' then  d.Impdebe else d.ImpDebeDolar*tipocambio end ) - 
										sum(cASe when d.moneda = '01' then  d.Imphaber else d.ImpHaberDolar*tipocambio end) 
							 END )	, '' cocach, d.moneda, '00' CodigoDocumentoReferencia,'OTR SALD-MESANT' NroDocReferencia
			FROM  movcontables_d d 
				Inner join movcontables_c c ON c.idmovcontables_c=d.idmovcontables_c
				Inner join zona z on z.codzona=c.zona
				inner join (Select distinct nrodocumento, codigoctaBancaria=(case when codigoctaBancaria='-' then '' else codigoctaBancaria end) from movContables_d 
							where charindex(left(CodCuenta,3),@CodCta)>0 and codUNidadEconomica BETWEEN rtrim(@UnidadA) AND rtrim(@UnidadB) and Estado <>'4'
								and substring(nrodocumento,3,3) >= right(@Anio,1)+'00' AND substring(nrodocumento,3,3)<right(@Anio,1)+@Mesi
							group by nrodocumento, codigoctabancaria ) entidad
							on entidad.nrodocumento+(case When rtrim(entidad.codigoctaBancaria)='' Then '-' Else rtrim(entidad.codigoctaBancaria) End) =d.nrodocumento+(case When rtrim(d.codigoctaBancaria)='' or left(d.codigoctabancaria,3)='104' Then '-' Else rtrim(d.codigoctaBancaria) End)
			where c.zona   BETWEEN @ZonaA AND @ZonaB 
				 AND c.codunidadeconomica BETWEEN @UnidadA AND @UnidadB AND  
				 d.Estado!='4' and c.estado!='4' and d.codpro!='000001' and z.idempresa=@IDEMPRESA and
				c.anio=@Anio and c.mes>='00' and c.mes<@Mesi and 
				charindex(left(CodCuenta,3),@CodCta)>0 and d.estado <>'D' and 
					----------
					d.nrodocumento in (
					select nrodocumento from movcontables_d dd 
						Inner join movcontables_c cc ON cc.idmovcontables_c=dd.idmovcontables_c
					where cc.zona   BETWEEN @ZonaA AND @ZonaB  and 
						cc.anio=@Anio and cc.mes>='00' and cc.mes<@Mesi and 
						charindex(left(CodCuenta,3),@CodCta)>0 and dd.codunidadeconomica BETWEEN @UnidadA AND @UnidadB
						AND dd.Estado!='4' and dd.codpro!='000001' 
					group by nrodocumento )
					----------
			group by entidad.codigoctabancaria,c.anio, c.zona,d.moneda

			UNION ALL 
			--Datos Seleccionados mes actual 
			SELECT entidad.codigoctabancaria Cuenta, 
				entidad =isnull((SELECT rtrim(DESCRIPCION)+' '+ Ctabancaria FROM banco 
														WHERE CTACONTABLE=entidad.codigoctabancaria AND Estado ='1' AND IDEMPRESA=@IDEMPRESA),''), 
				zona=z.zona,C.NRODOC,convert(char(10), d.fechadocreferencia, 103) fechadocreferencia,
				MedioPago = d.tipomediopago,-- +' '+ MP.TipoMedioPago, 
				descripcion = c.glosa,
				d.codpro,
				PROVEEDOR=isnull((SELECT DISTINCT case when IdTipoClienteProveedor=1 and razonsocial!='' then razonsocial 
										   when IdTipoClienteProveedor=4 and razonsocial!='' then RazonSocial 
										   when IdTipoClienteProveedor=1 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
										   when IdTipoClienteProveedor=4 and (nombre+' '+apellido)!='' then (nombre+' '+apellido) 
										   when IdTipoCLienteProveedor=5 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
										   when IdTipoCLienteProveedor=5 and razonsocial!='' then razonsocial 
										   when IdTipoCLienteProveedor=6 and (nombre+' '+apellido)!='' then (nombre+' '+apellido)
										   when IdTipoCLienteProveedor=6 and razonsocial!='' then razonsocial end
								  FROM TBL_MSTO_CLIENTEPROVEEDOR 
								  WHERE RUC=D.CODPRO AND Estado=1),''), 
				NrotransaccionBancaria =rtrim(TD.descripcion)+' '+d.NroDocReferencia,
				D.CodCuenta, 
				FINANCIERA = (SELECT DISTINCT DESCRIPCION FROM PLANCUENTASCONTABLES 
														WHERE IDEMPRESA=@IDEMPRESA and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) AND CODCUENTACONTABLE=D.CODCUENTA),
				NroCuenta= '', --isnull(B.CtaBancaria,''),
				ImpHaber = D.IMPDebe, --D.IMPDEBE,
				ImpDebe  = D.IMPHaber --D.IMPHABER 
				, isnull(tesoreria.correlativo,'') cocach, d.moneda, d.CodigoDocumentoReferencia, d.NroDocReferencia 
			FROM MOVCONTABLES_D D INNER JOIN MOVCONTABLES_C C ON C.IDMOVCONTABLES_C=D.IDMOVCONTABLES_C
				INNER JOIN ZONA Z ON Z.CODZONA=C.ZONA
				--LEFT JOIN BANCO B ON B.CTACONTABLE=D.CodigoCtaBancaria
				--LEFT JOIN MONEDA M ON M.CODMONEDA=B.CODMONEDA
				inner join tbl_Tipo_Medio_Pago MP on d.tipomediopago = MP.CodTipoMedioPago
				inner join TipoDocumento TD on d.codigoDocumentoreferencia = TD.codigodocumento
				inner join (Select distinct nrodocumento, codigoctaBancaria=(case when codigoctaBancaria='-' then '' else codigoctaBancaria end) from movContables_d 
							where charindex(left(CodCuenta,3),@CodCta)>0 and codUNidadEconomica BETWEEN rtrim(@UnidadA) AND rtrim(@UnidadB) and Estado <>'4'
								and substring(nrodocumento,3,3) BETWEEN right(@Anio,1)+@Mesi AND right(@Anio,1)+@Mesf
							group by nrodocumento, codigoctabancaria ) entidad
							on entidad.nrodocumento+(case When rtrim(entidad.codigoctaBancaria)='' Then '-' Else rtrim(entidad.codigoctaBancaria) End) =d.nrodocumento+(case When rtrim(d.codigoctaBancaria)='' or left(d.codigoctabancaria,3)='104' Then '-' Else rtrim(d.codigoctaBancaria) End)
				left outer join (select nrodoc,correlativo from tbl_movimientocajac
				 where anio=@Anio AND mes BETWEEN @Mesi AND @Mesf
						AND zona   BETWEEN @ZonaA    AND @ZonaB 
						AND codunidadeconomica BETWEEN @UnidadA AND @UnidadB
				) tesoreria on d.cocach=tesoreria.nrodoc
			WHERE C.Anio = @anio and d.estado!='4' and c.estado!='4' and d.codpro!='000001'
				 AND c.mes    BETWEEN @Mesi AND @Mesf 
				 AND c.zona   BETWEEN @ZonaA AND @ZonaB 
				 AND c.codUNidadEconomica BETWEEN rtrim(@UnidadA) AND rtrim(@UnidadB)
				 AND charindex(rtrim(C.CODMGC),@Grupo )>0 AND Z.IDEMPRESA=@IDEMPRESA --AND B.IDEMPRESA=@IDEMPRESA
				 AND charindex(left(CodCuenta,3),@CodCta)=0 and (d.estado <>'D' or d.glosa='AJUSTE POR DIFERENCIA DE TIPO CAMBIO') and 
					d.nrodocumento in (
					select nrodocumento from movcontables_d dd
						Inner join movcontables_c cc ON cc.idmovcontables_c=dd.idmovcontables_c
					where cc.zona   BETWEEN @ZonaA AND @ZonaB  and 
						cc.anio=@Anio and cc.mes BETWEEN @Mesi AND @Mesf and 
						charindex(left(CodCuenta,3),@CodCta)=0 and dd.codunidadeconomica BETWEEN @UnidadA AND @UnidadB
						AND dd.Estado!='4' and dd.codpro!='000001' 
					group by nrodocumento)
		) Resumen 
		Order by cuenta,convert(datetime, fechadocreferencia,103) --, NroDoc
	End
End
/****** Object:  StoredProcedure [dbo].[spp_ResetearvalGrupoCOntable]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_ResetearvalGrupoCOntable]
@zona varchar(6),
@unidad varchar(10), 
@annio varchar(4)
as
update maestrogrupocontable
set ene=0,feb=0,mar=0,abr=0,may=0,jun=0,jul=0,ago=0,sep=0,oct=0,nov=0,dic=0,anual=0
where codzona=@zona and codunidadeconomica=@unidad
and anio= @annio
/****** Object:  StoredProcedure [dbo].[spp_rpt_costoCombinado]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rpt_costoCombinado]
@zonaA as varchar(6),
@zonaB as varchar(6),
@UnidadA as varchar(10),
@unidadB as varchar(10),
@anio as char(4),
@mesA as char(2),
@mesB as char(2),
@espacio as int,
@idempresa as int,
@CCostoA as varchar(20),
@CCostoB as varchar(20),
@CuentaA as varchar(10),
@CuentaB as varchar(10),
@tipo as varchar(6)
as

-- spp_rpt_costoCombinado '000004','000004','000004','000004','2017','04','04',7,4,'','ZZZZZZ','','999999999','DESNAT'

If @CCostoB='9999999999'
	Begin
		set @CCostoB = (CASE When (select sum(a) from (select count(codcentrocosto) a from centrocosto where estado=1 and left(codcentrocosto,1) like '[A-Z]' group by left(codcentrocosto,1)) b)>1 Then 'Z' Else @CCostoB End)
	End

if @tipo ='DESNAT' --Costo Combinado por Destino y Naturaleza
Begin
print @zonaA
print @zonaB 
	select rtrim(centrocosto) + ' - ' + max(rtrim(cc.ctadebe)) +' '+ max(cc.descripcion) Centrocosto,'' descrip,left(codcuenta,@espacio) codcuenta, max(pcta.descripcion) descriplan,sum(impdebe-imphaber) saldo from movcontables_d d 
	inner join movcontables_c c on d.idmovcontables_c=c.idmovcontables_c
	inner join centrocosto cc on d.centrocosto=cc.codcentrocosto
	left outer join (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and estado='1') pcta on left(d.codcuenta,@espacio)=pcta.codcuentacontable
	where centrocosto not in ('','-') and d.estado not in ('D','4') and c.estado<>'1' and cc.estado='1'
	and cc.idempresa= @idempresa
	and d.codunidadeconomica between @UnidadA and @UnidadB
	and c.codunidadeconomica between @UnidadA and @UnidadB
	and d.centrocosto between @CCostoA and @CCostoB
--	and left(d.codcuenta,@espacio) between @CuentaA and @CuentaB
	and c.anio = @anio and c.mes between @MesA and @mesB
	group by centrocosto,left(codcuenta,@espacio)
	order by centrocosto,left(codcuenta,@espacio)
end

if @tipo ='NATDES' --Costo Combinado por Naturaleza y Destino 
Begin
	select left(codcuenta,@espacio) +' - '+ max(pcta.descripcion) descriplan,'' descrip,
	centrocosto Centrocosto, max(cc.descripcion) descripcosto,
	sum(impdebe-imphaber) saldo from movcontables_d d 
	inner join movcontables_c c on d.idmovcontables_c=c.idmovcontables_c
	inner join centrocosto cc on d.centrocosto=cc.codcentrocosto
	inner join (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and estado='1') pcta on left(d.codcuenta,@espacio)=pcta.codcuentacontable
	where centrocosto not in ('','-') and d.estado not in ('D','4') and c.estado<>'1' and cc.estado='1'
	and cc.idempresa= @idempresa
	and d.codunidadeconomica between @UnidadA and @UnidadB
	and c.codunidadeconomica between @UnidadA and @UnidadB
	and d.centrocosto between @CCostoA and @CCostoB
--	and left(d.codcuenta,@espacio) between @CuentaA and @CuentaB
	and c.anio = @anio and c.mes between @MesA and @mesB
	group by centrocosto, left(codcuenta,@espacio) --left(centrocosto,@espacio),codcuenta
	order by centrocosto, left(codcuenta,@espacio) --left(centrocosto,@espacio),codcuenta
end
/****** Object:  StoredProcedure [dbo].[spp_Rpt_Detalle_Tesoreria]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_Rpt_Detalle_Tesoreria]
@anio as char(4), @mes1 as char(2),@mes2 as char(2),
@codZona1 as char(10), @codZona2 as char(10),
@codUnidad1 as char(10), @codUnidad2 as char(10),
@codMgc1 as char(10), @codMgc2 as char(10),
@ctaBco1 as char(10), @ctaBco2 as char(10),
@idEmpresa as int,
@Tipo as char(8)
as
-- spp_rpt_detalle_tesoreria '2013','12','12','000043','000043','00004301','00004301','33','34','1','999999','10',''


if @Tipo='TRANSF'
begin 
select anio,dbo.traenombremes(mes) mes,nrodoc,c.fechacontable,c.glosa,rucemitido+' ' +(case when a.razonsocial='' then rtrim(a.nombre)+' '+ rtrim(a.apellido) else a.razonsocial end) emitido,
		c.codigoctabancaria,p.descripcion,
		codigotipodocpago,td0.descripcion desDocPago,nrodocpago,monto,correlativo,
		isnull(tipomediopago,'') tipomediopago,
		isnull(codpro+' ' +(case when b.razonsocial='' then rtrim(b.nombre)+' '+ rtrim(b.apellido) else b.razonsocial end),'') proveedor,
		isnull(d.glosa,'') glosaDet,isnull(flujoefectivo,'') flujoefectivo,isnull(codigodocumentofuente,'') codigodocumentofuente,
		isnull(td1.descripcion,'') desDocfuente,
		isnull(nrodocumentofuente,'') nrodocumentofuente,isnull(fechadocfuente,'') fechadocfuente,isnull(fechavencimiento,'') fechavencimiento,
		isnull(d.codigoctabancaria,'') codigoctabancariaDet,isnull(codcuenta,'') codcuenta,isnull(pla.descripcion,'') cuentadet,
		isnull(impdebe,0) impdebe,isnull(imphaber,0) imphaber
from tbl_movimientocajac c left outer join tbl_movimientocajad d on d.idmovimientocajac=c.idmovimientocajac
	inner join tbl_msto_clienteproveedor a on a.ruc=c.rucemitido	
	left outer join tbl_msto_clienteproveedor b on b.ruc=codpro	
	inner join (select codcuentacontable,descripcion from plancuentascontables where idempresa = @idEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and estado=1) p on p.codcuentacontable=c.codigoctabancaria
	left outer join (select codcuentacontable,descripcion from plancuentascontables where idempresa = @idEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and estado=1) pla on pla.codcuentacontable=d.codcuenta
	inner join (select codigoDocumento, descripcion from tipodocumento where estado=1) td0 on td0.codigodocumento= c.codigotipodocpago 
	left outer join (select codigoDocumento, descripcion from tipodocumento where estado=1) td1 on td1.codigodocumento= d.codigodocumentofuente 
where c.estado=0 and d.estado=0 and --p.estado=1 and 
		anio= @anio and mes between @mes1 and @mes2 and
		c.zona between @codZona1 and @codZona2 and
		c.codunidadeconomica between @codUnidad1 and @codUnidad2 and
		c.codmgc between @codMgc1 and @codMgc2 and		
		c.codigoctabancaria between @ctaBco1 and @ctaBco2 and 
		c.glosa like '%TRANS%'
		and a.estado=1 and b.estado=1
order by nrodoc,d.codigoctabancaria
end 
if @Tipo<>'TRANSF'
begin 
select anio,dbo.traenombremes(mes) mes,nrodoc,c.fechacontable,c.glosa,rucemitido+' ' +(case when a.razonsocial='' then rtrim(a.nombre)+' '+ rtrim(a.apellido) else a.razonsocial end) emitido,
		c.codigoctabancaria,p.descripcion,
		codigotipodocpago,td0.descripcion desDocPago,nrodocpago,monto,correlativo,
		isnull(tipomediopago,'') tipomediopago,
		isnull(codpro+' ' +(case when b.razonsocial='' then rtrim(b.nombre)+' '+ rtrim(b.apellido) else b.razonsocial end),'') proveedor,
		isnull(d.glosa,'') glosaDet,isnull(flujoefectivo,'') flujoefectivo,isnull(codigodocumentofuente,'') codigodocumentofuente,
		isnull(td1.descripcion,'') desDocfuente,
		isnull(nrodocumentofuente,'') nrodocumentofuente,isnull(fechadocfuente,'') fechadocfuente,isnull(fechavencimiento,'') fechavencimiento,
		isnull(d.codigoctabancaria,'') codigoctabancariaDet,isnull(codcuenta,'') codcuenta,isnull(pla.descripcion,'') cuentadet,
		isnull(impdebe,0) impdebe,isnull(imphaber,0) imphaber
from tbl_movimientocajac c left outer join tbl_movimientocajad d on d.idmovimientocajac=c.idmovimientocajac
	inner join tbl_msto_clienteproveedor a on a.ruc=c.rucemitido	
	left outer join tbl_msto_clienteproveedor b on b.ruc=codpro	
	inner join (select codcuentacontable,descripcion from plancuentascontables where idempresa = @idEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and estado=1) p on p.codcuentacontable=c.codigoctabancaria
	left outer join (select codcuentacontable,descripcion from plancuentascontables where idempresa = @idEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end) and estado=1) pla on pla.codcuentacontable=d.codcuenta
	inner join (select codigoDocumento, descripcion from tipodocumento where estado=1) td0 on td0.codigodocumento= c.codigotipodocpago 
	left outer join (select codigoDocumento, descripcion from tipodocumento where estado=1) td1 on td1.codigodocumento= d.codigodocumentofuente 
where c.estado=0 and d.estado=0 and --p.estado=1 and 
		anio= @anio and mes between @mes1 and @mes2 and
		c.zona between @codZona1 and @codZona2 and
		c.codunidadeconomica between @codUnidad1 and @codUnidad2 and
		c.codmgc between @codMgc1 and @codMgc2 and		
		c.codigoctabancaria between @ctaBco1 and @ctaBco2 and
		c.glosa not like '%TRANS%'
		and a.estado=1 and b.estado=1
order by nrodoc,d.codigoctabancaria

end
/****** Object:  StoredProcedure [dbo].[spp_rpt_FondoFijo]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rpt_FondoFijo]
@Anio char(4),@Mes char(2),@Zona VARchar(6),@CodUnidadEconomica char(10),@NroDoc nchar(20)

as
-- spp_rpt_FondoFijo '2013','10','000042','00004201','3431000001'

select c.zona,z.descripcion,mgc.mgc,c.nrodoc,c.fechaContable fechco,c.glosa, 
	(case when cp2.razonSocial='' then rtrim(cp2.nombre)+' '+rtrim(cp2.apellido) else cp2.razonSocial end) Emitido,
	d.fechacontable,d.codpro,
	(case when cp.razonSocial='' then rtrim(cp.nombre)+' '+rtrim(cp.apellido) else cp.razonSocial end) RazonSocial,
	codigoDocumentoFuente, nrodocumentoFuente,fechaDocFuente,flujoEfectivo,d.glosa Detalle,codcuenta,impDebe, impHaber, d.idmovimientocajad
from tbl_movimientocajac c inner join tbl_movimientocajaD d on d.idmovimientoCajaC=c.idMovimientoCajaC 
inner join tbl_msto_clienteproveedor cp on d.codpro=cp.ruc
inner join zona z on z.codzona=c.zona
inner join MaestroGrupoContable mgc on c.codmgc=mgc.codmgc
inner join tbl_msto_clienteproveedor cp2 on c.rucemitido=cp2.ruc
where c.codmgc='34' and c.anio=@Anio and c.mes=@Mes and c.zona=@Zona and d.codunidadeconomica= @CodUnidadEconomica and mgc.anio=@Anio 
and mgc.Codzona=@Zona and mgc.codunidadeconomica= @CodUnidadEconomica
and cp.estado='1' and left(d.codcuenta,2)<>'10' and c.nrodoc = @NroDoc 
and d.estado<>'1' and d.codigoDocumentoFuente<>''
union all 
select c.zona,z.descripcion,mgc.mgc,c.nrodoc,c.fechaContable fechco,c.glosa, 
	(case when cp2.razonSocial='' then rtrim(cp2.nombre)+' '+rtrim(cp2.apellido) else cp2.razonSocial end) Emitido,
	c.fechacontable,'' codpro,
	'SALDO INICIAL' RazonSocial,
	'' codigoDocumentoFuente, '' nrodocumentoFuente,c.fechaContable fechaDocFuente,'' flujoEfectivo,'' Detalle,'' codcuenta,0 impDebe, c.monto impHaber,
	0 idmovimientocajad
from tbl_movimientocajac c 
inner join zona z on z.codzona=c.zona
inner join MaestroGrupoContable mgc on c.codmgc=mgc.codmgc
inner join tbl_msto_clienteproveedor cp2 on c.rucemitido=cp2.ruc
where c.codmgc='34' and c.anio=@Anio and c.mes=@Mes and c.zona=@Zona and c.codunidadeconomica= @CodUnidadEconomica and mgc.anio=@Anio 
 and mgc.Codzona=@Zona and mgc.codunidadeconomica= @CodUnidadEconomica
 and c.nrodoc = @NroDoc
order by idmovimientocajad
/****** Object:  StoredProcedure [dbo].[spp_rpt_listarReparo]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rpt_listarReparo]
@zonaA as varchar(6),
@zonaB as varchar(6),
@UnidadA as varchar(10),
@unidadB as varchar(10),
@anio as char(4),
@mesA as char(2),
@mesB as char(2),
@idempresa as int

as
-- spp_rpt_listarReparo '000038','000038','000038','000038','2013','01','12',31
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpReparo]') AND type in (N'U'))
	BEGIN 
		Drop table tmpReparo
	END

select gc.mgc,d.nrodocumento,desmescontable mes, c.fechCo,d.fechadocreferencia, codpro,
(case when razonsocial='' then rtrim(nombre)+' '+ rtrim(apellido) else razonsocial end) proveedor,
d.codigodocumentoreferencia, destipodocumento, d.nrodocreferencia, d.glosa, 
impdebe,impdebeDolar,codcuenta, p.descripcion
into tmpReparo 
from (
select idmovcontables_c,codmgc,nrodocumento,fechadocreferencia, codpro,
codigodocumentoreferencia, nrodocreferencia, glosa, 
impdebe,impdebeDolar,codcuenta
 from movcontables_d where destino='R' and estado not in ('D','4') and impdebe>0 
	  and codunidadeconomica between @UnidadA and @UnidadB and substring(nrodocumento,3,1) = right(@anio,1) and substring(nrodocumento,4,2) between @MesA and @mesB
	  and codmgc in ('04','11') --('04','11','20')
) d inner join movcontables_c c on d.idmovcontables_c=c.idmovcontables_c
inner join tbl_msto_clienteproveedor cp on d.codpro=cp.ruc
inner join maestrogrupocontable gc on d.codmgc=gc.codmgc
inner join cierre on c.mes=cierre.mescontable
inner join (select codcuentacontable,descripcion from PLANCUENTASCONTABLES where idempresa=@IdEmpresa and left(anio,4)=(case When rtrim(@Anio)<'2020' then '2009' else rtrim(@Anio) end)) p on d.codcuenta=p.codcuentacontable
inner join tipodocumento td on d.codigodocumentoreferencia=td.codigodocumento
where --d.destino='R' and d.estado not in ('D','4') and 
cp.estado=1
--and d.impdebe>0 
and gc.codunidadeconomica between @UnidadA and @UnidadB
and c.zona between @zonaA and @zonaB
and cierre.anniocontable=@anio
and cierre.unidad between @UnidadA and @UnidadB
and c.codunidadeconomica between @UnidadA and @UnidadB
and c.anio = @anio and c.mes between @MesA and @mesB
and gc.anio=@anio
group by c.mes,gc.mgc,d.nrodocumento,desmescontable, c.fechCo,d.fechadocreferencia, codpro,
(case when razonsocial='' then rtrim(nombre)+' '+ rtrim(apellido) else razonsocial end),
d.codigodocumentoreferencia, destipodocumento, d.nrodocreferencia, d.glosa, 
impdebe,impdebeDolar,codcuenta, p.descripcion
order by c.mes, d.fechadocreferencia, d.codigodocumentoreferencia, d.nrodocreferencia

select * from tmpReparo
/****** Object:  StoredProcedure [dbo].[spp_rpt_PptoVarios]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rpt_PptoVarios]
@anio as varchar(4),@idempresa as int, @tipo as varchar(20)
as

-- spp_rpt_PptoVarios '2022','5','GerenciaArea'
-- spp_rpt_PptoVarios '2022','5','Objetivo'
-- spp_rpt_PptoVarios '2022','5','ActOper'
-- spp_rpt_PptoVarios '2022','5','CabCN'
--ok spp_rpt_PptoVarios '2022','5','DetCN'
-- spp_rpt_PptoVarios '2022','5','RESUMENPPTO'
--ok spp_rpt_PptoVarios '2022','5','RESGESACT'
--ok spp_rpt_PptoVarios '2022','5','RESGESTOT'
--ok spp_rpt_PptoVarios '2022','5','RESXAREA'
-- spp_rpt_PptoVarios '2022','5','Clasificador'
-- spp_rpt_PptoVarios '2022','5','Unidad'

if @tipo='GerenciaArea'
begin
	-- GerenciaArea
	select ObjetivoEstrategico,DetalleObjetivoGral,CodigoGerenciaxArea,DetalleGerenciaUnidad,programa,actividad
	from tbl_Ppto_GerenciaArea
	where Estado=1 and idempresa=@idempresa order by CodigoGerenciaxArea,CodigoGerencia
End

if @tipo='Objetivo'
begin
	-- Objetivo POR GerenciaArea
	select o.anio,g.DetalleGerenciaUnidad,o.CodigoObjetivo,o.DetalleObjetivo
	from tbl_Ppto_GerenciaArea g inner join tbl_Ppto_Objetivo o
	on g.idCodGerencia=o.idcodGerencia
	where o.anio=@anio and g.Estado=1 and o.estado=1 and g.idempresa=@idempresa
	ORDER BY g.CodigoGerenciaxArea,O.idCodObjetivo,O.CodigoObjetivo
End

if @tipo='ActOper'
begin
	-- ActOper por Objetivo POR GerenciaArea
	select o.anio,g.CodigoGerenciaxArea,g.DetalleGerenciaUnidad,o.CodigoObjetivo,o.DetalleObjetivo,
	ao.CodigoActOper,ao.DetalleActividad,ao.idcodObjetivo,ao.CodObjetivo,ao.Unidad
	from tbl_Ppto_GerenciaArea g inner join tbl_Ppto_Objetivo o
	on g.idCodGerencia=o.idcodGerencia
	inner join tbl_Ppto_ActOper ao
	on o.idCodObjetivo=ao.idcodObjetivo
	where o.anio=@anio and ao.anio=@anio and g.Estado=1 and o.estado=1 and ao.estado=1 and g.idempresa=@idempresa 
	order by g.CodigoGerenciaxArea,O.idCodObjetivo,O.CodigoObjetivo,ao.idcodObjetivo,ao.CodigoActOper
End

if @tipo='CabCN'
begin
	-- Cabecera CN ActOper por Objetivo POR GerenciaArea
	--cabecera ppto
	select * from vCabDetPpto(@anio,@idempresa,'CabCN')

End

if @tipo='DetCN'
begin
	-- Detalle CN ActOper por Objetivo POR GerenciaArea
	--detalle ppto select * from vCabDetPpto('2022',5,'DetCN')
	select * from vCabDetPpto(@anio,@idempresa,'DetCN')

End

if @tipo='RESUMENPPTO'
begin
	--detalle ppto select * from vCabDetPpto('2022',5,'DetCN')vCabDetPpto(@anio,@idempresa,'DetCN')
	select a.anio,LEFT(a.clasifica_gasto,3) clasifica,a.clasifica_gasto,cla.DescripcionClasif descripcion,a.total 
	From (
		select anio,'C'+clasifica_gasto clasifica_gasto,sum(cost_total) total from vCabDetPpto(@anio,@idempresa,'DetCN')
		group by anio,clasifica_gasto --union all
		--select anio,'C'+left(clasifica_gasto,2) clasifica_gasto,sum(cost_total) total from vCabDetPpto(@anio,@idempresa,'DetCN')
		--group by anio,left(clasifica_gasto,2)
	) a inner join Tbl_Ppto_Clasificador cla on a.clasifica_gasto=cla.Codclasificador
	order by anio,clasifica_gasto

End

if left(@tipo,9)='RESGESACT'
begin
--detalle ppto select * from vCabDetPpto('2022',5,'DetCN')vCabDetPpto(@anio,@idempresa,'DetCN')
	declare @area as varchar(10)
	set @area = substring(@tipo,10,10)

	select a.anio,a.gestionActividad,LEFT(a.clasifica_gasto,3) clasifica,a.clasifica_gasto,cla.DescripcionClasif descripcion,a.total 
	From (
		select anio,gestionActividad,'C'+clasifica_gasto clasifica_gasto,sum(cost_total) total from vCabDetPpto(@anio,@idempresa,'DetCN')
		where GestionActividad like '%'+@area+'%'
		group by anio,gestionActividad,clasifica_gasto --union all
		--select anio,gestionActividad,'C'+left(clasifica_gasto,2) clasifica_gasto,sum(cost_total) total from vCabDetPpto(@anio,@idempresa,'DetCN')
		--where GestionActividad like '%'+@area+'%'
		--group by anio,gestionActividad,left(clasifica_gasto,2)
	) a inner join Tbl_Ppto_Clasificador cla on a.clasifica_gasto=cla.Codclasificador
	order by anio,gestionActividad,clasifica_gasto

End

if @tipo='RESGESTOT'
begin
--detalle ppto select * from vCabDetPpto('2022',5,'DetCN')vCabDetPpto(@anio,@idempresa,'DetCN')

	select anio,gestionActividad,sum(cost_total) total from vCabDetPpto(@anio,@idempresa,'DetCN')
	group by anio,gestionActividad
	order by anio,gestionActividad

End

if @tipo='RESXAREA'
begin
--detalle ppto select * from vCabDetPpto('2022',5,'DetCN')vCabDetPpto(@anio,@idempresa,'DetCN')

	select anio,codigogerenciaxarea,DetalleGerenciaUnidad,sum(cost_total) total from vCabDetPpto(@anio,@idempresa,'DetCN')
	group by anio,codigogerenciaxarea,DetalleGerenciaUnidad 
	order by anio,codigogerenciaxarea,DetalleGerenciaUnidad

End

if @tipo='Clasificador'
begin
	-- Clasificador Gastos
	select anio,Codclasificador,DescripcionClasif 
	from Tbl_Ppto_Clasificador
	where anio=@anio and Estado=1 
	order by idCodClasificador
End

if @tipo='Unidad'
begin
	-- Unidad
	select codigo_unidad,Descripcion,Abreviatura,valor,codigo_sunat 
	from tbl_Ppto_Unidad
	where Estado=1 
	order by Descripcion
End


if @tipo='Certificado'
begin
	select g.DetalleGerenciaUnidad, t.nombre,t.cargo,
		c.*
	from tbl_ppto_Certificado c 
		inner join tbl_Ppto_Trabajador t on c.idtrabajadorSoli = t.idCodTrabajador
		 inner join tbl_Ppto_GerenciaArea g on t.ActOper=g.idCodGerencia 
	where t.cargo like '%logis%' and t.Situacion='0'
		and g.DetalleGerenciaUnidad like '%logis%' and g.estado='1'
		and c.idCertificado=1

End




/****** Object:  StoredProcedure [dbo].[spp_rpt_Ratios]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_rpt_Ratios]
	@idEmpresa bigint,@Zona1 varchar(200),@Zona2 varchar(200),@Unidad1 varchar(200),@Unidad2 varchar(200),
	@Anio varchar(4),@Mes1 varchar(2),@Mes2 varchar(2)
as
	declare @ActivoCorriente decimal(10,2)
	declare @ActivoNoCorriente decimal(10,2)
	declare @PasivoCorriente decimal(10,2)
	declare @PasivoNoCorriente decimal(10,2)
	declare @Existencias decimal(10,2)
	declare @DeudasLargoPlazo decimal(10,2)
	declare @PatrimonioNeto decimal(10,2)
	declare @CostoVentas decimal(10,2)
	declare @Ventas decimal(10,2)
	declare @ResultadoEjercicio decimal(10,2)
	declare @PorcentajeRenta decimal(10,2)

	set @ActivoCorriente=isnull((select sum(ejercicio) 
	from vBalanceRatios 
	where tipo='ACTIVO CORRIENTE' and zona between @Zona1 and @Zona2 and
	CodUnidadEconomica between @Unidad1 and @Unidad2 and anio=@Anio and mes between @mes1 and @mes2),0)

	set @ActivoNoCorriente=isnull((select sum(ejercicio) 
	from vBalanceRatios 
	where tipo='ACTIVO NO CORRIENTE' and zona between @Zona1 and @Zona2 and
	CodUnidadEconomica between @Unidad1 and @Unidad2 and anio=@Anio and mes between @mes1 and @mes2),0)

	set @PasivoCorriente=isnull((select sum(ejercicio) 
	from vBalanceRatios 
	where tipo='PASIVO CORRIENTE' and zona between @Zona1 and @Zona2 and
	CodUnidadEconomica between @Unidad1 and @Unidad2 and anio=@Anio and mes between @mes1 and @mes2),0)

	set @PasivoNoCorriente=isnull((select sum(ejercicio) 
	from vBalanceRatios 
	where tipo='PASIVO NO CORRIENTE' and zona between @Zona1 and @Zona2 and
	CodUnidadEconomica between @Unidad1 and @Unidad2 and anio=@Anio and mes between @mes1 and @mes2),0)

	set @Existencias=isnull((select sum(ejercicio) 
	from vBalanceRatios 
	where codCuenta='25' and zona between @Zona1 and @Zona2 and
	CodUnidadEconomica between @Unidad1 and @Unidad2 and anio=@Anio and mes between @mes1 and @mes2),0)

	set @DeudasLargoPlazo=isnull((select sum(ejercicio) 
	from vBalanceRatios 
	where codCuenta='42' and zona between @Zona1 and @Zona2 and
	CodUnidadEconomica between @Unidad1 and @Unidad2 and anio=@Anio and mes between @mes1 and @mes2),0)

	set @PatrimonioNeto=isnull((select sum(ejercicio) 
	from vBalanceRatios 
	where tipo='PATRIMONIO' and zona between @Zona1 and @Zona2 and
	CodUnidadEconomica between @Unidad1 and @Unidad2 and anio=@Anio and mes between @mes1 and @mes2),0)

	--selecciona solo los que estan en parametros y pone en estado 0
	UPDATE tbl_MaestroEstadosIntegrales SET ESTADO=0 WHERE CTA NOT like (Select '9['+replace(replace(valor,'9',''),',','')+']%'
										from dbo.parametros Where IdEmpresa = @idempresa and Estado =1 and clave='CuentasGastoOperativo'
									   ) 
										AND ctagral='91'

	set @CostoVentas=isnull((select Ejercicio=sum(importe) 
	from vEstadosIntegrales(@Zona1,@Zona2,@Unidad1,@Unidad2,@Anio,@Mes1, @Mes2,@idempresa,'GANANYPERD')
	where tipo='COSTO DE VENTAS' having sum(importe)!=0) ,0)
	--and zona between @Zona1 and @Zona2 and
	--CodUnidadEconomica between @Unidad1 and @Unidad2 and anio=@Anio and mes between @mes1 and @mes2),0)

	set @Ventas=isnull((select Ejercicio=sum(importe) 
	from vEstadosIntegrales(@Zona1,@Zona2,@Unidad1,@Unidad2,@Anio,@Mes1, @Mes2,@idempresa,'GANANYPERD')
	where tipo='VENTAS' having sum(importe)!=0),0) 
--	and zona between @Zona1 and @Zona2 and
--	CodUnidadEconomica between @Unidad1 and @Unidad2 and anio=@Anio and mes between @mes1 and @mes2),0)

	set @ResultadoEjercicio=isnull((select Ejercicio=sum(importe) 
	from vEstadosIntegrales(@Zona1,@Zona2,@Unidad1,@Unidad2,@Anio,@Mes1, @Mes2,@idempresa,'GANANYPERD')
	having sum(importe)!=0),0)
--	where zona between  @Zona1 and @Zona2 and
--	CodUnidadEconomica between @Unidad1 and @Unidad2 and anio=@Anio and mes between @mes1 and @mes2),0)

	--selecciona solo los que estan en parametros y pone en estado normal
	UPDATE tbl_MaestroEstadosIntegrales SET ESTADO=1 WHERE CTA NOT like (Select '9['+replace(replace(valor,'9',''),',','')+']%'
										from dbo.parametros Where IdEmpresa = @idempresa and Estado =1 and clave='CuentasGastoOperativo'
									   ) 
										AND ctagral='91'

	set @PorcentajeRenta=isnull((select porRenta from empresa where idEmpresa=@idEmpresa),0)
	set @PorcentajeRenta=(@PorcentajeRenta/100)
	set @PorcentajeRenta=(select case when @ResultadoEjercicio>0 then @ResultadoEjercicio else 0 end)*(@PorcentajeRenta)
	
	/*
	Cálculo del Indicador "Indice de liquidez" 
	FÓRMULA=TOTAL ACTIVO CORRIENTE / TOTAL PASIVO CORRIENTE
	*/
	select 
	Ratio='Indice de Liquidez',FORMULA='TOTAL ACTIVO CORRIENTE / TOTAL PASIVO CORRIENTE',
	resultado=convert(varchar(20),@ActivoCorriente)+' / '+convert(varchar(20),@PasivoCorriente),
	Valor=case when @PasivoCorriente!=0 then (@ActivoCorriente)/(@PasivoCorriente) else 0 end
	/*
	Cálculo de Indicador "Prueba Ácida" 
	FÓRMULA=(TOTAL ACTIVO CORRIENTE - EXISTENCIAS) / TOTAL PASIVO CORRIENTE
	*/
	Union all
	select 
	Ratio='Prueba Ácida',FORMULA='(TOTAL ACTIVO CORRIENTE - EXISTENCIAS) / TOTAL PASIVO CORRIENTE',
	Resultado='('+convert(varchar(20),@ActivoCorriente)+'-'+convert(varchar(20),@Existencias)+') / '+convert(varchar(20),@PasivoCorriente),
	Valor=case when @PasivoCorriente!=0 then ((@ActivoCorriente)-(@Existencias))/(@PasivoCorriente) else 0 end
	/*
	Cálculo de Indicador "RAZON DE ENDEUDAMIENTO TOTAL" 
	FÓRMULA=TOTAL PASIVO / TOTAL ACTIVO
	*/
	union all
	select 
	Ratio='Razón de Endeudamiento Total',FORMULA='TOTAL PASIVO / TOTAL ACTIVO',
	Resultado='('+convert(varchar(20),@PasivoCorriente)+'+'+convert(varchar(20),@PasivoNoCorriente)+') / ('+convert(varchar(20),@ActivoCorriente)+'+'+convert(varchar(20),@ActivoNoCorriente)+')',
	Valor=case when (@ActivoCorriente+@ActivoNoCorriente)!=0 then (@PasivoCorriente+@PasivoNoCorriente)/(@ActivoCorriente+@ActivoNoCorriente) else 0 end
	/*
	Cálculo de Indicador "RAZON DE COBERTURA DEL ACTIVO FIJO" 
	FÓRMULA=(DEUDAS A LARGO PLAZO + TOTAL PATRIMONIO NETO) / TOTAL ACTIVO NO CORRIENTE
	*/
	union all
	select 
	Ratio='Razón de Cobertura del Activo Fijo',FORMULA='(DEUDAS A LARGO PLAZO + TOTAL PATRIMONIO NETO) / TOTAL ACTIVO NO CORRIENTE',
	Resultado='('+convert(varchar(20),@DeudasLargoPlazo)+'+'+convert(varchar(20),@PatrimonioNeto)+') / '+convert(varchar(20),@ActivoNoCorriente),
	Valor=case when @ActivoNoCorriente!=0 then ((@DeudasLargoPlazo)+(@PatrimonioNeto))/(@ActivoNoCorriente) else 0 end
	/*
	Cálculo de Indicador "ROTACIÓN DE EXSTENCIAS" 
	FÓRMULA=(-1 * COSTO DE VENTAS) / EXISTENCIAS
	*/
	union all
	select 
	Ratio='Rotación de Existencias',FÓRMULA='(-1 * COSTO DE VENTAS) / EXISTENCIAS',
	Resultado='(-1 * '+convert(varchar(20),@CostoVentas)+') / '+convert(varchar(20),@Existencias),
	Valor=case when @Existencias!=0 then (-1 * (@CostoVentas))/(@Existencias) else 0 end
	/*
	Cálculo de Indicador "ROTACIÓN DE INMUEBLE, MAQUINARIA Y EQUIPO" 
	FÓRMULA=VENTAS NETAS / TOTAL ACTIVO
	*/
	union all
	select 
	Ratio='Rotación de inmueble, maquinaria y equipo',FORMULA='VENTAS NETAS / TOTAL ACTIVO',
	Resultado=convert(varchar(20),@Ventas)+' / ('+convert(varchar(20),@ActivoNoCorriente)+'+'+convert(varchar(20),@ActivoCorriente)+')',
	Valor=case when (@ActivoNoCorriente+@ActivoCorriente)!=0 then (@Ventas)/(@ActivoNoCorriente+@ActivoCorriente) else 0 end
	/*
	Cálculo de Indicador "COSTO DE VENTAS / VENTAS" 
	FÓRMULA= -1 * COSTO DE VENTAS / VENTAS
	*/
	union all
	select 
	Ratio='Costo de ventas / ventas',FORMULA= '(-1 * COSTO DE VENTAS) / VENTAS',
	Resultado='(-1 * '+convert(varchar(20),@CostoVentas)+') / '+convert(varchar(20),@Ventas),
	Valor=case when @Ventas!=0 then (-1 * @CostoVentas)/(@Ventas) else 0 end
	/*
	Cálculo de Indicador "RENTABILIDAD SOBRE LOS CAPITALES PROPIOS" 
	FÓRMULA= RESULTADO DEL EJERCICIO / TOTAL PATRIMONIO NETO
	*/
	union all
	select 
	Ratio='Rentabilidad sobre los capitales propios',FORMULA= 'RESULTADO DEL EJERCICIO / TOTAL PATRIMONIO NETO',
	Resultado=convert(varchar(20),@ResultadoEjercicio-@PorcentajeRenta)+' / '+convert(varchar(20),@PatrimonioNeto),
	Valor=case when @PatrimonioNeto!=0 then ((@ResultadoEjercicio-@PorcentajeRenta))/(@PatrimonioNeto) else 0 end
	/*
	Cálculo de Indicador "RENTABILIDAD SOBRE VENTAS" 
	FÓRMULA= RESULTADO DEL EJERCICIO / VENTAS NETAS
	*/
	union all
	select 
	Ratio='Rentabilidad sobre las ventas',FORMULA= 'RESULTADO DEL EJERCICIO / VENTAS NETAS',
	Resultado=convert(varchar(20),@ResultadoEjercicio-@PorcentajeRenta)+' / '+convert(varchar(20),@Ventas),
	Valor=case when @Ventas!=0 then ((@ResultadoEjercicio-@PorcentajeRenta))/(@Ventas) else 0 end
/****** Object:  StoredProcedure [dbo].[spp_runSP]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_runSP]
@lcStoredProcedure CHAR( 100 ),
@lcValorCamposSP   CHAR( 100 )

AS
SET NOCOUNT OFF

DECLARE @lcSQL char( 100 )

DECLARE @lnLongitud 	INT,
	@lcDigito 	CHAR( 1 ),
	@lnDigitos 	INT,
	@lcColumnas 	CHAR( 100 )

SET @lnLongitud = LEN( @lcValorCamposSP )

SET @lnDigitos = 1
SET @lcColumnas = ''

IF @lnLongitud > 0
   BEGIN
      SET @lcColumnas = ''''    
      WHILE @lnDigitos <= @lnLongitud
	 BEGIN
	    SET @lcDigito = SUBSTRING( @lcValorCamposSP, @lnDigitos, 1 ) 
	    IF @lcDigito = ','
	       SET @lcColumnas = RTRIM( @lcColumnas ) + '''' + ( CASE WHEN @lnLongitud = @lnDigitos THEN '' ELSE ',' + '''' END )
	    ELSE 
	       BEGIN
	          IF @lnDigitos = @lnLongitud
	             SET @lcColumnas = RTRIM( @lcColumnas ) + @lcDigito + ''''
	          ELSE
	             SET @lcColumnas = RTRIM( @lcColumnas ) + @lcDigito
	       END
	     
	    SET @lnDigitos = @lnDigitos + 1
	 END   
   END

SET @lcSQL = RTRIM( @lcStoredProcedure ) + ' ' + RTRIM( @lcColumnas )
EXEC( @lcsql )
/****** Object:  StoredProcedure [dbo].[spp_sel_ctrl_AñoProceso]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_sel_ctrl_AñoProceso]

AS
SET NOCOUNT OFF

SELECT   cAñoProceso cAñoProceso1,
		 cAñoProceso
FROM     dbo.tbl_ctrl_AñoProceso 
ORDER BY cAñoProceso DESC
/****** Object:  StoredProcedure [dbo].[spp_sel_mvto_CabeceraUsuario]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_sel_mvto_CabeceraUsuario] 
@cCodEmpleado	CHAR( 10 )

AS
SET NOCOUNT OFF

SELECT	cCodEmpleado,
		cLogUsuario,
		cPasUsuario
FROM tbl_msto_Personal
WHERE cCodEmpleado = @cCodEmpleado
/****** Object:  StoredProcedure [dbo].[spp_tbl_BC_GeneraCod]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_tbl_BC_GeneraCod]
@CODIGO CHAR(10) OUTPUT
AS
DECLARE @MAX INT
SELECT @MAX=ISNULL(MAX(RIGHT(RTRIM(LTRIM(BC_CODIGOCONCEPTO)),10)),0) FROM TBL_BC_CONCEPTO
IF @MAX=0 BEGIN SET @MAX=10000 END
SET @CODIGO=REPLICATE('0',10-LEN(RTRIM(LTRIM(@MAX+1))))+RTRIM(LTRIM(CONVERT(CHAR(10),@MAX+1)))
/****** Object:  StoredProcedure [dbo].[spp_tbl_BC_InsertaConcepto]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_tbl_BC_InsertaConcepto]
@CODIGO NCHAR(10),
@CONCEPTO VARCHAR(100)
AS
IF NOT EXISTS(SELECT BC_CONCEPTO FROM TBL_BC_CONCEPTO WHERE BC_CONCEPTO=@CONCEPTO)
	BEGIN 
			INSERT INTO TBL_BC_CONCEPTO VALUES(@CODIGO,@CONCEPTO)
			IF @@ERROR<>0
				BEGIN
					RAISERROR('ERROR: EN LA INSERCION DE DATOS',17,1)
					WITH NOWAIT
					RETURN
				END
	END
ELSE
	BEGIN
					RAISERROR('YA EXISTE EL REGISTO',17,1)
					WITH NOWAIT
					RETURN
	END
/****** Object:  StoredProcedure [dbo].[spp_tbl_BC_Insertadetalle]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_tbl_BC_Insertadetalle]
@CODCONCEPTO NCHAR(10),
@ITEM VARCHAR(50),
@DEBE NCHAR(10),
@HABER NCHAR(10),
@FORMULA VARCHAR(100),
@ID INT,
@OPER NCHAR(10)
AS
IF @OPER='Asignar'
	BEGIN
		INSERT INTO TBL_BC_DETALLECONCEPTO (BC_CODCONCEPTO,ITEM,DEBE,HABER,FORMULA,VARIABLE,ESTADO)
				VALUES(@CODCONCEPTO,@ITEM,@DEBE,@HABER,@FORMULA,'','A')
		IF @@ERROR<>0
			BEGIN
				RAISERROR('ERROR: EN EL INGRESO DE DATOS',16,1)
				WITH NOWAIT
				RETURN
			END
	END
ELSE IF @OPER='Modificar'
	BEGIN
			UPDATE TBL_BC_DETALLECONCEPTO
			SET BC_CodConcepto=@CODCONCEPTO,ITEM=@ITEM,DEBE=@DEBE,HABER=@HABER,FORMULA=@FORMULA
			WHERE ID=@ID

	END
ELSE IF @OPER='Eliminar'
	BEGIN
		UPDATE TBL_BC_DETALLECONCEPTO
		SET ESTADO='E' WHERE ID=@ID
	END
/****** Object:  StoredProcedure [dbo].[spp_tool_reindex]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_tool_reindex]
--	@idEmpresa bigint,@origen varchar(10),@destino varchar(10)
	@idEmpresa bigint,@Cuenta varchar(10), @DebeA varchar(10),@HaberA varchar(10),@DebeN varchar(10),@HaberN varchar(10),
	@CuentaAnt varchar(10),@CuentaNew as varchar(10),@tipo as varchar(15)
As
--exec spp_tool_reindex @idEmpresa=17,@Cuenta='6393',@DebeA='9511',@HaberA='7911',@DebeN='9411',@HaberN='7911',@CuentaAnt='',@CuentaNew='',@Tipo='AMARRES    2019'
--exec spp_tool_reindex @idEmpresa=17,@Cuenta='',@DebeA='',@HaberA='',@DebeN='',@HaberN='',@CuentaAnt='7041',@CuentaNew='7032',@Tipo='SOLOCTA01012020'

Declare @mesA as varchar(2),@mesB as Varchar(2),@anio as varchar(4)
set @mesA= SUBSTRING(@tipo,8,2)
set @mesB= SUBSTRING(@tipo,10,2)
set @Anio= SUBSTRING(@tipo,12,4)


If left(@tipo,7)='AMARRES'
Begin
	--	reemplazando para el Debe

	update MovContables_D 
	set codCuenta=@DebeN 
	where estado='D' and codCuenta=@DebeA and substring(nrodocumento,3,1)=right(@Anio,1) and codUnidadEconomica in (
	select codUnidadEconomica from unidad_economica 
	where codzona in (select codZona from zona where idEmpresa=@IdEmpresa)) and CodigoDocumentoReferencia+NroDocReferencia+codPro in (
	select CodigoDocumentoReferencia+NroDocReferencia+codPro from MovContables_D where codUnidadEconomica in (
	select codUnidadEconomica from unidad_economica 
	where codzona in (select codZona from zona where idEmpresa=@IdEmpresa)) and CodCuenta = @Cuenta
	)

	-- reemplazando para el Haber
	
	update MovContables_D 
	set codCuenta=@HaberN 
	where estado='D' and codCuenta=@HaberA and substring(nrodocumento,3,1)=right(@Anio,1) and codUnidadEconomica in (
	select codUnidadEconomica from unidad_economica 
	where codzona in (select codZona from zona where idEmpresa=@IdEmpresa)) and CodigoDocumentoReferencia+NroDocReferencia+codPro in (
	select CodigoDocumentoReferencia+NroDocReferencia+codPro from MovContables_D where codUnidadEconomica in (
	select codUnidadEconomica from unidad_economica 
	where codzona in (select codZona from zona where idEmpresa=@IdEmpresa)) and CodCuenta = @Cuenta
	)
end

If left(@tipo,7)='SOLOCTA'
Begin

	while @mesA <=@mesB
	Begin
	-- actualizando las cuentas principales
	update MovContables_D 
	set codCuenta=@CuentaNew
	where estado<>'4' and codCuenta=@CuentaAnt and codUnidadEconomica in (
	select codUnidadEconomica from unidad_economica 
	where codzona in (select codZona from zona where idEmpresa=@IdEmpresa)) and 
	substring(nrodocumento,3,3)=right(@anio,1)+@mesA

	-- actualizando las cuentas abono o destino
	update MovContables_D 
	set CuentaAbono=@CuentaNew
	where estado<>'4' and CuentaAbono=@CuentaAnt and codUnidadEconomica in (
	select codUnidadEconomica from unidad_economica 
	where codzona in (select codZona from zona where idEmpresa=@IdEmpresa)) and 
	substring(nrodocumento,3,3)=right(@anio,1)+@mesA

	set @mesA=dbo.PADL(@mesA+1,2,'0')
	End
end
/****** Object:  StoredProcedure [dbo].[spp_traeCuentasInteligentes]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_traeCuentasInteligentes]
@idempresa as varchar
as 
-- spp_traeCuentasInteligentes 6
select veces,convert(char(3),orden) +' - '+ descripcion,idParametrosAux,ctadebe,ctahaber,monto
from tbl_ParametrosAux a left outer join (select count(idempresa) veces,idempresa from tbl_parametrosAux where idempresa=@idempresa and orden>=100 and estado=1 group by idempresa) reg on a.idempresa=reg.idempresa
where a.idempresa = @idempresa and orden>=100 and estado=1 Order by orden
/****** Object:  StoredProcedure [dbo].[spp_UltimoDiaTC]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[spp_UltimoDiaTC]
@cMes as varchar(2), @cYear as Varchar(4), @ZonaA char(6),@ZonaB char(6),
@UnidadA char(10),@UnidadB char(10),@Idempresa as integer

as
-- spp_UltimoDiaTC '12','2016','000006','000006','000006','000006',6
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'tmpclitc') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpclitc
END
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'tmpUltDia') AND type in (N'U'))
BEGIN 
	drop table tmpUltDia
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpDifTC]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpDifTC
END
IF  EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'tmpMov') AND type in (N'U'))
BEGIN 
	drop table tmpMov
END
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[tmpTipDifCab1]') AND type in (N'U'))
BEGIN 
	DROP TABLE tmpTipDifCab1
END

declare @cYearAnt as Varchar(4)

set @cYearAnt= convert(varchar(4),convert(int,@cYear)-1)

print 'creando tmpclitc y tmpUltDia'
-- creando tmpCliTC
select zona codzona, d.CodUnidadEconomica,MAX(d.nroDocumento) nroDocumento,d.codpro,td.Descripcion CodDoc,codigoDocumentoReferencia,NroDocReferencia, min(fechadocreferencia) fechadocreferencia,
codcuenta, sum(impdebe) impdebe, sum(imphaber) imphaber, sum(impdebedolar) impdebeDolar, sum(imphaberDolar) imphaberdolar, max(moneda) moneda
into tmpCliTC 
from movcontables_d d inner join movcontables_c c on c.idmovcontables_c= d.idmovcontables_c 
inner join tipodocumento td on codigoDocumentoReferencia= td.codigoDocumento 
where codcuenta in (select codcuentacontable from plancuentascontables where converMoneda = 'S' and idempresa= @IdEmpresa and left(anio,4)=(case When rtrim(@cYear)<'2020' then '2009' else rtrim(@cYear) end) and Estado =1)
     and c.mes<=@cMes and c.anio=@cYear and d.estado<>'4' and c.estado<>'4' and d.codpro!='000001' and td.estado='1'
     And c.zona BETWEEN @ZonaA AND @ZonaB 
     AND c.codunidadeconomica BETWEEN @UnidadA AND @UnidadB
     AND d.codunidadeconomica BETWEEN @UnidadA AND @UnidadB
group by zona,d.codunidadEconomica,codpro,codigoDocumentoReferencia,NroDocReferencia,codcuenta,td.Descripcion --, moneda 
having (sum(impdebedolar) - sum(imphaberDolar)<>0) or (sum(impdebe) - sum(imphaber)<>0)
order by fechadocreferencia

-- creando el ultimodia tc por mes
	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta,(case when @cMes= '01' Then '3' else '0' end) IncMov 
	into tmpUltDia 
	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'01'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'01'+'/'+@cYear,103))) and Estado='1'
	union all
	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta,(case when @cMes= '02' Then '3' else '0' end) IncMov 
	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'02'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'02'+'/'+@cYear,103))) and Estado='1'
	union all
	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta,(case when @cMes= '03' Then '3' else '0' end) IncMov 
	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'03'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'03'+'/'+@cYear,103))) and Estado='1'
	union all
	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta,(case when @cMes= '04' Then '3' else '0' end) IncMov 
	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'04'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'04'+'/'+@cYear,103))) and Estado='1'
	union all
	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta,(case when @cMes= '05' Then '3' else '0' end) IncMov 
	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'05'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'05'+'/'+@cYear,103))) and Estado='1'
	union all
	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta,(case when @cMes= '06' Then '3' else '0' end) IncMov 
	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'06'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'06'+'/'+@cYear,103))) and Estado='1'
	union all
	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta,(case when @cMes= '07' Then '3' else '0' end) IncMov 
	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'07'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'07'+'/'+@cYear,103))) and Estado='1'
	union all
	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta,(case when @cMes= '08' Then '3' else '0' end) IncMov 
	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'08'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'08'+'/'+@cYear,103))) and Estado='1'
	union all
	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta,(case when @cMes= '09' Then '3' else '0' end) IncMov 
	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'09'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'09'+'/'+@cYear,103))) and Estado='1'
	union all
	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta,(case when @cMes= '10' Then '3' else '0' end) IncMov 
	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'10'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'10'+'/'+@cYear,103))) and Estado='1'
	union all
	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta,(case when @cMes= '11' Then '3' else '0' end) IncMov 
	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'11'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'11'+'/'+@cYear,103))) and Estado='1'
	union all
	select 'F' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta,(case when @cMes= '12' Then '3' else '0' end) IncMov 
	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'12'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'12'+'/'+@cYear,103))) and Estado='1'
	union all
	select 'F' sit,idmoneda,convert(datetime,'31/12/'+@cYearAnt,103) fecha,TipoCambioCompra,TipoCambioVenta,(case when @cMes= '12' Then '3' else '3' end) IncMov 
	from tipocambio where fecha=DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+'01'+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+'01'+'/'+@cYear,103))) and Estado='1'

-- creando la tabla diferencia TC, con esta tabla se genera para el asiento contable de 42 a 67 o 77 segun caso
select a.*,(case when a.fechadocreferencia=b.fecha and a.tcventapro<>b.TipoCambioVenta then (select max(fecha) from tmpultdia where incMov='3') else b.fecha end) fecha,
b.TipoCambioCompra,b.TipoCambioVenta,
(Case When a.impDebedolar=a.imphaberdolar Then 0 else b.TipoCambioVenta-a.tcVentaPro end) dif,
(Case When a.impDebedolar=a.imphaberdolar Then (Case When a.impDebe<a.impHaber Then a.ImpDebe-a.ImpHaber Else 0 End) else a.impDebedolar*(b.TipoCambioVenta-a.tcVentaPro) end) diftcD,
(Case When a.impDebedolar=a.imphaberdolar Then (Case When a.impHaber<a.impdebe Then 0 Else a.ImpDebe-a.ImpHaber End) else a.imphaberdolar*(b.TipoCambioVenta-a.tcVentaPro) end) diftcH 
into tmpDifTC
from (
select tcli.fechadocreferencia,tc.TipoCambioCompra tcCompraPro,tc.TipoCambioVenta tcVentaPro,tcli.codpro,tcli.codigoDocumentoReferencia,tcli.NroDocReferencia,
	tcli.impdebe,tcli.impdebeDolar,tcli.imphaber,tcli.imphaberDolar,tcli.codcuenta 
from TipoCambio tc inner join tmpCliTC tcli on tcli.fechadocreferencia=tc.Fecha
) a left outer join (select * from tmpUltDia where IncMov='3') b on YEAR(a.fechadocreferencia)= YEAR(b.fecha)

-- creando tmpmov
	select ' ' sit,idmoneda,fecha,TipoCambioCompra,TipoCambioVenta, Convert(numeric(6,3),1) IncMov, codmgc, sum(impdebedolar) impdebedolar, sum(imphaberdolar) imphaberdolar   
	into tmpMov from tipocambio inner join (select d.FechaDocReferencia, d.codmgc, impdebedolar, imphaberdolar   
					from movcontables_d d inner join movcontables_c c on c.idmovcontables_c= d.idmovcontables_c 
					where codcuenta in (select codcuentacontable from plancuentascontables where converMoneda = 'S' and idempresa= @idEmpresa and left(anio,4)=(case When rtrim(@cYear)<'2020' then '2009' else rtrim(@cYear) end) and Estado =1)
					and c.mes<=@cMes and c.anio=@cYear and d.estado<>'4' and moneda='2' and d.codmgc not in ('11')
					and d.codpro+d.codigoDocumentoReferencia+d.NroDocReferencia in (select codpro+codigoDocumentoReferencia+NroDocReferencia from tmpCliTC)
					 And c.zona BETWEEN @ZonaA AND @ZonaB 
					 AND c.codunidadeconomica BETWEEN @UnidadA AND @UnidadB
					 AND d.codunidadeconomica BETWEEN @UnidadA AND @UnidadB
					) doc on fecha=fechaDocreferencia
	where Estado='1'
    Group by idmoneda,fecha,TipoCambioCompra,TipoCambioVenta, codmgc

--creando tmptipDifCab1
Select distinct ROW_NUMBER() OVER(ORDER BY fecha) AS item,*, convert(numeric(6,3),0) dif,convert(numeric(18,2),0) Acta,convert(numeric(18,2),0) saldo, convert(numeric(18,2),0) difTc 
into tmpTipDifCab1 
from (
	select sit, idmoneda,fecha,tipocambioCompra, TipoCambioVenta,IncMov, codmgc, impdebedolar, imphaberdolar, tipocambioVenta tcVtaAnt from tmpMov
	union all
	Select *,'' codmgc, 0 impdebedolar, 0 imphaberdolar,0 tcVtaAnt from tmpUltDia
	union all
	select tmpUltDia.*,'' codmgc, 0 impdebedolar, 0 imphaberdolar,tcVtaAnt from tmpUltDia inner join (select month(fecha) mes,impdebedolar,imphaberdolar, tipocambioVenta tcVtaAnt from tmpMov where codmgc in ('20','02')) pagos on month(fecha) = mes 
) tcMes 
--where fecha between convert(datetime,@fechadocreferencia,103) and DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+@cMes+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+@cMes+'/'+@cYear,103)))
where fecha between (select min(fechadocreferencia) from tmpCliTC) and DATEADD(dd,-(DAY(DATEADD(mm,1,convert(datetime, '01/'+@cMes+'/'+@cYear,103)))),DATEADD(mm,1,convert(datetime, '01/'+@cMes+'/'+@cYear,103)))
	and incMov>0 
order by 4
/****** Object:  StoredProcedure [dbo].[spp_up_MovContables_D]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE PROCEDURE [dbo].[spp_up_MovContables_D]
@idMovContables_d int, @IdMovContables_C int,@CodigoDocumento char(18),@NroDocumento char(10),
@CRP char(10),@CodActividad char(14),@CodPar char(14),@CodSubActividad char(10),
@FechContable datetime,@CodMGC char(3),@ClaseMovimiento char(2),@CtaDestino nchar(10),
@CodigoDocumentoReferencia nchar(10),@NroDocReferencia nchar(14),@FechaDocReferencia datetime,@FechaVencimiento datetime,
@CodigoDocumentoFuente nchar(10),@NroDocumentoFuente nchar(14),@FechaDocumentoFuente datetime,@CodigoCtaBancaria nchar(10),
@NroOperacion nchar(10),@NroCheque nchar(40),@CuentaNaturaleza char(12),@CodCuenta nchar(10),
@CentroCosto char(15),@TipoMov char(1),@Glosa varchar(250),@Orden varchar(250),
@Afecto bit,@Moneda char(2),@TipoCambio decimal(5,3),@impDebe decimal(15,2),
@impHaber decimal(15,2),@impDebeDolar decimal(15,2),@impHaberDolar decimal(15,2),@TipoAnexo char(2),
@CodAnexo char(14),@codPro char(14),@u_codi char(6),@datUsu datetime,
@Correlativo char(10) output,@estado char(1),@Destino char(1),@Anexo char(11),
@GastoIntPersonal bit,@cocach char(10),@nomanx varchar(250),@codIn char(24),
@tipdca char(2),@nrodca char(10),@reten bit,@rigv bit,
@corrigv char(10),@OPER VARCHAR(3),@CodAduana nchar(3),@FechDUA smalldatetime,@CodDUA nchar(30),
@ISC bit, @TipoOper int,@NroDetrac varchar(24),@FechaDetrac datetime,@CodigoDetraccion varchar(3),
@Fecha_RefComprobModi smalldatetime,@Tipo_RefComprobModi char(2),@Serie_RefComprobModi char(4),@Nro_RefComprobModi nchar(10),
@CodigoPercepcion varchar(5),@PorcentajePercepcion decimal(10,2),@CuentaAbono varchar(10),@MontoIGV decimal(12,3),
@NumeroPercepcion varchar(11),@FechaPercepcion datetime,@MontoRetencion4 decimal(18,2),
@TipoMedioPago nchar(3),@MontoISC decimal(10,2),@MontoDetraccionIvap decimal(10,2),@MontoCuentaAuxiliar decimal(10,2),@MontoIcbPer decimal(10,2),@MontoRetencionIGV decimal(18,2),
@CuentaCCosto varchar(10)
as

declare @DocAntiguo varchar(20),@MontoAntiguo decimal(10,2)
declare @idMovContable_C bigint

select @DocAntiguo=NroDocReferencia, @MontoAntiguo=impDebe from movcontables_D where idMovContable_D=@idMovContables_d 
--					and codigoDocumentoReferencia = @CodigoDocumentoReferencia AND codmgc = @Codmgc and codunidadeconomica=@CodigoDocumento)

set @idMovContable_C=(select MAX(a.idMovcontables_C) from movcontables_d a inner join movcontables_c b on a.idMovcontables_C=b.idMovcontables_C
						where a.codunidadeconomica=@CodigoDocumento and (b.CodMGC in ('20','02','11') and a.NroDocReferencia=@DocAntiguo 
								and a.codigoDocumentoReferencia = @CodigoDocumentoReferencia and a.codpro= @codpro ) and 
								(b.glosa='PAGO A PROVEEDORES*' OR b.glosa='CANCELACION EN EFECTIVO*' OR b.glosa='PAGO A PROVEEDORES M*' OR 
								b.glosa='CANCELACION EN EFECTIVO M*' OR b.Glosa='PAGO PLANILLA*')) -- OR b.Glosa='COSTEO DEL IGV*')) 

delete from movcontables_D where idMovcontables_C=@idMovContable_C
delete from movcontables_C where idMovcontables_C=@idMovContable_C
delete from movcontables_d where idmovcontables_c =0

if @oper='up'
	begin

		DELETE MOVCONTABLES_D WHERE idMovContables_C=@IdMovContables_C AND NroDocumento=@NroDocumento and correlativo=@correlativo and estado='D'
		DELETE MOVCONTABLES_D WHERE idMovContables_C=@IdMovContables_C AND NroDocumento=@NroDocumento and correlativo=@correlativo and left(codcuenta,2) in ('67','77')

		---------------------------------Actualizando Registro
		Declare @lcCorrel int,@lcCorrelc CHAR(10), @idEmpresa int
		SET @lcCorrelc=@Correlativo
		Select @idEmpresa= (select a.idEmpresa from empresa a inner join zona b on a.idEmpresa=b.idEmpresa inner join unidad_economica c on c.codZona=b.codZona where c.codUnidadEconomica=@CodigoDocumento and b.estado<>0 and c.estado <>0)
		set @TipoOper= @TipoOper --(case when @CodMGC in ('04','08','11') and @MontoIGV<>0 then '3' else @MontoIGV end) -- borrar cuando se actualiza 190417
		-------------------------------Eliminando Registros
		UPDATE MOVCONTABLES_D
				SET IdMovContables_C=@IdMovContables_C,codUnidadEconomica=@CodigoDocumento,NroDocumento=@NroDocumento,CRP=@CRP,CodActividad=@CodActividad,
					CodPar=@CodPar,CodSubActividad=@CodSubActividad,FechContable=@FechContable,CodMGC=@CodMGC,ClaseMovimiento=@ClaseMovimiento ,
					CtaDestino=@CtaDestino,CodigoDocumentoReferencia=@CodigoDocumentoReferencia,NroDocReferencia=@NroDocReferencia,FechaDocReferencia=@FechaDocReferencia,
					FechaVencimiento=@FechaVencimiento,CodigoDocumentoFuente=@CodigoDocumentoFuente,NroDocumentoFuente=@NroDocumentoFuente,FechaDocumentoFuente=@FechaDocumentoFuente,
					CodigoCtaBancaria=@CodigoCtaBancaria,NroOperacion=@NroOperacion,NroCheque=@NroCheque,CuentaNaturaleza=@CuentaNaturaleza,CodCuenta=@CodCuenta,
					CentroCosto=@CentroCosto,TipoMov=@TipoMov,Glosa=@Glosa,Orden=@Orden,Afecto=@Afecto,Moneda=@Moneda,TipoCambio=@TipoCambio,
					impDebe=@impDebe,impHaber=@impHaber,impDebeDolar=@impDebeDolar,impHaberDolar=@impHaberDolar,TipoAnexo=@TipoAnexo,
					CodAnexo=@CodAnexo,Codpro=@codPro,u_codi=@u_codi,datUsu=@datUsu,Correlativo=@Correlativo,estado=@estado,Destino=@Destino,Anexo=@Anexo,
					GastoIntPersonal=@GastoIntPersonal,cocach=@cocach,nomanx=@nomanx,codIn=@codIn,tipdca=@tipdca,nrodca=@nrodca,reten=@reten,rigv=@rigv,corrigv=@corrigv,
					CodAduana=@codAduana,FechDUA=@FechDUA,CodDUA=@CodDUA,ISC=@ISC,TipoOper=@TipoOper,NroDetrac=@NroDetrac,FechaDetrac=@FechaDetrac,codigoDetraccion=@codigoDetraccion,
					Fecha_RefComprobModi=@Fecha_RefComprobModi,Tipo_RefComprobModi=@Tipo_RefComprobModi,Serie_RefComprobModi=@Serie_RefComprobModi,
					Nro_RefComprobModi=@Nro_RefComprobModi,CodigoPercepcion=@CodigoPercepcion,PorcentajePercepcion=@PorcentajePercepcion,CuentaAbono=@CuentaAbono,MontoIGV=@MontoIGV,
					NumeroPercepcion=@NumeroPercepcion,FechaPercepcion=@FechaPercepcion,MontoRetencion4=@MontoRetencion4,TipoMedioPago=@TipoMedioPago,MontoISC=@MontoISC,MontoDetraccionIvap=@MontoDetraccionIvap,
					MontoCuentaAuxiliar=(case when @MontoIGV<>0 then 0 else @MontoCuentaAuxiliar end),MontoIcbPer=@MontoIcbPer,MontoRetencionIGV=@MontoRetencionIGV,
					CuentaCCosto=@CuentaCCosto
		where idMovContable_D=@idMovContables_d

		/*Este bloque es para el ingreso en las cuentas de amarre*/
		declare @lcCtaDebe varchar(10), @lcCtaHaber varchar(10), @lcPorcenta varchar(3), @lcCtaDebe2 varChar(10),
				@lcPorcenta2 varchar(3), @lcCtaDebe3 varChar(10), @lcPorcenta3 varchar(3), @lcCtaDebe4 varChar(10),
				@lcPorcenta4 varchar(3)
		-- buscando cuentas de amarre en los c.Costos
		Declare @lcCCostoCtaDebe varchar(10), @lcCCostoCtaHaber varchar(10), @lcCcPorcenta varchar(3), @lcCcCtaDebe2 varChar(10),
				@lcCcPorcenta2 varchar(3), @lcCcCtaDebe3 varChar(10), @lcCcPorcenta3 varchar(3), @lcCcCtaDebe4 varChar(10),
				@lcCcPorcenta4 varchar(3)

		declare @MontoD decimal(10,2), @MontoH decimal(10,2), @MontoDD decimal(10,2), @MontoHD decimal(10,2),
				@Monto1 decimal(10,2), @Monto2 decimal(10,2), @Monto3 decimal(10,2), @Monto4 decimal(10,2),
				@MontoH1 decimal(10,2), @MontoH2 decimal(10,2), @MontoH3 decimal(10,2), @MontoH4 decimal(10,2),
				@MontoDD1 decimal(10,2), @MontoDD2 decimal(10,2), @MontoDD3 decimal(10,2), @MontoDD4 decimal(10,2),
				@MontoHD1 decimal(10,2), @MontoHD2 decimal(10,2), @MontoHD3 decimal(10,2), @MontoHD4 decimal(10,2)
		-- para los centro de costo
		declare @ccMonto1 decimal(10,2), @ccMonto2 decimal(10,2), @ccMonto3 decimal(10,2), @ccMonto4 decimal(10,2),
				@ccMontoH1 decimal(10,2), @ccMontoH2 decimal(10,2),@ccMontoH3 decimal(10,2),@ccMontoH4 decimal(10,2),
				@ccMontoDD1 decimal(10,2), @ccMontoDD2 decimal(10,2), @ccMontoDD3 decimal(10,2), @ccMontoDD4 decimal(10,2),
				@ccMontoHD1 decimal(10,2), @ccMontoHD2 decimal(10,2), @ccMontoHD3 decimal(10,2), @ccMontoHD4 decimal(10,2)

		set @MontoD=@impDebe 
		set @MontoH=@impHaber 
		set @MontoDD=@impDebeDolar
		set @MontoHD=@impHaberDolar

		select @lcCtaDebe=max(CtaDebe),@lcCtaHaber=max(CtaHaber),@lcPorcenta=max(Porcenta),@lcCtaDebe2=max(CtaDebe2),@lcPorcenta2=max(Porcenta2),
				@lcCtaDebe3=max(CtaDebe3), @lcPorcenta3=max(Porcenta3),@lcCtaDebe4=max(CtaDebe4),@lcPorcenta4=max(Porcenta4) 
		from plancuentasContables where idempresa = @idEmpresa and left(anio,4)= (Case When year(@FechaDocReferencia)>2019 Then '202'+substring(@NroDocumento,3,1) Else '2009' End) and codCuentaContable=@CodCuenta 
		-- obteniendo cuentas del Centro de Costo
		Select @lcCCostoCtaDebe = @CuentaCCosto,--max(ctadebe),
				@lcCCostoCtaHaber = max(ctaHaber),@lcCcPorcenta=max(Porcenta),@lcCcCtaDebe2=max(CtaDebe2),
				@lcCcPorcenta2=max(Porcenta2),@lcCcCtaDebe3=max(CtaDebe3),@lcCcPorcenta3=max(Porcenta3),@lcCcCtaDebe4=max(CtaDebe4),@lcCcPorcenta4=max(Porcenta4) 
		from centrocosto where idempresa = @idEmpresa and codcentrocosto=@CentroCosto 

		----- calculando los porcentajes 
		Set @Monto1 = round(@MontoD*(case when @lcporcenta in (100, 0) then 1 else (Cast(@lcPorcenta as decimal(6,1))/100) end),2)
		Set @Monto2 = Round(@MontoD*(case when @lcporcenta2 in (100, 0) then 1 else (Cast(@lcPorcenta2 as decimal(6,1))/100) end),2)
		Set @Monto3 = Round(@MontoD*(case when @lcporcenta3 in (100, 0) then 1 else (Cast(@lcPorcenta3 as decimal(6,1))/100) end),2)
		Set @Monto4 = Round(@MontoD*(case when @lcporcenta4 in (100, 0) then 1 else (Cast(@lcPorcenta4 as decimal(6,1))/100) end),2)
		Set @MontoH1 = round(@MontoH*(case when @lcporcenta in (100, 0) then 1 else (Cast(@lcPorcenta as decimal(6,1))/100) end),2)
		Set @MontoH2 = Round(@MontoH*(case when @lcporcenta2 in (100, 0) then 1 else (Cast(@lcPorcenta2 as decimal(6,1))/100) end),2)
		Set @MontoH3 = Round(@MontoH*(case when @lcporcenta3 in (100, 0) then 1 else (Cast(@lcPorcenta3 as decimal(6,1))/100) end),2)
		Set @MontoH4 = Round(@MontoH*(case when @lcporcenta4 in (100, 0) then 1 else (Cast(@lcPorcenta4 as decimal(6,1))/100) end),2)
		Set @MontoDD1 = round(@MontoDD*(case when @lcporcenta in (100, 0) then 1 else (Cast(@lcPorcenta as decimal(6,1))/100) end),2)
		Set @MontoDD2 = Round(@MontoDD*(case when @lcporcenta2 in (100, 0) then 1 else (Cast(@lcPorcenta2 as decimal(6,1))/100) end),2)
		Set @MontoDD3 = Round(@MontoDD*(case when @lcporcenta3 in (100, 0) then 1 else (Cast(@lcPorcenta3 as decimal(6,1))/100) end),2)
		Set @MontoDD4 = Round(@MontoDD*(case when @lcporcenta4 in (100, 0) then 1 else (Cast(@lcPorcenta4 as decimal(6,1))/100) end),2)
		Set @MontoHD1 = round(@MontoHD*(case when @lcporcenta in (100, 0) then 1 else (Cast(@lcPorcenta as decimal(6,1))/100) end),2)
		Set @MontoHD2 = Round(@MontoHD*(case when @lcporcenta2 in (100, 0) then 1 else (Cast(@lcPorcenta2 as decimal(6,1))/100) end),2)
		Set @MontoHD3 = Round(@MontoHD*(case when @lcporcenta3 in (100, 0) then 1 else (Cast(@lcPorcenta3 as decimal(6,1))/100) end),2)
		Set @MontoHD4 = Round(@MontoHD*(case when @lcporcenta4 in (100, 0) then 1 else (Cast(@lcPorcenta4 as decimal(6,1))/100) end),2)
		----- calculando los porcentajes para Centro de costos
		Set @ccMonto1 = round(@MontoD*(case when @lcccporcenta in (100, 0) then 1 else (Cast(@lcccPorcenta as decimal(6,1))/100) end),2)
		Set @ccMonto2 = Round(@MontoD*(case when @lcccporcenta2 in (100, 0) then 1 else (Cast(@lcccPorcenta2 as decimal(6,1))/100) end),2)
		Set @ccMonto3 = Round(@MontoD*(case when @lcccporcenta3 in (100, 0) then 1 else (Cast(@lcccPorcenta3 as decimal(6,1))/100) end),2)
		Set @ccMonto4 = Round(@MontoD*(case when @lcccporcenta4 in (100, 0) then 1 else (Cast(@lcccPorcenta4 as decimal(6,1))/100) end),2)
		Set @ccMontoH1 = round(@MontoH*(case when @lcccporcenta in (100, 0) then 1 else (Cast(@lcccPorcenta as decimal(6,1))/100) end),2)
		Set @ccMontoH2 = Round(@MontoH*(case when @lcccporcenta2 in (100, 0) then 1 else (Cast(@lcccPorcenta2 as decimal(6,1))/100) end),2)
		Set @ccMontoH3 = Round(@MontoH*(case when @lcccporcenta3 in (100, 0) then 1 else (Cast(@lcccPorcenta3 as decimal(6,1))/100) end),2)
		Set @ccMontoH4 = Round(@MontoH*(case when @lcccporcenta4 in (100, 0) then 1 else (Cast(@lcccPorcenta4 as decimal(6,1))/100) end),2)
		Set @ccMontoDD1 = round(@MontoDD*(case when @lcccporcenta in (100, 0) then 1 else (Cast(@lcccPorcenta as decimal(6,1))/100) end),2)
		Set @ccMontoDD2 = Round(@MontoDD*(case when @lcccporcenta2 in (100, 0) then 1 else (Cast(@lcccPorcenta2 as decimal(6,1))/100) end),2)
		Set @ccMontoDD3 = Round(@MontoDD*(case when @lcccporcenta3 in (100, 0) then 1 else (Cast(@lcccPorcenta3 as decimal(6,1))/100) end),2)
		Set @ccMontoDD4 = Round(@MontoDD*(case when @lcccporcenta4 in (100, 0) then 1 else (Cast(@lcccPorcenta4 as decimal(6,1))/100) end),2)
		Set @ccMontoHD1 = round(@MontoHD*(case when @lcccporcenta in (100, 0) then 1 else (Cast(@lcccPorcenta as decimal(6,1))/100) end),2)
		Set @ccMontoHD2 = Round(@MontoHD*(case when @lcccporcenta2 in (100, 0) then 1 else (Cast(@lcccPorcenta2 as decimal(6,1))/100) end),2)
		Set @ccMontoHD3 = Round(@MontoHD*(case when @lcccporcenta3 in (100, 0) then 1 else (Cast(@lcccPorcenta3 as decimal(6,1))/100) end),2)
		Set @ccMontoHD4 = Round(@MontoHD*(case when @lcccporcenta4 in (100, 0) then 1 else (Cast(@lcccPorcenta4 as decimal(6,1))/100) end),2)


		-- obteniendo cuentas del Centro de Costo
		Select @lcCCostoCtaDebe = @CuentaCCosto,--max(ctadebe),
				@lcCCostoCtaHaber = max(ctaHaber) from centrocosto where idempresa = @idEmpresa and codcentrocosto=@CentroCosto

		Set @CentroCosto='-'
----------- Para el primer porcentaje
		if @lcCtaDebe!='' and @estado!='D' and (@lcPorcenta!='' or @lcporcenta != 0)
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcCtaDebe,'-',@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						@Monto1,@MontoH1,@MontoDD1,@MontoHD1,
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
----------- Para el segundo porcentaje
		if @lcCtaDebe2!='' and @estado!='D' and (@lcPorcenta2!='' or @lcporcenta2 != 0)
			begin
			
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcCtaDebe2,'-',@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						(Case when (@MontoD-@Monto1-@Monto2)<=0.02 then @MontoD-@Monto1 else @Monto2 end),
						(Case when (@MontoH-@MontoH1-@MontoH2)<=0.02 then @MontoH-@MontoH1 else @MontoH2 end),
						(Case when (@MontoDD-@MontoDD1-@MontoDD2)<=0.02 then @MontoDD-@MontoDD1 else @MontoDD2 end),
						(Case when (@MontoHD-@MontoHD1-@MontoHD2)<=0.02 then @MontoHD-@MontoHD1 else @MontoHD2 end),
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
----------- Para el Tercer porcentaje
		if @lcCtaDebe3!='' and @estado!='D' and (@lcPorcenta3!='' or @lcporcenta3 != 0)
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcCtaDebe3,'-',@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						(Case when (@MontoD-@Monto1-@Monto2-@Monto3)<=0.02 then (@MontoD-@Monto1-@Monto2) else @Monto3 end),
						(Case when (@MontoH-@MontoH1-@MontoH2-@MontoH3)<=0.02 then (@MontoH-@MontoH1-@MontoH2) else @MontoH3 end),
						(Case when (@MontoDD-@MontoDD1-@MontoDD2-@MontoDD3)<=0.02 then (@MontoDD-@MontoDD1-@MontoDD2) else @MontoDD3 end),
						(Case when (@MontoHD-@MontoHD1-@MontoHD2-@MontoHD3)<=0.02 then (@MontoHD-@MontoHD1-@MontoHD2) else @MontoHD3 end),
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
----------- Para el Cuarto porcentaje
		if @lcCtaDebe4!='' and @estado!='D' and (@lcPorcenta4!='' or @lcporcenta4 != 0) --and @lcPorcenta2!=''
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcCtaDebe4,'-',@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						(Case when (@MontoD-@Monto1-@Monto2-@Monto3-@Monto4)<=0.02 then (@MontoD-@Monto1-@Monto2-@Monto3) else @Monto4 end),
						(Case when (@MontoH-@MontoH1-@MontoH2-@MontoH3-@MontoH4)<=0.02 then (@MontoH-@MontoH1-@MontoH2-@MontoH3) else @MontoH4 end),
						(Case when (@MontoDD-@MontoDD1-@MontoDD2-@MontoDD3-@MontoDD4)<=0.02 then (@MontoDD-@MontoDD1-@MontoDD2-@MontoDD3) else @MontoDD4 end),
						(Case when (@MontoHD-@MontoHD1-@MontoHD2-@MontoHD3-@MontoHD4)<=0.02 then (@MontoHD-@MontoHD1-@MontoHD2-@MontoHD3) else @MontoHD4 end),
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
----------- Para el C.Costo Debe

		-----****** asignando para los centros de costos
		----------- Para el primer porcentaje
		if (@lcCCostoCtaDebe!='' and @lcCCostoCtaDebe!='-') and @estado!='D' and (@lcccPorcenta!='' or @lcccporcenta !=0)
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcCCostoCtaDebe,'-',@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						@ccMonto1,@ccMontoH1,@ccMontoDD1,@ccMontoHD1,
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
----------- Para el segundo porcentaje
		if (@lcccCtaDebe2!='' and @lcccCtaDebe2!='-') and @estado!='D' and (@lcccPorcenta2!='' or @lcccporcenta2 != 0)
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcccCtaDebe2,'-',@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						(Case when (@MontoD-@ccMonto1-@ccMonto2)<=0.02 then @MontoD-@ccMonto1 else @ccMonto2 end),
						(Case when (@MontoH-@ccMontoH1-@ccMontoH2)<=0.02 then @MontoH-@ccMontoH1 else @ccMontoH2 end),
						(Case when (@MontoDD-@ccMontoDD1-@ccMontoDD2)<=0.02 then @MontoDD-@ccMontoDD1 else @ccMontoDD2 end),
						(Case when (@MontoHD-@ccMontoHD1-@ccMontoHD2)<=0.02 then @MontoHD-@ccMontoHD1 else @ccMontoHD2 end),
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
----------- Para el Tercer porcentaje
		if (@lcccCtaDebe3!='' and @lcccCtaDebe3!='-') and @estado!='D' and (@lcccPorcenta3!='' or @lcccporcenta3 != 0)
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcccCtaDebe3,'-',@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						(Case when (@MontoD-@ccMonto1-@ccMonto2-@ccMonto3)<=0.02 then (@MontoD-@ccMonto1-@ccMonto2) else @ccMonto3 end),
						(Case when (@MontoH-@ccMontoH1-@ccMontoH2-@ccMontoH3)<=0.02 then (@MontoH-@ccMontoH1-@ccMontoH2) else @ccMontoH3 end),
						(Case when (@MontoDD-@ccMontoDD1-@ccMontoDD2-@ccMontoDD3)<=0.02 then (@MontoDD-@ccMontoDD1-@ccMontoDD2) else @ccMontoDD3 end),
						(Case when (@MontoHD-@ccMontoHD1-@ccMontoHD2-@ccMontoHD3)<=0.02 then (@MontoHD-@ccMontoHD1-@ccMontoHD2) else @ccMontoHD3 end),
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
----------- Para el Cuarto porcentaje
		if (@lcccCtaDebe4!='' and @lcccCtaDebe4!='-') and @estado!='D' and (@lcccPorcenta4!='' or @lcccporcenta4 != 0)
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente
						,@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcccCtaDebe4,'-',@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						(Case when (@MontoD-@ccMonto1-@ccMonto2-@ccMonto3-@ccMonto4)<=0.02 then (@MontoD-@ccMonto1-@ccMonto2-@ccMonto3) else @ccMonto4 end),
						(Case when (@MontoH-@ccMontoH1-@ccMontoH2-@ccMontoH3-@ccMontoH4)<=0.02 then (@MontoH-@ccMontoH1-@ccMontoH2-@ccMontoH3) else @ccMontoH4 end),
						(Case when (@MontoDD-@ccMontoDD1-@ccMontoDD2-@ccMontoDD3-@ccMontoDD4)<=0.02 then (@MontoDD-@ccMontoDD1-@ccMontoDD2-@ccMontoDD3) else @ccMontoDD4 end),
						(Case when (@MontoHD-@ccMontoHD1-@ccMontoHD2-@ccMontoHD3-@ccMontoHD4)<=0.02 then (@MontoHD-@ccMontoHD1-@ccMontoHD2-@ccMontoHD3) else @ccMontoHD4 end),
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
-----****** fin asignando para los centros de costos
----------- Para el C.Costo Debe

--		if (@lcCCostoCtaDebe!='' and ltrim(rtrim(@lcCCostoCtaDebe))!='-') and @estado!='D'
--			begin
--			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
--			CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
--			NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
--			impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
--			Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
--			CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
--			CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV)
--
--			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
--			'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
--			@NroCheque,'',@lcCCostoCtaDebe,@CentroCosto,@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
--			@impDebe,@impHaber,@impDebeDolar,@impHaberDolar,
--			@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
--			@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
--			@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
--			@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,MontoRetencionIGV)
--			end
----------- Para el C.Costo Haber
--		if (@lcCCostoCtaHaber!='' or ltrim(rtrim(@lcCCostoCtaHaber))!='-') and @estado!=(Case When @CodigoDocumento='000012' and @idEmpresa='5' Then 'D' Else '-' End) --@estado!='-' --@estado!='D'
		if (@lcCCostoCtaHaber!='' and @lcCCostoCtaHaber!='-') and @estado!='D'
			begin
			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,codPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TipoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcCCostoCtaHaber,@CentroCosto,@TipoMov,@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						@impHaber,@impDebe,@impHaberDolar,@impDebeDolar,
						@TipoAnexo,@CodAnexo,@codPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end

		if (@lcCtaHaber!='' and @lcCtaHaber!='-') and @estado!='D'
			begin


			INSERT INTO MOVCONTABLES_D(IdMovContables_C,CodUnidadEconomica,NroDocumento,CRP,CodActividad,CodPar,CodSubActividad,FechContable,CodMGC,ClaseMovimiento,
						CtaDestino,CodigoDocumentoReferencia,NroDocReferencia,FechaDocReferencia,FechaVencimiento,CodigoDocumentoFuente,NroDocumentoFuente,
						FechaDocumentoFuente,CodigoCtaBancaria,NroOperacion,
						NroCheque,CuentaNaturaleza,CodCuenta,CentroCosto,TipoMov,Glosa,Orden,Afecto,Moneda,TipoCambio,
						/**/impDebe,impHaber,impDebeDolar,impHaberDolar,TipoAnexo,CodAnexo,CodPro,u_codi,datUsu,Correlativo,estado,
						Destino,Anexo,GastoIntPersonal,cocach,nomanx,codIn,tipdca,nrodca,CodAduana,FechDUA ,CodDUA,ISC,TipoOper,NroDetrac,FechaDetrac,
						CodigoDetraccion,Fecha_RefComprobModi,Tipo_RefComprobModi,Serie_RefComprobModi,Nro_RefComprobModi,CodigoPercepcion,PorcentajePercepcion,
						CuentaAbono,MontoIGV,NumeroPercepcion,FechaPercepcion,MontoRetencion4,TIpoMedioPago,MontoISC,MontoDetraccionIvap,MontoCuentaAuxiliar,MontoIcbPer,MontoRetencionIGV,CuentaCCosto)

			VALUES(@IdMovContables_C,@CodigoDocumento,@NroDocumento,@CRP,@CodActividad,@CodPar,@CodSubActividad,@FechContable,@CodMGC,@ClaseMovimiento,
						'',@CodigoDocumentoReferencia,@NroDocReferencia,@FechaDocReferencia,@FechaVencimiento,@CodigoDocumentoFuente,@NroDocumentoFuente,
						@FechaDocumentoFuente,@CodigoCtaBancaria,@NroOperacion,
						@NroCheque,'',@lcCtaHaber,'-','H',@Glosa,@Orden,@Afecto,@Moneda,@TipoCambio,
						@MontoH,@MontoD,@MontoHD,@MontoDD,@TipoAnexo,@CodAnexo,@CodPro,@u_codi,@datUsu,@lcCorrelc,'D',
						@Destino,@Anexo,@GastoIntPersonal,@cocach,@nomanx,@codIn,@tipdca,@nrodca,@CodAduana,@FechDUA ,@CodDUA,@ISC,@TipoOper,@NroDetrac,@FechaDetrac,
						@CodigoDetraccion,@Fecha_RefComprobModi,@Tipo_RefComprobModi,@Serie_RefComprobModi,@Nro_RefComprobModi,@CodigoPercepcion,@PorcentajePercepcion,
						@CuentaAbono,@MontoIGV,@NumeroPercepcion,@FechaPercepcion,@MontoRetencion4,@TipoMedioPago,@MontoISC,@MontoDetraccionIvap,@MontoCuentaAuxiliar,@MontoIcbPer,@MontoRetencionIGV,@CuentaCCosto)
			end
		/*Fin del Bloque <Cuentas de Amarre>*/
		-----------Consolidad las cuentas 12, 40 y 42 
			EXEC sp_Agrupa12y42 @codigoDocumentoReferencia, @NroDocumento, @NroDocReferencia, @codPro, @idEmpresa, @CodigoDocumento

		IF @@ERROR<>0
					BEGIN
						RAISERROR('ERROR: EN EL ACTUALIZACION DE DATOS',16,1)
						WITH NOWAIT
						RETURN
					END

	end
if @oper='del'
	begin
		Declare @Correlx char(10)
		set @Correlx=(select Correlativo from movContables_D where idMovContable_D=@idMovContables_d)
		DELETE MOVCONTABLES_D WHERE idMovContables_C=@IdMovContables_C and correlativo=@Correlx and NroDocumento=@NroDocumento and estado='D' and idMovContable_D!=@idMovContables_d
		update movContables_D
		set estado='4' where (Correlativo=@Correlx and idMovContables_C = @IdMovContables_C and estado!='D') or
							idMovContable_D=@idMovContables_d	
		update tbl_movimientoCajaC set transferido='' 
		where nrodoc= (select distinct cocach from movcontables_d WHERE idMovContables_C=@IdMovContables_C and NroDocumento=@NroDocumento and estado='4' and idMovContable_D=@idMovContables_d)	
end
/****** Object:  StoredProcedure [dbo].[Spp_ValidarExportaVentas]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[Spp_ValidarExportaVentas]
@idEmpresa as int,
@tipo as varchar(10)
as
--select * from exportaventas
-- exec spp_validarexportaventas 51,'CTAS'

declare @lenSerie as int, @lenNumero as int

select @lenSerie= rtrim(valor) from parametros where clave='SeriesLength' and idempresa=@idEmpresa
select @lenNumero= rtrim(valor) from parametros where clave='NumbersLength' and idempresa=@idEmpresa

delete from exportaventas where grupo is null
update exportaventas set tipo_cambio=isnull(tipo_cambio,0) where tipo_cambio is null

 --
select ROW_NUMBER() OVER(ORDER BY motivo) AS item,motivo,convert(varchar(20),cuenta_contable) campo1,convert(varchar(20),año) campo2 
from (
	select 'CTA CONTABLE NO EXISTE EN PLAN' Motivo,cuenta_contable,convert(VARCHAR(255),año) año 
	from (select cuenta_contable,año from exportaventas group by cuenta_contable,año union all 
			select cuenta_abono,año from exportaventas group by cuenta_abono,año) aa
	where cuenta_contable not in (select codcuentacontable from plancuentascontables where idempresa=@idEmpresa and estado=1 and 
		anio=(Case When aa.año>2019 Then '202'+right(aa.año,1) Else '2009' End)+'00')
	union all
		select 'EXISTEN ZONAS ERRADAS, DEBEN SER UNICAS' Motivo,zona zona,ltrim(str(count(zona)))+' reg.' nro_documento from exportaventas where zona in (
		select zona from (
		select count(zona) veces, zona from exportaventas where zona is not null group by zona
		) aa where veces=1
		) group by zona 
	union all
		select 'EXISTEN UNIDADES ERRADAS, DEBEN SER UNICAS' Motivo,unidad_economica unidad,ltrim(str(count(unidad_economica)))+' reg.' nro_documento from exportaventas where unidad_economica in (
		select unidad_economica from (
		select count(unidad_economica) veces, unidad_economica from exportaventas where unidad_economica is not null group by unidad_economica
		) aa where veces=1
		) group by unidad_economica 
	union all
	select 'FALTA EL TIPO DE CAMBIO' Motivo,convert(varchar(10),fecha_registro,103) fecha,nro_documento from exportaventas where tipo_cambio=0 and tipo_moneda<>1
	union all
	select 'FECHA REGISTRO DISTINTO AL AÑO Y MES' Motivo,convert(varchar(10),fecha_registro,103) fecha,nro_documento from exportaventas where año+ mes<>year(fecha_registro)+month(fecha_registro)
	union all
	select 'FECHA DOCUMENTO DISTINTO AL AÑO Y MES' Motivo,convert(varchar(10),fecha_documento,103) fechanro,nro_documento from exportaventas where año+ mes<year(fecha_documento)+month(fecha_documento)
	union all
	select 'FECHA DEL DOCUMENTO INCORRECTO' Motivo,convert(varchar(10),fecha_documento,103) fechanro,nro_documento from exportaventas where fecha_documento is null
	union all
	select 'RUC ERRADO' Motivo,convert(varchar(10),fecha_documento,103) fechanro,nro_documento from exportaventas where proveedor is null
	union all
	select 'ERROR EN EL CAMPO DEBE' Motivo,ltrim(str(importe_debe)) valor,nro_documento from exportaventas where importe_debe is null
	union all
	select 'ERROR EN EL CAMPO HABER' Motivo,ltrim(str(importe_haber)) valor,nro_documento from exportaventas where importe_haber is null
	union all
	select 'MONTO EN NEGATIVO' Motivo,ltrim(str(importe_debe+importe_haber)) valor,nro_documento from exportaventas where importe_debe+importe_haber<0
	union all
	select 'RUC INCORRECTO (debe ser 8 o 11 digitos)' Motivo,proveedor,nro_documento from exportaventas where (len(proveedor) not in (8,11) AND PROVEEDOR NOT IN ('9999','000001'))
	union all
		select 'DOCS CON LONGITUD ERRADA (serie:'+ltrim(str(@lenSerie)) +' nro:'+ltrim(str(@lenNumero)) +' dig.)' Motivo,nro_documento,nro_documento2 
	from ( 
		select len(left(nro_documento,charindex('-',nro_documento)-1)) serie1, len(right(nro_documento,len(nro_documento)-charindex('-',nro_documento))) nro1,
		len(left(nro_documento2,charindex('-',nro_documento2)-1)) serie2, len(right(nro_documento2,len(nro_documento2)-charindex('-',nro_documento2))) nro2,nro_documento,nro_documento2
		from exportaventas where tipo_documento in ('01','03')
	) aa
	where serie1<>@lenSerie or serie2<>@lenSerie or 
		  nro1<>@lenNumero or nro2<>@lenNumero 
	union all
	select 'CAMPO VOUCHER DEBE INICIAR CON 1' Motivo,convert(VARCHAR(2),iniciar) iniciar, '' adicional
	from (select min(voucher) iniciar from exportaventas ) aa where iniciar<>1
	union all
	select 'SI DOC=ANULADO DEBE=0 Y HABER=0' Motivo,convert(VARCHAR(50),importe_debe+importe_haber) dif,nro_documento from exportaventas where razon_social='ANULADO' and importe_debe<>0
	union all
	select 'MISMO RUC CON 2 O MAS RAZON SOCIAL' Motivo,proveedor dif,razon_social nro_documento 
	from (select proveedor,razon_social from exportaventas group by proveedor,razon_social) cc where proveedor in 
	(select proveedor from (select proveedor,razon_social from exportaventas group by proveedor,razon_social) c group by proveedor having count(*)>1)

) todos
/****** Object:  StoredProcedure [dbo].[SPP_versiones]    Script Date: 18/08/2023 15:32:30 ******/

-- Bloque
CREATE procedure [dbo].[SPP_versiones]
As
declare @idpr int ,@fecha varchar(10),@fechamin varchar(10),@fechamax varchar(10),@fechafin varchar(10),@acumulado int,@veces int,@ip varchar(15),@macad varchar(20),@horain varchar(10)
set @idpr=(select CONVERT(int,SUBSTRING ( convert(varchar(10),getdate(),8) ,7,8)))
set @fechamin=(SELECT min([fecha]) FROM prueba)
set @fechamax=(SELECT max([fecha]) FROM prueba)
set @ip=(SELECT distinct client_net_address FROM sys.dm_exec_connections WHERE session_id = @@SPID)
set @macad=(SELECT distinct net_address FROM sys.dm_exec_connections c join sys.sysprocesses p on c.session_id=p.spid WHERE session_id = @@SPID)
set @fechafin=(SELECT convert(datetime,DATEADD(day, 7,convert(datetime,@fechamin,103)),103))
set @veces=(select count(veces) from (SELECT count(id_prueba) veces FROM prueba group by fecha) a)
set @fecha=(SELECT convert(varchar(10),getdate(),103))
set @horain=(SELECT left(convert(varchar(10),getdate(),8),5))
if @veces<=7 --if de veces
Begin
if convert(datetime,@fecha,103)<convert(datetime,DATEADD(day, 7,convert(datetime,@fecha,103)),103) --if de menor que el fin
begin
if convert(datetime,@fechamin,103)<=convert(datetime,@fecha,103) and convert(datetime,@fecha,103)>=convert(datetime,@fechamax,103) --if de < y > fecha
begin
INSERT INTO [prueba]([id_prueba],[ip],[mac],[fecha],[hora_inicio],[hora_final],[acumulado],[estado])
     VALUES(@idpr,@ip,@macad,@fecha,@horain,null,null,1)
end
else -- else de < y > fecha
PRINT N'YA CUMPLIO SU VERSION DE PRUEBA, SI DESEA SEGUIR UTILIZANDO EL SISTEMA COMUNICARSE CON LA EMPRESA CEATEC SOFT de < y > fecha'
end
else --else de menor que el fin
PRINT N'YA CUMPLIO SU VERSION DE PRUEBA, SI DESEA SEGUIR UTILIZANDO EL SISTEMA COMUNICARSE CON LA EMPRESA CEATEC SOFT de menor que el fin'
end
else --else de veces
PRINT N'YA CUMPLIO SU VERSION DE PRUEBA, SI DESEA SEGUIR UTILIZANDO EL SISTEMA COMUNICARSE CON LA EMPRESA CEATEC SOFT veces'

-- Bloque
